{
  "config": {
    "id": "postmark",
    "name": "Postmark",
    "description": "",
    "logo_url": "postmark.svg",
    "auth_type": "TOKEN",
    "auth": {
      "header": {
        "authKey": "api_token",
        "headerName": "X-Postmark-Server-Token",
        "headerValue": ""
      }
    },
    "auth_config": [
      {
        "name": "api_token",
        "type": "input",
        "field": "input",
        "label": "Postmark API Token",
        "message": "This API key will be used for accessing Postmark service.",
        "required": true,
        "className": "",
        "placeholder": ""
      }
    ],
    "headers": {},
    "api_endpoint": "https://api.postmarkapp.com",
    "released": 1,
    "updated_at": "2024-12-22T10:35:07.000Z",
    "website": "https://postmarkapp.com/",
    "api_link_ref": "https://postmarkapp.com/developer/",
    "total_api": 77,
    "credential_link": "https://account.postmarkapp.com/login"
  },
  "routes": {
    "postmark__email___post": {
      "provider_intent": "postmark__email___post",
      "provider_alias_intent": "/email",
      "text": "Send a single email",
      "category": "Email",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "From": {
          "type": "string",
          "text": "The sender email address. Must have a registered and confirmed Sender Signature.To include a name use the format \"Full Name <sender@domain.com>\" for the address.",
          "required": true,
          "examples": ""
        },
        "To": {
          "type": "string",
          "text": "Recipient email address.Multiple addresses are comma separated.Max 50.",
          "required": true,
          "examples": ""
        },
        "Cc": {
          "type": "string",
          "text": "Cc recipient email address. Multiple addresses are comma separated. Max 50.",
          "examples": ""
        },
        "Bcc": {
          "type": "string",
          "text": "Bcc recipient email address. Multiple addresses are comma separated. Max 50.\nSubject",
          "enum": [
            "string"
          ],
          "examples": ""
        },
        "Tag": {
          "type": "string",
          "text": "Email tag that allows you to categorize outgoing emails and get detailed statistics.",
          "examples": ""
        },
        "HtmlBody": {
          "type": "string",
          "text": "If no TextBody specified HTML email message",
          "required": true,
          "examples": ""
        },
        "TextBody": {
          "type": "string",
          "text": "If no HtmlBody specified Plain text email message",
          "required": true,
          "examples": ""
        },
        "ReplyTo": {
          "type": "string",
          "text": "Reply To override email address.Defaults to the Reply To set in the sender signature. Multiple addresses are comma separated.",
          "examples": ""
        },
        "Headers": {
          "type": "array",
          "text": "List of custom headers to include."
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Activate open tracking for this email.",
          "enum": [
            true,
            false
          ]
        },
        "TrackLinks": {
          "type": "string",
          "text": "Activate link tracking for links in the HTML or Text bodies of this email.Possible options; None HtmlAndText HtmlOnly TextOnly"
        },
        "Metadata": {
          "type": "object",
          "text": "Custom metadata key/value pairs."
        },
        "Attachments": {
          "type": "array",
          "text": "List of attachments"
        },
        "MessageStream": {
          "type": "string",
          "text": "Set message stream ID that's used for sending.If not provided message will default to the \"outbound\" transactional stream."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Send a single email",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/email",
        "alias_endpoint": "/postmark/email",
        "api_ref": "https://postmarkapp.com/developer/api/email-api#send-a-single-email"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__email__batch___post": {
      "provider_intent": "postmark__email__batch___post",
      "provider_alias_intent": "/email/batch",
      "text": "Send batch emails",
      "category": "Email",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "From": {
          "type": "string",
          "text": "The sender email address. Must have a registered and confirmed Sender Signature. To include a name, use the format \"Full Name <sender@domain.com>\". Punctuation in the name would need to be escaped.",
          "required": true
        },
        "To": {
          "type": "string",
          "text": "Recipient email address. Multiple addresses are comma separated. Max 50.",
          "required": true
        },
        "Cc": {
          "type": "string",
          "text": "Cc recipient email address. Multiple addresses are comma separated. Max 50."
        },
        "Bcc": {
          "type": "string",
          "text": "Bcc recipient email address. Multiple addresses are comma separated. Max 50."
        },
        "Subject": {
          "type": "string",
          "text": "Email subject"
        },
        "Tag": {
          "type": "string",
          "text": "Email tag that allows you to categorize outgoing emails and get detailed statistics."
        },
        "HtmlBody": {
          "type": "string",
          "text": "If no TextBody specified HTML email message"
        },
        "TextBody": {
          "type": "string",
          "text": "If no HtmlBody specified Plain text email message"
        },
        "ReplyTo": {
          "type": "string",
          "text": "Reply To override email address. Defaults to the Reply To set in the sender signature."
        },
        "Headers": {
          "type": "array",
          "text": "List of custom headers to include."
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Activate open tracking for this email.",
          "enum": [
            true,
            false
          ]
        },
        "TrackLinks": {
          "type": "string",
          "text": "Activate link tracking for links in the HTML or Text bodies of this email. Possible options: None HtmlAndText HtmlOnly TextOnly"
        },
        "Metadata": {
          "type": "object",
          "text": "Custom metadata key/value pairs."
        },
        "Attachments": {
          "type": "array",
          "text": "List of attachments"
        },
        "MessageStream": {
          "type": "string",
          "text": "Set message stream ID that's used for sending.If not provided message will default to the \"outbound\" transactional stream."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Send batch emails",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/email/batch",
        "alias_endpoint": "/postmark/email/batch",
        "api_ref": "https://postmarkapp.com/developer/api/email-api#send-batch-emails"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id__unarchive___post": {
      "provider_intent": "postmark__message-streams__stream_id__unarchive___post",
      "provider_alias_intent": "/message-streams/stream_id/unarchive",
      "text": "Unarchive a message stream",
      "category": "Message stream ",
      "method": "POST",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Unarchive a message stream ",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_ID}/unarchive",
        "alias_endpoint": "/postmark/message-streams/stream_id/unarchive",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#unarchive-a-stream"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound___get": {
      "provider_intent": "postmark__messages__outbound___get",
      "provider_alias_intent": "/messages/outbound",
      "text": "Outbound message search",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of messages to return per request. Max 500.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of messages to skip.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "recipient": {
          "type": "string",
          "text": "Filter by the user who was receiving the email"
        },
        "fromemail": {
          "type": "string",
          "text": "Filter by the sender email address"
        },
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "status": {
          "type": "string",
          "text": "Filter by status (queued or sent / processed).Note that sent and processed will return the same results and can be used interchangeably"
        },
        "todate": {
          "type": "string",
          "text": "Filter messages up to the date/time specified (inclusive). e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        },
        "fromdate": {
          "type": "string",
          "text": "Filter messages starting from the date/time specified (inclusive)e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        },
        "subject": {
          "type": "string",
          "text": "Filter by email subject"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream ID.If not provided message will default to the 'outbound' transactional stream"
        },
        "metadata_": {
          "type": "string",
          "text": "Filter by metadata value e.g. metadata_color."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Outbound message search ",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound",
        "alias_endpoint": "/postmark/messages/outbound",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#outbound-message-search"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__deliverystats___get": {
      "provider_intent": "postmark__deliverystats___get",
      "provider_alias_intent": "/deliverystats",
      "text": "Get delivery stats",
      "category": "Bounce",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get delivery stats",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/deliverystats",
        "alias_endpoint": "/postmark/deliverystats",
        "api_ref": "https://postmarkapp.com/developer/api/bounce-api#delivery-stats"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__bounces___get": {
      "provider_intent": "postmark__bounces___get",
      "provider_alias_intent": "/bounces",
      "text": "Get bounces",
      "category": "Bounce",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of bounces to return per request.Max 500.Count + Offset cannot exceed 10000 bounces.",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of bounces to skip. Count + Offset cannot exceed 10,000 bounces.",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Filter by type of bounce"
        },
        "inactive": {
          "type": "string",
          "text": "Filter by emails that were deactivated by Postmark due to the bounce.Set to true or false. If this isn’t specified it will return both active and inactive."
        },
        "emailFilter": {
          "type": "string",
          "text": "Filter by email address"
        },
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "messageID": {
          "type": "string",
          "text": "Filter by messageID"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter messages starting from the date/time specified (inclusive) e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        },
        "todate": {
          "type": "string",
          "text": "Filter messages up to the date/time specified (inclusive) e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream ID. If not provided message will default to the outbound transactional stream."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get bounces",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/bounces",
        "alias_endpoint": "/postmark/bounces",
        "api_ref": "https://postmarkapp.com/developer/api/bounce-api#bounces"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__bounces__bounceid___get": {
      "provider_intent": "postmark__bounces__bounceid___get",
      "provider_alias_intent": "/bounces/bounceid",
      "text": "Get a single bounce",
      "category": "Bounce",
      "method": "GET",
      "type": "API",
      "params": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a single bounce",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/bounces/{bounceid}",
        "alias_endpoint": "/postmark/bounces/bounceid",
        "api_ref": "https://postmarkapp.com/developer/api/bounce-api#single-bounce"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__bounces__bounceid__dump___get": {
      "provider_intent": "postmark__bounces__bounceid__dump___get",
      "provider_alias_intent": "/bounces/bounceid/dump",
      "text": "Get bounce dump",
      "category": "Bounce",
      "method": "GET",
      "type": "API",
      "params": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get bounce dump",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/bounces/{bounceid}/dump",
        "alias_endpoint": "/postmark/bounces/bounceid/dump",
        "api_ref": "https://postmarkapp.com/developer/api/bounce-api#bounce-dump"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__bounces__bounceid__activate___put": {
      "provider_intent": "postmark__bounces__bounceid__activate___put",
      "provider_alias_intent": "/bounces/bounceid/activate",
      "text": "Activate a bounce",
      "category": "Bounce",
      "method": "PUT",
      "type": "API",
      "params": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bounceid": {
          "type": "string",
          "text": "Bounce ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Activate a bounce",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/bounces/{bounceid}/activate",
        "alias_endpoint": "/postmark/bounces/bounceid/activate",
        "api_ref": "https://postmarkapp.com/developer/api/bounce-api#activate-bounce"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains___get": {
      "provider_intent": "postmark__domains___get",
      "provider_alias_intent": "/domains",
      "text": "List domains",
      "category": "Domains",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of records to return per request.Max 500",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of records to skip.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List domains",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains",
        "alias_endpoint": "/postmark/domains",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#list-domains"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains__domainid___get": {
      "provider_intent": "postmark__domains__domainid___get",
      "provider_alias_intent": "/domains/domainid",
      "text": "Get a domain’s details",
      "category": "Domains",
      "method": "GET",
      "type": "API",
      "params": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a domain’s details",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains/{domainid}",
        "alias_endpoint": "/postmark/domains/domainid",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#domain"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains___post": {
      "provider_intent": "postmark__domains___post",
      "provider_alias_intent": "/domains",
      "text": "Create a domain",
      "category": "Domains",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Domain name",
          "required": true,
          "examples": "example.com"
        },
        "ReturnPathDomain": {
          "type": "string",
          "text": "A custom value for the Return-Path domain.It is an optional field but it must be a subdomain of your From Email domain and must have a CNAME record that points to pm.mtasv.net. For more information about this field please read our support page.",
          "examples": "pm-bounces.example.com"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a domain",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains",
        "alias_endpoint": "/postmark/domains",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#create-domain"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains__domainid___put": {
      "provider_intent": "postmark__domains__domainid___put",
      "provider_alias_intent": "/domains/domainid",
      "text": "Edit a domain",
      "category": "Domains",
      "method": "PUT",
      "type": "API",
      "params": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ReturnPathDomain": {
          "type": "string",
          "text": "A custom value for the Return-Path domain.It is an optional field but it must be a subdomain of your From Email domain and must have a CNAME record that points to pm.mtasv.net.",
          "examples": "pm-bounces.example.com"
        }
      },
      "path": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a domain",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains/{domainid}",
        "alias_endpoint": "/postmark/domains/domainid",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#edit-domain"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains__domainid___delete": {
      "provider_intent": "postmark__domains__domainid___delete",
      "provider_alias_intent": "/domains/domainid",
      "text": "Verify DKIM Status",
      "category": "Domains",
      "method": "DELETE",
      "type": "API",
      "params": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Verify DKIM Status",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains/{domainid}",
        "alias_endpoint": "/postmark/domains/domainid",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#delete-domain"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains__domainid__verifyreturnpath___put": {
      "provider_intent": "postmark__domains__domainid__verifyreturnpath___put",
      "provider_alias_intent": "/domains/domainid/verifyreturnpath",
      "text": "Verify Return-Path Status",
      "category": "Domains",
      "method": "PUT",
      "type": "API",
      "params": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Verify Return-Path Status",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains/{domainid}/verifyReturnPath",
        "alias_endpoint": "/postmark/domains/domainid/verifyreturnpath",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#domains-verify-return-path"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__domains__domainid__rotatedkim___post": {
      "provider_intent": "postmark__domains__domainid__rotatedkim___post",
      "provider_alias_intent": "/domains/domainid/rotatedkim",
      "text": "Rotate DKIM keys",
      "category": "Domains",
      "method": "POST",
      "type": "API",
      "params": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domainid": {
          "type": "string",
          "text": "Domain ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Rotate DKIM keys",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/domains/{domainid}/rotatedkim",
        "alias_endpoint": "/postmark/domains/domainid/rotatedkim",
        "api_ref": "https://postmarkapp.com/developer/api/domains-api#rotate-dkim"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__triggers__inboundrules___get": {
      "provider_intent": "postmark__triggers__inboundrules___get",
      "provider_alias_intent": "/triggers/inboundrules",
      "text": "List inbound rule triggers",
      "category": "Inbound rules triggers",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of records to return per request",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of records to skip.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List inbound rule triggers",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/triggers/inboundrules",
        "alias_endpoint": "/postmark/triggers/inboundrules",
        "api_ref": "https://postmarkapp.com/developer/api/inbound-rules-triggers-api"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__triggers__inboundrules___post": {
      "provider_intent": "postmark__triggers__inboundrules___post",
      "provider_alias_intent": "/triggers/inboundrules",
      "text": "Create an inbound rule trigger",
      "category": "Inbound rules triggers",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Rule": {
          "type": "string",
          "text": "Email address (or domain) that you would like to block from sending.",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create an inbound rule trigger",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/triggers/inboundrules",
        "alias_endpoint": "/postmark/triggers/inboundrules",
        "api_ref": "https://postmarkapp.com/developer/api/inbound-rules-triggers-api#create-trigger"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__triggers__inboundrules__triggerid___delete": {
      "provider_intent": "postmark__triggers__inboundrules__triggerid___delete",
      "provider_alias_intent": "/triggers/inboundrules/triggerid",
      "text": "Delete a single trigger",
      "category": "Inbound rules triggers",
      "method": "DELETE",
      "type": "API",
      "params": {
        "triggerid": {
          "type": "string",
          "text": "Trigger ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "triggerid": {
          "type": "string",
          "text": "Trigger ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a single trigger",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/triggers/inboundrules/{triggerid}",
        "alias_endpoint": "/postmark/triggers/inboundrules/triggerid",
        "api_ref": "https://postmarkapp.com/developer/api/inbound-rules-triggers-api#delete-single-trigger"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams___get": {
      "provider_intent": "postmark__message-streams___get",
      "provider_alias_intent": "/message-streams",
      "text": "List message streams",
      "category": "Message stream ",
      "method": "GET",
      "type": "API",
      "params": {
        "MessageStreamType": {
          "type": "string",
          "text": "Filters message streams based on stream type.Possible options; All Inbound Transactional Broadcasts.Defaults to All"
        },
        "IncludeArchivedStreams": {
          "type": "string",
          "text": "Boolean filter for including archived message streams in list.Defaults to False."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List message streams",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams",
        "alias_endpoint": "/postmark/message-streams",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#list-message-streams"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id___get": {
      "provider_intent": "postmark__message-streams__stream_id___get",
      "provider_alias_intent": "/message-streams/stream_id",
      "text": "Get a message stream",
      "category": "Message stream ",
      "method": "GET",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a message stream",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_ID}",
        "alias_endpoint": "/postmark/message-streams/stream_id",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#get-a-message-stream"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id___patch": {
      "provider_intent": "postmark__message-streams__stream_id___patch",
      "provider_alias_intent": "/message-streams/stream_id",
      "text": "Edit a message stream",
      "category": "Message stream ",
      "method": "PATCH",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of message stream",
          "examples": "Updated Dev Stream"
        },
        "Description": {
          "type": "string",
          "text": "Description of message stream",
          "examples": "Updating my dev transactional stream"
        },
        "SubscriptionManagementConfiguration": {
          "type": "object",
          "text": "Subscription management options for the Stream"
        },
        "UnsubscribeHandlingType": {
          "type": "string",
          "text": "The unsubscribe management option for the stream.For transactional streams default is None For broadcast streams default is Postmark. Unsubscribe management is required for broadcast message streams approved accounts can use Custom.Possible options",
          "enum": [
            "none Postmark Custom."
          ]
        }
      },
      "path": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a message stream",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_ID}",
        "alias_endpoint": "/postmark/message-streams/stream_id",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#edit-a-message-stream"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams___post": {
      "provider_intent": "postmark__message-streams___post",
      "provider_alias_intent": "/message-streams",
      "text": "Create a message stream",
      "category": "Message stream ",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ID": {
          "type": "string",
          "text": "The ID of the message stream being created.This is used when sending messages to specify the sending message stream",
          "required": true,
          "examples": "transactional-dev"
        },
        "Name": {
          "type": "string",
          "text": "The name of the message stream",
          "required": true,
          "examples": "My Dev Transactional Stream"
        },
        "Description": {
          "type": "string",
          "text": "A description of the message stream",
          "examples": "This is my second transactional stream"
        },
        "MessageStreamType": {
          "type": "string",
          "text": "The type of message stream being created. Possible options Broadcasts Transasctional",
          "required": true,
          "examples": "Transactional"
        },
        "SubscriptionManagementConfiguration": {
          "type": "object",
          "text": "Subscription management options for the Stream",
          "examples": {
            "UnsubscribeHandlingType": "None"
          }
        },
        "UnsubscribeHandlingType": {
          "type": "string",
          "text": "The unsubscribe management option for the stream.For transactional streams default is None.For broadcast streams default is Postmark.Unsubscribe management is required for broadcast message streams approved accounts can use Custom.Possible options; none Postmark Custom."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a message stream",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams",
        "alias_endpoint": "/postmark/message-streams",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#create-a-message-stream"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id__archive___post": {
      "provider_intent": "postmark__message-streams__stream_id__archive___post",
      "provider_alias_intent": "/message-streams/stream_id/archive",
      "text": "Archive a message stream",
      "category": "Message stream ",
      "method": "POST",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "stream_ID": {
          "type": "string",
          "text": "Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Archive a message stream",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_ID}/archive",
        "alias_endpoint": "/postmark/message-streams/stream_id/archive",
        "api_ref": "https://postmarkapp.com/developer/api/message-streams-api#archive-a-message-stream"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__messageid__details___get": {
      "provider_intent": "postmark__messages__outbound__messageid__details___get",
      "provider_alias_intent": "/messages/outbound/messageid/details",
      "text": "Outbound message details",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Outbound message details",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/{messageid}/details",
        "alias_endpoint": "/postmark/messages/outbound/messageid/details",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#outbound-message-details"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__messageid__dump___get": {
      "provider_intent": "postmark__messages__outbound__messageid__dump___get",
      "provider_alias_intent": "/messages/outbound/messageid/dump",
      "text": "Outbound message dump",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Outbound message dump",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/{messageid}/dump",
        "alias_endpoint": "/postmark/messages/outbound/messageid/dump",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#outbound-message-dump"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__inbound___get": {
      "provider_intent": "postmark__messages__inbound___get",
      "provider_alias_intent": "/messages/inbound",
      "text": "Inbound message search",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of messages to return per request.Max 500.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of messages to skip.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "recipient": {
          "type": "string",
          "text": "Filter by the user who was receiving the email"
        },
        "fromemail": {
          "type": "string",
          "text": "Filter by the sender email address"
        },
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "subject": {
          "type": "string",
          "text": "Filter by email subject"
        },
        "mailboxhash": {
          "type": "string",
          "text": "Filter by mailboxhash"
        },
        "status": {
          "type": "string",
          "text": "Filter by status (blocked processed  queued failed scheduled)"
        },
        "todate": {
          "type": "string",
          "text": "Filter messages up to the date specified (inclusive).e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        },
        "fromdate": {
          "type": "string",
          "text": "Filter messages starting from the date specified (inclusive).e.g. 2021-01-01T12",
          "enum": [
            "00"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Inbound message search",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/inbound",
        "alias_endpoint": "/postmark/messages/inbound",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#inbound-message-search"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__inbound__messageid__details___get": {
      "provider_intent": "postmark__messages__inbound__messageid__details___get",
      "provider_alias_intent": "/messages/inbound/messageid/details",
      "text": "Inbound message details",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Inbound message details",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/inbound/{messageid}/details",
        "alias_endpoint": "/postmark/messages/inbound/messageid/details",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#inbound-message-details"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__inbound__messageid__bypass___put": {
      "provider_intent": "postmark__messages__inbound__messageid__bypass___put",
      "provider_alias_intent": "/messages/inbound/messageid/bypass",
      "text": "Bypass rules for a blocked inbound message",
      "category": "Messages",
      "method": "PUT",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Bypass rules for a blocked inbound message",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/inbound/{messageid}/bypass",
        "alias_endpoint": "/postmark/messages/inbound/messageid/bypass",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#inbound-message-bypass"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__inbound__messageid__retry___put": {
      "provider_intent": "postmark__messages__inbound__messageid__retry___put",
      "provider_alias_intent": "/messages/inbound/messageid/retry",
      "text": "Retry a failed inbound message for processing",
      "category": "Messages",
      "method": "PUT",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Retry a failed inbound message for processing",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/inbound/{messageid}/retry",
        "alias_endpoint": "/postmark/messages/inbound/messageid/retry",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#inbound-message-retry"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__opens___get": {
      "provider_intent": "postmark__messages__outbound__opens___get",
      "provider_alias_intent": "/messages/outbound/opens",
      "text": "Message opens",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of messages to return per request.Max 500.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of messages to skip.Count + Offset cannot exceed 10000 messages",
          "required": true
        },
        "recipient": {
          "type": "string",
          "text": "Filter by To Cc Bcc"
        },
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream ID.If not provided search will default to the outbound transactional stream"
        },
        "client_name": {
          "type": "string",
          "text": "Filter by client name i.e.Outlook Gmail"
        },
        "client_company": {
          "type": "string",
          "text": "Filter by company i.e.Microsoft Apple Google"
        },
        "client_family": {
          "type": "string",
          "text": "Filter by client family i.e.OS X Chrome"
        },
        "os_name": {
          "type": "string",
          "text": "Filter by full OS name and specific version i.e. OS X 10.9 Mavericks Windows 7"
        },
        "os_family": {
          "type": "string",
          "text": "Filter by kind of OS used without specific version i.e. OS X Windows"
        },
        "os_company": {
          "type": "string",
          "text": "Filter by company which produced the OS i.e. Apple Computer Inc.Microsoft Corporation"
        },
        "platform": {
          "type": "string",
          "text": "Filter by platform i.e. webmail desktop mobile"
        },
        "country": {
          "type": "string",
          "text": "Filter by country messages were opened in i.e.Denmark Russia"
        },
        "region": {
          "type": "string",
          "text": "Filter by full name of region messages were opened in i.e.Moscow New York"
        },
        "city": {
          "type": "string",
          "text": "Filter by full name of city messages were opened in i.e.Minneapolis Philadelphia"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Message opens",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/opens",
        "alias_endpoint": "/postmark/messages/outbound/opens",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#message-opens"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__opens__messageid___get": {
      "provider_intent": "postmark__messages__outbound__opens__messageid___get",
      "provider_alias_intent": "/messages/outbound/opens/messageid",
      "text": "Opens for a single message",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        },
        "count": {
          "type": "string",
          "text": "Number of message opens to return per request. Max 500",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of messages to skip",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Opens for a single message",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/opens/{messageid}",
        "alias_endpoint": "/postmark/messages/outbound/opens/messageid",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#opens-for-message"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__clicks___get": {
      "provider_intent": "postmark__messages__outbound__clicks___get",
      "provider_alias_intent": "/messages/outbound/clicks",
      "text": "Message clicks",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of message clicks to return per request Max 500",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of clicks to skip",
          "required": true
        },
        "recipient": {
          "type": "string",
          "text": "Filter by To Cc Bcc"
        },
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "client_name": {
          "type": "string",
          "text": "Filter by client name i.e.Outlook Gmail"
        },
        "client_company": {
          "type": "string",
          "text": "Filter by company i.e.Microsoft Apple Google"
        },
        "client_family": {
          "type": "string",
          "text": "Filter by client family i.e.OS X Chrome"
        },
        "os_name": {
          "type": "string",
          "text": "Filter by full OS name and specific version i.e. OS X 10.9 Mavericks Windows 7"
        },
        "os_family": {
          "type": "string",
          "text": "Filter by kind of OS used without specific version i.e. OS X Windows"
        },
        "os_company": {
          "type": "string",
          "text": "Filter by company which produced the OS i.e. Apple Computer Inc.Microsoft Corporation\nplatform",
          "enum": [
            "string"
          ]
        },
        "country": {
          "type": "string",
          "text": "Filter by country messages were clicked in i.e. Denmark Russia"
        },
        "region": {
          "type": "string",
          "text": "Filter by full name of region messages were clicked in i.e. Moscow New York"
        },
        "city": {
          "type": "string",
          "text": "Filter by full name of city messages were clicked in i.e. Minneapolis Philadelphia"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream ID.If not provided message will default to the outbound transactional stream."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Message clicks",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/clicks",
        "alias_endpoint": "/postmark/messages/outbound/clicks",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#message-clicks"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__messages__outbound__clicks__messageid___get": {
      "provider_intent": "postmark__messages__outbound__clicks__messageid___get",
      "provider_alias_intent": "/messages/outbound/clicks/messageid",
      "text": "Clicks for a single message",
      "category": "Messages",
      "method": "GET",
      "type": "API",
      "params": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        },
        "count": {
          "type": "string",
          "text": "Number of message clicks to return per request.Max 500",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of messages to skip",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "messageid": {
          "type": "string",
          "text": "Message ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Clicks for a single message",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/messages/outbound/clicks/{messageid}",
        "alias_endpoint": "/postmark/messages/outbound/clicks/messageid",
        "api_ref": "https://postmarkapp.com/developer/api/messages-api#clicks-for-message"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders___get": {
      "provider_intent": "postmark__senders___get",
      "provider_alias_intent": "/senders",
      "text": "List sender signatures",
      "category": "Sender signatures",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "string",
          "text": "Number of records to return per request.Max 500",
          "required": true
        },
        "offset": {
          "type": "string",
          "text": "Number of records to skip.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List sender signatures",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders",
        "alias_endpoint": "/postmark/senders",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#list-sender-signatures"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders__signatureid___get": {
      "provider_intent": "postmark__senders__signatureid___get",
      "provider_alias_intent": "/senders/signatureid",
      "text": "Get a sender signature’s details",
      "category": "Sender signatures",
      "method": "GET",
      "type": "API",
      "params": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a sender signature’s details",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders/{signatureid}",
        "alias_endpoint": "/postmark/senders/signatureid",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#sender-signature"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders___post": {
      "provider_intent": "postmark__senders___post",
      "provider_alias_intent": "/senders",
      "text": "Create a signature",
      "category": "Sender signatures",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "FromEmail": {
          "type": "string",
          "text": "From email associated with sender signature",
          "required": true,
          "examples": "john.doe@example.com"
        },
        "Name": {
          "type": "string",
          "text": "From name associated with sender signature",
          "required": true,
          "examples": "John Doe"
        },
        "ReplyToEmail": {
          "type": "string",
          "text": "Override for reply-to address",
          "examples": "reply@example.com"
        },
        "ReturnPathDomain": {
          "type": "string",
          "text": "A custom value for the Return-Path domain.It is an optional field but it must be a subdomain of your From Email domain and must have a CNAME record that points to pm.mtasv.net",
          "examples": "pm-bounces.example.com"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a signature",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders",
        "alias_endpoint": "/postmark/senders",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#create-signature"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders__signatureid___put": {
      "provider_intent": "postmark__senders__signatureid___put",
      "provider_alias_intent": "/senders/signatureid",
      "text": "Edit a signature",
      "category": "Sender signatures",
      "method": "PUT",
      "type": "API",
      "params": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "From name associated with sender signature",
          "required": true,
          "examples": "John Doe"
        },
        "ReplyToEmail": {
          "type": "string",
          "text": "Override for reply-to address",
          "examples": "jane.doe@example.com"
        },
        "ReturnPathDomain": {
          "type": "string",
          "text": "A custom value for the Return-Path domain.It is an optional field but it must be a subdomain of your From Email domain and must have a CNAME record that points to pm.mtasv.net.For more information about this field please read our support page",
          "examples": "pm-bounces.example.com"
        },
        "ConfirmationPersonalNote": {
          "type": "string",
          "text": "A way to provide a note to the recipient of the confirmation email to have context of what Postmark is.Max length of 400 characters.",
          "examples": "This is a note visible to the recipient to provide context of what Postmark is."
        }
      },
      "path": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a signature",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders/{signatureid}",
        "alias_endpoint": "/postmark/senders/signatureid",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#edit-signature"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders__signatureid___delete": {
      "provider_intent": "postmark__senders__signatureid___delete",
      "provider_alias_intent": "/senders/signatureid",
      "text": "Delete a signature",
      "category": "Sender signatures",
      "method": "DELETE",
      "type": "API",
      "params": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a signature",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders/{signatureid}",
        "alias_endpoint": "/postmark/senders/signatureid",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#delete-signature"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders__signatureid__resend___post": {
      "provider_intent": "postmark__senders__signatureid__resend___post",
      "provider_alias_intent": "/senders/signatureid/resend",
      "text": "Resend a confirmation",
      "category": "Sender signatures",
      "method": "POST",
      "type": "API",
      "params": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Resend a confirmation",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders/{signatureid}/resend",
        "alias_endpoint": "/postmark/senders/signatureid/resend",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#resend-confirmation"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__senders__signatureid__requestnewdkim___post": {
      "provider_intent": "postmark__senders__signatureid__requestnewdkim___post",
      "provider_alias_intent": "/senders/signatureid/requestnewdkim",
      "text": "Request a new DKIM",
      "category": "Sender signatures",
      "method": "POST",
      "type": "API",
      "params": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "signatureid": {
          "type": "string",
          "text": "Signature ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Request a new DKIM",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/senders/{signatureid}/requestnewdkim",
        "alias_endpoint": "/postmark/senders/signatureid/requestnewdkim",
        "api_ref": "https://postmarkapp.com/developer/api/signatures-api#request-dkim"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__server___get": {
      "provider_intent": "postmark__server___get",
      "provider_alias_intent": "/server",
      "text": "Get the server",
      "category": "Server",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get the server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/server",
        "alias_endpoint": "/postmark/server",
        "api_ref": "https://postmarkapp.com/developer/api/server-api#get-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__server___put": {
      "provider_intent": "postmark__server___put",
      "provider_alias_intent": "/server",
      "text": "Edit the server",
      "category": "Server",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of server",
          "examples": "Production 2"
        },
        "Color": {
          "type": "string",
          "text": "Color of the server in the rack screen.Purple Blue Turquoise Green Red Yellow Grey Orange",
          "examples": "blue"
        },
        "RawEmailEnabled": {
          "type": "boolean",
          "text": "When enabled the raw email content will be included with inbound webhook payloads under the RawEmail key",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "DeliveryHookUrl": {
          "type": "string",
          "text": "URL to POST to every time email is delivered",
          "examples": "http://hooks.example.com/delivery"
        },
        "SmtpApiActivated": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP is enabled on this server",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "InboundHookUrl": {
          "type": "string",
          "text": "URL to POST to every time an inbound event occurs",
          "examples": "http://hooks.example.com/inbound"
        },
        "BounceHookUrl": {
          "type": "string",
          "text": "URL to POST to every time a bounce event occurs",
          "examples": "http://hooks.example.com/bounce"
        },
        "OpenHookUrl": {
          "type": "string",
          "text": "URL to POST to every time an open event occurs",
          "examples": "http://hooks.example.com/open"
        },
        "PostFirstOpenOnly": {
          "type": "boolean",
          "text": "If set to true only the first open by a particular recipient will initiate the open webhook.Any subsequent opens of the same email by the same recipient will not initiate the webhook.\nTrackOpens",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "TrackLinks": {
          "type": "string",
          "text": "Indicates if all emails being sent through this server should have link tracking enabled for links in their HTML or Text bodies.Possible options;None HtmlAndText HtmlOnly TextOnly",
          "examples": "None"
        },
        "ClickHookUrl": {
          "type": "string",
          "text": "URL to POST to when a unique click event occurs",
          "examples": "http://hooks.example.com/click"
        },
        "InboundDomain": {
          "type": "string",
          "text": "Inbound domain for MX setup",
          "examples": ""
        },
        "InboundSpamThreshold": {
          "type": "integer",
          "text": "The maximum spam score for an inbound message before it's blocked",
          "examples": 10
        },
        "IncludeBounceContentInHook": {
          "type": "boolean",
          "text": "Include bounce content in webhook",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "EnableSmtpApiErrorHooks": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP API Errors will be included with bounce webhooks.",
          "enum": [
            true,
            false
          ],
          "examples": false
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit the server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/server",
        "alias_endpoint": "/postmark/server",
        "api_ref": "https://postmarkapp.com/developer/api/server-api#edit-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__servers__serverid___get": {
      "provider_intent": "postmark__servers__serverid___get",
      "provider_alias_intent": "/servers/serverid",
      "text": "Get a server",
      "category": "Servers",
      "method": "GET",
      "type": "API",
      "params": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/servers/{serverid}",
        "alias_endpoint": "/postmark/servers/serverid",
        "api_ref": "https://postmarkapp.com/developer/api/servers-api#get-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__servers___post": {
      "provider_intent": "postmark__servers___post",
      "provider_alias_intent": "/servers",
      "text": "Create a server",
      "category": "Servers",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of server",
          "required": true,
          "examples": "Staging Testing"
        },
        "Color": {
          "type": "string",
          "text": "Color of the server in the server list for quick identification.Purple Blue Turquoise Green Red Yellow Grey Orange",
          "examples": "red"
        },
        "SmtpApiActivated": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP is enabled on this server",
          "enum": [
            true,
            false
          ],
          "examples": true
        },
        "RawEmailEnabled": {
          "type": "boolean",
          "text": "When enabled the raw email content will be included with inbound webhook payloads under the RawEmail key",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "DeliveryType": {
          "type": "string",
          "text": "Specifies the type of environment for your server.Possible options; Live Sandbox.Defaults to Live if not specified.This cannot be changed after the server has been created",
          "examples": "Live"
        },
        "InboundHookUrl": {
          "type": "string",
          "text": "URL to POST to every time an inbound event occurs",
          "examples": "http://hooks.example.com/inbound"
        },
        "PostFirstOpenOnly": {
          "type": "boolean",
          "text": "If set to true only the first open by a particular recipient will initiate the open webhook.Any subsequent opens of the same email by the same recipient will not initiate the webhook",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "InboundDomain": {
          "type": "string",
          "text": "Inbound domain for MX setup",
          "examples": ""
        },
        "InboundSpamThreshold": {
          "type": "integer",
          "text": "The maximum spam score for an inbound message before it's blocked",
          "examples": 5
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Indicates if all emails being sent through this server have open tracking enabled",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "TrackLinks": {
          "type": "string",
          "text": "Indicates if all emails being sent through this server should have link tracking enabled for links in their HTML or Text bodies.Possible options; None HtmlAndText HtmlOnly TextOnly",
          "examples": "None"
        },
        "IncludeBounceContentInHook": {
          "type": "boolean",
          "text": "Include bounce content in webhook",
          "enum": [
            true,
            false
          ],
          "examples": true
        },
        "EnableSmtpApiErrorHooks": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP API Errors will be included with bounce webhooks.",
          "enum": [
            true,
            false
          ],
          "examples": false
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/servers",
        "alias_endpoint": "/postmark/servers",
        "api_ref": "https://postmarkapp.com/developer/api/servers-api#create-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__servers__serverid___put": {
      "provider_intent": "postmark__servers__serverid___put",
      "provider_alias_intent": "/servers/serverid",
      "text": "Edit a server",
      "category": "Servers",
      "method": "PUT",
      "type": "API",
      "params": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of server",
          "examples": "Production 2"
        },
        "Color": {
          "type": "string",
          "text": "Color of the server in the server list for quick identification.Purple Blue Turquoise Green Red Yellow Grey Orange",
          "examples": "blue"
        },
        "SmtpApiActivated": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP is enabled on this server",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "RawEmailEnabled": {
          "type": "boolean",
          "text": "When enabled the raw email content will be included with inbound webhook payloads under the RawEmail key",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "InboundHookUrl": {
          "type": "string",
          "text": "URL to POST to every time an inbound event occurs",
          "examples": "http://hooks.example.com/inbound"
        },
        "PostFirstOpenOnly": {
          "type": "boolean",
          "text": "If set to true only the first open by a particular recipient will initiate the open webhook.Any subsequent opens of the same email by the same recipient will not initiate the webhook",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "InboundDomain": {
          "type": "string",
          "text": "Inbound domain for MX setup",
          "examples": ""
        },
        "InboundSpamThreshold": {
          "type": "integer",
          "text": "The maximum spam score for an inbound message before it's blocked",
          "examples": 0
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Indicates if all emails being sent through this server have open tracking enabled",
          "enum": [
            true,
            false
          ],
          "examples": false
        },
        "TrackLinks": {
          "type": "string",
          "text": "Indicates if all emails being sent through this server should have link tracking enabled for links in their HTML or Text bodies.Possible options; None HtmlAndText HtmlOnly TextOnly",
          "examples": "None"
        },
        "IncludeBounceContentInHook": {
          "type": "boolean",
          "text": "Include bounce content in webhook",
          "enum": [
            true,
            false
          ],
          "examples": true
        },
        "EnableSmtpApiErrorHooks": {
          "type": "boolean",
          "text": "Specifies whether or not SMTP API Errors will be included with bounce webhooks.",
          "enum": [
            true,
            false
          ],
          "examples": false
        }
      },
      "path": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/servers/{serverid}",
        "alias_endpoint": "/postmark/servers/serverid",
        "api_ref": "https://postmarkapp.com/developer/api/servers-api#edit-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__servers___get": {
      "provider_intent": "postmark__servers___get",
      "provider_alias_intent": "/servers",
      "text": "List servers",
      "category": "Servers",
      "method": "GET",
      "type": "API",
      "params": {
        "count": {
          "type": "number",
          "text": "Number of servers to return per request",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "Number of servers to skip",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "Filter by a specific server name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List servers",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/servers",
        "alias_endpoint": "/postmark/servers",
        "api_ref": "https://postmarkapp.com/developer/api/servers-api#list-servers"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__servers__serverid___delete": {
      "provider_intent": "postmark__servers__serverid___delete",
      "provider_alias_intent": "/servers/serverid",
      "text": "Delete a server",
      "category": "Servers",
      "method": "DELETE",
      "type": "API",
      "params": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "serverid": {
          "type": "string",
          "text": "Server ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/servers/{serverid}",
        "alias_endpoint": "/postmark/servers/serverid",
        "api_ref": "https://postmarkapp.com/developer/api/servers-api#delete-server"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound___get": {
      "provider_intent": "postmark__stats__outbound___get",
      "provider_alias_intent": "/stats/outbound",
      "text": "Get outbound overview",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream.If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get outbound overview",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound",
        "alias_endpoint": "/postmark/stats/outbound",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#overview"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__sends___get": {
      "provider_intent": "postmark__stats__outbound__sends___get",
      "provider_alias_intent": "/stats/outbound/sends",
      "text": "Get sent counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get sent counts",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/sends",
        "alias_endpoint": "/postmark/stats/outbound/sends",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#sent-counts"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__bounces___get": {
      "provider_intent": "postmark__stats__outbound__bounces___get",
      "provider_alias_intent": "/stats/outbound/bounces",
      "text": "Get bounce counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get bounce counts",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/bounces",
        "alias_endpoint": "/postmark/stats/outbound/bounces",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#bounce-counts"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__spam___get": {
      "provider_intent": "postmark__stats__outbound__spam___get",
      "provider_alias_intent": "/stats/outbound/spam",
      "text": "Get spam complaints",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01\nmessagestream",
          "enum": [
            "string"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get spam complaints",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/spam",
        "alias_endpoint": "/postmark/stats/outbound/spam",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#spam-complaints"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__tracked___get": {
      "provider_intent": "postmark__stats__outbound__tracked___get",
      "provider_alias_intent": "/stats/outbound/tracked",
      "text": "Get tracked email counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get tracked email counts",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/tracked",
        "alias_endpoint": "/postmark/stats/outbound/tracked",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#email-tracked-count"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__opens___get": {
      "provider_intent": "postmark__stats__outbound__opens___get",
      "provider_alias_intent": "/stats/outbound/opens",
      "text": "Get email open counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get email open counts",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/opens",
        "alias_endpoint": "/postmark/stats/outbound/opens",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#email-open-counts"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__opens__platforms___get": {
      "provider_intent": "postmark__stats__outbound__opens__platforms___get",
      "provider_alias_intent": "/stats/outbound/opens/platforms",
      "text": "Get email platform usage",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get email platform usage",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/opens/platforms",
        "alias_endpoint": "/postmark/stats/outbound/opens/platforms",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#email-platform-usage"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__opens__emailclients___get": {
      "provider_intent": "postmark__stats__outbound__opens__emailclients___get",
      "provider_alias_intent": "/stats/outbound/opens/emailclients",
      "text": "Get email client usage",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get email client usage",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/opens/emailclients",
        "alias_endpoint": "/postmark/stats/outbound/opens/emailclients",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#email-client-usage"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__clicks___get": {
      "provider_intent": "postmark__stats__outbound__clicks___get",
      "provider_alias_intent": "/stats/outbound/clicks",
      "text": "Get click counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get click counts",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/clicks",
        "alias_endpoint": "/postmark/stats/outbound/clicks",
        "api_ref": "https://api.postmarkapp.com/stats/outbound/clicks?fromdate=2014-01-01&todate=2014-02-01"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__clicks__browserfamilies___get": {
      "provider_intent": "postmark__stats__outbound__clicks__browserfamilies___get",
      "provider_alias_intent": "/stats/outbound/clicks/browserfamilies",
      "text": "Get browser usage",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get browser usage",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/clicks/browserfamilies",
        "alias_endpoint": "/postmark/stats/outbound/clicks/browserfamilies",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#browser-usage"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__clicks__platforms___get": {
      "provider_intent": "postmark__stats__outbound__clicks__platforms___get",
      "provider_alias_intent": "/stats/outbound/clicks/platforms",
      "text": "Get browser platform usage",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get browser platform usage",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/clicks/platforms",
        "alias_endpoint": "/postmark/stats/outbound/clicks/platforms",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#browser-platform-usage"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__stats__outbound__clicks__location___get": {
      "provider_intent": "postmark__stats__outbound__clicks__location___get",
      "provider_alias_intent": "/stats/outbound/clicks/location",
      "text": "Get click location",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "Filter by tag"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter stats starting from the date specified (inclusive). e.g. 2014-01-01"
        },
        "todate": {
          "type": "string",
          "text": "Filter stats up to the date specified (inclusive). e.g. 2014-02-01"
        },
        "messagestream": {
          "type": "string",
          "text": "Filter by message stream. If not provided the response will include stats for all streams in the server."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get click location",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/stats/outbound/clicks/location",
        "alias_endpoint": "/postmark/stats/outbound/clicks/location",
        "api_ref": "https://postmarkapp.com/developer/api/stats-api#click-location"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id__suppressions__dump___get": {
      "provider_intent": "postmark__message-streams__stream_id__suppressions__dump___get",
      "provider_alias_intent": "/message-streams/stream_id/suppressions/dump",
      "text": "Suppression dump",
      "category": "Suppressions",
      "method": "GET",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        },
        "SuppressionReason": {
          "type": "string",
          "text": "Filter by suppression reason. Possible options; HardBounce SpamComplaint ManualSuppression"
        },
        "Origin": {
          "type": "string",
          "text": "Filter by origin of how the address was added to suppression list. Possible options; Recipient Customer Admin"
        },
        "todate": {
          "type": "string",
          "text": "Filter suppressions up to the date specified (inclusive) e.g. 2020-02-01"
        },
        "fromdate": {
          "type": "string",
          "text": "Filter suppressions up to the date specified (inclusive) e.g. 2020-02-01"
        },
        "EmailAddress": {
          "type": "string",
          "text": "Filter by email address."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Suppression dump ",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_id}/suppressions/dump",
        "alias_endpoint": "/postmark/message-streams/stream_id/suppressions/dump",
        "api_ref": "https://postmarkapp.com/developer/api/suppressions-api#suppression-dump"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id__suppressions__dump___post": {
      "provider_intent": "postmark__message-streams__stream_id__suppressions__dump___post",
      "provider_alias_intent": "/message-streams/stream_id/suppressions/dump",
      "text": "Create a Suppression",
      "category": "Suppressions",
      "method": "POST",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Suppressions": {
          "type": "array​",
          "text": "An ​array that will contain that email addresses to create a suppression on.Max of 50 suppressions that can be created in one call",
          "required": true,
          "examples": [
            {
              "EmailAddress": "good.address@wildbit.com"
            },
            {
              "EmailAddress": "spammy.address@wildbit.com"
            },
            {
              "EmailAddress": "invalid-email-address"
            }
          ]
        },
        "EmailAddress": {
          "type": "string",
          "text": "The email address to request suppression creation on."
        }
      },
      "path": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a Suppression",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_id}/suppressions/dump",
        "alias_endpoint": "/postmark/message-streams/stream_id/suppressions/dump",
        "api_ref": "https://postmarkapp.com/developer/api/suppressions-api#create-a-suppression"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__message-streams__stream_id__suppressions__delete___delete": {
      "provider_intent": "postmark__message-streams__stream_id__suppressions__delete___delete",
      "provider_alias_intent": "/message-streams/stream_id/suppressions/delete",
      "text": "Delete a Suppression",
      "category": "Suppressions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Suppressions": {
          "type": "array​",
          "text": "An ​array of email addresses to delete a suppression on.Max of 50 suppressions that can be removed in one call",
          "required": true,
          "examples": [
            {
              "EmailAddress": "good.address@wildbit.com"
            },
            {
              "EmailAddress": "not.suppressed@wildbit.com"
            },
            {
              "EmailAddress": "spammy.address@wildbit.com"
            }
          ]
        },
        "EmailAddress": {
          "type": "string",
          "text": "The email address to request suppression deletion on."
        }
      },
      "path": {
        "stream_ID": {
          "type": "string",
          "text": " Stream ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a Suppression",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/message-streams/{stream_id}/suppressions/delete",
        "alias_endpoint": "/postmark/message-streams/stream_id/suppressions/delete",
        "api_ref": "https://postmarkapp.com/developer/api/suppressions-api#delete-a-suppression"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__email__withtemplate___post": {
      "provider_intent": "postmark__email__withtemplate___post",
      "provider_alias_intent": "/email/withtemplate",
      "text": "Send email with template",
      "category": "Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "TemplateId": {
          "type": "integer",
          "text": "The template to use when sending this message.Required if TemplateAlias is not specified",
          "required": true,
          "examples": 1234
        },
        "TemplateAlias": {
          "type": "string",
          "text": "The alias of a template to use when sending this message.Required if TemplateId is not specified",
          "required": true
        },
        "TemplateModel": {
          "type": "object",
          "text": "The model to be applied to the specified template to generate HtmlBody TextBody and Subject",
          "required": true,
          "examples": {
            "user_name": "John Smith",
            "company": {
              "name": "ACME"
            }
          }
        },
        "InlineCss": {
          "type": "boolean",
          "text": "By default, if the specified template contains an HTMLBody, we will apply the style blocks as inline attributes to the rendered HTML content. You may opt-out of this behavior by passing false for this request field.",
          "enum": [
            true,
            false
          ],
          "examples": true
        },
        "From": {
          "type": "string",
          "text": "The sender email address. Must have a registered and confirmed Sender Signature. To include a name use the format \"Full Name <sender@domain.com>\" for the address",
          "required": true,
          "examples": "sender@example.com"
        },
        "To": {
          "type": "string",
          "text": "Recipient email address.Multiple addresses are comma separated. Max 50",
          "required": true,
          "examples": "receiver@example.com"
        },
        "Cc": {
          "type": "string",
          "text": "Cc recipient email address.Multiple addresses are comma separated. Max 50",
          "examples": "copied@example.com"
        },
        "Bcc": {
          "type": "string",
          "text": "Bcc recipient email address.Multiple addresses are comma separated. Max 50",
          "examples": "blank-copied@example.com"
        },
        "Tag": {
          "type": "string",
          "text": "Email tag that allows you to categorize outgoing emails and get detailed statistics",
          "examples": "Invitation"
        },
        "ReplyTo": {
          "type": "string",
          "text": "Reply To override email address.Defaults to the Reply To set in the sender signature",
          "examples": "reply@example.com"
        },
        "Headers": {
          "type": "array",
          "text": "List of custom headers to include",
          "examples": [
            {
              "Name": "CUSTOM-HEADER",
              "Value": "value"
            }
          ]
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Activate open tracking for this email",
          "enum": [
            true,
            false
          ],
          "examples": true
        },
        "TrackLinks": {
          "type": "string",
          "text": "Activate link tracking for links in the HTML or Text bodies of this email.Possible options; None HtmlAndText HtmlOnly TextOnly",
          "examples": "None"
        },
        "Attachments": {
          "type": "array",
          "text": "List of attachments",
          "examples": [
            {
              "Name": "readme.txt",
              "Content": "dGVzdCBjb250ZW50",
              "ContentType": "text/plain"
            },
            {
              "Name": "report.pdf",
              "Content": "dGVzdCBjb250ZW50",
              "ContentType": "application/octet-stream"
            }
          ]
        },
        "Metadata": {
          "type": "object",
          "text": "Custom metadata key/value pairs",
          "examples": {
            "color": "blue",
            "client-id": "12345"
          }
        },
        "MessageStream": {
          "type": "string",
          "text": "Set message stream ID that's used for sending. If not provided message will default to the outbound transactional stream",
          "examples": "outbound"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Send email with template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/email/withTemplate",
        "alias_endpoint": "/postmark/email/withtemplate",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#email-with-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__email__batchwithtemplates___post": {
      "provider_intent": "postmark__email__batchwithtemplates___post",
      "provider_alias_intent": "/email/batchwithtemplates",
      "text": "Send batch with templates",
      "category": "Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Messages": {
          "type": "array",
          "text": "The list of templates to send.Please note that we accept up to 500 messages per API call",
          "required": true,
          "examples": [
            {
              "From": "sender@example.com",
              "To": "receiver@example.com",
              "Cc": "copied@example.com",
              "Bcc": "blank-copied@example.com",
              "Tag": "Invitation",
              "ReplyTo": "reply@example.com",
              "TemplateAlias": "invitation-letter",
              "TemplateModel": {
                "fizz": "buzz"
              },
              "Headers": [
                {
                  "Name": "CUSTOM-HEADER",
                  "Value": "value"
                }
              ],
              "TrackOpens": true,
              "TrackLinks": "None",
              "Attachments": [
                {
                  "Name": "readme.txt",
                  "Content": "dGVzdCBjb250ZW50",
                  "ContentType": "text/plain"
                },
                {
                  "Name": "report.pdf",
                  "Content": "dGVzdCBjb250ZW50",
                  "ContentType": "application/octet-stream"
                },
                {
                  "Name": "image.jpg",
                  "ContentID": "cid:image.jpg",
                  "Content": "dGVzdCBjb250ZW50",
                  "ContentType": "image/jpeg"
                }
              ],
              "Metadata": {
                "color": "blue",
                "client-id": "12345"
              },
              "MessageStream": "outbound"
            }
          ]
        },
        "TemplateAlias": {
          "type": "string",
          "text": "The template to use for this message.This value is required if TemplateId is not supplied.If both are supplied TemplateId will be used to select the template"
        },
        "TemplateId": {
          "type": "integer",
          "text": "The template to use for this message.This value is required if TemplateAlias is not supplied.If both are supplied TemplateId will be used to select the template"
        },
        "From": {
          "type": "string",
          "text": "The sender email address.Must have a registered and confirmed Sender Signature. To include a name use the format \"Full Name <sender@domain.com>\" for the address",
          "required": true
        },
        "To": {
          "type": "string",
          "text": "Recipient email address.Multiple addresses are comma separated. Max 50",
          "required": true
        },
        "Cc": {
          "type": "string",
          "text": "Cc recipient email address.Multiple addresses are comma separated.Max 50"
        },
        "Bcc": {
          "type": "string",
          "text": "Bcc recipient email address.Multiple addresses are comma separated.Max 50"
        },
        "Tag": {
          "type": "string",
          "text": "Email tag that allows you to categorize outgoing emails and get detailed statistics"
        },
        "ReplyTo": {
          "type": "string",
          "text": "Reply To override email address.Defaults to the Reply To set in the sender signature"
        },
        "Headers": {
          "type": "array",
          "text": "List of custom headers to include"
        },
        "TrackOpens": {
          "type": "boolean",
          "text": "Activate open tracking for this email.",
          "enum": [
            true,
            false
          ]
        },
        "TrackLinks": {
          "type": "string",
          "text": "Activate link tracking for links in the HTML or Text bodies of this email.Possible options",
          "enum": [
            "None HtmlAndText HtmlOnly TextOnly"
          ]
        },
        "Attachments": {
          "type": "array",
          "text": "List of attachments"
        },
        "Metadata": {
          "type": "object",
          "text": "Custom metadata key/value pairs"
        },
        "MessageStream": {
          "type": "string",
          "text": "Set message stream ID that's used for sending.If not provided message will default to the outbound transactional stream."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Send batch with templates",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/email/batchWithTemplates",
        "alias_endpoint": "/postmark/email/batchwithtemplates",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#send-batch-with-templates"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates__push___put": {
      "provider_intent": "postmark__templates__push___put",
      "provider_alias_intent": "/templates/push",
      "text": "Push templates to another server",
      "category": "Templates",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "SourceServerID": {
          "type": "string",
          "text": "Server ID of the source server containing the templates that will be pushed",
          "required": true,
          "examples": 997287
        },
        "DestinationServerID": {
          "type": "string",
          "text": "Server ID of the destination server receiving the pushed templates",
          "required": true,
          "examples": 997285
        },
        "PerformChanges": {
          "type": "boolean",
          "text": "Specifies whether to push templates to destination server or not. This parameter can be set to false to allow you to do a \"dry-run\" of the push operation so that you can see which templates would be created or updated from this operation.",
          "required": true,
          "enum": [
            true,
            false
          ],
          "examples": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Push templates to another server",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates/push",
        "alias_endpoint": "/postmark/templates/push",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#push-templates"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates__templateidoralias___get": {
      "provider_intent": "postmark__templates__templateidoralias___get",
      "provider_alias_intent": "/templates/templateidoralias",
      "text": "Get a template",
      "category": "Templates",
      "method": "GET",
      "type": "API",
      "params": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates/{templateIdOrAlias}",
        "alias_endpoint": "/postmark/templates/templateidoralias",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#get-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates___post": {
      "provider_intent": "postmark__templates___post",
      "provider_alias_intent": "/templates",
      "text": "Create a template",
      "category": "Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of template",
          "required": true,
          "examples": "Onboarding Email"
        },
        "Alias": {
          "type": "string",
          "text": "An optional string you can provide to identify this template (if creating a standard template).Allowed characters are numbers ASCII letters and ‘.’ ‘-’ ‘_’ characters and the string has to start with a letter",
          "examples": "onboarding-v1"
        },
        "HtmlBody": {
          "type": "string",
          "text": "The content to use for the HtmlBody when this template is used to send email.Required if TextBody is not specified.See our template language documentation for more information on the syntax for this field.A content placeholder is required to be present for a layout template and can be placed only once in the HtmlBody",
          "required": true,
          "examples": "<html><body>Hello, {{name}}!</body></html>"
        },
        "TextBody": {
          "type": "string",
          "text": "The content to use for the TextBody when this template is used to send email. Required if HtmlBody is not specified. See our template language documentation for more information on the syntax for this field.A content placeholder is required to be present for a layout template and can be placed only once in the TextBody",
          "required": true,
          "examples": "Hello, {{name}}!"
        },
        "Subject": {
          "type": "string",
          "text": "The content to use for the Subject when this template is used to send email.Subject is only required on standard templates.See our template language documentation for more information on the syntax for this field.Subjects are not allowed for layout templates and will result in an API error",
          "required": true,
          "examples": "Hello from {{company.name}}!"
        },
        "TemplateType": {
          "type": "string",
          "text": "Available when creating a template.To set if a template is standard template or layout template.Possible options; Standard or Layout.Defaults to Standard.After creation it's not possible to change a template type",
          "examples": "Standard"
        },
        "LayoutTemplate": {
          "type": "string",
          "text": "An optional string to specify which Layout Template to use (via layout alias) for an existing Layout Template when creating a standard template Allowed characters are numbers ASCII letters and ‘.’ ‘-’ ‘_’ characters and the string has to start with a letter.The API will throw an error if LayoutTemplate is present and the template type is a Layout.This field can also be set to null by using an empty string \"\".",
          "examples": "my-layout"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates",
        "alias_endpoint": "/postmark/templates",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#create-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates__templateidoralias___put": {
      "provider_intent": "postmark__templates__templateidoralias___put",
      "provider_alias_intent": "/templates/templateidoralias",
      "text": "Edit a template",
      "category": "Templates",
      "method": "PUT",
      "type": "API",
      "params": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Name": {
          "type": "string",
          "text": "Name of template",
          "required": true,
          "examples": "Onboarding Email"
        },
        "Subject": {
          "type": "string",
          "text": "The content to use for the Subject when this template is used to send email. See our template language documentation for more information on the syntax for this field.",
          "required": true,
          "examples": "Hello from {{company.name}}!"
        },
        "HtmlBody": {
          "type": "string",
          "text": "The content to use for the HtmlBody when this template is used to send email.Required if TextBody is not specified.See our template language documentation for more information on the syntax for this field",
          "required": true,
          "examples": "<html><body>Hello, {{name}}!</body></html>"
        },
        "TextBody": {
          "type": "string",
          "text": "The content to use for the TextBody when this template is used to send email. Required if HtmlBody is not specified. See our template language documentation for more information on the syntax for this field",
          "required": true,
          "examples": "Hello, {{name}}!"
        },
        "Alias": {
          "type": "string",
          "text": "An optional string you can provide to identify this Template.Allowed characters are numbers ASCII letters and ‘.’ ‘-’ ‘_’ characters and the string has to start with a letter",
          "examples": "welcome-v1"
        },
        "LayoutTemplate": {
          "type": "string",
          "text": "An optional string to specify which Layout Template to use (via layout alias) for an existing Layout Template when creating a standard template.Allowed characters are numbers ASCII letters and ‘.’ ‘-’ ‘_’ characters and the string has to start with a letter.The API will throw an error if LayoutTemplate is present and the template type is a Layout. This field can also be set to null by using an empty string \"\".",
          "examples": "my-layout"
        }
      },
      "path": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates/{templateIdOrAlias}",
        "alias_endpoint": "/postmark/templates/templateidoralias",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#edit-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates___get": {
      "provider_intent": "postmark__templates___get",
      "provider_alias_intent": "/templates",
      "text": "List templates",
      "category": "Templates",
      "method": "GET",
      "type": "API",
      "params": {
        "Count": {
          "type": "string",
          "text": "The number of templates to return",
          "required": true
        },
        "Offset": {
          "type": "string",
          "text": "The number of templates to \"skip\" before returning results",
          "required": true
        },
        "TemplateType": {
          "type": "string",
          "text": "Filters templates based on template type (layout template or standard template).Possible options; All Standard Layout.Defaults to All"
        },
        "LayoutTemplate": {
          "type": "string",
          "text": "Filter results by layout alias."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List templates",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates",
        "alias_endpoint": "/postmark/templates",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#list-templates"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates__templateidoralias___delete": {
      "provider_intent": "postmark__templates__templateidoralias___delete",
      "provider_alias_intent": "/templates/templateidoralias",
      "text": "Delete a template",
      "category": "Templates",
      "method": "DELETE",
      "type": "API",
      "params": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "templateIdOrAlias": {
          "type": "string",
          "text": "Template ID Or Alias",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates/{templateIdOrAlias}",
        "alias_endpoint": "/postmark/templates/templateidoralias",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#delete-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__templates__validate___post": {
      "provider_intent": "postmark__templates__validate___post",
      "provider_alias_intent": "/templates/validate",
      "text": "Validate a template",
      "category": "Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Subject": {
          "type": "string",
          "text": "The subject content to validate.Must be specified if HtmlBody or TextBody are not.See our template language documentation for more information on the syntax for this field",
          "required": true,
          "examples": "{{#company}}{{name}}{{/company}} {{subjectHeadline}}"
        },
        "HtmlBody": {
          "type": "string",
          "text": "The HTML body content to validate.Must be specified if TextBody or Subject are not.See our template language documentation for more information on the syntax for this field.A content placeholder is required to be present to validate a layout template and can be placed only once in the HtmlBody",
          "required": true,
          "examples": "{{#company}}{{address}}{{/company}}{{#each person}} {{name}} {{/each}}"
        },
        "TextBody": {
          "type": "string",
          "text": "The plain text body content to validate.Must be specified if Subject or HtmlBody are not.See our template language documentation for more information on the syntax for this field.A content placeholder is required to be present to validate a layout template and can be placed only once in the TextBody",
          "required": true,
          "examples": "{{#company}}{{phone}}{{/company}}{{#each person}} {{name}} {{/each}}"
        },
        "TestRenderModel": {
          "type": "object",
          "text": "The template model to be used when rendering test content",
          "examples": {
            "userName": "bobby joe"
          }
        },
        "InlineCssForHtmlTestRender": {
          "type": "boolean",
          "text": "When HtmlBody is specified the test render will have style blocks inlined as style attributes on matching html elements.You may disable the css inlining behavior by passing false for this parameter",
          "enum": [
            true,
            false
          ]
        },
        "TemplateType": {
          "type": "string",
          "text": "Validates templates based on template type (layout template or standard template).Possible options; Standard or Layout.Defaults to Standard",
          "examples": "Standard"
        },
        "LayoutTemplate": {
          "type": "string",
          "text": "An optional string to specify which layout template alias to use to validate a standard template.If not provided a standard template will not use a layout template.",
          "examples": "my-layout"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Validate a template",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/templates/validate",
        "alias_endpoint": "/postmark/templates/validate",
        "api_ref": "https://postmarkapp.com/developer/api/templates-api#validate-template"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__webhooks___get": {
      "provider_intent": "postmark__webhooks___get",
      "provider_alias_intent": "/webhooks",
      "text": "List webhooks",
      "category": "Webhooks",
      "method": "GET",
      "type": "API",
      "params": {
        "MessageStream": {
          "type": "string",
          "text": "Filter by message stream.If no stream is provided will return all webhooks for the server. If a non existing stream is provided an error is thrown instead of an empty webhooks array."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "List webhooks",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/webhooks",
        "alias_endpoint": "/postmark/webhooks",
        "api_ref": "https://postmarkapp.com/developer/api/webhooks-api#list-webhooks"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__webhooks__id___get": {
      "provider_intent": "postmark__webhooks__id___get",
      "provider_alias_intent": "/webhooks/id",
      "text": "Get a webhook",
      "category": "Webhooks",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Get a webhook",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/webhooks/{Id}",
        "alias_endpoint": "/postmark/webhooks/id",
        "api_ref": "https://postmarkapp.com/developer/api/webhooks-api#get-a-webhook"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__webhooks___post": {
      "provider_intent": "postmark__webhooks___post",
      "provider_alias_intent": "/webhooks",
      "text": "Create a webhook",
      "category": "Webhooks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "Url": {
          "type": "string",
          "text": "Your webhook URL",
          "required": true,
          "examples": "http://www.example.com/webhook-test-tracking"
        },
        "MessageStream": {
          "type": "string",
          "text": "The stream this webhook is associated with. If no MessageStream is provided the default transactional stream outbound will be used",
          "examples": "outbound"
        },
        "HttpAuth": {
          "type": "object",
          "text": "Custom HTTP Auth username/password pairs",
          "examples": {
            "Username": "user",
            "Password": "pass"
          }
        },
        "HttpHeaders": {
          "type": "array",
          "text": "Custom HTTP Headers name/value pairs",
          "examples": [
            {
              "Name": "name",
              "Value": "value"
            }
          ]
        },
        "Triggers": {
          "type": "object",
          "text": "List of different webhooks events to enable",
          "examples": {
            "Open": {
              "Enabled": true,
              "PostFirstOpenOnly": false
            },
            "Click": {
              "Enabled": true
            },
            "Delivery": {
              "Enabled": true
            },
            "Bounce": {
              "Enabled": false,
              "IncludeContent": false
            },
            "SpamComplaint": {
              "Enabled": false,
              "IncludeContent": false
            },
            "SubscriptionChange": {
              "Enabled": false
            }
          }
        },
        "Open": {
          "type": "object",
          "text": "Listing for if the Open webhook is enabled/disabled.Webhook will only post on first open if PostFirstOpenOnly is enabled"
        },
        "Click": {
          "type": "object",
          "text": "Listing for if the Click webhook is enabled/disabled"
        },
        "Delivery": {
          "type": "object",
          "text": "Listing for if the Delivery webhook is enabled/disabled"
        },
        "Bounce": {
          "type": "object",
          "text": "Listing for if the Bounce webhook is enabled/disabled.Webhook will send full bounce content if IncludeContent is enabled"
        },
        "SpamComplaint": {
          "type": "object",
          "text": "Listing for if the Spam webhook is enabled/disabled.Webhook will send full spam content if IncludeContent is enabled"
        },
        "SubscriptionChange": {
          "type": "object",
          "text": "Listing for if the Subscription Change webhook is enabled/disabled."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Create a webhook",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/webhooks",
        "alias_endpoint": "/postmark/webhooks",
        "api_ref": "https://postmarkapp.com/developer/api/webhooks-api#create-a-webhook"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__webhooks__id___put": {
      "provider_intent": "postmark__webhooks__id___put",
      "provider_alias_intent": "/webhooks/id",
      "text": "Edit a webhook",
      "category": "Webhooks",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "Url": {
          "type": "string",
          "text": "Your new webhook URL"
        },
        "HttpAuth": {
          "type": "object",
          "text": "Optional.Add new Custom HTTP Auth username/password pairs"
        },
        "HttpHeaders": {
          "type": "array",
          "text": "Add new Custom HTTP Headers name/value pairs"
        },
        "Triggers": {
          "type": "object",
          "text": "List of different webhooks events to enable/disable. If only click is provided the other events will not changed. If no triggers are provided there’ll be no change"
        },
        "Open": {
          "type": "object",
          "text": "Listing for if the Open webhook is enabled/disabled. Webhook will only post on first open if PostFirstOpenOnly is enabled"
        },
        "Click": {
          "type": "object",
          "text": "Listing for if the Click webhook is enabled/disabled"
        },
        "Delivery": {
          "type": "object",
          "text": "Listing for if the Delivery webhook is enabled/disabled"
        },
        "Bounce": {
          "type": "object",
          "text": "Listing for if the Bounce webhook is enabled/disabled. Webhook will send full bounce content if IncludeContent is enabled"
        },
        "SpamComplaint": {
          "type": "object",
          "text": "Listing for if the Spam webhook is enabled/disabled. Webhook will send full spam content if IncludeContent is enabled"
        },
        "SubscriptionChange": {
          "type": "object",
          "text": "Listing for if the Subscription Change webhook is enabled/disabled."
        }
      },
      "path": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Edit a webhook ",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/webhooks/{Id}",
        "alias_endpoint": "/postmark/webhooks/id",
        "api_ref": "https://postmarkapp.com/developer/api/webhooks-api#edit-a-webhook"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postmark__webhooks__id___delete": {
      "provider_intent": "postmark__webhooks__id___delete",
      "provider_alias_intent": "/webhooks/id",
      "text": "Delete a webhook",
      "category": "Webhooks",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "number",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "",
        "auth": [],
        "description": "Delete a webhook",
        "rate_limit": [],
        "api_endpoint": "https://api.postmarkapp.com/webhooks/{Id}",
        "alias_endpoint": "/postmark/webhooks/id",
        "api_ref": "https://postmarkapp.com/developer/api/webhooks-api#delete-a-webhook"
      },
      "auth": {
        "header": {
          "headerName": "X-Postmark-Server-Token",
          "headerValue": "",
          "authKey": "api_token"
        }
      },
      "response_type": "",
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}