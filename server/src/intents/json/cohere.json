{
  "routes": {
    "cohere__v1__chat___post": {
      "provider_intent": "cohere__v1__chat___post",
      "provider_alias_intent": "/v1/chat",
      "text": "Chat",
      "category": "Chat",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "message": {
          "type": "string",
          "text": "Text input for the model to respond to. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments",
          "required": true
        },
        "model": {
          "type": "string",
          "text": "Defaults to command-r-plus. The name of a compatible Cohere model or the ID of a fine-tuned model. Compatible Deployments: Cohere Platform, Private Deployments"
        },
        "stream": {
          "type": "boolean",
          "text": "Defaults to false. When true, the response will be a JSON stream of events. The final event will contain the complete response, and will have an event_type of 'stream-end'. Streaming is beneficial for user interfaces that render the contents of the response piece by piece, as it gets generated. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments",
          "enum": [
            true,
            false
          ]
        },
        "preamble": {
          "type": "string",
          "text": "When specified, the default Cohere preamble will be replaced with the provided one. Preambles are a part of the prompt used to adjust the model's overall behavior and conversation style, and use the SYSTEM role. The SYSTEM role is also used for the contents of the optional chat_history= parameter. When used with the chat_history= parameter it adds content throughout a conversation. Conversely, when used with the preamble= parameter it adds content at the start of the conversation only. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "chat_history": {
          "type": "array",
          "text": "A list of previous messages between the user and the model, giving the model conversational context for responding to the user's message. Each item represents a single message in the chat history, excluding the current user turn. It has two properties: role and message. The role identifies the sender (CHATBOT, SYSTEM, or USER), while the message contains the text content. The chat_history parameter should not be used for SYSTEM messages in most cases. Instead, to add a SYSTEM role message at the beginning of a conversation, the preamble parameter should be used. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "conversation_id": {
          "type": "string",
          "text": "An alternative to chat_history. Providing a conversation_id creates or resumes a persisted conversation with the specified ID. The ID can be any non-empty string. Compatible Deployments: Cohere Platform"
        },
        "prompt_truncation": {
          "type": "string",
          "text": "Defaults to AUTO when connectors are specified and OFF in all other cases. Dictates how the prompt will be constructed. With prompt_truncation set to 'AUTO', some elements from chat_history and documents will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be changed and ranked by relevance. With prompt_truncation set to 'AUTO_PRESERVE_ORDER', some elements from chat_history and documents will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be preserved as they are inputted into the API. With prompt_truncation set to 'OFF', no elements will be dropped. If the sum of the inputs exceeds the model's context length limit, a TooManyTokens error will be returned. Compatible Deployments: Cohere Platform Only AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "connectors": {
          "type": "array",
          "text": "Accepts {'id': 'web-search'}, and/or the 'id' for a custom connector, if you've created one. When specified, the model's reply will be enriched with information found by querying each of the connectors (RAG). Compatible Deployments: Cohere Platform"
        },
        "search_queries_only": {
          "type": "boolean",
          "text": "Defaults to false. When true, the response will only contain a list of generated search queries, but no search will take place, and no reply from the model to the user's message will be generated. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments",
          "enum": [
            true,
            false
          ]
        },
        "documents": {
          "type": "array",
          "text": "A list of relevant documents that the model can cite to generate a more accurate reply. Each document is a string-string dictionary. Example: [ { 'title': 'Tall penguins', 'text': 'Emperor penguins are the tallest.' }, { 'title': 'Penguin habitats', 'text': 'Emperor penguins only live in Antarctica.' } ]"
        },
        "citation_quality": {
          "type": "string",
          "text": "Defaults to 'accurate'. Dictates the approach taken to generating citations as part of the RAG flow by allowing the user to specify whether they want 'accurate' results, 'fast' results or no results. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "temperature": {
          "type": "number",
          "text": "0 to 1. Defaults to 0.3. A non-negative float that tunes the degree of randomness in generation. Lower temperatures mean less random generations, and higher temperatures mean more random generations. Randomness can be further maximized by increasing the value of the p parameter. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "max_tokens": {
          "type": "number",
          "text": "The maximum number of tokens the model will generate as part of the response. Note: Setting a low value may result in incomplete generations. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "max_input_tokens": {
          "type": "number",
          "text": "The maximum number of input tokens to send to the model. If not specified, max_input_tokens is the model's context length limit minus a small buffer. Input will be truncated according to the prompt_truncation parameter. Compatible Deployments: Cohere Platform"
        },
        "k": {
          "type": "number",
          "text": "0 to 500. Defaults to 0. Ensures only the top k most likely tokens are considered for generation at each step. Defaults to 0, min value of 0, max value of 500. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "p": {
          "type": "number",
          "text": "0.01 to 0.99. Defaults to 0.75. Ensures that only the most likely tokens, with total probability mass of p, are considered for generation at each step. If both k and p are enabled, p acts after k. Defaults to 0.75, min value of 0.01, max value of 0.99. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "seed": {
          "type": "number",
          "text": "0 to 18446744073709552000. If specified, the backend will make a best effort to sample tokens deterministically, such that repeated requests with the same seed and parameters should return the same result. However, determinism cannot be totally guaranteed. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "stop_sequences": {
          "type": "array",
          "text": "A list of up to 5 strings that the model will use to stop generation. If the model generates a string that matches any of the strings in the list, it will stop generating tokens and return the generated text up to that point not including the stop sequence. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "frequency_penalty": {
          "type": "number",
          "text": "Defaults to 0.0, min value of 0.0, max value of 1.0. Used to reduce repetitiveness of generated tokens. The higher the value, the stronger a penalty is applied to previously present tokens, proportional to how many times they have already appeared in the prompt or prior generation. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "presence_penalty": {
          "type": "number",
          "text": "Defaults to 0.0, min value of 0.0, max value of 1.0. Used to reduce repetitiveness of generated tokens. Similar to frequency_penalty, except that this penalty is applied equally to all tokens that have already appeared, regardless of their exact frequencies. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "tools": {
          "type": "array",
          "text": "A list of available tools (functions) that the model may suggest invoking before producing a text response. When tools is passed (without tool_results), the text field in the response will be '' and the tool_calls field in the response will be populated with a list of tool calls that need to be made. If no calls need to be made, the tool_calls array will be empty. Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments"
        },
        "force_single_step": {
          "type": "boolean",
          "text": "Forces the chat to be single step. Defaults to false.",
          "enum": [
            true,
            false
          ]
        },
        "response_format": {
          "type": "object",
          "text": "Configuration for forcing the model output to adhere to the specified format. Supported on Command R, Command R+ and newer models. The model can be forced into outputting JSON objects (with up to 5 levels of nesting) by setting { 'type': 'json_object' }"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Chat",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/chat",
        "alias_endpoint": "/cohere/v1/chat",
        "api_ref": "https://docs.cohere.com/reference/chat"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__check-api-key___post": {
      "provider_intent": "cohere__v1__check-api-key___post",
      "provider_alias_intent": "/v1/check-api-key",
      "text": "Check API key",
      "category": "Check API key",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Check API key",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/check-api-key",
        "alias_endpoint": "/cohere/v1/check-api-key",
        "api_ref": "https://docs.cohere.com/reference/checkapikey"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__classify___post": {
      "provider_intent": "cohere__v1__classify___post",
      "provider_alias_intent": "/v1/classify",
      "text": "Classify",
      "category": "Classify",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "inputs": {
          "type": "array",
          "text": "A list of up to 96 texts to be classified. Each one must be a non-empty string. There is, however, no consistent, universal limit to the length a particular input can be. We perform classification on the first x tokens of each input, and x varies depending on which underlying model is powering classification. The maximum token length for each model is listed in the 'max tokens' column here. Note: by default the truncate parameter is set to END, so tokens exceeding the limit will be automatically dropped. This behavior can be disabled by setting truncate to NONE, which will result in validation errors for longer texts.",
          "required": true
        },
        "examples": {
          "type": "array",
          "text": "An array of examples to provide context to the model. Each example is a text string and its associated label/class. Each unique label requires at least 2 examples associated with it; the maximum number of examples is 2500, and each example has a maximum length of 512 tokens. The values should be structured as {text: '...', label: '...'}. Note: Fine-tuned Models trained on classification examples don't require the examples parameter to be passed in explicitly."
        },
        "model": {
          "type": "string",
          "text": "The identifier of the model. Currently available models are embed-multilingual-v2.0, embed-english-light-v2.0, and embed-english-v2.0 (default). Smaller 'light' models are faster, while larger models will perform better. Fine-tuned models can also be supplied with their full ID."
        },
        "preset": {
          "type": "string",
          "text": "The ID of a custom playground preset. You can create presets in the playground. If you use a preset, all other parameters become optional, and any included parameters will override the preset's parameters."
        },
        "truncate": {
          "type": "string",
          "text": "Defaults to END. One of NONE|START|END to specify how the API will handle inputs longer than the maximum token length. Passing START will discard the start of the input. END will discard the end of the input. In both cases, input is discarded until the remaining input is exactly the maximum input token length for the model. If NONE is selected, when the input exceeds the maximum input token length an error will be returned."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Classify",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/classify",
        "alias_endpoint": "/cohere/v1/classify",
        "api_ref": "https://docs.cohere.com/reference/classify"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors___get": {
      "provider_intent": "cohere__v1__connectors___get",
      "provider_alias_intent": "/v1/connectors",
      "text": "List Connectors",
      "category": "Connectors",
      "method": "GET",
      "type": "API",
      "params": {
        "limit": {
          "type": "number",
          "text": "Defaults to 30. Maximum number of connectors to return [0, 100]."
        },
        "offset": {
          "type": "number",
          "text": "Defaults to 0. Number of connectors to skip before returning results [0, inf]."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List Connectors",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors",
        "alias_endpoint": "/cohere/v1/connectors",
        "api_ref": "https://docs.cohere.com/reference/list-connectors"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors___post": {
      "provider_intent": "cohere__v1__connectors___post",
      "provider_alias_intent": "/v1/connectors",
      "text": "Create a Connector",
      "category": "Connectors",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A human-readable name for the connector.",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A description of the connector."
        },
        "url": {
          "type": "string",
          "text": "The URL of the connector that will be used to search for documents.",
          "required": true
        },
        "excludes": {
          "type": "array",
          "text": "A list of fields to exclude from the prompt (fields remain in the document)."
        },
        "oauth": {
          "type": "object",
          "text": "The OAuth 2.0 configuration for the connector. Cannot be specified if service_auth is specified."
        },
        "active": {
          "type": "boolean",
          "text": "Defaults to true, Whether the connector is active or not.",
          "enum": [
            true,
            false
          ]
        },
        "continue_on_failure": {
          "type": "boolean",
          "text": "Defaults to false, Whether a chat request should continue or not if the request to this connector fails.",
          "enum": [
            true,
            false
          ]
        },
        "service_auth": {
          "type": "object",
          "text": "The service to service authentication configuration for the connector. Cannot be specified if oauth is specified."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Create a Connector",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors",
        "alias_endpoint": "/cohere/v1/connectors",
        "api_ref": "https://docs.cohere.com/reference/create-connector"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors__connector_id___get": {
      "provider_intent": "cohere__v1__connectors__connector_id___get",
      "provider_alias_intent": "/v1/connectors/connector_id",
      "text": "Get a Connector",
      "category": "Connectors",
      "method": "GET",
      "type": "API",
      "params": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to retrieve.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to retrieve.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get a Connector",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors/{connector_id}",
        "alias_endpoint": "/cohere/v1/connectors/connector_id",
        "api_ref": "https://docs.cohere.com/reference/get-connector"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors__connector_id___patch": {
      "provider_intent": "cohere__v1__connectors__connector_id___patch",
      "provider_alias_intent": "/v1/connectors/connector_id",
      "text": "Update a Connector",
      "category": "Connectors",
      "method": "PATCH",
      "type": "API",
      "params": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to update.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A human-readable name for the connector."
        },
        "url": {
          "type": "string",
          "text": "The URL of the connector that will be used to search for documents."
        },
        "excludes": {
          "type": "array",
          "text": "A list of fields to exclude from the prompt (fields remain in the document)."
        },
        "oauth": {
          "type": "object",
          "text": "The OAuth 2.0 configuration for the connector. Cannot be specified if service_auth is specified."
        },
        "active": {
          "type": "boolean",
          "text": "Defaults to true",
          "enum": [
            true,
            false
          ]
        },
        "continue_on_failure": {
          "type": "boolean",
          "text": "Defaults to false",
          "enum": [
            true,
            false
          ]
        },
        "service_auth": {
          "type": "object",
          "text": "The service to service authentication configuration for the connector. Cannot be specified if oauth is specified."
        }
      },
      "path": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to update.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Update a Connector",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors/{connector_id}",
        "alias_endpoint": "/cohere/v1/connectors/connector_id",
        "api_ref": "https://docs.cohere.com/reference/update-connector"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors__connector_id___delete": {
      "provider_intent": "cohere__v1__connectors__connector_id___delete",
      "provider_alias_intent": "/v1/connectors/connector_id",
      "text": "Delete a Connector",
      "category": "Connectors",
      "method": "DELETE",
      "type": "API",
      "params": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to delete.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to delete.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Delete a Connector",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors/{connector_id}",
        "alias_endpoint": "/cohere/v1/connectors/connector_id",
        "api_ref": "https://docs.cohere.com/reference/delete-connector"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__connectors__connector_id__oauth__authorize___post": {
      "provider_intent": "cohere__v1__connectors__connector_id__oauth__authorize___post",
      "provider_alias_intent": "/v1/connectors/connector_id/oauth/authorize",
      "text": "Authorize with oAuth",
      "category": "Connectors",
      "method": "POST",
      "type": "API",
      "params": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to authorize.",
          "required": true
        },
        "after_token_redirect": {
          "type": "string",
          "text": "The URL to redirect to after the connector has been authorized."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "connector_id": {
          "type": "string",
          "text": "The ID of the connector to authorize.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Authorize with oAuth",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/connectors/{connector_id}/oauth/authorize",
        "alias_endpoint": "/cohere/v1/connectors/connector_id/oauth/authorize",
        "api_ref": "https://docs.cohere.com/reference/oauthauthorize-connector"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__datasets___post": {
      "provider_intent": "cohere__v1__datasets___post",
      "provider_alias_intent": "/v1/datasets",
      "text": "Create a Dataset",
      "category": "Datasets",
      "method": "POST",
      "type": "UPLOAD",
      "params": {
        "name": {
          "type": "string",
          "text": "The name of the uploaded dataset.",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "The dataset type, which is used to validate the data. Valid types are embed-input, reranker-finetune-input, single-label-classification-finetune-input, chat-finetune-input, and multi-label-classification-finetune-input.",
          "required": true
        },
        "keep_original_file": {
          "type": "boolean",
          "text": "Indicates if the original file should be stored.",
          "enum": [
            true,
            false
          ]
        },
        "skip_malformed_input": {
          "type": "boolean",
          "text": "Indicates whether rows with malformed input should be dropped (instead of failing the validation check). Dropped rows will be returned in the warnings field.",
          "enum": [
            true,
            false
          ]
        },
        "keep_fields": {
          "type": "array",
          "text": "List of names of fields that will be persisted in the Dataset. By default the Dataset will retain only the required fields indicated in the schema for the corresponding Dataset type. For example, datasets of type embed-input will drop all fields other than the required text field. If any of the fields in keep_fields are missing from the uploaded file, Dataset validation will fail."
        },
        "optional_fields": {
          "type": "array",
          "text": "List of names of fields that will be persisted in the Dataset. By default the Dataset will retain only the required fields indicated in the schema for the corresponding Dataset type. For example, Datasets of type embed-input will drop all fields other than the required text field. If any of the fields in optional_fields are missing from the uploaded file, Dataset validation will pass."
        },
        "text_separator": {
          "type": "string",
          "text": "Raw .txt uploads will be split into entries using the text_separator value."
        },
        "csv_delimiter": {
          "type": "string",
          "text": "The delimiter used for .csv uploads."
        }
      },
      "custom_headers": {},
      "body": {
        "data": {
          "type": "file",
          "text": "The file to upload.",
          "required": true
        },
        "eval_data": {
          "type": "file",
          "text": "An optional evaluation file to upload."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Create a Dataset",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/datasets",
        "alias_endpoint": "/cohere/v1/datasets",
        "api_ref": "https://docs.cohere.com/reference/create-dataset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__datasets___get": {
      "provider_intent": "cohere__v1__datasets___get",
      "provider_alias_intent": "/v1/datasets",
      "text": "List Datasets",
      "category": "Datasets",
      "method": "GET",
      "type": "API",
      "params": {
        "datasetType": {
          "type": "string",
          "text": "Filter by dataset type"
        },
        "before": {
          "type": "string",
          "text": "Filter before a date"
        },
        "after": {
          "type": "string",
          "text": "Filter after a date"
        },
        "limit": {
          "type": "number",
          "text": "Limit to number of results"
        },
        "offset": {
          "type": "number",
          "text": "Offset to start of results"
        },
        "validationStatus": {
          "type": "string",
          "text": "Filter by validation status"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List Datasets",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/datasets",
        "alias_endpoint": "/cohere/v1/datasets",
        "api_ref": "https://docs.cohere.com/reference/list-datasets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__datasets__usage___get": {
      "provider_intent": "cohere__v1__datasets__usage___get",
      "provider_alias_intent": "/v1/datasets/usage",
      "text": "Get Dataset Usage",
      "category": "Datasets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get Dataset Usage",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/datasets/usage",
        "alias_endpoint": "/cohere/v1/datasets/usage",
        "api_ref": "https://docs.cohere.com/reference/get-dataset-usage"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__datasets__dataset_id___get": {
      "provider_intent": "cohere__v1__datasets__dataset_id___get",
      "provider_alias_intent": "/v1/datasets/dataset_id",
      "text": "Get a Dataset",
      "category": "Datasets",
      "method": "GET",
      "type": "API",
      "params": {
        "dataset_id": {
          "type": "string",
          "text": "Dataset Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "dataset_id": {
          "type": "string",
          "text": "Dataset Id",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get a Dataset",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/datasets/{dataset_id}",
        "alias_endpoint": "/cohere/v1/datasets/dataset_id",
        "api_ref": "https://docs.cohere.com/reference/get-dataset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__datasets__dataset_id___delete": {
      "provider_intent": "cohere__v1__datasets__dataset_id___delete",
      "provider_alias_intent": "/v1/datasets/dataset_id",
      "text": "Delete a Dataset",
      "category": "Datasets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "dataset_id": {
          "type": "string",
          "text": "Dataset Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "dataset_id": {
          "type": "string",
          "text": "Dataset Id",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Delete a Dataset",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/datasets/{dataset_id}",
        "alias_endpoint": "/cohere/v1/datasets/dataset_id",
        "api_ref": "https://docs.cohere.com/reference/delete-dataset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__detokenize___post": {
      "provider_intent": "cohere__v1__detokenize___post",
      "provider_alias_intent": "/v1/detokenize",
      "text": "Detokenize",
      "category": "De-tokenize",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tokens": {
          "type": "array",
          "text": "The list of tokens to be detokenized.",
          "required": true
        },
        "model": {
          "type": "string",
          "text": "To provide the model name. This will ensure that the tokenization uses the tokenizer used by that model.",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Detokenize",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/detokenize",
        "alias_endpoint": "/cohere/v1/detokenize",
        "api_ref": "https://docs.cohere.com/reference/detokenize"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__embed___post": {
      "provider_intent": "cohere__v1__embed___post",
      "provider_alias_intent": "/v1/embed",
      "text": "Embed",
      "category": "Embed",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "texts": {
          "type": "array",
          "text": "An array of strings for the model to embed. Maximum number of texts per call is 96. We recommend reducing the length of each text to be under 512 tokens for optimal quality.",
          "required": true
        },
        "model": {
          "type": "string",
          "text": "Defaults to embed-english-v2.0. The identifier of the model. Smaller 'light' models are faster, while larger models will perform better. Custom models can also be supplied with their full ID. Available models and corresponding embedding dimensions: embed-english-v3.0 1024, embed-multilingual-v3.0 1024, embed-english-light-v3.0 384, embed-multilingual-light-v3.0 384, embed-english-v2.0 4096, embed-english-light-v2.0 1024, embed-multilingual-v2.0 768"
        },
        "input_type": {
          "type": "string",
          "text": "Specifies the type of input passed to the model. Required for embedding models v3 and higher. 'search_document': Used for embeddings stored in a vector database for search use-cases. 'search_query': Used for embeddings of search queries run against a vector DB to find relevant documents. 'classification': Used for embeddings passed through a text classifier. 'clustering': Used for the embeddings run through a clustering algorithm."
        },
        "embedding_types": {
          "type": "array",
          "text": "Specifies the types of embeddings you want to get back. Not required and default is None, which returns the Embed Floats response type. Can be one or more of the following types: 'float': Use this when you want to get back the default float embeddings. Valid for all models. 'int8': Use this when you want to get back signed int8 embeddings. Valid for only v3 models. 'uint8': Use this when you want to get back unsigned int8 embeddings. Valid for only v3 models. 'binary': Use this when you want to get back signed binary embeddings. Valid for only v3 models. 'ubinary': Use this when you want to get back unsigned binary embeddings. Valid for only v3 models."
        },
        "truncate": {
          "type": "string",
          "text": "Defaults to END. One of NONE|START|END to specify how the API will handle inputs longer than the maximum token length. Passing START will discard the start of the input. END will discard the end of the input. In both cases, input is discarded until the remaining input is exactly the maximum input token length for the model. If NONE is selected, when the input exceeds the maximum input token length an error will be returned."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Embed",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/embed",
        "alias_endpoint": "/cohere/v1/embed",
        "api_ref": "https://docs.cohere.com/reference/embed"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__embed-jobs___post": {
      "provider_intent": "cohere__v1__embed-jobs___post",
      "provider_alias_intent": "/v1/embed-jobs",
      "text": "Create an Embed Job",
      "category": "Embed Jobs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "model": {
          "type": "string",
          "text": "ID of the embedding model. Available models and corresponding embedding dimensions: embed-english-v3.0 : 1024, embed-multilingual-v3.0 : 1024, embed-english-light-v3.0 : 384, embed-multilingual-light-v3.0 : 384",
          "required": true
        },
        "dataset_id": {
          "type": "string",
          "text": "ID of a Dataset. The Dataset must be of type embed-input and must have a validation status Validated",
          "required": true
        },
        "input_type": {
          "type": "string",
          "text": "Specifies the type of input passed to the model. Required for embedding models v3 and higher. 'search_document': Used for embeddings stored in a vector database for search use-cases. 'search_query': Used for embeddings of search queries run against a vector DB to find relevant documents. 'classification': Used for embeddings passed through a text classifier. 'clustering': Used for the embeddings run through a clustering algorithm.",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The name of the embed job."
        },
        "embedding_types": {
          "type": "array",
          "text": "Specifies the types of embeddings you want to get back. Not required and default is None, which returns the Embed Floats response type. Can be one or more of the following types: 'float': Use this when you want to get back the default float embeddings. Valid for all models. 'int8': Use this when you want to get back signed int8 embeddings. Valid for only v3 models. 'uint8': Use this when you want to get back unsigned int8 embeddings. Valid for only v3 models. 'binary': Use this when you want to get back signed binary embeddings. Valid for only v3 models. 'ubinary': Use this when you want to get back unsigned binary embeddings. Valid for only v3 models."
        },
        "truncate": {
          "type": "string",
          "text": "Defaults to END. One of START|END to specify how the API will handle inputs longer than the maximum token length. Passing START will discard the start of the input. END will discard the end of the input. In both cases, input is discarded until the remaining input is exactly the maximum input token length for the model."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Create an Embed Job",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/embed-jobs",
        "alias_endpoint": "/cohere/v1/embed-jobs",
        "api_ref": "https://docs.cohere.com/reference/create-embed-job"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__embed-jobs___get": {
      "provider_intent": "cohere__v1__embed-jobs___get",
      "provider_alias_intent": "/v1/embed-jobs",
      "text": "List Embed Jobs",
      "category": "Embed Jobs",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List Embed Jobs",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/embed-jobs",
        "alias_endpoint": "/cohere/v1/embed-jobs",
        "api_ref": "https://docs.cohere.com/reference/list-embed-jobs"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__embed-jobs__job_id___get": {
      "provider_intent": "cohere__v1__embed-jobs__job_id___get",
      "provider_alias_intent": "/v1/embed-jobs/job_id",
      "text": "Fetch an Embed Job",
      "category": "Embed Jobs",
      "method": "GET",
      "type": "API",
      "params": {
        "job_id": {
          "type": "string",
          "text": "The ID of the embed job to retrieve.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "job_id": {
          "type": "string",
          "text": "The ID of the embed job to retrieve.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Fetch an Embed Job",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/embed-jobs/{job_id}",
        "alias_endpoint": "/cohere/v1/embed-jobs/job_id",
        "api_ref": "https://docs.cohere.com/reference/get-embed-job"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__embed-jobs__job_id__cancel___post": {
      "provider_intent": "cohere__v1__embed-jobs__job_id__cancel___post",
      "provider_alias_intent": "/v1/embed-jobs/job_id/cancel",
      "text": "Cancel an Embed Job",
      "category": "Embed Jobs",
      "method": "POST",
      "type": "API",
      "params": {
        "job_id": {
          "type": "string",
          "text": "The ID of the embed job to cancel.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "job_id": {
          "type": "string",
          "text": "The ID of the embed job to cancel.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Cancel an Embed Job",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/embed-jobs/{job_id}/cancel",
        "alias_endpoint": "/cohere/v1/embed-jobs/job_id/cancel",
        "api_ref": "https://docs.cohere.com/reference/cancel-embed-job"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models___get": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models___get",
      "provider_alias_intent": "/v1/finetuning/finetuned-models",
      "text": "Lists fine-tuned models",
      "category": "Fine-tuning",
      "method": "GET",
      "type": "API",
      "params": {
        "page_size": {
          "type": "number",
          "text": "Maximum number of results to be returned by the server. If 0, defaults to 50."
        },
        "page_token": {
          "type": "string",
          "text": "Request a specific page of the list results."
        },
        "order_by": {
          "type": "string",
          "text": "Comma separated list of fields. For example: 'created_at,name'. The default sorting order is ascending. To specify descending order for a field, append ' desc' to the field name. For example: 'created_at desc,name'. Supported sorting fields: created_at (default)."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Lists fine-tuned models",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models",
        "api_ref": "https://docs.cohere.com/reference/listfinetunedmodels"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models___post": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models___post",
      "provider_alias_intent": "/v1/finetuning/finetuned-models",
      "text": "Trains and deploys a fine-tuned model",
      "category": "Fine-tuning",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "FinetunedModel name (e.g. foobar)."
        },
        "settings": {
          "type": "object",
          "text": "FinetunedModel settings such as dataset, hyperparameters."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Trains and deploys a fine-tuned model",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models",
        "api_ref": "https://docs.cohere.com/reference/createfinetunedmodel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models__finetuned_model_id___patch": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models__finetuned_model_id___patch",
      "provider_alias_intent": "/v1/finetuning/finetuned-models/finetuned_model_id",
      "text": "Updates a fine-tuned model",
      "category": "Fine-tuning",
      "method": "PATCH",
      "type": "API",
      "params": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "FinetunedModel name (e.g. foobar).",
          "required": true
        },
        "settings": {
          "type": "object",
          "text": "FinetunedModel settings such as dataset, hyperparameters.",
          "required": true
        }
      },
      "path": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Updates a fine-tuned model",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models/{finetuned_model_id}",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models/finetuned_model_id",
        "api_ref": "https://docs.cohere.com/reference/updatefinetunedmodel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models__finetuned_model_id___get": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models__finetuned_model_id___get",
      "provider_alias_intent": "/v1/finetuning/finetuned-models/finetuned_model_id",
      "text": "Returns a fine-tuned model by ID",
      "category": "Fine-tuning",
      "method": "GET",
      "type": "API",
      "params": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Returns a fine-tuned model by ID",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models/{finetuned_model_id}",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models/finetuned_model_id",
        "api_ref": "https://docs.cohere.com/reference/getfinetunedmodel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models__finetuned_model_id___delete": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models__finetuned_model_id___delete",
      "provider_alias_intent": "/v1/finetuning/finetuned-models/finetuned_model_id",
      "text": "Deletes a fine-tuned model",
      "category": "Fine-tuning",
      "method": "DELETE",
      "type": "API",
      "params": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "finetuned_model_id": {
          "type": "string",
          "text": "The fine-tuned model ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Deletes a fine-tuned model",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models/{finetuned_model_id}",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models/finetuned_model_id",
        "api_ref": "https://docs.cohere.com/reference/deletefinetunedmodel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "coherev1__finetuning__finetuned-models__parent_finetuned_model_id__events___get": {
      "provider_intent": "coherev1__finetuning__finetuned-models__parent_finetuned_model_id__events___get",
      "provider_alias_intent": "v1/finetuning/finetuned-models/parent_finetuned_model_id/events",
      "text": "Retrieves the chronology of statuses the fine-tuned model has been through",
      "category": "Fine-tuning",
      "method": "GET",
      "type": "API",
      "params": {
        "parent_finetuned_model_id": {
          "type": "string",
          "text": "The Parent fine-tuned model ID.",
          "required": true
        },
        "page_size": {
          "type": "number",
          "text": "Maximum number of results to be returned by the server. If 0, defaults to 50."
        },
        "page_token": {
          "type": "string",
          "text": "Request a specific page of the list results."
        },
        "order_by": {
          "type": "string",
          "text": "Comma separated list of fields. For example: 'created_at,name'. The default sorting order is ascending. To specify descending order for a field, append 'desc' to the field name. For example: 'created_at desc,name'. Supported sorting fields: created_at (default)"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "parent_finetuned_model_id": {
          "type": "string",
          "text": "The Parent fine-tuned model ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Retrieves the chronology of statuses the fine-tuned model has been through",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.comv1/finetuning/finetuned-models/{parent_finetuned_model_id}/events",
        "alias_endpoint": "/coherev1/finetuning/finetuned-models/parent_finetuned_model_id/events",
        "api_ref": "https://docs.cohere.com/reference/listevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__finetuning__finetuned-models__parent_finetuned_model_id__training-step-metrics___get": {
      "provider_intent": "cohere__v1__finetuning__finetuned-models__parent_finetuned_model_id__training-step-metrics___get",
      "provider_alias_intent": "/v1/finetuning/finetuned-models/parent_finetuned_model_id/training-step-metrics",
      "text": "Retrieves metrics measured during the training of a fine-tuned model",
      "category": "Fine-tuning",
      "method": "GET",
      "type": "API",
      "params": {
        "parent_finetuned_model_id": {
          "type": "string",
          "text": "The Parent fine-tuned model ID.",
          "required": true
        },
        "page_size": {
          "type": "number",
          "text": "Maximum number of results to be returned by the server. If 0, defaults to 50."
        },
        "page_token": {
          "type": "string",
          "text": "Request a specific page of the list results."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "parent_finetuned_model_id": {
          "type": "string",
          "text": "The Parent fine-tuned model ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Retrieves metrics measured during the training of a fine-tuned model",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/finetuning/finetuned-models/{parent_finetuned_model_id}/training-step-metrics",
        "alias_endpoint": "/cohere/v1/finetuning/finetuned-models/parent_finetuned_model_id/training-step-metrics",
        "api_ref": "https://docs.cohere.com/reference/listtrainingstepmetrics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__models__model___get": {
      "provider_intent": "cohere__v1__models__model___get",
      "provider_alias_intent": "/v1/models/model",
      "text": "Get a Model",
      "category": "Models",
      "method": "GET",
      "type": "API",
      "params": {
        "model": {
          "type": "string",
          "text": "Model Name",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "model": {
          "type": "string",
          "text": "Model Name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get a Model",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/models/{model}",
        "alias_endpoint": "/cohere/v1/models/model",
        "api_ref": "https://docs.cohere.com/reference/get-model"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__models___get": {
      "provider_intent": "cohere__v1__models___get",
      "provider_alias_intent": "/v1/models",
      "text": "List Models",
      "category": "Models",
      "method": "GET",
      "type": "API",
      "params": {
        "page_size": {
          "type": "number",
          "text": "Maximum number of models to include in a page. Defaults to 20, min value of 1, max value of 1000."
        },
        "page_token": {
          "type": "string",
          "text": "Page token provided in the next_page_token field of a previous response."
        },
        "endpoint": {
          "type": "string",
          "text": "When provided, filters the list of models to only those that are compatible with the specified endpoint."
        },
        "default_only": {
          "type": "boolean",
          "text": "When provided, filters the list of models to only the default model to the endpoint. This parameter is only valid when endpoint is provided.",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List Models",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/models",
        "alias_endpoint": "/cohere/v1/models",
        "api_ref": "https://docs.cohere.com/reference/list-models"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__rerank___post": {
      "provider_intent": "cohere__v1__rerank___post",
      "provider_alias_intent": "/v1/rerank",
      "text": "Rerank",
      "category": "Re-rank",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "model": {
          "type": "string",
          "text": "The identifier of the model to use, one of : rerank-english-v3.0, rerank-multilingual-v3.0, rerank-english-v2.0, rerank-multilingual-v2.0"
        },
        "query": {
          "type": "string",
          "text": "The search query",
          "required": true
        },
        "documents": {
          "type": "array",
          "text": "A list of document objects or strings to rerank. If a document is provided the text fields is required and all other fields will be preserved in the response. The total max chunks (length of documents * max_chunks_per_doc) must be less than 10000. We recommend a maximum of 1,000 documents for optimal endpoint performance.",
          "required": true
        },
        "top_n": {
          "type": "number",
          "text": "The number of most relevant documents or indices to return, defaults to the length of the documents. Number >= 1"
        },
        "rank_fields": {
          "type": "array",
          "text": "If a JSON object is provided, you can specify which keys you would like to have considered for reranking. The model will rerank based on order of the fields passed in (i.e. rank_fields=['title','author','text'] will rerank using the values in title, author, text sequentially. If the length of title, author, and text exceeds the context length of the model, the chunking will not re-consider earlier fields). If not provided, the model will use the default text field for ranking."
        },
        "return_documents": {
          "type": "boolean",
          "text": "Defaults to false. If false, returns results without the doc text - the api will return a list of {index, relevance score} where index is inferred from the list passed into the request. If true, returns results with the doc text passed in - the api will return an ordered list of {index, text, relevance score} where index + text refers to the list passed into the request.",
          "enum": [
            true,
            false
          ]
        },
        "max_chunks_per_doc": {
          "type": "number",
          "text": "Defaults to 10. The maximum number of chunks to produce internally from a document."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Rerank",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/rerank",
        "alias_endpoint": "/cohere/v1/rerank",
        "api_ref": "https://docs.cohere.com/reference/rerank"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "cohere__v1__tokenize___post": {
      "provider_intent": "cohere__v1__tokenize___post",
      "provider_alias_intent": "/v1/tokenize",
      "text": "Tokenize",
      "category": "Tokenize",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "text": {
          "type": "string",
          "text": "The string to be tokenized. The minimum text length is 1 character, and the maximum text length is 65536 characters.",
          "required": true
        },
        "model": {
          "type": "string",
          "text": "To provide the model name. This will ensure that the tokenization uses the tokenizer used by that model.",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Tokenize",
        "rate_limit": [],
        "api_endpoint": "https://api.cohere.com/v1/tokenize",
        "alias_endpoint": "/cohere/v1/tokenize",
        "api_ref": "https://docs.cohere.com/reference/tokenize"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "api_key"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}