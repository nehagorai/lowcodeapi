{
  "routes": {
    "zohodesk__api__v1__groupaccountduplicatevalues___get": {
      "provider_intent": "zohodesk__api__v1__groupaccountduplicatevalues___get",
      "provider_alias_intent": "/api/v1/groupaccountduplicatevalues",
      "text": "List duplicate accounts",
      "category": "Account Deduplication",
      "method": "GET",
      "type": "API",
      "params": {
        "fieldName": {
          "type": "string",
          "text": "Name of the field whose values must be matched for deduplication. Values allowed are: email, phone, and accountName"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the accounts must be fetched. Default: 0"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to fetch. Range: 1-100"
        },
        "swFieldValue": {
          "type": "string",
          "text": "Key that specifies the letter with which the field values must start. Max chars: 100"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sort the accounts by a specific attribute: count or fieldValue. Default sorting order is ascending. A - prefix denotes descending order of sorting"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the duplicate entries of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groupAccountDuplicateValues",
        "alias_endpoint": "/zohodesk/api/v1/groupaccountduplicatevalues",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountDeduplication_Listduplicateaccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groupaccounts___get": {
      "provider_intent": "zohodesk__api__v1__groupaccounts___get",
      "provider_alias_intent": "/api/v1/groupaccounts",
      "text": "List details of duplicate accounts",
      "category": "Account Deduplication",
      "method": "GET",
      "type": "API",
      "params": {
        "fieldName": {
          "type": "string",
          "text": "Name of the field whose values must be matched for deduplication. Values allowed are: email, phone, and accountName",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the accounts must be fetched. Default: 0"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to fetch. Range: 1-100"
        },
        "fieldValue": {
          "type": "string",
          "text": "Actual values in each field related to the account",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sort the accounts by a specific attribute: count or fieldValue. Default sorting order is ascending. A - prefix denotes descending order of sorting"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all the details of duplicate accounts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groupAccounts",
        "alias_endpoint": "/zohodesk/api/v1/groupaccounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountDeduplication_Listdetailsofduplicateaccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accountsdeduplication__defaultfieldname___get": {
      "provider_intent": "zohodesk__api__v1__accountsdeduplication__defaultfieldname___get",
      "provider_alias_intent": "/api/v1/accountsdeduplication/defaultfieldname",
      "text": "Get Default Field Name",
      "category": "Account Deduplication",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the name of the field set as the default field for account deduplication",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accountsDeduplication/defaultFieldName",
        "alias_endpoint": "/zohodesk/api/v1/accountsdeduplication/defaultfieldname",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountDeduplication_GetDefaultFieldName"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accountsdeduplication__defaultfieldname___post": {
      "provider_intent": "zohodesk__api__v1__accountsdeduplication__defaultfieldname___post",
      "provider_alias_intent": "/api/v1/accountsdeduplication/defaultfieldname",
      "text": "Set default field for account deduplication",
      "category": "Account Deduplication",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "fieldName": {
          "type": "string",
          "text": "The name of the field. Max chars: 100",
          "required": true
        },
        "markDefault": {
          "type": "boolean",
          "text": "To mark the given field as default or remove the field from the default",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sets the field you specify as the default field for deduplicating accounts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accountsDeduplication/defaultFieldName",
        "alias_endpoint": "/zohodesk/api/v1/accountsdeduplication/defaultfieldname",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountDeduplication#AccountDeduplication_Setdefaultfieldforaccountdeduplication"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__addfollowers___post": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__addfollowers___post",
      "provider_alias_intent": "api/v1/accounts/account_id/addfollowers",
      "text": "Add account followers",
      "category": "Account Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "the list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds one or more users to the followers list of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/addFollowers",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/addfollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountFollowers_Addaccountfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__removefollowers___post": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__removefollowers___post",
      "provider_alias_intent": "api/v1/accounts/account_id/removefollowers",
      "text": "Remove account followers",
      "category": "Account Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "the list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes one or more users from the followers list of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/removeFollowers",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/removefollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountFollowers_Removeaccountfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__followers___get": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__followers___get",
      "provider_alias_intent": "api/v1/accounts/account_id/followers",
      "text": "Get account followers",
      "category": "Account Followers",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the followers must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of followers to list. Range: 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the list of users following an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/followers",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountFollowers_Getaccountfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__timeentry___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__timeentry___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/timeentry",
      "text": "List Account Time Entries",
      "category": "Account TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module from which the time entries must be fetched. Values allowed are tickets and tasks. Max chars: 100"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch. Range: 1-100"
        },
        "orderBy": {
          "type": "string",
          "text": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner. Max chars: 100"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters time entries created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters time entries whose details were modified in a particular period of time"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists time entries recorded for a ticket or task related to an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountTimeEntry_ListAccountTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__timeentrysummation___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__timeentrysummation___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/timeentrysummation",
      "text": "Get summation of Account Time Entries",
      "category": "Account TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module Preference. It can be either tickets or tasks. Max chars: 100"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches summation of time entries for an account from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/timeEntrySummation",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/timeentrysummation",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountTimeEntry_GetsummationofAccountTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id___get",
      "provider_alias_intent": "/api/v1/accounts/account_id",
      "text": "Get Account",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Allowed values are : owner"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches an account from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_GetAccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts___get": {
      "provider_intent": "zohodesk__api__v1__accounts___get",
      "provider_alias_intent": "/api/v1/accounts",
      "text": "List accounts",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the accounts must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to fetch"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: accountName or createdTime"
        },
        "fields": {
          "type": "string",
          "text": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of accounts, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts",
        "alias_endpoint": "/zohodesk/api/v1/accounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Listaccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts___post": {
      "provider_intent": "zohodesk__api__v1__accounts___post",
      "provider_alias_intent": "/api/v1/accounts",
      "text": "Create Account",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "deprecated": {
          "type": "array",
          "text": "User-defined fields associated with the account"
        },
        "cf": {
          "type": "object",
          "text": "User-defined fields associated with the account"
        },
        "accountName": {
          "type": "string",
          "text": "Name of the account",
          "required": true
        },
        "email": {
          "type": "string",
          "text": "Email ID of the account"
        },
        "website": {
          "type": "string",
          "text": "Website of the account"
        },
        "fax": {
          "type": "string",
          "text": "Fax number of the account"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of account owner"
        },
        "associatedSLAIds": {
          "type": "array",
          "text": "IDs of the SLAs associated with the account"
        },
        "industry": {
          "type": "string",
          "text": "Industry in which the account operates"
        },
        "city": {
          "type": "string",
          "text": "City in which the account is based"
        },
        "country": {
          "type": "string",
          "text": "Country in which the account is based"
        },
        "state": {
          "type": "string",
          "text": "State in which the account is based"
        },
        "street": {
          "type": "string",
          "text": "Address of the account"
        },
        "code": {
          "type": "string",
          "text": "Zip code"
        },
        "description": {
          "type": "string",
          "text": "A short description of the account"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the account"
        },
        "annualrevenue": {
          "type": "number",
          "text": "Annual revenue of the account"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates an account in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts",
        "alias_endpoint": "/zohodesk/api/v1/accounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_CreateAccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id___patch": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id___patch",
      "provider_alias_intent": "/api/v1/accounts/account_id",
      "text": "Update Account",
      "category": "Accounts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "object",
          "text": "User-defined fields associated with the account"
        },
        "accountName": {
          "type": "string",
          "text": "Name of the account"
        },
        "email": {
          "type": "string",
          "text": "Email ID of the account"
        },
        "website": {
          "type": "string",
          "text": "Website of the account"
        },
        "fax": {
          "type": "string",
          "text": "Fax number of the account"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of account owner"
        },
        "associatedSLAIds": {
          "type": "array",
          "text": "IDs of the SLAs associated with the account"
        },
        "industry": {
          "type": "string",
          "text": "Industry in which the account operates"
        },
        "city": {
          "type": "string",
          "text": "City in which the account is based"
        },
        "country": {
          "type": "string",
          "text": "Country in which the account is based"
        },
        "state": {
          "type": "string",
          "text": "State in which the account is based"
        },
        "street": {
          "type": "string",
          "text": "Address of the account"
        },
        "code": {
          "type": "string",
          "text": "Zip code"
        },
        "description": {
          "type": "string",
          "text": "A short description of the account"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the account"
        },
        "annualrevenue": {
          "type": "number",
          "text": "Annual revenue of the account"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_UpdateAccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__accounts__movetotrash___post",
      "provider_alias_intent": "/api/v1/accounts/movetotrash",
      "text": "Delete Accounts",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "accountIds": {
          "type": "array",
          "text": "IDs of the accounts to move to the Recycle Bin",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves the accounts specified to the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/accounts/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_DeleteAccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__contracts___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__contracts___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/contracts",
      "text": "Get contract",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index,DEFAULT 1"
        },
        "limit": {
          "type": "number",
          "text": "Number of contracts to fetch, Ranges from 1-50, DEFAULT 50"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the contracts must be fetched"
        },
        "contractStatus": {
          "type": "string",
          "text": "Contract Status,Indicates the Current Status of the Contract, Values are ACTIVE, EXPIRED, FUTURE"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Getting contracts of an Account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/contracts",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/contracts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Getcontract"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__count___get": {
      "provider_intent": "zohodeskapi__v1__contracts__count___get",
      "provider_alias_intent": "api/v1/contracts/count",
      "text": "List all contracts count",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "Custom view Id",
          "required": true
        },
        "departmentId": {
          "type": "string",
          "text": "Mandatory param to fetch the count of the contracts for a given ID of a department",
          "required": true
        },
        "ownerId": {
          "type": "number",
          "text": "Displays the number of contracts of only a particular owner"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the number of contracts made with the account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/count",
        "alias_endpoint": "/zohodeskapi/v1/contracts/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Listallcontractscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__count___get": {
      "provider_intent": "zohodeskapi__v1__accounts__count___get",
      "provider_alias_intent": "api/v1/accounts/count",
      "text": "List all accounts count",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "Custom view Id",
          "required": true
        },
        "startsWith": {
          "type": "string",
          "text": "Displays the number of accounts whose first name or last name begins with the letter you specify"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get accounts count",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/count",
        "alias_endpoint": "/zohodeskapi/v1/accounts/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Listallaccountscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__accounts_id__contacts___get": {
      "provider_intent": "zohodeskapi__v1__accounts__accounts_id__contacts___get",
      "provider_alias_intent": "api/v1/accounts/accounts_id/contacts",
      "text": "List Associated contacts",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index"
        },
        "limit": {
          "type": "number",
          "text": "No. of contacts to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Parameter that sorts contacts by one of these attributes"
        },
        "isSpam": {
          "type": "boolean",
          "text": "Filters Spam contacts",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the contacts associated with an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{accounts_id}/contacts",
        "alias_endpoint": "/zohodeskapi/v1/accounts/accounts_id/contacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_ListAssociatedcontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__tickets___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__tickets___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/tickets",
      "text": "List tickets by account",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tickets must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: createdTime or modifiedTime"
        },
        "dueDate": {
          "type": "string",
          "text": "Filter by ticket duedate. Values allowed are overdue, tomorrow, currentWeek, currentMonth and today"
        },
        "isSpam": {
          "type": "boolean",
          "text": "Filters Spam tickets",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the tickets"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists tickets received from a specific account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Listticketsbyaccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__products___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__products___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/products",
      "text": "List products by account",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index"
        },
        "limit": {
          "type": "number",
          "text": "Number of products to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "Department from which the products need to be queried"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists products associated for a specific account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/products",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/products",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Listproductsbyaccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__merge___post": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__merge___post",
      "provider_alias_intent": "/api/v1/accounts/account_id/merge",
      "text": "Merge Accounts",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the accounts to merge.",
          "required": true
        },
        "source": {
          "type": "object",
          "text": "JSON object containing details of the account."
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API merges two or more accounts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/merge",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/merge",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_MergeAccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__associateproducts___post": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__associateproducts___post",
      "provider_alias_intent": "api/v1/accounts/account_id/associateproducts",
      "text": "Associate products with an account",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the resources to associate",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department containing the products"
        },
        "associate": {
          "type": "boolean",
          "text": "true for associating the resource and false for dissociating the resource",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates products with an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/associateProducts",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/associateproducts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Associateproductswithanaccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__accounts__updatemany___post",
      "provider_alias_intent": "/api/v1/accounts/updatemany",
      "text": "Update many accounts",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple accounts at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/accounts/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Updatemanyaccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE\r\n",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__history___get": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__history___get",
      "provider_alias_intent": "api/v1/accounts/account_id/history",
      "text": "Get account history",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the history details must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "Key that filters ticket activities performed by a particular agent"
        },
        "contactId": {
          "type": "number",
          "text": "Key that filters ticket activities related to a particular contact"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the history details must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of history details to fetch range : 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the ticket history of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/history",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/history",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Getaccounthistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ , Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__value__statistics___get": {
      "provider_intent": "zohodesk__api__v1__accounts__value__statistics___get",
      "provider_alias_intent": "/api/v1/accounts/value/statistics",
      "text": "Get account statistics",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the statistics must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the overall statistics of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/([0-9]+)/statistics",
        "alias_endpoint": "/zohodesk/api/v1/accounts/value/statistics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_Getaccountstatistics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__sla___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__sla___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/sla",
      "text": "List account SLAs",
      "category": "Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the SLAs must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of SLAs to list"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the SLAs must be fetched"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the SLAs"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of SLAs associated with an account, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/sla",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/sla",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_ListaccountSLAs"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__sla__sla_id___post": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__sla__sla_id___post",
      "provider_alias_intent": "/api/v1/accounts/account_id/sla/sla_id",
      "text": "Associate or dissociate SLA from account",
      "category": "Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "sla_id": {
          "type": "string",
          "text": "Sla ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "associate": {
          "type": "boolean",
          "text": "Key that specifies if the SLA must be associated with the account or not",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "sla_id": {
          "type": "string",
          "text": "Sla ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates or dissociates an SLA from an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/sla/{sla_id}",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/sla/sla_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Accounts_AssociateordissociateSLAfromaccount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accountcontactmapping__mapping_id___patch": {
      "provider_intent": "zohodesk__api__v1__accountcontactmapping__mapping_id___patch",
      "provider_alias_intent": "/api/v1/accountcontactmapping/mapping_id",
      "text": "Update association info",
      "category": "Accounts / Account Contact Mapping",
      "method": "PATCH",
      "type": "API",
      "params": {
        "mapping_id": {
          "type": "string",
          "text": "Mapping ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "isAccountTicketsViewable": {
          "type": "boolean",
          "text": "Key that specifies whether the contact can access all tickets related to the account",
          "enum": [
            true,
            false
          ]
        },
        "mappingType": {
          "type": "string",
          "text": "Type of mapping connection between the contact and the account"
        }
      },
      "path": {
        "mapping_id": {
          "type": "string",
          "text": "Mapping ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an account-contact mapping",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accountContactMapping/{mapping_id}",
        "alias_endpoint": "/zohodesk/api/v1/accountcontactmapping/mapping_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountContactMapping"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__attachments___get": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__attachments___get",
      "provider_alias_intent": "/api/v1/accounts/account_id/attachments",
      "text": "List Account attachments",
      "category": "Accounts Attachments",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the attachments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of attachments to fetch. Range: 1-100"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the attachments. Value allowed is creator, which returns the details of users who added the attachments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the files attached to an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsAttachments_ListAccountattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__attachments___post": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__attachments___post",
      "provider_alias_intent": "/api/v1/accounts/account_id/attachments",
      "text": "Create Account attachment",
      "category": "Accounts Attachments",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File to attach to the account"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches a file to an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsAttachments_CreateAccountattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__account_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__accounts__account_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/accounts/account_id/attachments/attachment_id",
      "text": "Delete Account attachment",
      "category": "Accounts Attachments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an attachment from a account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/{account_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/accounts/account_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsAttachments_DeleteAccountattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__comments___post",
      "provider_alias_intent": "api/v1/accounts/account_id/comments",
      "text": "Create an account comment",
      "category": "Accounts Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. max chars: 32000"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsComments_Createanaccountcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/accounts/account_id/comments/comment_id",
      "text": "Update an account comment",
      "category": "Accounts Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing account comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsComments#AccountsComments_Updateanaccountcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/accounts/account_id/comments/comment_id",
      "text": "Delete an account comment",
      "category": "Accounts Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing account comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsComments_Deleteanaccountcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/accounts/account_id/comments/comment_id",
      "text": "Get an account comment",
      "category": "Accounts Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches an account comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsComments_Getanaccountcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__accounts__account_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__accounts__account_id__comments___get",
      "provider_alias_intent": "api/v1/accounts/account_id/comments",
      "text": "List all account comments",
      "category": "Accounts Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No. of comments to fetch",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort comments by the commentedTime attribute"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on an account, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/accounts/{account_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/accounts/account_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AccountsComments_Listallaccountcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myactivetimers___get": {
      "provider_intent": "zohodesk__api__v1__myactivetimers___get",
      "provider_alias_intent": "/api/v1/myactivetimers",
      "text": "Get Active Timer for an Agent",
      "category": "Active Timer",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department to which the ticket belongs",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Limit"
        },
        "from": {
          "type": "number",
          "text": "From"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches currently running timer details for an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myActiveTimers",
        "alias_endpoint": "/zohodesk/api/v1/myactivetimers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ActiveTimer_GetActiveTimerforanAgent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__activetimer___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__activetimer___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/activetimer",
      "text": "List ticket timers",
      "category": "Active Timer",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the timers must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of timers to fetch. Range: 1-100"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the timers. Value supported is owner. Max chars: 100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of timers currently active in a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/activeTimer",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/activetimer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ActiveTimer_Listtickettimers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__activetimer___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__activetimer___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/activetimer",
      "text": "List task timers",
      "category": "Active Timer",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the timers must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of timers to fetch. Range: 1-100"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the timers. Value supported is owner. Max chars: 100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of timers currently active in a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/activeTimer",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/activetimer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ActiveTimer_Listtasktimers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ, Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__activities___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__activities___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/activities",
      "text": "List ticket activities",
      "category": "Activities",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the activities must be listed"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes if the activity was completed or not",
          "enum": [
            true,
            false
          ]
        },
        "isSpam": {
          "type": "boolean",
          "text": "Key that denotes whether to fetch spam activities or not",
          "enum": [
            true,
            false
          ]
        },
        "limit": {
          "type": "number",
          "text": "Number of activities to list. Range: 1-100"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: activityTime or createdTime. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Allowed values are: contacts, assignee, tickets, teams, projects, integInfon"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of activities associated with a ticket, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/activities",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/activities",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Activities#Activities_Listticketactivities"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ, Desk.activities.events.READ , Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__activities__emptyspam___post": {
      "provider_intent": "zohodesk__api__v1__activities__emptyspam___post",
      "provider_alias_intent": "/api/v1/activities/emptyspam",
      "text": "Delete spam activities",
      "category": "Activities",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the activities belong",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all spam activities",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/activities/emptySpam",
        "alias_endpoint": "/zohodesk/api/v1/activities/emptyspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Activities#Activities_Deletespamactivities"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.DELETE , Desk.activities.events.DELETE , Desk.activities.DELETE , Desk.activities.tasks.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id___get",
      "provider_alias_intent": "/api/v1/agents/agent_id",
      "text": "Get agent",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the agent"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of an agent in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Getagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ, \nDesk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents___get": {
      "provider_intent": "zohodesk__api__v1__agents___get",
      "provider_alias_intent": "/api/v1/agents",
      "text": "List agents",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the agents must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of agents to fetch"
        },
        "status": {
          "type": "string",
          "text": "Key that filters agents based on their activation status: ACTIVE, DISABLED, DELETED or IMPORTED"
        },
        "departmentIds": {
          "type": "number",
          "text": "Comma-separated array of department IDs"
        },
        "profileIds": {
          "type": "number",
          "text": "Comma-separated array of profile IDs"
        },
        "roleIds": {
          "type": "number",
          "text": "Comma-separated array of role IDst"
        },
        "rolePermissionType": {
          "type": "string",
          "text": "Types of roles and permissions of the agents to list"
        },
        "isConfirmed": {
          "type": "boolean",
          "text": "Key that denotes if the agents must be confirmed or unconfirmed",
          "enum": [
            true,
            false
          ]
        },
        "isLightAgent": {
          "type": "boolean",
          "text": "Key that denotes if the agents must be light or non light",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to agents, Values allowed are profile, role"
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for agents by first name, last name, or email ID"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field that must be used for searching and listing agents"
        },
        "sortOrder": {
          "type": "string",
          "text": "To sort the available list of agents in either ascending or descending order"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of agents, based on the limit specified.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents",
        "alias_endpoint": "/zohodesk/api/v1/agents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents_Listagents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__count___get": {
      "provider_intent": "zohodesk__api__v1__agents__count___get",
      "provider_alias_intent": "/api/v1/agents/count",
      "text": "Get agents count",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "status": {
          "type": "string",
          "text": "Parameter that filters agents based on their activation status: ACTIVE or DISABLED"
        },
        "isConfirmed": {
          "type": "boolean",
          "text": "Filters Confirmed & Unconfirmed agents",
          "enum": [
            true,
            false
          ]
        },
        "includeLightAgent": {
          "type": "boolean",
          "text": "Count light agent",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the agents count by status, confirmed and include light",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/count",
        "alias_endpoint": "/zohodesk/api/v1/agents/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Getagentscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agentsbyids___get": {
      "provider_intent": "zohodesk__api__v1__agentsbyids___get",
      "provider_alias_intent": "/api/v1/agentsbyids",
      "text": "Get agent details by agentId",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_ids": {
          "type": "string",
          "text": "Agent IDs",
          "required": true
        },
        "agentIds": {
          "type": "number",
          "text": "Comma-separated array of agent IDs",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_ids": {
          "type": "string",
          "text": "Agent IDs",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of agents via the agent IDs passed in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agentsByIds",
        "alias_endpoint": "/zohodesk/api/v1/agentsbyids",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_GetagentdetailsbyagentId"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myinfo___get": {
      "provider_intent": "zohodesk__api__v1__myinfo___get",
      "provider_alias_intent": "/api/v1/myinfo",
      "text": "Get My Information",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Secondary information related to the agent"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of the currently logged in agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myinfo",
        "alias_endpoint": "/zohodesk/api/v1/myinfo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_GetMyInformation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__activate___post": {
      "provider_intent": "zohodesk__api__v1__agents__activate___post",
      "provider_alias_intent": "/api/v1/agents/activate",
      "text": "Activate agents",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "agent_ids": {
          "type": "array",
          "text": "Ids of Agents",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API activates agents in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/activate",
        "alias_endpoint": "/zohodesk/api/v1/agents/activate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Activateagents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__deactivate___post": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__deactivate___post",
      "provider_alias_intent": "/api/v1/agents/agent_id/deactivate",
      "text": "Deactivate agent",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deactivates an agent in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/deactivate",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/deactivate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Deactivateagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__reinvite___post": {
      "provider_intent": "zohodesk__api__v1__agents__reinvite___post",
      "provider_alias_intent": "/api/v1/agents/reinvite",
      "text": "Reinvite unconfirmed agents",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "agent_ids": {
          "type": "array",
          "text": "Ids of Agents",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sends reinvitation mails to unconfirmed agents",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/reinvite",
        "alias_endpoint": "/zohodesk/api/v1/agents/reinvite",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Reinviteunconfirmedagents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents___post": {
      "provider_intent": "zohodesk__api__v1__agents___post",
      "provider_alias_intent": "/api/v1/agents",
      "text": "Add agent",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "emailId": {
          "type": "string",
          "text": "Email ID of the agent",
          "required": true
        },
        "lastName": {
          "type": "string",
          "text": "Last name of the agent",
          "required": true
        },
        "firstName": {
          "type": "string",
          "text": "First name of the agent"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the agent"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the agent"
        },
        "extn": {
          "type": "string",
          "text": "Extension number of the agent"
        },
        "associatedDepartmentIds": {
          "type": "array",
          "text": "Departments with which the agent is associated",
          "required": true
        },
        "associatedChatDepartmentIds": {
          "type": "array",
          "text": "Chat departments with which the agent is associated"
        },
        "rolePermissionType": {
          "type": "string",
          "text": "The Role Permission type of Agent",
          "required": true
        },
        "aboutInfo": {
          "type": "string",
          "text": "Agent's about info"
        },
        "channelExpert": {
          "type": "array",
          "text": "The channels handled for the Agent"
        },
        "countryCode": {
          "type": "string",
          "text": "Country code of the agent"
        },
        "timeZone": {
          "type": "string",
          "text": "The timeZone of the agent. Eg Asia/Calcutta, Europe/Moscow"
        },
        "langCode": {
          "type": "string",
          "text": "Language code of the agent. Agents can update only their langCode"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds an agent to your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents",
        "alias_endpoint": "/zohodesk/api/v1/agents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Addagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id___patch": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id___patch",
      "provider_alias_intent": "/api/v1/agents/agent_id",
      "text": "Update agent",
      "category": "Agent",
      "method": "PATCH",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "emailId": {
          "type": "string",
          "text": "Email ID of the agent"
        },
        "lastName": {
          "type": "string",
          "text": "Last name of the agent"
        },
        "firstName": {
          "type": "string",
          "text": "First name of the agent"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the agent"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the agent"
        },
        "extn": {
          "type": "string",
          "text": "Extension number of the agent"
        },
        "associatedDepartmentIds": {
          "type": "array",
          "text": "Departments with which the agent is associated"
        },
        "associatedChatDepartmentIds": {
          "type": "array",
          "text": "Chat departments with which the agent is associated"
        },
        "rolePermissionType": {
          "type": "string",
          "text": "The Role Permission type of Agent"
        },
        "aboutInfo": {
          "type": "string",
          "text": "Agent's about info"
        },
        "channelExpert": {
          "type": "array",
          "text": "The channels handled for the Agent"
        },
        "countryCode": {
          "type": "string",
          "text": "Country code of the agent"
        },
        "timeZone": {
          "type": "string",
          "text": "The timeZone of the agent"
        },
        "langCode": {
          "type": "string",
          "text": "Language code of the agent"
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Updateagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__deleteunconfirmed___post": {
      "provider_intent": "zohodesk__api__v1__agents__deleteunconfirmed___post",
      "provider_alias_intent": "/api/v1/agents/deleteunconfirmed",
      "text": "Delete unconfirmed agents",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "agent_ids": {
          "type": "array",
          "text": "Ids of Agents",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes unconfirmed agents from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/deleteUnconfirmed",
        "alias_endpoint": "/zohodesk/api/v1/agents/deleteunconfirmed",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Deleteunconfirmedagents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__delete___post": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__delete___post",
      "provider_alias_intent": "/api/v1/agents/agent_id/delete",
      "text": "Delete confirmed agent",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "anonymizedName": {
          "type": "string",
          "text": "Nickname of the agent, which will appear on their entity history page"
        },
        "isAnonymize": {
          "type": "boolean",
          "text": "Key that determines if the deleted agent must be anonymized in the help desk",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a confirmed agent from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/delete",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/delete",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Deleteconfirmedagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__deletedagents__agent_id__anonymize___post": {
      "provider_intent": "zohodesk__api__v1__deletedagents__agent_id__anonymize___post",
      "provider_alias_intent": "/api/v1/deletedagents/agent_id/anonymize",
      "text": "Anonymize deleted agent",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "anonymizedName": {
          "type": "string",
          "text": "Nickname of the agent, which will appear on their entity history page"
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes the identification details of a deleted agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/deletedAgents/{agent_id}/anonymize",
        "alias_endpoint": "/zohodesk/api/v1/deletedagents/agent_id/anonymize",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Anonymizedeletedagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__uploadmyphoto___post": {
      "provider_intent": "zohodesk__api__v1__uploadmyphoto___post",
      "provider_alias_intent": "/api/v1/uploadmyphoto",
      "text": "Upload my photo",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userPhoto": {
          "type": "file",
          "text": "Image file containing the agent's photo"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sets the profile photo for the currently logged in agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/uploadMyPhoto",
        "alias_endpoint": "/zohodesk/api/v1/uploadmyphoto",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Uploadmyphoto"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__photo___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__photo___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/photo",
      "text": "Get agent photo",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "fileSize": {
          "type": "string",
          "text": "Size of the image file to download"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API gets the profile photo for the given agent id",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/photo",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/photo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents_Getagentphoto"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__deletemyphoto___post": {
      "provider_intent": "zohodesk__api__v1__deletemyphoto___post",
      "provider_alias_intent": "/api/v1/deletemyphoto",
      "text": "Delete My Photo",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the profile photo of the currently logged in agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/deleteMyPhoto",
        "alias_endpoint": "/zohodesk/api/v1/deletemyphoto",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_DeleteMyPhoto"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mypreferences___get": {
      "provider_intent": "zohodesk__api__v1__mypreferences___get",
      "provider_alias_intent": "/api/v1/mypreferences",
      "text": "Get My Preferences",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the preferences of the currently logged in agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myPreferences",
        "alias_endpoint": "/zohodesk/api/v1/mypreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_GetMyPreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mypreferences___patch": {
      "provider_intent": "zohodesk__api__v1__mypreferences___patch",
      "provider_alias_intent": "/api/v1/mypreferences",
      "text": "Update My Preferences",
      "category": "Agent",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "namePattern": {
          "type": "array",
          "text": "Pattern that defines how the names should be displayed"
        },
        "currentDepartment": {
          "type": "number",
          "text": "A valid active departmentId to which the agent is associated | 'allDepartment'"
        },
        "reportDurationFormat": {
          "type": "string",
          "text": "Pattern that defines which duration format is used for duration fields in Reports"
        },
        "ui_appearance": {
          "type": "string",
          "text": "Select the App appearance: light or dark or auto or pureDark"
        },
        "ui_lhsTheme": {
          "type": "string",
          "text": "Select the Left panel appearance: light or dark"
        },
        "ui_pureDarkMode": {
          "type": "string",
          "text": "Enable or Disable the pure dark Mode: ENABLED or DISABLED"
        },
        "ui_themes": {
          "type": "string",
          "text": "Select the App theme: red or green or blue or yellow or orange or pink or skyBlue or teal"
        },
        "ui_displayLayout": {
          "type": "string",
          "text": "Select the App layout that is optimal for your screen resolution: smartFocus or focusedWidth or fullWidth"
        },
        "ui_displayLayoutWidth": {
          "type": "string",
          "text": "Select the App layout width: 59 to 89"
        },
        "ui_appFontFamily": {
          "type": "string",
          "text": "Select the App font family: Zoho Puvi or Lato or Roboto"
        },
        "ui_appFontSize": {
          "type": "string",
          "text": "Select the App font size: 8 to 24"
        },
        "core_editorFontFamily": {
          "type": "string",
          "text": "Select the Editor font family"
        },
        "core_editorFontSize": {
          "type": "string",
          "text": "Select the Editor Font Size: 8 or 10 or 12 or 14 or 18 or 24 36"
        },
        "core_isPublicComment": {
          "type": "string",
          "text": "Enable or Disable the Public comment: ENABLED or DISABLED"
        },
        "a11y_criticalLink": {
          "type": "string",
          "text": "Highlight the Critical link: ENABLED or DISABLED"
        },
        "a11y_underlineLink": {
          "type": "string",
          "text": "Highlight the link by Underline: ENABLED or DISABLED"
        },
        "a11y_highlightClick": {
          "type": "string",
          "text": "Highlight the Clickable area: ENABLED or DISABLED"
        },
        "a11Y_animationControls": {
          "type": "string",
          "text": "Enable or Disable the Animations: regularmotion or reducedmotion or autoReducedmotion"
        },
        "a11y_customScroll": {
          "type": "string",
          "text": "Enable or Disable the Custom scroll: ENABLED or DISABLED"
        },
        "a11y_zoomLevel": {
          "type": "string",
          "text": "Select the App Zoom level: 8 to 24"
        },
        "a11y_isFontSizeAdaptToZoom": {
          "type": "string",
          "text": "Set the App Font size based on the zoom level: ENABLED or DISABLED"
        },
        "a11y_needAccessibilityShortCutInWms": {
          "type": "string",
          "text": "Enable or Disable the Accessibility ShortCut in wms: ENABLED or DISABLED"
        },
        "a11y_contrast": {
          "type": "string",
          "text": "Enable or Disable the App Increased Contrast: ENABLED or DISABLED"
        },
        "a11y_contrastLevel": {
          "type": "string",
          "text": "Select the App Contrast level: low or medium or high"
        },
        "a11y_isContrastRatioAdaptForBg": {
          "type": "string",
          "text": "Automatically Adapt the Contrast ratio for backgrounds: ENABLED or DISABLED"
        },
        "a11y_readingMask": {
          "type": "string",
          "text": "Enable or Disable the App Rading Mask: ENABLED or DISABLED"
        },
        "a11y_readingMaskLevel": {
          "type": "string",
          "text": "Select the Reading mask level: small or medium or full or custom"
        },
        "a11y_readingMaskHeight": {
          "type": "string",
          "text": "Select the Reading mask height: 10 to 90"
        },
        "a11y_readingMaskWidth": {
          "type": "string",
          "text": "Select the Reading mask width: 10 to 100"
        },
        "a11y_readingMaskOpacity": {
          "type": "string",
          "text": "Select the Reding mask opacity: 0.15 to 0.9"
        },
        "core_ticketReplyActions": {
          "type": "string",
          "text": "Select the Ticket Reply Action Buttons: reply or replyAll or forward"
        },
        "core_ticketReplyActionsOrder": {
          "type": "string",
          "text": "Select the Ticket Reply Action Button dropdown list order: forward_replyAll_reply"
        },
        "core_needEmptyQueueColumn": {
          "type": "string",
          "text": "Enable or Disable the Empty Queue column: ENABLED or DISABLED"
        },
        "communityListViewMode": {
          "type": "string",
          "text": "The way in which the community topics should be displayed"
        },
        "communityTopicsSortOrder": {
          "type": "string",
          "text": "Sort the list of community topics based on order"
        },
        "communityTopicsSortBy": {
          "type": "string",
          "text": "Sort the list of community topics based on time"
        },
        "communityTopicsRecordsPerPage": {
          "type": "string",
          "text": "The number of community topics to be listed on a single page"
        },
        "core_dviBarTabWidth": {
          "type": "string",
          "text": "Set the width for detail view ibarTab: 357 or 1 to 100 as the decimal value"
        },
        "a11y_focusRing": {
          "type": "string",
          "text": "Enable or Disable the focusRing: ENABLED or DISABLED"
        },
        "a11y_focusRingEnabledPlaces": {
          "type": "string",
          "text": "Select the focusRing enabled places: all or main"
        },
        "a11y_notificationView": {
          "type": "string",
          "text": "Select the notification view: stack or list"
        },
        "a11y_isSuccessNotificationAutoClose": {
          "type": "string",
          "text": "Enable or Disable the Success notification autoClose: ENABLED or DISABLED"
        },
        "a11y_successNotifcationAutoCloseTime": {
          "type": "string",
          "text": "Select the Success notification auto close time: 01 or 03 or 05 or 10 or 15 or 20"
        },
        "a11y_isErrorNotificationAutoClose": {
          "type": "string",
          "text": "Enable or Disable the Error notification autoClose: ENABLED or DISABLED"
        },
        "a11y_errorNotificationAutoCloseTime": {
          "type": "string",
          "text": "Select the Error notification auto close time: 01 or 03 or 05 or 10 or 15 or 20"
        },
        "a11y_customCursor": {
          "type": "string",
          "text": "Enable or Disable the App Custom cursor: ENABLED or DISABLED"
        },
        "a11y_customCursorSize": {
          "type": "string",
          "text": "Select the App Custom cursor size: 8 or 16 or 24 or 32"
        },
        "a11y_customCursorColor": {
          "type": "string",
          "text": "Select the App Custom cursor color: black or white"
        },
        "a11y_adhdFriendly": {
          "type": "string",
          "text": "Enable or Disable the adhdFriendly persona: ENABLED or DISABLED"
        },
        "a11y_astigmatism": {
          "type": "string",
          "text": "Enable or Disable the astigmatism persona: ENABLED or DISABLED"
        },
        "a11y_blindness": {
          "type": "string",
          "text": "Enable or Disable the blindness persona: ENABLED or DISABLED"
        },
        "a11y_colorBlindness": {
          "type": "string",
          "text": "Enable or Disable the colorBlindness persona: ENABLED or DISABLED"
        },
        "a11y_dyslexia": {
          "type": "string",
          "text": "Enable or Disable the dyslexia persona: ENABLED or DISABLED"
        },
        "a11y_epilepsy": {
          "type": "string",
          "text": "Enable or Disable the epilepsy persona: ENABLED or DISABLED"
        },
        "a11y_elderly": {
          "type": "string",
          "text": "Enable or Disable the elderly persona: ENABLED or DISABLED"
        },
        "a11y_motorDisabilities": {
          "type": "string",
          "text": "Enable or Disable the motorDisabilities persona: ENABLED or DISABLED"
        },
        "a11y_seizureSafe": {
          "type": "string",
          "text": "Enable or Disable the seizureSafe persona: ENABLED or DISABLED"
        },
        "a11y_visuallyImpaired": {
          "type": "string",
          "text": "Enable or Disable the visuallyImpaired persona: ENABLED or DISABLED"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the preferences of the currently logged in agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myPreferences",
        "alias_endpoint": "/zohodesk/api/v1/mypreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_UpdateMyPreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__email__email___get": {
      "provider_intent": "zohodesk__api__v1__agents__email__email___get",
      "provider_alias_intent": "/api/v1/agents/email/email",
      "text": "Get agent by email ID",
      "category": "Agent",
      "method": "GET",
      "type": "API",
      "params": {
        "email": {
          "type": "string",
          "text": "Email",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "email": {
          "type": "string",
          "text": "Email",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of an agent via the email ID passed in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/email/{email}",
        "alias_endpoint": "/zohodesk/api/v1/agents/email/email",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_GetagentbyemailID"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__reassignment___post": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__reassignment___post",
      "provider_alias_intent": "/api/v1/agents/agent_id/reassignment",
      "text": "Schedule reassignment for deactivated or deleted agents",
      "category": "Agent",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "agentReassignment": {
          "type": "array",
          "text": "Details of agents to whom the resources associated with the agent will be reassigned",
          "required": true
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API schedules reassignment of tickets, tasks, and automations belonging to a deleted/deactivated agent to another agent within the same department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/reassignment",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/reassignment",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Agents#Agents_Schedulereassignmentfordeactivatedordeletedagents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__signatures___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__signatures___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/signatures",
      "text": "Get signatures of agent",
      "category": "Agent Signatures",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the different signatures configured by an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/signatures",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/signatures",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentSignatures#AgentSignatures_Getsignaturesofagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__signatures___patch": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__signatures___patch",
      "provider_alias_intent": "/api/v1/agents/agent_id/signatures",
      "text": "Update signatures of agent",
      "category": "Agent Signatures",
      "method": "PATCH",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "isActive": {
          "type": "boolean",
          "text": "Status of the signature",
          "enum": [
            true,
            false
          ]
        },
        "defaultSignature": {
          "type": "string",
          "text": "Default signature of the agent"
        },
        "customizedSignatures": {
          "type": "array",
          "text": "Department-specific, customized signatures of the agent"
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the existing signatures of an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/signatures",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/signatures",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentSignatures#AgentSignatures_Updatesignaturesofagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__updatecustomizedsignature___post": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__updatecustomizedsignature___post",
      "provider_alias_intent": "/api/v1/agents/agent_id/updatecustomizedsignature",
      "text": "Update customized signatures of agent",
      "category": "Agent Signatures",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the signature exists",
          "required": true
        },
        "signature": {
          "type": "string",
          "text": "Signature of the agent in that department",
          "required": true
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the customized signatures of an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/updateCustomizedSignature",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/updatecustomizedsignature",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentSignatures_Updatecustomizedsignaturesofagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__timeentry__timeentry_id___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__timeentry__timeentry_id___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/timeentry/timeentry_id",
      "text": "Get an Agent Time Entry",
      "category": "Agent TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a time entry related to an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentTimeEntry_GetanAgentTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__timeentry___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__timeentry___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/timeentry",
      "text": "List Agent Time Entries",
      "category": "Agent TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module from which the time entries must be fetched. Values allowed are tickets and tasks"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch. Range: 1-100"
        },
        "orderBy": {
          "type": "string",
          "text": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner. Max chars: 100"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the time entries associated with an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentTimeEntry_ListAgentTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__timeentrysummation___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__timeentrysummation___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/timeentrysummation",
      "text": "Get summation of Agent Time Entries",
      "category": "Agent TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module Preference. It can be either tickets or tasks"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the sum of time entries associated with an agent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/timeEntrySummation",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/timeentrysummation",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AgentTimeEntry_GetsummationofAgentTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__feedbacks___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__feedbacks___get",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/feedbacks",
      "text": "List feedback comments on article translation",
      "category": "Article Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of comments to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the comments based on a specific attribute: createdTime"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters comments created within a specific date and time range"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments received on a translation of an article, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/feedbacks",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/feedbacks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticleFeedback_Listfeedbackcommentsonarticletranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articlefeedbacks__feedback_id___get": {
      "provider_intent": "zohodesk__api__v1__articlefeedbacks__feedback_id___get",
      "provider_alias_intent": "/api/v1/articlefeedbacks/feedback_id",
      "text": "Get details of feedback comment",
      "category": "Article Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the comment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular feedback comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articleFeedbacks/{feedback_id}",
        "alias_endpoint": "/zohodesk/api/v1/articlefeedbacks/feedback_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticleFeedback_Getdetailsoffeedbackcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articlefeedbacks___get": {
      "provider_intent": "zohodesk__api__v1__articlefeedbacks___get",
      "provider_alias_intent": "/api/v1/articlefeedbacks",
      "text": "List feedback comments",
      "category": "Article Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of comments to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the comments based on a specific attribute: createdTime"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the comments"
        },
        "departmentIds": {
          "type": "string",
          "text": "Filter article feedback comments based on department ids"
        },
        "rootCategoryIds": {
          "type": "string",
          "text": "Filter article feedback comments based on rootCategoryIds"
        },
        "timeRange": {
          "type": "string",
          "text": "Key that filters comments created within a specific date and time range"
        },
        "locale": {
          "type": "string",
          "text": "Locale of an article translation in which feedback comments to be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments received on an article, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articleFeedbacks",
        "alias_endpoint": "/zohodesk/api/v1/articlefeedbacks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticleFeedback_Listfeedbackcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articlefeedbacks__feedback_id___delete": {
      "provider_intent": "zohodesk__api__v1__articlefeedbacks__feedback_id___delete",
      "provider_alias_intent": "/api/v1/articlefeedbacks/feedback_id",
      "text": "Delete feedback comment",
      "category": "Article Feedback",
      "method": "DELETE",
      "type": "API",
      "params": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a particular feedback comment from an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articleFeedbacks/{feedback_id}",
        "alias_endpoint": "/zohodesk/api/v1/articlefeedbacks/feedback_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticleFeedback_Deletefeedbackcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articlefeedbacks__feedback_id__addasticket___post": {
      "provider_intent": "zohodesk__api__v1__articlefeedbacks__feedback_id__addasticket___post",
      "provider_alias_intent": "/api/v1/articlefeedbacks/feedback_id/addasticket",
      "text": "Convert feedback comment into ticket",
      "category": "Article Feedback",
      "method": "POST",
      "type": "API",
      "params": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "feedback_id": {
          "type": "string",
          "text": "Feedback ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a feedback comment as a ticket in your help desk portal and assigns it to the author of the article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articleFeedbacks/{feedback_id}/addAsTicket",
        "alias_endpoint": "/zohodesk/api/v1/articlefeedbacks/feedback_id/addasticket",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticleFeedback_Convertfeedbackcommentintoticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles___get": {
      "provider_intent": "zohodesk__api__v1__articles___get",
      "provider_alias_intent": "/api/v1/articles",
      "text": "List articles",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the articles must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of articles to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the articles based on a specific attribute"
        },
        "permission": {
          "type": "string",
          "text": "Access permission for the article"
        },
        "authorId": {
          "type": "number",
          "text": "ID of article owner"
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the category to which the article belongs"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters articles modified within a specific date and time range"
        },
        "expiryTimeRange": {
          "type": "string",
          "text": "Key that filters articles which will expire within a specific date and time range"
        },
        "status": {
          "type": "string",
          "text": "Publishing status of the article"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a specific number of articles from your knowledge base, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles",
        "alias_endpoint": "/zohodesk/api/v1/articles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Listarticles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id___get",
      "provider_alias_intent": "/api/v1/articles/article_id",
      "text": "Get article",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "version": {
          "type": "string",
          "text": "Version number of the article"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches an article from your knowledge base",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticle"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles___post": {
      "provider_intent": "zohodesk__api__v1__articles___post",
      "provider_alias_intent": "/api/v1/articles",
      "text": "Create an article",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "categoryId": {
          "type": "number",
          "text": "The Category",
          "required": true
        },
        "title": {
          "type": "string",
          "text": "The title of article",
          "required": true
        },
        "answer": {
          "type": "string",
          "text": "The answer part of article",
          "required": true
        },
        "permalink": {
          "type": "string",
          "text": "The permalink of article"
        },
        "authorId": {
          "type": "number",
          "text": "The owner of the article"
        },
        "status": {
          "type": "string",
          "text": "Status of the article",
          "required": true
        },
        "permission": {
          "type": "string",
          "text": "Permission of the article",
          "required": true
        },
        "tags": {
          "type": "array",
          "text": "Tags associated with the article"
        },
        "seoTitle": {
          "type": "string",
          "text": "SEO title of the article"
        },
        "seoKeywords": {
          "type": "string",
          "text": "SEO keywords of the article"
        },
        "seoDescription": {
          "type": "string",
          "text": "SEO description of article"
        },
        "isSEOEnabled": {
          "type": "boolean",
          "text": "SEO enabled status of an article",
          "enum": [
            true,
            false
          ]
        },
        "expiryDate": {
          "type": "string",
          "text": "Schedule the expiry date of the article"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates an article in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles",
        "alias_endpoint": "/zohodesk/api/v1/articles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Createanarticle"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id___patch": {
      "provider_intent": "zohodesk__api__v1__articles__article_id___patch",
      "provider_alias_intent": "/api/v1/articles/article_id",
      "text": "Update an article",
      "category": "Articles",
      "method": "PATCH",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "categoryId": {
          "type": "number",
          "text": "The Category"
        },
        "title": {
          "type": "string",
          "text": "The title of article"
        },
        "answer": {
          "type": "string",
          "text": "The answer part of article"
        },
        "permalink": {
          "type": "string",
          "text": "The permalink of article"
        },
        "authorId": {
          "type": "number",
          "text": "The owner of the article"
        },
        "status": {
          "type": "string",
          "text": "Status of the article"
        },
        "permission": {
          "type": "string",
          "text": "Permission of the article"
        },
        "tags": {
          "type": "array",
          "text": "Tags associated with the article"
        },
        "seoTitle": {
          "type": "string",
          "text": "SEO title of the article"
        },
        "seoKeywords": {
          "type": "string",
          "text": "SEO keywords of the article"
        },
        "seoDescription": {
          "type": "string",
          "text": "SEO description of article"
        },
        "isSEOEnabled": {
          "type": "boolean",
          "text": "SEO enabled status of an article",
          "enum": [
            true,
            false
          ]
        },
        "expiryDate": {
          "type": "string",
          "text": "Schedule the expiry date of the article"
        }
      },
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Updateanarticle"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__checkpermalinkavailability___post": {
      "provider_intent": "zohodesk__api__v1__articles__checkpermalinkavailability___post",
      "provider_alias_intent": "/api/v1/articles/checkpermalinkavailability",
      "text": "Validate permalink",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "permalink": {
          "type": "string",
          "text": "The permalink of Solution",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Language"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API validates if a permalink is available for a help article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/checkPermalinkAvailability",
        "alias_endpoint": "/zohodesk/api/v1/articles/checkpermalinkavailability",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Validatepermalink"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__history___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__history___get",
      "provider_alias_intent": "/api/v1/articles/article_id/history",
      "text": "Get article history",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of records to fetch",
          "required": true
        },
        "events": {
          "type": "string",
          "text": "Actions happened on the article"
        },
        "userIds": {
          "type": "number",
          "text": "User who did the action"
        },
        "fromTime": {
          "type": "string",
          "text": "From time"
        },
        "toTime": {
          "type": "string",
          "text": "To time"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the event history of an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/history",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/history",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticlehistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articleattachments___post": {
      "provider_intent": "zohodesk__api__v1__articleattachments___post",
      "provider_alias_intent": "/api/v1/articleattachments",
      "text": "Upload attachments",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "workspaceId": {
          "type": "string",
          "text": "Workspace id to which the attachement should be uploaded",
          "required": true
        },
        "attachmentType": {
          "type": "string",
          "text": "Attachment type",
          "required": true
        },
        "file": {
          "type": "file",
          "text": "attachment files for articles"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API uploads files to your portal gallery",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articleAttachments",
        "alias_endpoint": "/zohodesk/api/v1/articleattachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Uploadattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__articles__movetotrash___post",
      "provider_alias_intent": "/api/v1/articles/movetotrash",
      "text": "Move articles to trash",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array of Entity id to be deleted",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves articles to the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/articles/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Movearticlestotrash"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__preview___post": {
      "provider_intent": "zohodesk__api__v1__articles__preview___post",
      "provider_alias_intent": "/api/v1/articles/preview",
      "text": "Preview article",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of article",
          "required": true
        },
        "answer": {
          "type": "string",
          "text": "The answer part of article",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API shows a preview of help articles, through which you can check the content for formatting, alignment, and grammar/spelling errors and get the look and feel of the help article even before publishing it",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/preview",
        "alias_endpoint": "/zohodesk/api/v1/articles/preview",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Previewarticle"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__count___get": {
      "provider_intent": "zohodesk__api__v1__articles__count___get",
      "provider_alias_intent": "/api/v1/articles/count",
      "text": "Get article count",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "Article count for given category"
        },
        "authorId": {
          "type": "number",
          "text": "Article count for the particular author"
        },
        "status": {
          "type": "string",
          "text": "Publishing status of the article to get count"
        },
        "permission": {
          "type": "string",
          "text": "Permissions to get the article count"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of articles published in the knowledge base of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/count",
        "alias_endpoint": "/zohodesk/api/v1/articles/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticlecount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__notifyarticleusage___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__notifyarticleusage___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/notifyarticleusage",
      "text": "Map articles to tickets",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array of Entity ids",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API maps tickets with help articles to automatically suggest the same articles for similar tickets that arrive later",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/notifyArticleUsage",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/notifyarticleusage",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Maparticlestotickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbcategory__category_id__repositionarticles___get": {
      "provider_intent": "zohodesk__api__v1__kbcategory__category_id__repositionarticles___get",
      "provider_alias_intent": "/api/v1/kbcategory/category_id/repositionarticles",
      "text": "Get articles for manual sorting",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "category_id": {
          "type": "string",
          "text": "Category ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "category_id": {
          "type": "string",
          "text": "Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the positions of help articles to enable manual sorting",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbCategory/{category_id}/repositionArticles",
        "alias_endpoint": "/zohodesk/api/v1/kbcategory/category_id/repositionarticles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticlesformanualsorting"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbcategory__category_id__repositionarticles___post": {
      "provider_intent": "zohodesk__api__v1__kbcategory__category_id__repositionarticles___post",
      "provider_alias_intent": "/api/v1/kbcategory/category_id/repositionarticles",
      "text": "Update article position",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "category_id": {
          "type": "string",
          "text": "Category ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array of Entity ids",
          "required": true
        }
      },
      "path": {
        "category_id": {
          "type": "string",
          "text": "Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps you manually sort articles in your knowledge base",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbCategory/{category_id}/repositionArticles",
        "alias_endpoint": "/zohodesk/api/v1/kbcategory/category_id/repositionarticles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Updatearticleposition"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__articleid__translations___post": {
      "provider_intent": "zohodesk__api__v1__articles__articleid__translations___post",
      "provider_alias_intent": "/api/v1/articles/articleid/translations",
      "text": "Add translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the Article",
          "required": true
        },
        "answer": {
          "type": "string",
          "text": "The answer part of the article",
          "required": true
        },
        "permalink": {
          "type": "string",
          "text": "The permalink of the article"
        },
        "status": {
          "type": "string",
          "text": "Status of the article",
          "required": true
        },
        "permission": {
          "type": "string",
          "text": "Permission of the article",
          "required": true
        },
        "tags": {
          "type": "array",
          "text": "Tags associated with the article"
        },
        "seoTitle": {
          "type": "string",
          "text": "SEO Title of the article"
        },
        "seoKeywords": {
          "type": "string",
          "text": "SEO Keywords of the article"
        },
        "seoDescription": {
          "type": "string",
          "text": "SEO Description of the article"
        },
        "isSEOEnabled": {
          "type": "boolean",
          "text": "SEO enabled status of the article",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of the attachments associated with the article"
        },
        "expiryDate": {
          "type": "string",
          "text": "Schedule the expiry date of the article"
        },
        "locale": {
          "type": "string",
          "text": "Language code of the article translation",
          "required": true
        },
        "authorId": {
          "type": "number",
          "text": "ID of the user who created the article",
          "required": true
        },
        "translationState": {
          "type": "string",
          "text": "Key that specifies the state of the translated article",
          "required": true
        }
      },
      "path": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a translated version of an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{articleId}/translations",
        "alias_endpoint": "/zohodesk/api/v1/articles/articleid/translations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Addtranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__articleid__translations__locale___patch": {
      "provider_intent": "zohodesk__api__v1__articles__articleid__translations__locale___patch",
      "provider_alias_intent": "/api/v1/articles/articleid/translations/locale",
      "text": "Edit translation",
      "category": "Articles",
      "method": "PATCH",
      "type": "API",
      "params": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "createVersion": {
          "type": "boolean",
          "text": "Denotes if a new version is needed",
          "enum": [
            true,
            false
          ]
        },
        "title": {
          "type": "string",
          "text": "The title of the article"
        },
        "answer": {
          "type": "string",
          "text": "The answer part of the article"
        },
        "permalink": {
          "type": "string",
          "text": "The permalink of the article"
        },
        "status": {
          "type": "string",
          "text": "Status of the article"
        },
        "permission": {
          "type": "String",
          "text": "Permission of the article"
        },
        "tags": {
          "type": "array",
          "text": "Tags associated with the article"
        },
        "seoTitle": {
          "type": "string",
          "text": "SEO Title of the article"
        },
        "seoKeywords": {
          "type": "string",
          "text": "SEO Keywords of the article"
        },
        "seoDescription": {
          "type": "string",
          "text": "SEO Description of the article"
        },
        "isSEOEnabled": {
          "type": "boolean",
          "text": "SEO enabled status of the article",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of the attachments associated with the article"
        },
        "expiryDate": {
          "type": "string",
          "text": "Schedule the expiry date of the article"
        },
        "authorId": {
          "type": "number",
          "text": "ID of the user who created the article"
        },
        "translationState": {
          "type": "string",
          "text": "Key that specifies the state of the translated article"
        }
      },
      "path": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API edits an already translated article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{articleId}/translations/{locale}",
        "alias_endpoint": "/zohodesk/api/v1/articles/articleid/translations/locale",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Edittranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations___get",
      "provider_alias_intent": "/api/v1/articles/article_id/translations",
      "text": "Get translations of an article",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_Id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the translations must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of translations to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the articles based on a specific attribute:createdTimeor modifiedTime"
        },
        "status": {
          "type": "string",
          "text": "Publishing status of the translation"
        },
        "permission": {
          "type": "String",
          "text": "Access permission for the article"
        },
        "authorId": {
          "type": "number",
          "text": "ID of translation owner"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters translations created within a specific date and time range"
        },
        "translationState": {
          "type": "string",
          "text": "Key that specifies the state of the translated article"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_Id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the available translations of an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Gettranslationsofanarticle"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale___get",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale",
      "text": "Get article translation",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "version": {
          "type": "string",
          "text": "Version of the article translation"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a specific translation of an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticletranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__attachments___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__attachments___get",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/attachments",
      "text": "Upload and associate attachments",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "attachmentType": {
          "type": "string",
          "text": "Attachment type",
          "required": true
        },
        "file": {
          "type": "file",
          "text": "attachment files for articles"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API uploads the files to the gallery section and attaches them to an article translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Uploadandassociateattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__associateattachments___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__associateattachments___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/associateattachments",
      "text": "Attach files to translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "attachmentIds": {
          "type": "array",
          "text": "IDs of the attachments associated with the article",
          "required": true
        }
      },
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches the files selected from the gallery to an article translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/associateAttachments",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/associateattachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Attachfilestotranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__dissociateattachments___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__dissociateattachments___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/dissociateattachments",
      "text": "Dissociate attachments from translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "attachmentIds": {
          "type": "array",
          "text": "IDs of the attachments associated with the article",
          "required": true
        }
      },
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes the file attachments from a translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/dissociateAttachments",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/dissociateattachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Dissociateattachmentsfromtranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__like___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__like___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/like",
      "text": "Like translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a like (a positive reaction) to a translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/like",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/like",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Liketranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__value__translations__locale__dislike___post": {
      "provider_intent": "zohodesk__api__v1__articles__value__translations__locale__dislike___post",
      "provider_alias_intent": "/api/v1/articles/value/translations/locale/dislike",
      "text": "Dislike translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a dislike (a negative reaction) to a translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/([0-9]+)/translations/{locale}/dislike",
        "alias_endpoint": "/zohodesk/api/v1/articles/value/translations/locale/dislike",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Disliketranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__insights___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__insights___get",
      "provider_alias_intent": "/api/v1/articles/article_id/insights",
      "text": "Get article statistics",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the basic insights related to an article",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/insights",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/insights",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getarticlestatistics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__permalinks___get": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__permalinks___get",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/permalinks",
      "text": "Get permalinks of translation",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the primary and secondary permalinks of a translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/permalinks",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/permalinks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Getpermalinksoftranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__permalinks__add___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__permalinks__add___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/permalinks/add",
      "text": "Update permalink of translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "permalink": {
          "type": "string",
          "text": "The permalink of Solution",
          "required": true
        },
        "isOldPermalinkNeeded": {
          "type": "boolean",
          "text": "The variable that defines if permalink needs to be added to redirect list",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the permalink of a translation and adds the old permalink to the redirection list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/permalinks/add",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/permalinks/add",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Updatepermalinkoftranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__permalinks__removesecondarypermalink___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__permalinks__removesecondarypermalink___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/permalinks/removesecondarypermalink",
      "text": "Remove redirection permalink from translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "permalink": {
          "type": "string",
          "text": "The permalink of Solution",
          "required": true
        }
      },
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes the redirection permalink from the redirection list of a translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/permalinks/removeSecondaryPermalink",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/permalinks/removesecondarypermalink",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Removeredirectionpermalinkfromtranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__article_id__translations__locale__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__articles__article_id__translations__locale__movetotrash___post",
      "provider_alias_intent": "/api/v1/articles/article_id/translations/locale/movetotrash",
      "text": "Trash an article translation",
      "category": "Articles",
      "method": "POST",
      "type": "API",
      "params": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "article_id": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves an article translation to trash",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{article_id}/translations/{locale}/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/articles/article_id/translations/locale/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Trashanarticletranslation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__articleid__translations__locale__attachments__attachmentid__content___get": {
      "provider_intent": "zohodesk__api__v1__articles__articleid__translations__locale__attachments__attachmentid__content___get",
      "provider_alias_intent": "/api/v1/articles/articleid/translations/locale/attachments/attachmentid/content",
      "text": "Download article translation attachment",
      "category": "Articles",
      "method": "GET",
      "type": "API",
      "params": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "attachmentId": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        },
        "inline": {
          "type": "boolean",
          "text": "Display content inline",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "articleId": {
          "type": "string",
          "text": "Article ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        },
        "attachmentId": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API downloads the attachment associated with article translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/{articleId}/translations/{locale}/attachments/{attachmentId}/content",
        "alias_endpoint": "/zohodesk/api/v1/articles/articleid/translations/locale/attachments/attachmentid/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Articles_Downloadarticletranslationattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__articles__article_id__translations__locale__comments___post": {
      "provider_intent": "zohodeskapi__v1__articles__article_id__translations__locale__comments___post",
      "provider_alias_intent": "api/v1/articles/article_id/translations/locale/comments",
      "text": "Create a translation comment",
      "category": "Articles Comments",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to an article translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/articles/{article_id}/translations/{locale}/comments",
        "alias_endpoint": "/zohodeskapi/v1/articles/article_id/translations/locale/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticlesComments_Createatranslationcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/articles/article_id/translations/locale/comments/comment_id",
      "text": "Update a translation comment",
      "category": "Articles Comments",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. max chars: 32000. To retrieve or set user mentions, use this code format: AGENT: zsu[@user:{zuid}]zsu, Enduser: zsu[@enduser:{zuid}]zsu, Group: zsu[@group:{groupid}]zsu, HashTag: zsh[#{HEADER_DATA}]zsh."
        },
        "isPublic": {
          "type": "boolean",
          "text": "Visibility of the comment, which can be set only at the time of commenting.",
          "enum": [
            true,
            false
          ]
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText. The default type is html. max chars: 100"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing article translation comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/articles/article_id/translations/locale/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticlesComments_Updateatranslationcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/articles/article_id/translations/locale/comments/comment_id",
      "text": "Delete a translation comment",
      "category": "Articles Comments",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing article translation comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/articles/article_id/translations/locale/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticlesComments_Deleteatranslationcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__articles__article_id__translations__locale__comments__comment_id___get",
      "provider_alias_intent": "api/v1/articles/article_id/translations/locale/comments/comment_id",
      "text": "Get a article translation comment",
      "category": "Articles Comments",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches an article translation comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/articles/{article_id}/translations/{locale}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/articles/article_id/translations/locale/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticlesComments_Getaarticletranslationcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__articles__article_id__translations__locale__comments___get": {
      "provider_intent": "zohodeskapi__v1__articles__article_id__translations__locale__comments___get",
      "provider_alias_intent": "api/v1/articles/article_id/translations/locale/comments",
      "text": "List all translation comments",
      "category": "Articles Comments",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on an article translation, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/articles/{article_id}/translations/{locale}/comments",
        "alias_endpoint": "/zohodeskapi/v1/articles/article_id/translations/locale/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ArticlesComments_Listalltranslationcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__automationfeaturecount___get": {
      "provider_intent": "zohodesk__api__v1__automationfeaturecount___get",
      "provider_alias_intent": "/api/v1/automationfeaturecount",
      "text": "Get Automation Feature Count",
      "category": "AutomationFeatureCount",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department Id"
        },
        "module": {
          "type": "string",
          "text": "Module, allowed values tickets,contacts,contracts,accounts,tasks,products,timeEntry,events,calls,customModule"
        },
        "feature": {
          "type": "string",
          "text": "Feature, allowed values businesshours,holidaylist,Skills,SkillType,workflows,blueprints,automationAlerts,fieldUpdates,automationTasks,customFunctions",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is used to Get Automation Feature Limits",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/automationFeatureCount",
        "alias_endpoint": "/zohodesk/api/v1/automationfeaturecount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#AutomationFeatureCount_GetAutomationFeatureCount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges___get": {
      "provider_intent": "zohodesk__api__v1__badges___get",
      "provider_alias_intent": "/api/v1/badges",
      "text": "List badges",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the badges must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of badges to list",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of badge: default or custom"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of default and custom badges, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges",
        "alias_endpoint": "/zohodesk/api/v1/badges",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification_Listbadges"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges___post": {
      "provider_intent": "zohodesk__api__v1__badges___post",
      "provider_alias_intent": "/api/v1/badges",
      "text": "Add badge",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the badge",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the badge"
        },
        "isCustom": {
          "type": "boolean",
          "text": "Key that specifies if the badge is user-defined or not",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "customIconId": {
          "type": "number",
          "text": "ID of the file attachment that contains the badge icon"
        },
        "defaultIconId": {
          "type": "number",
          "text": "ID of the default icon"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a badge to your user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges",
        "alias_endpoint": "/zohodesk/api/v1/badges",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification_Addbadge"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges__value___put": {
      "provider_intent": "zohodesk__api__v1__badges__value___put",
      "provider_alias_intent": "/api/v1/badges/value",
      "text": "Update badge",
      "category": "Badgification",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the badge",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the badge"
        },
        "customIconId": {
          "type": "number",
          "text": "ID of the file attachment that contains the badge icon"
        },
        "defaultIconId": {
          "type": "number",
          "text": "ID of the default icon"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a badge",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/badges/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Updatebadge"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges__value___delete": {
      "provider_intent": "zohodesk__api__v1__badges__value___delete",
      "provider_alias_intent": "/api/v1/badges/value",
      "text": "Delete badge",
      "category": "Badgification",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a badge from the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/badges/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Deletebadge"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__levels___get": {
      "provider_intent": "zohodesk__api__v1__levels___get",
      "provider_alias_intent": "/api/v1/levels",
      "text": "List levels",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the levels must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of limits to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of levels, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/levels",
        "alias_endpoint": "/zohodesk/api/v1/levels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Listlevels"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__levels___post": {
      "provider_intent": "zohodesk__api__v1__levels___post",
      "provider_alias_intent": "/api/v1/levels",
      "text": "Add level",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the level",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the level"
        },
        "badgeId": {
          "type": "number",
          "text": "ID of the badge to associate with the level"
        },
        "pointsToReach": {
          "type": "number",
          "text": "Minimum number of credits a user needs to reach the level",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a level to the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/levels",
        "alias_endpoint": "/zohodesk/api/v1/levels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Addlevel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__levels__value___put": {
      "provider_intent": "zohodesk__api__v1__levels__value___put",
      "provider_alias_intent": "/api/v1/levels/value",
      "text": "Update level",
      "category": "Badgification",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the level",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the level"
        },
        "badgeId": {
          "type": "number",
          "text": "ID of the badge to associate with the level"
        },
        "pointsToReach": {
          "type": "number",
          "text": "Minimum number of credits a user needs to reach the level",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a level",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/levels/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/levels/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Updatelevel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__levels__value___delete": {
      "provider_intent": "zohodesk__api__v1__levels__value___delete",
      "provider_alias_intent": "/api/v1/levels/value",
      "text": "Delete level",
      "category": "Badgification",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a level from the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/levels/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/levels/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Deletelevel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits___get": {
      "provider_intent": "zohodesk__api__v1__credits___get",
      "provider_alias_intent": "/api/v1/credits",
      "text": "List creditworthy activities",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the activities must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of activities to list",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of creditworthy activity: default or custom"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of creditworthy activities, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits",
        "alias_endpoint": "/zohodesk/api/v1/credits",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Listcreditworthyactivities"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits___post": {
      "provider_intent": "zohodesk__api__v1__credits___post",
      "provider_alias_intent": "/api/v1/credits",
      "text": "Add creditworthy activity",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the creditworthy activity",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the creditworthy activity"
        },
        "points": {
          "type": "number",
          "text": "Number of credits associated with the activity",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a creditworthy activity to the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits",
        "alias_endpoint": "/zohodesk/api/v1/credits",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Addcreditworthyactivity"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits__value___put": {
      "provider_intent": "zohodesk__api__v1__credits__value___put",
      "provider_alias_intent": "/api/v1/credits/value",
      "text": "Update creditworthy activity",
      "category": "Badgification",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the creditworthy activity",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the creditworthy activity"
        },
        "isEnabled": {
          "type": "boolean",
          "text": "Key that specifies if the activity is enabled or not",
          "enum": [
            true,
            false
          ]
        },
        "points": {
          "type": "number",
          "text": "Number of credits associated with the activity",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates a creditworthy activity",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/credits/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Updatecreditworthyactivity"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits__value___delete": {
      "provider_intent": "zohodesk__api__v1__credits__value___delete",
      "provider_alias_intent": "/api/v1/credits/value",
      "text": "Delete creditworthy activity",
      "category": "Badgification",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a creditworthy activity from the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/credits/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Deletecreditworthyactivity"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits__value__users___get": {
      "provider_intent": "zohodesk__api__v1__credits__value__users___get",
      "provider_alias_intent": "/api/v1/credits/value/users",
      "text": "List credit holders",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users with credits, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits/([0-9]+)/users",
        "alias_endpoint": "/zohodesk/api/v1/credits/value/users",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Listcreditholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits__value__associateusers___post": {
      "provider_intent": "zohodesk__api__v1__credits__value__associateusers___post",
      "provider_alias_intent": "/api/v1/credits/value/associateusers",
      "text": "Add credit holders",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users who must be added as credit holders",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds the users specified in the request to the credit holders list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits/([0-9]+)/associateUsers",
        "alias_endpoint": "/zohodesk/api/v1/credits/value/associateusers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Addcreditholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__credits__value__dissociateusers___post": {
      "provider_intent": "zohodesk__api__v1__credits__value__dissociateusers___post",
      "provider_alias_intent": "/api/v1/credits/value/dissociateusers",
      "text": "Remove credit holders",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users who must be added as credit holders",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes users from the custom holders list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/credits/([0-9]+)/dissociateUsers",
        "alias_endpoint": "/zohodesk/api/v1/credits/value/dissociateusers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Removecreditholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges__value__users___get": {
      "provider_intent": "zohodesk__api__v1__badges__value__users___get",
      "provider_alias_intent": "/api/v1/badges/value/users",
      "text": "List badge holders",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users with badges, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges/([0-9]+)/users",
        "alias_endpoint": "/zohodesk/api/v1/badges/value/users",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Listbadgeholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges__value__associateusers___post": {
      "provider_intent": "zohodesk__api__v1__badges__value__associateusers___post",
      "provider_alias_intent": "/api/v1/badges/value/associateusers",
      "text": "Add badge holders",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users who must be added as badge holders",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds the users specified in the request to the badge holders list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges/([0-9]+)/associateUsers",
        "alias_endpoint": "/zohodesk/api/v1/badges/value/associateusers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Addbadgeholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__badges__value__dissociateusers___post": {
      "provider_intent": "zohodesk__api__v1__badges__value__dissociateusers___post",
      "provider_alias_intent": "/api/v1/badges/value/dissociateusers",
      "text": "Remove badge holders",
      "category": "Badgification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users who must be added as badge holders",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes users from the badge holders list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/badges/([0-9]+)/dissociateUsers",
        "alias_endpoint": "/zohodesk/api/v1/badges/value/dissociateusers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Removebadgeholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__availablebadgeicons___get": {
      "provider_intent": "zohodesk__api__v1__availablebadgeicons___get",
      "provider_alias_intent": "/api/v1/availablebadgeicons",
      "text": "List available icons",
      "category": "Badgification",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all icons that are not assigned to any badges in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/availableBadgeIcons",
        "alias_endpoint": "/zohodesk/api/v1/availablebadgeicons",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Badgification#Badgification_Listavailableicons"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints__blueprint_id___get": {
      "provider_intent": "zohodesk__api__v1__blueprints__blueprint_id___get",
      "provider_alias_intent": "/api/v1/blueprints/blueprint_id",
      "text": "Get Blueprint Details",
      "category": "Blueprints",
      "method": "GET",
      "type": "API",
      "params": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get a specific blueprint details",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints/{blueprint_id}",
        "alias_endpoint": "/zohodesk/api/v1/blueprints/blueprint_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_GetBlueprintDetails"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints___get": {
      "provider_intent": "zohodesk__api__v1__blueprints___get",
      "provider_alias_intent": "/api/v1/blueprints",
      "text": "List all blueprints in a department",
      "category": "Blueprints",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department for which the blueprints are listed"
        },
        "module": {
          "type": "string",
          "text": "Module of the blueprints to be listed",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "To get blueprints by status, allowed values are ACTIVE ,INACTIVE and DRAFT"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get all blueprints in a specific department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints",
        "alias_endpoint": "/zohodesk/api/v1/blueprints",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Listallblueprintsinadepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints___post": {
      "provider_intent": "zohodesk__api__v1__blueprints___post",
      "provider_alias_intent": "/api/v1/blueprints",
      "text": "Create Blueprint",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the blueprint",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of blueprint"
        },
        "active": {
          "type": "boolean",
          "text": "Active Status of blueprint",
          "enum": [
            true,
            false
          ]
        },
        "dynamicTransOwnerType": {
          "type": "string",
          "text": "Dynamic Trans Owner type"
        },
        "module": {
          "type": "string",
          "text": "Module of the Blueprint",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "Department of the Blueprint",
          "required": true
        },
        "layoutId": {
          "type": "number",
          "text": "Layout of Blueprint",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of blueprint",
          "required": true
        },
        "fieldId": {
          "type": "number",
          "text": "Field mapped for Blueprint",
          "required": true
        },
        "criteria": {
          "type": "array",
          "text": "The criteria details for the blueprint"
        },
        "chartData": {
          "type": "object",
          "text": "Blueprint Chart Data",
          "required": true
        },
        "states": {
          "type": "array",
          "text": "State Details",
          "required": true
        },
        "transitions": {
          "type": "array",
          "text": "Transition Details",
          "required": true
        },
        "connections": {
          "type": "array",
          "text": "Transition Connections",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To create a blueprint",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints",
        "alias_endpoint": "/zohodesk/api/v1/blueprints",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_CreateBlueprint"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints__blueprint_id___patch": {
      "provider_intent": "zohodesk__api__v1__blueprints__blueprint_id___patch",
      "provider_alias_intent": "/api/v1/blueprints/blueprint_id",
      "text": "Update a blueprint",
      "category": "Blueprints",
      "method": "PATCH",
      "type": "API",
      "params": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the blueprint"
        },
        "description": {
          "type": "string",
          "text": "Description of blueprint"
        },
        "active": {
          "type": "boolean",
          "text": "Active Status of blueprint",
          "enum": [
            true,
            false
          ]
        },
        "dynamicTransOwnerType": {
          "type": "string",
          "text": "Dynamic Trans Owner type"
        },
        "module": {
          "type": "string",
          "text": "Module of the Blueprint"
        },
        "departmentId": {
          "type": "number",
          "text": "Department of the Blueprint"
        },
        "layoutId": {
          "type": "number",
          "text": "Layout of Blueprint"
        },
        "type": {
          "type": "string",
          "text": "Type of blueprint"
        },
        "fieldId": {
          "type": "number",
          "text": "Field mapped for Blueprint"
        },
        "criteria": {
          "type": "array",
          "text": "The criteria details for the blueprint"
        },
        "chartData": {
          "type": "object",
          "text": "Blueprint Chart Data"
        },
        "states": {
          "type": "array",
          "text": "State Details"
        },
        "transitions": {
          "type": "array",
          "text": "Transition Details"
        },
        "connections": {
          "type": "array",
          "text": "Transition Connections"
        }
      },
      "path": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To update an existing blueprint",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints/{blueprint_id}",
        "alias_endpoint": "/zohodesk/api/v1/blueprints/blueprint_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Updateablueprint"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints__blueprint_id___delete": {
      "provider_intent": "zohodesk__api__v1__blueprints__blueprint_id___delete",
      "provider_alias_intent": "/api/v1/blueprints/blueprint_id",
      "text": "Delete Blueprint",
      "category": "Blueprints",
      "method": "DELETE",
      "type": "API",
      "params": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "blueprint_id": {
          "type": "string",
          "text": "Blueprint ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To delete a specific blueprint",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints/{blueprint_id}",
        "alias_endpoint": "/zohodesk/api/v1/blueprints/blueprint_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints_DeleteBlueprint"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints__reorder___post": {
      "provider_intent": "zohodesk__api__v1__blueprints__reorder___post",
      "provider_alias_intent": "/api/v1/blueprints/reorder",
      "text": "Reorder blueprints",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "Department for which blueprints have to be reordered",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module for which blueprints have to be reordered",
          "required": true
        },
        "ids": {
          "type": "array",
          "text": "Blueprint Ids",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To reorder blueprints in a specific department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints/reorder",
        "alias_endpoint": "/zohodesk/api/v1/blueprints/reorder",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Reorderblueprints"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__blueprint___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__blueprint___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/blueprint",
      "text": "Get Applied Blueprint details of ticket for an user",
      "category": "Blueprints",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Meta information related to the transition owners"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get the applied blueprint details of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/blueprint",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/blueprint",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_GetAppliedBlueprintdetailsofticketforanuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__form___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__form___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/form",
      "text": "Get During transition form",
      "category": "Blueprints",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get During transition form details for the given transition",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/form",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/form",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_GetDuringtransitionform"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__revokeblueprint___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__revokeblueprint___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/revokeblueprint",
      "text": "Revoke Blueprint at Entity Level",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To revoke blueprint from an entity",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/revokeBlueprint",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/revokeblueprint",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_RevokeBlueprintatEntityLevel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__blueprints__value__revoke___post": {
      "provider_intent": "zohodesk__api__v1__blueprints__value__revoke___post",
      "provider_alias_intent": "/api/v1/blueprints/value/revoke",
      "text": "Revoke Blueprint from Blueprint Level",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To revoke all entities from a particular blueprint",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/blueprints/([0-9]+)/revoke",
        "alias_endpoint": "/zohodesk/api/v1/blueprints/value/revoke",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_RevokeBlueprintfromBlueprintLevel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__validatefieldupdates___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__validatefieldupdates___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/validatefieldupdates",
      "text": "Validate transition field updates",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "customFields": {
          "type": "object",
          "text": "Custom Fields"
        },
        "cleartextpattern": {
          "type": "string",
          "text": "Cleartextpattern"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To validate field updates for the given transition",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/validateFieldUpdates",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/validatefieldupdates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Validatetransitionfieldupdates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__perform___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__perform___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/perform",
      "text": "Perform transition",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "APPROVAL": {
          "type": "object",
          "text": "Approval details"
        },
        "RESOLUTION": {
          "type": "object",
          "text": "Resolution details"
        },
        "ATTACHMENT": {
          "type": "object",
          "text": "Attachment Details"
        },
        "REPLY": {
          "type": "object",
          "text": "Reply Content details"
        },
        "COMMENT": {
          "type": "object",
          "text": "Comment Details"
        },
        "SHARING": {
          "type": "object",
          "text": "Sharing Details"
        },
        "FIELD_UPDATE": {
          "type": "object",
          "text": "Fields To Update"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To perform transition for an entity",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/perform",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/perform",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Performtransition"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__discarddraft___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__discarddraft___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/discarddraft",
      "text": "Delete the during actions transition draft",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To delete the during actions transition draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/discardDraft",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/discarddraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Deletetheduringactionstransitiondraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__savedraft___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__savedraft___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/savedraft",
      "text": "Save the during actions transition draft",
      "category": "Blueprints",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "APPROVAL": {
          "type": "object",
          "text": "Drafted Approval details"
        },
        "RESOLUTION": {
          "type": "object",
          "text": "Drafted Resolution details"
        },
        "ATTACHMENT": {
          "type": "object",
          "text": "Drafted Attachment Details"
        },
        "REPLY": {
          "type": "object",
          "text": "Drafted Reply Content details"
        },
        "COMMENT": {
          "type": "object",
          "text": "Drafted Comment Details"
        },
        "SHARING": {
          "type": "object",
          "text": "Sharing Details"
        },
        "FIELD_UPDATE": {
          "type": "object",
          "text": "Drafted Fields To Update"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To save the during actions transition draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/saveDraft",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/savedraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Savetheduringactionstransitiondraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__attachments__attachmentid__content___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transitionid__attachments__attachmentid__content___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transitionid/attachments/attachmentid/content",
      "text": "Get attachment of a transition draft",
      "category": "Blueprints",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        },
        "attachmentId": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        },
        "inline": {
          "type": "boolean",
          "text": "Whether the display is to be inline",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        },
        "attachmentId": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "View a specific attachment added to a transition draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transitionId}/attachments/{attachmentId}/content",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transitionid/attachments/attachmentid/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Getattachmentofatransitiondraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__transitions__transition_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__transitions__transition_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/transitions/transition_id/attachments/attachment_id",
      "text": "Delete attachment of a transition draft",
      "category": "Blueprints",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "transitionId": {
          "type": "string",
          "text": "Transition ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Delete a specific attachment added to a transition draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/transitions/{transition_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/transitions/transition_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Blueprints#Blueprints_Deleteattachmentofatransitiondraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__bug__bugid__tickets___get": {
      "provider_intent": "zohodesk__api__v1__bug__bugid__tickets___get",
      "provider_alias_intent": "/api/v1/bug/bugid/tickets",
      "text": "Get Linked Tickets by Bug Id",
      "category": "BugTracker",
      "method": "GET",
      "type": "API",
      "params": {
        "bugId": {
          "type": "string",
          "text": "Bug ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bugId": {
          "type": "string",
          "text": "Bug ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches support tickets associated with the Bug Id specified in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/bug/{bugId}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/bug/bugid/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#BugTracker#BugTracker_GetLinkedTicketsbyBugId"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours___post": {
      "provider_intent": "zohodesk__api__v1__businesshours___post",
      "provider_alias_intent": "/api/v1/businesshours",
      "text": "Create business hours set",
      "category": "Businesshours",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the business hours set",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Activation status of the business hours set. Values allowed are ACTIVE and INACTIVE",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of the business hours set",
          "required": true
        },
        "holidayListId": {
          "type": "number",
          "text": "ID of the holiday list to associate with the business hours set"
        },
        "timeZoneId": {
          "type": "string",
          "text": "ID of the time zone to associate with the business hours set"
        },
        "businessTimes": {
          "type": "array",
          "text": "Business hours for the week"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a business hours set in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours",
        "alias_endpoint": "/zohodesk/api/v1/businesshours",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours_Createbusinesshoursset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours__businesshourid___get": {
      "provider_intent": "zohodesk__api__v1__businesshours__businesshourid___get",
      "provider_alias_intent": "/api/v1/businesshours/businesshourid",
      "text": "Get business hours set",
      "category": "Businesshours",
      "method": "GET",
      "type": "API",
      "params": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a business hours set configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours/{businessHourId}",
        "alias_endpoint": "/zohodesk/api/v1/businesshours/businesshourid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours_Getbusinesshoursset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours__businesshourid___patch": {
      "provider_intent": "zohodesk__api__v1__businesshours__businesshourid___patch",
      "provider_alias_intent": "/api/v1/businesshours/businesshourid",
      "text": "Update business hours set",
      "category": "Businesshours",
      "method": "PATCH",
      "type": "API",
      "params": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the business hours set"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the business hours set. Values allowed are ACTIVE and INACTIVE"
        },
        "type": {
          "type": "string",
          "text": "Type of the business hours set"
        },
        "holidayListId": {
          "type": "number",
          "text": "ID of the holiday list to associate with the business hours set"
        },
        "timeZoneId": {
          "type": "string",
          "text": "ID of the time zone to associate with the business hours set"
        },
        "businessTimes": {
          "type": "array",
          "text": "Business hours for the week"
        }
      },
      "path": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a business hours set configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours/{businessHourId}",
        "alias_endpoint": "/zohodesk/api/v1/businesshours/businesshourid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours#Businesshours_Updatebusinesshoursset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours__businesshourid___delete": {
      "provider_intent": "zohodesk__api__v1__businesshours__businesshourid___delete",
      "provider_alias_intent": "/api/v1/businesshours/businesshourid",
      "text": "Delete business hours set",
      "category": "Businesshours",
      "method": "DELETE",
      "type": "API",
      "params": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a business hours set from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours/{businessHourId}",
        "alias_endpoint": "/zohodesk/api/v1/businesshours/businesshourid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours#Businesshours_Deletebusinesshoursset"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours___get": {
      "provider_intent": "zohodesk__api__v1__businesshours___get",
      "provider_alias_intent": "/api/v1/businesshours",
      "text": "List business hour sets",
      "category": "Businesshours",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the business hour sets must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of business hour sets to list. Range: 1-50"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the business hour sets. Values allowed are ACTIVE and INACTIVE"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of business hour sets, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours",
        "alias_endpoint": "/zohodesk/api/v1/businesshours",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours_Listbusinesshoursets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__businesshours__businesshourid__relatedrules___get": {
      "provider_intent": "zohodesk__api__v1__businesshours__businesshourid__relatedrules___get",
      "provider_alias_intent": "/api/v1/businesshours/businesshourid/relatedrules",
      "text": "List associated automation rules",
      "category": "Businesshours",
      "method": "GET",
      "type": "API",
      "params": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the rules must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of rules to list. Range: 1-50"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "businessHourId": {
          "type": "string",
          "text": "Business Hour ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of automation rules that include a business hours set,based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/businessHours/{businessHourId}/relatedRules",
        "alias_endpoint": "/zohodesk/api/v1/businesshours/businesshourid/relatedrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Businesshours_Listassociatedautomationrules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id___get": {
      "provider_intent": "zohodeskapi__v1__calls__call_id___get",
      "provider_alias_intent": "api/v1/calls/call_id",
      "text": "Get call",
      "category": "Calls",
      "method": "GET",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the call. Values allowed are: contacts, assignee, tickets, teams, livecalls"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a call",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Getcall"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ, Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls___get": {
      "provider_intent": "zohodeskapi__v1__calls___get",
      "provider_alias_intent": "api/v1/calls",
      "text": "List calls",
      "category": "Calls",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Additional information related to the call. Values allowed are: contacts, assignee, tickets, teams"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the calls must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of calls to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the calls must be fetched"
        },
        "departmentIds": {
          "type": "number",
          "text": "Departments from which the calls need to be queried"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "assignee": {
          "type": "number",
          "text": "Key that filters tickets by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas"
        },
        "startTime": {
          "type": "string",
          "text": "Start time for completing the call. Values allowed are Overdue, Tomorrow, CurrentWeek, CurrentMonth, and Today. You can pass multiple values by separating them with commas"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes whether the call is completed or not",
          "enum": [
            true,
            false
          ]
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the calls by a specific attribute: startTime or createdTime. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a particular number of calls, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls",
        "alias_endpoint": "/zohodeskapi/v1/calls",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Listcalls"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ, Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls___post": {
      "provider_intent": "zohodeskapi__v1__calls___post",
      "provider_alias_intent": "api/v1/calls",
      "text": "Create call",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the call"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department associated with the call and ticket",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "Subject of the call",
          "required": true
        },
        "startTime": {
          "type": "string",
          "text": "Time when the call started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ",
          "required": true
        },
        "direction": {
          "type": "string",
          "text": "Direction of the call: inbound or outbound",
          "required": true
        },
        "duration": {
          "type": "number",
          "text": "Duration of the call in seconds",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Completion status of the call",
          "required": true
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the call is assigned"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the call"
        },
        "description": {
          "type": "string",
          "text": "Description of the call"
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket associated with the call"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the call",
          "required": true
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder associated with the call"
        },
        "recordingUrl": {
          "type": "string",
          "text": "Recording or voice mail URL"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a call entry to your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls",
        "alias_endpoint": "/zohodeskapi/v1/calls",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls#Calls_Createcall"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.CREATE , Desk.activities.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id___patch": {
      "provider_intent": "zohodeskapi__v1__calls__call_id___patch",
      "provider_alias_intent": "api/v1/calls/call_id",
      "text": "Update call",
      "category": "Calls",
      "method": "PATCH",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the call"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department associated with the call and ticket"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the call"
        },
        "startTime": {
          "type": "string",
          "text": "Time when the call started. The value of this key must be recorded in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        },
        "direction": {
          "type": "string",
          "text": "Direction of the call: inbound or outbound"
        },
        "duration": {
          "type": "number",
          "text": "Duration of the call in seconds"
        },
        "status": {
          "type": "string",
          "text": "Completion status of the call"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the call is assigned"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the call"
        },
        "description": {
          "type": "string",
          "text": "Description of the call"
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket associated with the call"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the call"
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder associated with the call"
        },
        "recordingUrl": {
          "type": "string",
          "text": "Recording or voice mail URL"
        }
      },
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a call",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Updatecall"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__calls___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__calls___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/calls",
      "text": "List calls by ticket",
      "category": "Calls",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the calls must be listed"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes if the call was completed or not",
          "enum": [
            true,
            false
          ]
        },
        "isSpam": {
          "type": "boolean",
          "text": "Key that denotes whether to fetch spam calls or not",
          "enum": [
            true,
            false
          ]
        },
        "limit": {
          "type": "number",
          "text": "Number of calls to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: startTime or createdTime. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Allowed values are: contacts, assignee, tickets, teams"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of calls associated with a ticket, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/calls",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/calls",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Listcallsbyticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__calls__movetotrash___post",
      "provider_alias_intent": "/api/v1/calls/movetotrash",
      "text": "Delete calls",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "entityIds": {
          "type": "array",
          "text": "IDs of the activities to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves call entries to the Recycle Bin of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/calls/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Deletecalls"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__deletespam___post": {
      "provider_intent": "zohodesk__api__v1__calls__deletespam___post",
      "provider_alias_intent": "/api/v1/calls/deletespam",
      "text": "Delete spam calls",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "callIds": {
          "type": "array",
          "text": "IDs of the spam calls",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the given spam calls",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/deleteSpam",
        "alias_endpoint": "/zohodesk/api/v1/calls/deletespam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Deletespamcalls"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__call_id__clearlivecall___post": {
      "provider_intent": "zohodesk__api__v1__calls__call_id__clearlivecall___post",
      "provider_alias_intent": "/api/v1/calls/call_id/clearlivecall",
      "text": "Clear live call mapping from an activity",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API clears the live call mapping from an activity",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/{call_id}/clearLiveCall",
        "alias_endpoint": "/zohodesk/api/v1/calls/call_id/clearlivecall",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Clearlivecallmappingfromanactivity"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.calls.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__calls__updatemany___post",
      "provider_alias_intent": "/api/v1/calls/updatemany",
      "text": "Update many calls",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update. The maximum number of IDs allowed is 50",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple calls at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/calls/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Updatemanycalls"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__emptyspam___post": {
      "provider_intent": "zohodesk__api__v1__calls__emptyspam___post",
      "provider_alias_intent": "/api/v1/calls/emptyspam",
      "text": "Empty spam calls",
      "category": "Calls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the activities belong",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all spam calls",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/emptySpam",
        "alias_endpoint": "/zohodesk/api/v1/calls/emptyspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Calls_Emptyspamcalls"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__calls__call_id__comments___post",
      "provider_alias_intent": "api/v1/calls/call_id/comments",
      "text": "Create a call comment",
      "category": "Calls Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText. The default type is html."
        }
      },
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a call",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CallsComments_Createacallcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__calls__call_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/calls/call_id/comments/comment_id",
      "text": "Update a call comment",
      "category": "Calls Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText. The default type is html"
        }
      },
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing call comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CallsComments_Updateacallcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__calls__call_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/calls/call_id/comments/comment_id",
      "text": "Delete a call comment",
      "category": "Calls Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing call comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CallsComments_Deleteacallcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__calls__call_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/calls/call_id/comments/comment_id",
      "text": "Get a call comment",
      "category": "Calls Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a call comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CallsComments_Getacallcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__calls__call_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__calls__call_id__comments___get",
      "provider_alias_intent": "api/v1/calls/call_id/comments",
      "text": "List all call comments",
      "category": "Calls Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No. of comments to fetch",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "call_id": {
          "type": "string",
          "text": "Call ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a call, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/calls/{call_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/calls/call_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CallsComments_Listallcallcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.calls.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__channels___get": {
      "provider_intent": "zohodesk__api__v1__channels___get",
      "provider_alias_intent": "/api/v1/channels",
      "text": "List configured channels",
      "category": "Channels",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches currently installed channels including System, Channel integration and Instant Messaging channels",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/channels",
        "alias_endpoint": "/zohodesk/api/v1/channels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Channels_Listconfiguredchannels"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__like___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__like___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/like",
      "text": "Like topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables users to like a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/like",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/like",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Liketopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__unlike___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__unlike___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/unlike",
      "text": "Unlike topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables users to unlike a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/unlike",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/unlike",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unliketopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.forums.UPDATE , Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__follow___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__follow___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/follow",
      "text": "Follow topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables users to follow a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/follow",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/follow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Followtopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__unfollow___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__unfollow___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/unfollow",
      "text": "Unfollow topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables users to unfollow a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/unfollow",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/unfollow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unfollowtopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__lock___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__lock___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/lock",
      "text": "Lock topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps lock a forum topic, so that further user actions are restricted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/lock",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/lock",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Locktopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__unlock___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__unlock___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/unlock",
      "text": "Unlock topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps unlock a forum topic, so that further user actions can be performed",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/unlock",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/unlock",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unlocktopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__moderate___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__moderate___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/moderate",
      "text": "Moderate topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API allows to set the forum topics as moderate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/moderate",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/moderate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Moderatetopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__unmoderate___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__unmoderate___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/unmoderate",
      "text": "Unmoderate topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps unmoderate a forum topic, which means user comments are published without reviewing",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/unmoderate",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/unmoderate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unmoderatetopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__movetotrash___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/movetotrash",
      "text": "Trash topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves a forum topic to trash of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Trashtopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__move___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__move___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/move",
      "text": "Move topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves a forum topic from one community category to another",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/move",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/move",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Movetopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__associatetags___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__associatetags___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/associatetags",
      "text": "Associate tags to topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "array",
          "text": "Tag phrases",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates quick access/reference tags to a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/associateTags",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/associatetags",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Associatetagstotopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__dissociatetags___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__dissociatetags___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/dissociatetags",
      "text": "Dissociate tags from topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "array",
          "text": "Tag phrases",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes quick access/reference tags from a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/dissociateTags",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/dissociatetags",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Dissociatetagsfromtopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__followers___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__followers___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/followers",
      "text": "List topic followers",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed.",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users who follow a forum topic, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/followers",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopicfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__participants___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__participants___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/participants",
      "text": "List topic participants",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed.",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users who participated in a forum topic, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/participants",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/participants",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopicparticipants"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__voters___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__voters___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/voters",
      "text": "List topic voters",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed.",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users who voted in a forum topic, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/voters",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/voters",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopicvoters"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics___get",
      "provider_alias_intent": "/api/v1/communitytopics",
      "text": "List forum topics",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be listed"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list",
          "required": true
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topics to list must be sticky posts or not",
          "enum": [
            true,
            false
          ]
        },
        "unreplied": {
          "type": "boolean",
          "text": "Key that defines whether the topics to list must contain comments or not",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "Type of topics to list. Values allowed are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION."
        },
        "tagName": {
          "type": "string",
          "text": "Tag by which topics must be filtered"
        },
        "label": {
          "type": "string",
          "text": "Status label by which topics must be filtered. The value of this key varies according to the topic type."
        },
        "sortBy": {
          "type": "string",
          "text": "Sort topics list by createdtime or modified time",
          "required": true
        },
        "isAscending": {
          "type": "boolean",
          "text": "Sort topics list in ascending or descending order",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "startTime": {
          "type": "string",
          "text": "Starting time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
        },
        "endTime": {
          "type": "string",
          "text": "Ending time of the time range in which the topics should have been created. The value must be expressed according to the GMT time zone."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of forum topics, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listforumtopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id___get",
      "provider_alias_intent": "/api/v1/communitytopics/id",
      "text": "Get topic",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the topics. Values allowed are: seo, and featuredImage"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a forum topic from the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Gettopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopicbypermalink___get": {
      "provider_intent": "zohodesk__api__v1__communitytopicbypermalink___get",
      "provider_alias_intent": "/api/v1/communitytopicbypermalink",
      "text": "Get topic by permalink",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "permalink": {
          "type": "string",
          "text": "permalink of the topic",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the topics. Values allowed are: seo, and featuredImage"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a forum topic, based on the permalink in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopicByPermalink",
        "alias_endpoint": "/zohodesk/api/v1/communitytopicbypermalink",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Gettopicbypermalink"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics___post",
      "provider_alias_intent": "/api/v1/communitytopics",
      "text": "Add topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Title of the topic",
          "required": true
        },
        "permalink": {
          "type": "String",
          "text": "Permalink of the topic to be created"
        },
        "content": {
          "type": "string",
          "text": "Body content of the topic",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of topic. Values allowed are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION",
          "required": true
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the community category in which the topic must be posted",
          "required": true
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topic must be pinned to the topics list page or not",
          "enum": [
            true,
            false
          ]
        },
        "notifyMe": {
          "type": "boolean",
          "text": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the topic"
        },
        "tags": {
          "type": "array",
          "text": "Tag phrases"
        },
        "mailTo": {
          "type": "array",
          "text": "Email IDs to which the topic must be sent after publishing"
        },
        "seo": {
          "type": "object",
          "text": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords, useTitleAsPageTitle, description, title"
        },
        "featuredImage": {
          "type": "object",
          "text": "Specifies the id of the uploaded image to display as a featured image."
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps add a forum topic in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Addtopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id___patch": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id___patch",
      "provider_alias_intent": "/api/v1/communitytopics/id",
      "text": "Update topic",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Title of the topic"
        },
        "content": {
          "type": "string",
          "text": "Body content of the topic"
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topic must be pinned to the topics list page or not",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "Type of topic. Values allowed are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION."
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the topic"
        },
        "label": {
          "type": "string",
          "text": "Status label of the topic. Values vary according to topic type."
        },
        "notifyMentions": {
          "type": "boolean",
          "text": "Whether to notify mentioned users while updating content",
          "enum": [
            true,
            false
          ]
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the community category in which the topic must be posted"
        },
        "tags": {
          "type": "array",
          "text": "Tag phrases"
        },
        "notifyMe": {
          "type": "boolean",
          "text": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not",
          "enum": [
            true,
            false
          ]
        },
        "seo": {
          "type": "object",
          "text": "SEO meta tags to describe the page in search engine results"
        },
        "featuredImage": {
          "type": "object",
          "text": "ID of the uploaded image to display as a featured image"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update a published forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updatetopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments",
      "text": "Add comment",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment",
          "required": true
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the comment"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps add a comment to a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Addcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__replies___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__replies___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/replies",
      "text": "Add reply",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment",
          "required": true
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the comment"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps add a reply to a comment on a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/replies",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/replies",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Addreply"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id___patch": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id___patch",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id",
      "text": "Update comment",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment/reply"
        },
        "attachmentIds": {
          "type": "array",
          "text": "Ids of the attachments added for this topic"
        },
        "isBestComment": {
          "type": "boolean",
          "text": "Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment.",
          "enum": [
            true,
            false
          ]
        },
        "notifyMentions": {
          "type": "boolean",
          "text": "whether to notify mentioned user while updateing content",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update a published comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updatecomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__replies__id___patch": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__replies__id___patch",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/replies/id",
      "text": "Update reply",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment/reply"
        },
        "attachmentIds": {
          "type": "array",
          "text": "Ids of the attachments added for this topic"
        },
        "isBestComment": {
          "type": "boolean",
          "text": "Key that defines whether the comment is the best comment recorded on the topic. A topic can have only on best comment.",
          "enum": [
            true,
            false
          ]
        },
        "notifyMentions": {
          "type": "boolean",
          "text": "whether to notify mentioned user while updateing content",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update a published reply",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/replies/{id}",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/replies/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updatereply"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments",
      "text": "List topic comments",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the comments must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of comments to list",
          "required": true
        },
        "latestCommentsFirst": {
          "type": "boolean",
          "text": "Key that defines the listing order of the comments",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments on a topic, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopiccomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__value___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__value___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/value",
      "text": "Get topic comment",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a comment received on a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Gettopiccomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__movetotrash___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/movetotrash",
      "text": "Trash comment",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a comment from a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Trashcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__replies__id__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__replies__id__movetotrash___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/replies/id/movetotrash",
      "text": "Trash reply",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a reply to a topic comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/replies/{id}/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/replies/id/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Trashreply"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityattachments___post": {
      "provider_intent": "zohodesk__api__v1__communityattachments___post",
      "provider_alias_intent": "/api/v1/communityattachments",
      "text": "Add attachment",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File to upload"
        },
        "source": {
          "type": "string",
          "text": "Source of attaching Doc. Values allowed are: zohodocs, gdrive, dropbox, box, skydrive, evernote, office365, workdrive",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "Id of the attaching Doc",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "Name of the attaching Doc",
          "required": true
        },
        "isPublic": {
          "type": "boolean",
          "text": "Public/Private status of the attaching Doc",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "DocType of the attaching Doc. Values allowed are: file, presentation, pdf, document, spreadsheet"
        },
        "filePath": {
          "type": "string",
          "text": "File path of the attaching Doc (For Dropbox)"
        },
        "accountId": {
          "type": "string",
          "text": "Account Id of the Dropbox"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API uploads files to the storage space allocated for the community module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityAttachments",
        "alias_endpoint": "/zohodesk/api/v1/communityattachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Addattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityattachments__id__content___get": {
      "provider_intent": "zohodesk__api__v1__communityattachments__id__content___get",
      "provider_alias_intent": "/api/v1/communityattachments/id/content",
      "text": "Get unassociated attachment",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Unassociated attachments are those attachments uploaded to a community topic or comment that is not yet published or saved as a draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityAttachments/{id}/content",
        "alias_endpoint": "/zohodesk/api/v1/communityattachments/id/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getunassociatedattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__attachments__id__content___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__attachments__id__content___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/attachments/id/content",
      "text": "Get topic attachment",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a file attachment from a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/attachments/{id}/content",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/attachments/id/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Gettopicattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__attachments__id__content___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__attachments__id__content___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/attachments/id/content",
      "text": "Get comment attachment",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a file attachment from a topic comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/attachments/{id}/content",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/attachments/id/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getcommentattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__replies__id__attachments__id__content___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__replies__id__attachments__id__content___get",
      "provider_alias_intent": "/api/v1/communitytopics/id/replies/id/attachments/id/content",
      "text": "Get reply attachment",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a file attachment from a reply to a topic comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/replies/{id}/attachments/{id}/content",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/replies/id/attachments/id/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getreplyattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__markspam___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__markspam___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/markspam",
      "text": "Report topic as spam",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "reason": {
          "type": "string",
          "text": "Reason for marking the topic as spam",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks a forum topic as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/markSpam",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/markspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Reporttopicasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__community__markalltopicsasspam___post": {
      "provider_intent": "zohodesk__api__v1__community__markalltopicsasspam___post",
      "provider_alias_intent": "/api/v1/community/markalltopicsasspam",
      "text": "Report multiple topics as spam",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics that must be marked as spam",
          "required": true
        },
        "reason": {
          "type": "string",
          "text": "Reason for marking the topic as spam",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks multiple forum topics as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/community/markAllTopicsAsSpam",
        "alias_endpoint": "/zohodesk/api/v1/community/markalltopicsasspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Reportmultipletopicsasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__id__comments__id__markspam___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__id__comments__id__markspam___post",
      "provider_alias_intent": "/api/v1/communitytopics/id/comments/id/markspam",
      "text": "Report topic comment as spam",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "reason": {
          "type": "string",
          "text": "Reason for marking the topic as spam",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks a comment on a forum topic as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/{id}/comments/{id}/markSpam",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/id/comments/id/markspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Reporttopiccommentasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__community__markallcommentsasspam___post": {
      "provider_intent": "zohodesk__api__v1__community__markallcommentsasspam___post",
      "provider_alias_intent": "/api/v1/community/markallcommentsasspam",
      "text": "Report multiple comments as spam",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "commentIds": {
          "type": "array",
          "text": "IDs of the topics that must be marked as spam",
          "required": true
        },
        "reason": {
          "type": "string",
          "text": "Reason for marking the topic as spam",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks multiple comments on a forum topic as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/community/markAllCommentsAsSpam",
        "alias_endpoint": "/zohodesk/api/v1/community/markallcommentsasspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Reportmultiplecommentsasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__lock___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__lock___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/lock",
      "text": "Lock category or forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API locks a community category or forum and restricts posting access to users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/lock",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/lock",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Lockcategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__enable___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__enable___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/enable",
      "text": "Enable category or forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables a community category or forum and provides posting access to users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/enable",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/enable",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Enablecategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__disable___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__disable___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/disable",
      "text": "Disable category or forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API disables a community category or forum and restricts posting access to users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/disable",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/disable",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Disablecategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__follow___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__follow___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/follow",
      "text": "Follow a category or forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps users to follow a community category or forum",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/follow",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/follow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Followacategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__unfollow___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__unfollow___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/unfollow",
      "text": "Unfollow a category or forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps end-users unfollow a community category or forum",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/unfollow",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/unfollow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unfollowacategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value___delete": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value___delete",
      "provider_alias_intent": "/api/v1/communitycategory/value",
      "text": "Delete forum",
      "category": "Community",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a forum from a community category. Keep in mind that only empty forums can be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Deleteforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__sort___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__sort___post",
      "provider_alias_intent": "/api/v1/communitycategory/sort",
      "text": "Sort categories",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "categoryIds": {
          "type": "array",
          "text": "IDs of the community categories that must be sorted",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sorts community categories in a particular order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/sort",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/sort",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Sortcategories"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__sort___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__sort___post",
      "provider_alias_intent": "/api/v1/communitycategory/value/sort",
      "text": "Sort forums",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "categoryIds": {
          "type": "array",
          "text": "IDs of the community categories that must be sorted",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sorts forums in a particular order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/sort",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/sort",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Sortforums"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value___get": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value___get",
      "provider_alias_intent": "/api/v1/communitycategory/value",
      "text": "Get category or forum",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Additional information related to the category or forum"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a community category or forum",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getcategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategorybypermalink___get": {
      "provider_intent": "zohodesk__api__v1__communitycategorybypermalink___get",
      "provider_alias_intent": "/api/v1/communitycategorybypermalink",
      "text": "Get category or forum by permalink",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "permalink": {
          "type": "string",
          "text": "Permalink of the category or forum to fetch",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the category or forum. Values allowed are: postCount, followersCount, and commentCount."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a community category or forum, based on the permalink in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategoryByPermalink",
        "alias_endpoint": "/zohodesk/api/v1/communitycategorybypermalink",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getcategoryorforumbypermalink"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory___post": {
      "provider_intent": "zohodesk__api__v1__communitycategory___post",
      "provider_alias_intent": "/api/v1/communitycategory",
      "text": "Add forum",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the forum"
        },
        "parentCategoryId": {
          "type": "number",
          "text": "ID of the community category under which the forum must be added"
        },
        "description": {
          "type": "string",
          "text": "A brief description of the community category or forum"
        },
        "visibility": {
          "type": "string",
          "text": "Visibility setting of the community category or forum. Values allowed are: ALL, LOGGED_IN_USERS, GROUPS and MODERATORS"
        },
        "post": {
          "type": "object",
          "text": "Post permission setting of the community category or forum"
        },
        "respond": {
          "type": "object",
          "text": "Respond permission setting of the community category or forum"
        },
        "moderators": {
          "type": "array",
          "text": "Agents who moderate the community category or forum"
        },
        "groupIds": {
          "type": "array",
          "text": "Group Ids to associate"
        },
        "moderation": {
          "type": "string",
          "text": "Moderation setting for the community category or forum. Values allowed are: NONE (no moderation), ALL_POSTS (all posts of category will be moderated) and FIRST_POST (only the first forum post of users will be moderated)."
        },
        "canAutoConvertTicket": {
          "type": "boolean",
          "text": "Key that defines whether topics posted in the forum must be automatically converted into tickets or not",
          "enum": [
            true,
            false
          ]
        },
        "associatedDepartmentIds": {
          "type": "array",
          "text": "IDs of the deparments to be associated with category"
        },
        "deparmentIdForTicketCreation": {
          "type": "number",
          "text": "ID of the deparment in which the ticket must be created"
        },
        "logoId": {
          "type": "number",
          "text": "ID of the uploaded community category logo"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a forum in a community category",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Addforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory___get": {
      "provider_intent": "zohodesk__api__v1__communitycategory___get",
      "provider_alias_intent": "/api/v1/communitycategory",
      "text": "List categories",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Additional information related to the categories. Values allowed are: postCount, followersCount, and commentCount."
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department for which the categories to be filtered"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of community categories",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Listcategories"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value___patch": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value___patch",
      "provider_alias_intent": "/api/v1/communitycategory/value",
      "text": "Update category or forum",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the community category or forum"
        },
        "description": {
          "type": "string",
          "text": "A brief description of the community category or forum"
        },
        "visibility": {
          "type": "string",
          "text": "Visibility setting of the community category or forum. Values allowed are: ALL, LOGGED_IN_USERS, GROUPS, AGENTS, and MODERATORS."
        },
        "post": {
          "type": "object",
          "text": "Post permission setting of the community category or forum."
        },
        "respond": {
          "type": "object",
          "text": "Respond permission setting of the community category or forum."
        },
        "moderators": {
          "type": "array",
          "text": "Agents who moderate the community category or forum"
        },
        "groupIds": {
          "type": "array",
          "text": "Group Ids to associate"
        },
        "moderation": {
          "type": "string",
          "text": "Moderation setting for the community category or forum. Values allowed are: NONE (no moderation), ALL_POSTS (all posts of category will be moderated), and FIRST_POST (only the first forum post of users will be moderated)."
        },
        "canAutoConvertTicket": {
          "type": "boolean",
          "text": "Key that defines whether topics posted in the forum must be automatically converted into tickets or not",
          "enum": [
            true,
            false
          ]
        },
        "associatedDepartmentIds": {
          "type": "array",
          "text": "IDs of the departments to be associated with category"
        },
        "deparmentIdForTicketCreation": {
          "type": "number",
          "text": "ID of the department in which the ticket must be created"
        },
        "logoId": {
          "type": "number",
          "text": "ID of the uploaded community category logo"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a category or forum",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updatecategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__logo__value___get": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__logo__value___get",
      "provider_alias_intent": "/api/v1/communitycategory/value/logo/value",
      "text": "Get category logo",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the logo of a community category",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/logo/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/logo/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Getcategorylogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycategory__value__followers___get": {
      "provider_intent": "zohodesk__api__v1__communitycategory__value__followers___get",
      "provider_alias_intent": "/api/v1/communitycategory/value/followers",
      "text": "List followers of category or forum",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list",
          "required": true
        },
        "userType": {
          "type": "string",
          "text": "To filter agent and end user"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users who follow a community category or forum, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityCategory/([0-9]+)/followers",
        "alias_endpoint": "/zohodesk/api/v1/communitycategory/value/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listfollowersofcategoryorforum"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopictypes___get": {
      "provider_intent": "zohodesk__api__v1__communitytopictypes___get",
      "provider_alias_intent": "/api/v1/communitytopictypes",
      "text": "Get topic types",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the topic types defined in the user community of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopicTypes",
        "alias_endpoint": "/zohodesk/api/v1/communitytopictypes",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Gettopictypes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopictypes___patch": {
      "provider_intent": "zohodesk__api__v1__communitytopictypes___patch",
      "provider_alias_intent": "/api/v1/communitytopictypes",
      "text": "Update topic type preferences",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "defaultTopicType": {
          "type": "string",
          "text": "Topic type to set as the default option in the user community"
        },
        "enabledTopicTypes": {
          "type": "array",
          "text": "Topic types to enable in the user community"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps set the default topic type and enable/disable other topic types in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopicTypes",
        "alias_endpoint": "/zohodesk/api/v1/communitytopictypes",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updatetopictypepreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopictypes__disable___post": {
      "provider_intent": "zohodesk__api__v1__communitytopictypes__disable___post",
      "provider_alias_intent": "/api/v1/communitytopictypes/disable",
      "text": "Disable topic type",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "changeExisitingTopicToType": {
          "type": "string",
          "text": "Topic type that should be applied to existing topics mapped to the disabled type",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Topic type that must be disabled",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps to disable topic types in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopicTypes/disable",
        "alias_endpoint": "/zohodesk/api/v1/communitytopictypes/disable",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Disabletopictype"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitypreferences___get": {
      "provider_intent": "zohodesk__api__v1__communitypreferences___get",
      "provider_alias_intent": "/api/v1/communitypreferences",
      "text": "Get community preferences",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the settings defined for the user community in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityPreferences",
        "alias_endpoint": "/zohodesk/api/v1/communitypreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getcommunitypreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitypreferences___post": {
      "provider_intent": "zohodesk__api__v1__communitypreferences___post",
      "provider_alias_intent": "/api/v1/communitypreferences",
      "text": "Set community preferences",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "landingPage": {
          "type": "string",
          "text": "Key that determines the content to display on the home page of the user community",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps define the settings for the user community in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityPreferences",
        "alias_endpoint": "/zohodesk/api/v1/communitypreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Setcommunitypreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__value___patch": {
      "provider_intent": "zohodesk__api__v1__communityusers__value___patch",
      "provider_alias_intent": "/api/v1/communityusers/value",
      "text": "Update user status in community",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "isModerated": {
          "type": "boolean",
          "text": "Key that defines whether the user is moderated or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the moderation status of end-users in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Updateuserstatusincommunity"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__value__follow___post": {
      "provider_intent": "zohodesk__api__v1__communityusers__value__follow___post",
      "provider_alias_intent": "/api/v1/communityusers/value/follow",
      "text": "Follow user",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps to follow users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/([0-9]+)/follow",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/value/follow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Followuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__value__unfollow___post": {
      "provider_intent": "zohodesk__api__v1__communityusers__value__unfollow___post",
      "provider_alias_intent": "/api/v1/communityusers/value/unfollow",
      "text": "Unfollow user",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps to unfollow users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/([0-9]+)/unfollow",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/value/unfollow",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Unfollowuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__approve___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__approve___post",
      "provider_alias_intent": "/api/v1/communitytopics/approve",
      "text": "Approve topics",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps to approve topics and publish them on the forum",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/approve",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/approve",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Approvetopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__restore___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__restore___post",
      "provider_alias_intent": "/api/v1/communitytopics/restore",
      "text": "Restore trashed topics",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API restores topics from trash",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/restore",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/restore",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Restoretrashedtopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__movetotrash___post",
      "provider_alias_intent": "/api/v1/communitytopics/movetotrash",
      "text": "Trash unmoderated topics",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API trashes forum topics that are yet to be moderated for publishing",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Trashunmoderatedtopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics___delete": {
      "provider_intent": "zohodesk__api__v1__communitytopics___delete",
      "provider_alias_intent": "/api/v1/communitytopics",
      "text": "Permanently delete topics",
      "category": "Community",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API permanently deletes forum topics from the trash",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Permanentlydeletetopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__unmoderate___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__unmoderate___post",
      "provider_alias_intent": "/api/v1/communitytopics/unmoderate",
      "text": "Unmoderate topics",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "topicIds": {
          "type": "array",
          "text": "IDs of the topics",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API unmoderate the moderated forum topics",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/unmoderate",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/unmoderate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unmoderatetopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycomments__approve___post": {
      "provider_intent": "zohodesk__api__v1__communitycomments__approve___post",
      "provider_alias_intent": "/api/v1/communitycomments/approve",
      "text": "Approve comments",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "commentIds": {
          "type": "array",
          "text": "Array of comment ids",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API approves comments that are pending moderation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityComments/approve",
        "alias_endpoint": "/zohodesk/api/v1/communitycomments/approve",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Approvecomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycomments__restore___post": {
      "provider_intent": "zohodesk__api__v1__communitycomments__restore___post",
      "provider_alias_intent": "/api/v1/communitycomments/restore",
      "text": "Restore trashed comments",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "commentIds": {
          "type": "array",
          "text": "Array of comment ids",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API restores comments that were trashed from forum topics",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityComments/restore",
        "alias_endpoint": "/zohodesk/api/v1/communitycomments/restore",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Restoretrashedcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycomments__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__communitycomments__movetotrash___post",
      "provider_alias_intent": "/api/v1/communitycomments/movetotrash",
      "text": "Trash unmoderated comments",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "commentIds": {
          "type": "array",
          "text": "Array of comment ids",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API trashes comments that are yet to be approved for publishing on a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityComments/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/communitycomments/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Trashunmoderatedcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitycomments___delete": {
      "provider_intent": "zohodesk__api__v1__communitycomments___delete",
      "provider_alias_intent": "/api/v1/communitycomments",
      "text": "Permanently delete comments",
      "category": "Community",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "commentIds": {
          "type": "array",
          "text": "Array of comment ids",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API permanently deletes comments from the trash of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityComments",
        "alias_endpoint": "/zohodesk/api/v1/communitycomments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Permanentlydeletecomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymoderatedusers___get": {
      "provider_intent": "zohodesk__api__v1__communitymoderatedusers___get",
      "provider_alias_intent": "/api/v1/communitymoderatedusers",
      "text": "List moderated users",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list, required, default: 25, range: 1-25",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of moderated end-users, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityModeratedUsers",
        "alias_endpoint": "/zohodesk/api/v1/communitymoderatedusers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Listmoderatedusers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__unmoderate___post": {
      "provider_intent": "zohodesk__api__v1__communityusers__unmoderate___post",
      "provider_alias_intent": "/api/v1/communityusers/unmoderate",
      "text": "Unmoderate users",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users for whom moderation must be disabled",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API disables moderation for end-users in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/unmoderate",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/unmoderate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Unmoderateusers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__id__followers___get": {
      "provider_intent": "zohodesk__api__v1__communityusers__id__followers___get",
      "provider_alias_intent": "/api/v1/communityusers/id/followers",
      "text": "List followers of user",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the users must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list, required, default: 25, range: 1-25",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists followers of a user, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/{id}/followers",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/id/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listfollowersofuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__id___get": {
      "provider_intent": "zohodesk__api__v1__communityusers__id___get",
      "provider_alias_intent": "/api/v1/communityusers/id",
      "text": "Get user details",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the user. Value allowed is stats"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of an user from the community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/{id}",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Getuserdetails"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__value__topics___get": {
      "provider_intent": "zohodesk__api__v1__communityusers__value__topics___get",
      "provider_alias_intent": "/api/v1/communityusers/value/topics",
      "text": "List topics by user",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed. Default: 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list. Default: 25, Range: 1-25",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Type of topics. Values allowed are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION"
        },
        "startTime": {
          "type": "string",
          "text": "Starting time of the time range in which the topics should have been created. Must be in GMT time zone"
        },
        "endTime": {
          "type": "string",
          "text": "Ending time of the time range in which the topics should have been created. Must be in GMT time zone"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of topics by a user, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/([0-9]+)/topics",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/value/topics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopicsbyuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communityusers__value__comments___get": {
      "provider_intent": "zohodesk__api__v1__communityusers__value__comments___get",
      "provider_alias_intent": "/api/v1/communityusers/value/comments",
      "text": "List comments by user",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed. Default: 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list. Default: 25, Range: 1-25",
          "required": true
        },
        "startTime": {
          "type": "string",
          "text": "Starting time of the time range in which the topics should have been created. Must be in GMT time zone"
        },
        "endTime": {
          "type": "string",
          "text": "Ending time of the time range in which the topics should have been created. Must be in GMT time zone"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments by a user, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityUsers/([0-9]+)/comments",
        "alias_endpoint": "/zohodesk/api/v1/communityusers/value/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listcommentsbyuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymoderation__topics___get": {
      "provider_intent": "zohodesk__api__v1__communitymoderation__topics___get",
      "provider_alias_intent": "/api/v1/communitymoderation/topics",
      "text": "List topics pending moderation",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed. Default: 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list. Default: 25, Range: 1-25",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Moderation status of the topics. Values allowed are: AWAITINGAPPROVAL, SPAM, and TRASHED",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of forum topics that are pending moderation, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityModeration/topics",
        "alias_endpoint": "/zohodesk/api/v1/communitymoderation/topics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listtopicspendingmoderation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymoderation__comments___get": {
      "provider_intent": "zohodesk__api__v1__communitymoderation__comments___get",
      "provider_alias_intent": "/api/v1/communitymoderation/comments",
      "text": "List comments pending moderation",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed. Default: 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list. Default: 25, Range: 1-25",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Moderation status of the topics. Values allowed are: AWAITINGAPPROVAL, SPAM, and TRASHED",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments that are pending moderation, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityModeration/comments",
        "alias_endpoint": "/zohodesk/api/v1/communitymoderation/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listcommentspendingmoderation"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__savedraft___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__savedraft___post",
      "provider_alias_intent": "/api/v1/communitytopics/savedraft",
      "text": "Draft topic",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Title of the topic",
          "required": true
        },
        "permalink": {
          "type": "string",
          "text": "Permalink of the topic to be created"
        },
        "content": {
          "type": "string",
          "text": "Body content of the topic",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Types of Topics. The allowed values are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION",
          "required": true
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the community category in which the topic must be posted",
          "required": true
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topic must be pinned to the topics list page or not",
          "enum": [
            true,
            false
          ]
        },
        "notifyMe": {
          "type": "boolean",
          "text": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the topic"
        },
        "tags": {
          "type": "array",
          "text": "Tag phrases"
        },
        "seo": {
          "type": "object",
          "text": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords, useTitleAsPageTitle, description, title"
        },
        "featuredImage": {
          "type": "object",
          "text": "Specifies the id of the uploaded image to display as a featured image "
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API saves a draft of a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/saveDraft",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/savedraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Drafttopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__updatedraft___put": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__updatedraft___put",
      "provider_alias_intent": "/api/v1/communitytopics/value/updatedraft",
      "text": "Update Drafted Topic",
      "category": "Community",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Title of the topic",
          "required": true
        },
        "permalink": {
          "type": "string",
          "text": "Permalink of the topic to be created"
        },
        "content": {
          "type": "string",
          "text": "Body content of the topic",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Types of Topics. The allowed values are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION",
          "required": true
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the community category in which the topic must be posted",
          "required": true
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topic must be pinned to the topics list page or not",
          "enum": [
            true,
            false
          ]
        },
        "notifyMe": {
          "type": "boolean",
          "text": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the topic"
        },
        "tags": {
          "type": "array",
          "text": "Tag phrases"
        },
        "seo": {
          "type": "object",
          "text": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords, useTitleAsPageTitle, description, title"
        },
        "featuredImage": {
          "type": "object",
          "text": "Specifies the id of the uploaded image to display as a featured image "
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the draft of a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/updateDraft",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/updatedraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_UpdateDraftedTopic"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__publishdraft___post": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__publishdraft___post",
      "provider_alias_intent": "/api/v1/communitytopics/value/publishdraft",
      "text": "Publish topic draft",
      "category": "Community",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Title of the topic",
          "required": true
        },
        "permalink": {
          "type": "string",
          "text": "Permalink of the topic to be created"
        },
        "content": {
          "type": "string",
          "text": "Body content of the topic",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Types of Topics. The allowed values are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION",
          "required": true
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the community category in which the topic must be posted",
          "required": true
        },
        "isSticky": {
          "type": "boolean",
          "text": "Key that defines whether the topic must be pinned to the topics list page or not",
          "enum": [
            true,
            false
          ]
        },
        "notifyMe": {
          "type": "boolean",
          "text": "Key that defines whether the creator of the topic must be notified about further user actions on the topic or not",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "IDs of files to attach to the topic"
        },
        "tags": {
          "type": "array",
          "text": "Tag phrases"
        },
        "mailTo": {
          "type": "array",
          "text": "Email IDs to which the topic must be sent after publishing"
        },
        "seo": {
          "type": "object",
          "text": "The list below includes the SEO meta tags to describe your page to appear in the search engine results. keywords, useTitleAsPageTitle, description, title"
        },
        "featuredImage": {
          "type": "object",
          "text": "Specifies the id of the uploaded image to display as a featured image "
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API publishes the draft of a forum topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/publishDraft",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/publishdraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Publishtopicdraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__deletedraft___delete": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__deletedraft___delete",
      "provider_alias_intent": "/api/v1/communitytopics/value/deletedraft",
      "text": "Delete topic draft",
      "category": "Community",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a topic draft from the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/deleteDraft",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/deletedraft",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Deletetopicdraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymoderation__counts___get": {
      "provider_intent": "zohodesk__api__v1__communitymoderation__counts___get",
      "provider_alias_intent": "/api/v1/communitymoderation/counts",
      "text": "Get moderation stats",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category for which the statistics must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches statistics related to topic/comment moderation in the user community",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityModeration/counts",
        "alias_endpoint": "/zohodesk/api/v1/communitymoderation/counts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community_Getmoderationstats"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymoderatedtopics___get": {
      "provider_intent": "zohodesk__api__v1__communitymoderatedtopics___get",
      "provider_alias_intent": "/api/v1/communitymoderatedtopics",
      "text": "List moderated topics",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the topics must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of topics to list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of moderated topics, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityModeratedTopics",
        "alias_endpoint": "/zohodesk/api/v1/communitymoderatedtopics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Listmoderatedtopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__permalink__availability___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__permalink__availability___get",
      "provider_alias_intent": "/api/v1/communitytopics/permalink/availability",
      "text": "Check Permalink Availability",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "permalink": {
          "type": "string",
          "text": "Permalink for which the availability needs to be checked",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "API to check whether the given permalink is available",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/permalink/availability",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/permalink/availability",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_CheckPermalinkAvailability"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.GET",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__permalinks___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__permalinks___get",
      "provider_alias_intent": "/api/v1/communitytopics/value/permalinks",
      "text": "Get Topic Permalinks",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "API to get all permalinks of a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/permalinks",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/permalinks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_GetTopicPermalinks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.GET",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__permalinks___patch": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__permalinks___patch",
      "provider_alias_intent": "/api/v1/communitytopics/value/permalinks",
      "text": "Update Topic Permalinks",
      "category": "Community",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "primaryPermalink": {
          "type": "string",
          "text": "Holds the primary permalink of a topic"
        },
        "secondaryPermalink": {
          "type": "array",
          "text": "Holds the secondary permalink of a topic as array"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "API to update all permalinks of a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/permalinks",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/permalinks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_UpdateTopicPermalinks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.PATCH",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitytopics__value__voters__trend___get": {
      "provider_intent": "zohodesk__api__v1__communitytopics__value__voters__trend___get",
      "provider_alias_intent": "/api/v1/communitytopics/value/voters/trend",
      "text": "Topic voters trend",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "startTime": {
          "type": "string",
          "text": "Starting time of the time range for which the statistics should be fetched. The value must be expressed according to the GMT time zone"
        },
        "endTime": {
          "type": "string",
          "text": "Ending time of the time range for which the statistics should be fetched. The value must be expressed according to the GMT time zone"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get trend of voters of a topic",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityTopics/([0-9]+)/voters/trend",
        "alias_endpoint": "/zohodesk/api/v1/communitytopics/value/voters/trend",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_Topicvoterstrend"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__communitymydraftedtopics___get": {
      "provider_intent": "zohodesk__api__v1__communitymydraftedtopics___get",
      "provider_alias_intent": "/api/v1/communitymydraftedtopics",
      "text": "List all Drafted Topics",
      "category": "Community",
      "method": "GET",
      "type": "API",
      "params": {
        "categoryId": {
          "type": "number",
          "text": "ID of the community category from which the topics must be fetched"
        },
        "type": {
          "type": "string",
          "text": "Types of topics. The allowed values are: ANNOUNCEMENT, DISCUSSION, IDEA, PROBLEM, and QUESTION."
        },
        "from": {
          "type": "number",
          "text": "Index from which list is retrieved and it starts from 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Limit for listing drafted topics",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort topics list by created time or modified time",
          "required": true
        },
        "isAscending": {
          "type": "boolean",
          "text": "Sort topics list in ascending or descending order",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API List all Drafted Topics of the current User",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/communityMyDraftedTopics",
        "alias_endpoint": "/zohodesk/api/v1/communitymydraftedtopics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Community#Community_ListallDraftedTopics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.community.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groupcontactduplicatevalues___get": {
      "provider_intent": "zohodesk__api__v1__groupcontactduplicatevalues___get",
      "provider_alias_intent": "/api/v1/groupcontactduplicatevalues",
      "text": "List duplicate contacts",
      "category": "Contact Deduplication",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the duplicate entries of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groupContactDuplicateValues",
        "alias_endpoint": "/zohodesk/api/v1/groupcontactduplicatevalues",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactDeduplication_Listduplicatecontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groupcontacts___get": {
      "provider_intent": "zohodesk__api__v1__groupcontacts___get",
      "provider_alias_intent": "/api/v1/groupcontacts",
      "text": "List details of duplicate contacts",
      "category": "Contact Deduplication",
      "method": "GET",
      "type": "API",
      "params": {
        "fieldName": {
          "type": "string",
          "text": "Name of the field whose values must be matched for deduplication. Values allowed are: firstName, lastName, email, secondaryEmail, phone, fullName, bothEmail. max chars: 100",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the contacts by a specific attribute: firstName, lastName, fullName, phone, email, account, createdTime, modifiedTime. max chars: 100"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the contacts must be fetched. Default: 0, range: >=0"
        },
        "limit": {
          "type": "number",
          "text": "Number of contacts to fetch. Range: 1-100"
        },
        "fieldValues": {
          "type": "string",
          "text": "Actual values in each field related to the contact. max chars: 100",
          "required": true
        },
        "include": {
          "type": "array",
          "text": "Secondary information related to the contact. Value allowed is: accounts."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all the details of duplicate contacts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groupContacts",
        "alias_endpoint": "/zohodesk/api/v1/groupcontacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactDeduplication#ContactDeduplication_Listdetailsofduplicatecontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contactsdeduplication__defaultfieldname___get": {
      "provider_intent": "zohodesk__api__v1__contactsdeduplication__defaultfieldname___get",
      "provider_alias_intent": "/api/v1/contactsdeduplication/defaultfieldname",
      "text": "Get name of default field",
      "category": "Contact Deduplication",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the name of the field set as the default field for contact deduplication",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contactsDeduplication/defaultFieldName",
        "alias_endpoint": "/zohodesk/api/v1/contactsdeduplication/defaultfieldname",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactDeduplication_Getnameofdefaultfield"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contactsdeduplication__defaultfieldname___post": {
      "provider_intent": "zohodesk__api__v1__contactsdeduplication__defaultfieldname___post",
      "provider_alias_intent": "/api/v1/contactsdeduplication/defaultfieldname",
      "text": "Set default field for contact deduplication",
      "category": "Contact Deduplication",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "fieldName": {
          "type": "string",
          "text": "The name of the field. max chars: 100",
          "required": true
        },
        "markDefault": {
          "type": "boolean",
          "text": "To mark the given field as default or remove the field from the default.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sets the field you specify as the default field for deduplicating contacts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contactsDeduplication/defaultFieldName",
        "alias_endpoint": "/zohodesk/api/v1/contactsdeduplication/defaultfieldname",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactDeduplication_Setdefaultfieldforcontactdeduplication"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__addfollowers___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__addfollowers___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/addfollowers",
      "text": "Add contact followers",
      "category": "Contact Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "The list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds one or more users to the followers list of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/addFollowers",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/addfollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactFollowers#ContactFollowers_Addcontactfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__removefollowers___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__removefollowers___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/removefollowers",
      "text": "Remove contact followers",
      "category": "Contact Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "The list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes one or more users from the followers list of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/removeFollowers",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/removefollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactFollowers#ContactFollowers_Removecontactfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__followers___get": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__followers___get",
      "provider_alias_intent": "api/v1/contacts/contact_id/followers",
      "text": "Get contact followers",
      "category": "Contact Followers",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the followers must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of followers to list. Range: 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the list of users following a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/followers",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactFollowers#ContactFollowers_Getcontactfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__timeentry___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__timeentry___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/timeentry",
      "text": "List Contact Time Entries",
      "category": "Contact TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module from which the time entries must be fetched. Values allowed are tickets and tasks"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch. Range: 1-100"
        },
        "orderBy": {
          "type": "string",
          "text": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner. Max chars: 100"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists time entries recorded for a ticket or task related to a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactTimeEntry_ListContactTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__timeentrysummation___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__timeentrysummation___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/timeentrysummation",
      "text": "Get summation of Contact Time Entries",
      "category": "Contact TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module Preference. It can be either tickets or tasks. Max chars: 100"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches summation of time entries for a contact from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/timeEntrySummation",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/timeentrysummation",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactTimeEntry#ContactTimeEntry_GetsummationofContactTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id",
      "text": "Get Contact",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Allowed values are : accounts , owner"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single contact from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_GetContact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts___get": {
      "provider_intent": "zohodesk__api__v1__contacts___get",
      "provider_alias_intent": "/api/v1/contacts",
      "text": "List contacts",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "array",
          "text": "Secondary information related to the contact.Value supported is accounts"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the contacts must be fetched"
        },
        "limit": {
          "type": "string",
          "text": "Number of contacts to fetch"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: firstName, lastName, or createdTime"
        },
        "fields": {
          "type": "string",
          "text": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of contacts, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts",
        "alias_endpoint": "/zohodesk/api/v1/contacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Listcontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts___post": {
      "provider_intent": "zohodesk__api__v1__contacts___post",
      "provider_alias_intent": "/api/v1/contacts",
      "text": "Create Contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the contact"
        },
        "lastName": {
          "type": "string",
          "text": "Last name of the contact",
          "required": true
        },
        "firstName": {
          "type": "string",
          "text": "First name of the contact"
        },
        "facebook": {
          "type": "string",
          "text": "Facebook ID of the contact"
        },
        "twitter": {
          "type": "string",
          "text": "Twitter ID of the contact"
        },
        "secondaryEmail": {
          "type": "string",
          "text": "Secondary email ID of the contact"
        },
        "email": {
          "type": "string",
          "text": "Email ID of the contact"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the contact"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the contact"
        },
        "city": {
          "type": "string",
          "text": "Contact's city of residence"
        },
        "country": {
          "type": "string",
          "text": "Contact's country of residence"
        },
        "state": {
          "type": "string",
          "text": "Contact's state of residence"
        },
        "street": {
          "type": "string",
          "text": "Contact's address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code"
        },
        "description": {
          "type": "string",
          "text": "Contact description"
        },
        "title": {
          "type": "string",
          "text": "Contact title"
        },
        "type": {
          "type": "string",
          "text": "Contact type"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user who creates the contact"
        },
        "accountId": {
          "type": "number",
          "text": "Account to which the contact is mapped"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a contact in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts",
        "alias_endpoint": "/zohodesk/api/v1/contacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_CreateContact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id___patch": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id___patch",
      "provider_alias_intent": "/api/v1/contacts/contact_id",
      "text": "Update a contact",
      "category": "Contacts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the contact"
        },
        "lastName": {
          "type": "string",
          "text": "Last name of the contact"
        },
        "firstName": {
          "type": "string",
          "text": "First name of the contact"
        },
        "facebook": {
          "type": "string",
          "text": "Facebook ID of the contact"
        },
        "twitter": {
          "type": "string",
          "text": "Twitter ID of the contact"
        },
        "secondaryEmail": {
          "type": "string",
          "text": "Secondary email ID of the contact"
        },
        "email": {
          "type": "string",
          "text": "Email ID of the contact"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the contact"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the contact"
        },
        "city": {
          "type": "string",
          "text": "Contact's city of residence"
        },
        "country": {
          "type": "string",
          "text": "Contact's country of residence"
        },
        "state": {
          "type": "string",
          "text": "Contact's state of residence"
        },
        "street": {
          "type": "string",
          "text": "Contact's address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code"
        },
        "description": {
          "type": "string",
          "text": "Contact description"
        },
        "title": {
          "type": "string",
          "text": "Contact title"
        },
        "type": {
          "type": "string",
          "text": "Contact type"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user who creates the contact"
        },
        "accountId": {
          "type": "number",
          "text": "Account to which the contact is mapped"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Updateacontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__contacts__movetotrash___post",
      "provider_alias_intent": "/api/v1/contacts/movetotrash",
      "text": "Delete Contacts",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contactIds": {
          "type": "array",
          "text": "IDs of the contacts to move to the Recycle Bin",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves the contacts specified to the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/contacts/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_DeleteContacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__deletespam___post": {
      "provider_intent": "zohodesk__api__v1__contacts__deletespam___post",
      "provider_alias_intent": "/api/v1/contacts/deletespam",
      "text": "Delete spam contacts",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contactIds": {
          "type": "array",
          "text": "IDs of the spam contacts",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the given spam contacts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/deleteSpam",
        "alias_endpoint": "/zohodesk/api/v1/contacts/deletespam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Deletespamcontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__profiles___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__profiles___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/profiles",
      "text": "Get Contact Profiles",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "include": {
          "type": "array",
          "text": "Additional information related to the profile's channel"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This api fetches the list of profiles of this contact from various channels",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/profiles",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/profiles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_GetContactProfiles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__contacts__updatemany___post",
      "provider_alias_intent": "/api/v1/contacts/updatemany",
      "text": "Update many contacts",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple contacts at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/contacts/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Updatemanycontacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contactsbyids___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contactsbyids___get",
      "provider_alias_intent": "/api/v1/contacts/contactsbyids",
      "text": "List Contacts By Ids",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "ids": {
          "type": "number",
          "text": "List of Contact Ids (separated by comma) which must be fetched",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists details of specific contacts, based on the IDs passed in the request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/contactsByIds",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contactsbyids",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_ListContactsByIds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__tickets___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__tickets___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/tickets",
      "text": "List tickets by contact",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tickets must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: createdTime or modifiedTime"
        },
        "dueDate": {
          "type": "string",
          "text": "Filter by ticket duedate. Values allowed are overdue, tomorrow, currentWeek, currentMonth and today"
        },
        "isSpam": {
          "type": "boolean",
          "text": "Filters Spam tickets",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the tickets"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists tickets received from a specific contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Listticketsbycontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ , Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__products___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__products___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/products",
      "text": "List products by contact",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index"
        },
        "limit": {
          "type": "number",
          "text": "Number of products to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "Department from which the products need to be queried"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists products associated for a specific contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/products",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/products",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Listproductsbycontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__count___get": {
      "provider_intent": "zohodeskapi__v1__contacts__count___get",
      "provider_alias_intent": "api/v1/contacts/count",
      "text": "Get contacts count",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "Custom view ID",
          "required": true
        },
        "startsWith": {
          "type": "string",
          "text": "Displays the number of contacts whose first name or last name begins with the letter you specify"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API displays the count for the number of contacts in a custom view",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/count",
        "alias_endpoint": "/zohodeskapi/v1/contacts/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Getcontactscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__statistics___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__statistics___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/statistics",
      "text": "Get contact statistics",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the statistics must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the overall statistics of an contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/statistics",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/statistics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Getcontactstatistics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__merge___post": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__merge___post",
      "provider_alias_intent": "/api/v1/contacts/contact_id/merge",
      "text": "Merge Contacts",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the contacts to merge",
          "required": true
        },
        "source": {
          "type": "object",
          "text": "JSON object containing details of the contact"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API merges two or more contacts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/merge",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/merge",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_MergeContacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__markspam___post": {
      "provider_intent": "zohodesk__api__v1__contacts__markspam___post",
      "provider_alias_intent": "/api/v1/contacts/markspam",
      "text": "Mark contact as spam",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "ID(s) of the contact(s) that must be marked or unmarked as spam",
          "required": true
        },
        "isSpam": {
          "type": "boolean",
          "text": "Key that marks or unmarks a single contact or multiple contacts as spam",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "handleExistingTickets": {
          "type": "boolean",
          "text": "Key that marks or unmarks tickets from the contact(s) as spam",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks contacts as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/markSpam",
        "alias_endpoint": "/zohodesk/api/v1/contacts/markspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Markcontactasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__associateproducts___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__associateproducts___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/associateproducts",
      "text": "Associate products with a contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the resources to associate",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department containing the products"
        },
        "associate": {
          "type": "boolean",
          "text": "true for associating the resource and false for dissociating the resource",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates products with a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/associateProducts",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/associateproducts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Associateproductswithacontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__history___get": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__history___get",
      "provider_alias_intent": "api/v1/contacts/contact_id/history",
      "text": "Get contact history",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the history details must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "Key that filters ticket activities performed by a particular agent"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the history details must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of history details to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the ticket history of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/history",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/history",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts#Contacts_Getcontacthistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ , Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__inviteasenduser___post": {
      "provider_intent": "zohodeskapi__v1__contacts__inviteasenduser___post",
      "provider_alias_intent": "api/v1/contacts/inviteasenduser",
      "text": "Invite multiple contacts to help center",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contactIds": {
          "type": "array",
          "text": "IDs of the contacts to invite",
          "required": true
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center to which you want to add the contacts",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps invite multiple contacts as end-users to your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/inviteAsEndUser",
        "alias_endpoint": "/zohodeskapi/v1/contacts/inviteasenduser",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Invitemultiplecontactstohelpcenter"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__inviteasenduser___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__inviteasenduser___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/inviteasenduser",
      "text": "Invite contact to help center",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center to which you want to add the contact",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps invite a particular contact as an end-user to your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/inviteAsEndUser",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/inviteasenduser",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Invitecontacttohelpcenter"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__photo___delete": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__photo___delete",
      "provider_alias_intent": "api/v1/contacts/contact_id/photo",
      "text": "Delete contact photo",
      "category": "Contacts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the display picture of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/photo",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/photo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Deletecontactphoto"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__helpcenters___get": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__helpcenters___get",
      "provider_alias_intent": "api/v1/contacts/contact_id/helpcenters",
      "text": "Get status of contact in help centers",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "helpCenterId": {
          "type": "number",
          "text": "To get specific helpcenter info"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a particular contact's activation status in all the help centers they are part of",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/helpCenters",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/helpcenters",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Getstatusofcontactinhelpcenters"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__accounts___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__accounts___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/accounts",
      "text": "List accounts of contact",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the accounts must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to list"
        },
        "startsWith": {
          "type": "String",
          "text": "Letter with which the names of the accounts must start"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: accountName or createdTime or mappingType"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the accounts associated with a particular contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/accounts",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/accounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Listaccountsofcontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__associateaccounts___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__associateaccounts___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/associateaccounts",
      "text": "Associate accounts with contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "data": {
          "type": "array",
          "text": "Details of the accounts to associate with the contact"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates multiple accounts with a particular contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/associateAccounts",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/associateaccounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Associateaccountswithcontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__dissociateaccounts___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__dissociateaccounts___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/dissociateaccounts",
      "text": "Dissociate accounts from contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the accounts to dissociate from the contact",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API dissociates multiple accounts from a particular contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/dissociateAccounts",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/dissociateaccounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Dissociateaccountsfromcontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__accounts__account_id__dissociate___patch": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__accounts__account_id__dissociate___patch",
      "provider_alias_intent": "api/v1/contacts/contact_id/accounts/account_id/dissociate",
      "text": "Dissociate account from contact",
      "category": "Contacts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "option": {
          "type": "string",
          "text": "Processing option to apply to the tickets after dissociating the account from the contact"
        },
        "optionValue": {
          "type": "number",
          "text": "ID of the account or contact to which the tickets must be moved"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "account_id": {
          "type": "string",
          "text": "Account ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API dissociates a particular account from a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/accounts/{account_id}/dissociate",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/accounts/account_id/dissociate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Dissociateaccountfromcontact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__approveenduserinvite___post": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__approveenduserinvite___post",
      "provider_alias_intent": "/api/v1/contacts/contact_id/approveenduserinvite",
      "text": "Approve contact for help center",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterIds": {
          "type": "array",
          "text": "IDs of the help center in which you want to approve/reject the contacts",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps approve a particular contact as an end-user to your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/approveEndUserInvite",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/approveenduserinvite",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Approvecontactforhelpcenter"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__rejectenduserinvite___post": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__rejectenduserinvite___post",
      "provider_alias_intent": "/api/v1/contacts/contact_id/rejectenduserinvite",
      "text": "Reject contact for help center",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterIds": {
          "type": "array",
          "text": "IDs of the help center in which you want to approve/reject the contacts",
          "required": true
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps reject a particular contact from being added as an end-user to your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/rejectEndUserInvite",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/rejectenduserinvite",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contacts_Rejectcontactforhelpcenter"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__attachments___get": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__attachments___get",
      "provider_alias_intent": "/api/v1/contacts/contact_id/attachments",
      "text": "List Contact Attachments",
      "category": "Contacts Attachments",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the attachments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of attachments to fetch. Range: 1-100"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the attachments. Value allowed is creator, which returns the details of users who added the attachments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the files attached to a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsAttachments_ListContactAttachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__attachments___post": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__attachments___post",
      "provider_alias_intent": "/api/v1/contacts/contact_id/attachments",
      "text": "Create Contact Attachment",
      "category": "Contacts Attachments",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File to attach to the contact"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches a file to a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsAttachments_CreateContactAttachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__contact_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__contacts__contact_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/contacts/contact_id/attachments/attachment_id",
      "text": "Delete Contact attachment",
      "category": "Contacts Attachments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes an attachment from a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/{contact_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/contacts/contact_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsAttachments_DeleteContactattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__comments___post",
      "provider_alias_intent": "api/v1/contacts/contact_id/comments",
      "text": "Create a contact comment",
      "category": "Contacts Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions,"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html."
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsComments_Createacontactcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/contacts/contact_id/comments/comment_id",
      "text": "Update a contact comment",
      "category": "Contacts Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions,"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html."
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing contact comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsComments_Updateacontactcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/contacts/contact_id/comments/comment_id",
      "text": "Delete a contact comment",
      "category": "Contacts Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing contact comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsComments_Deleteacontactcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/contacts/contact_id/comments/comment_id",
      "text": "Get a contact comment",
      "category": "Contacts Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a contact comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsComments_Getacontactcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contacts__contact_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__contacts__contact_id__comments___get",
      "provider_alias_intent": "api/v1/contacts/contact_id/comments",
      "text": "List all contact comments",
      "category": "Contacts Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No. of comments to fetch",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the commentedTime attribute. Default order is descending. Use prefix - for descending order."
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a contact, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contacts/{contact_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/contacts/contact_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContactsComments_Listallcontactcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id___get": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id___get",
      "provider_alias_intent": "api/v1/contracts/contract_id",
      "text": "Get a contract",
      "category": "Contracts",
      "method": "GET",
      "type": "API",
      "params": {
        "contract_id": {
          "type": "string",
          "text": "Contract ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contract_id": {
          "type": "string",
          "text": "Contract ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single contract from your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{{contract_id}}",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Getacontract"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts___get": {
      "provider_intent": "zohodeskapi__v1__contracts___get",
      "provider_alias_intent": "api/v1/contracts",
      "text": "List all contracts",
      "category": "Contracts",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index"
        },
        "limit": {
          "type": "number",
          "text": "Number of contracts to fetch"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "departmentIds": {
          "type": "number",
          "text": "IDs of the departments from which the contract must be fetched"
        },
        "accountId": {
          "type": "number",
          "text": "ID of the account associated with the contract"
        },
        "ownerIds": {
          "type": "number",
          "text": "Returns contracts whose owner ids are mentioned"
        },
        "contractName": {
          "type": "string",
          "text": "to search contracts having name starting with"
        },
        "sortBy": {
          "type": "string",
          "text": "Parameter that sorts contracts"
        },
        "include": {
          "type": "string",
          "text": "Allowed Value is: accounts"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get a list of contracts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts",
        "alias_endpoint": "/zohodeskapi/v1/contracts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Listallcontracts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contracts___post": {
      "provider_intent": "zohodesk__api__v1__contracts___post",
      "provider_alias_intent": "/api/v1/contracts",
      "text": "Create a contract",
      "category": "Contracts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the contract belongs",
          "required": true
        },
        "contractNumber": {
          "type": "string",
          "text": "Serial number of the contract"
        },
        "notificationAgentIds": {
          "type": "list",
          "text": "List of agents to be notified"
        },
        "notifyBefore": {
          "type": "number",
          "text": "Number of days before endDate when notifications about contract expiry must be sent to the agents concerned"
        },
        "startDate": {
          "type": "string",
          "text": "Date from which the contract is valid",
          "required": true
        },
        "endDate": {
          "type": "string",
          "text": "Date until which the contract is valid"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the contract owner",
          "required": true
        },
        "contractName": {
          "type": "string",
          "text": "Name of the contract",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A short description of the contract"
        },
        "cf": {
          "type": "array",
          "text": "User-defined fields associated with the contract"
        },
        "sla": {
          "type": "array",
          "text": "SLA fields associated with the contract"
        },
        "account": {
          "type": "array",
          "text": "Account fields associated with the contract"
        },
        "product": {
          "type": "array",
          "text": "Product fields associated with the contract"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a contract in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contracts",
        "alias_endpoint": "/zohodesk/api/v1/contracts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Createacontract"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contracts__contract_id___patch": {
      "provider_intent": "zohodesk__api__v1__contracts__contract_id___patch",
      "provider_alias_intent": "/api/v1/contracts/contract_id",
      "text": "Update a contract",
      "category": "Contracts",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the contract belongs"
        },
        "contractNumber": {
          "type": "string",
          "text": "Serial number of the contract"
        },
        "notificationAgentIds": {
          "type": "list",
          "text": "List of agents to be notified"
        },
        "notifyBefore": {
          "type": "number",
          "text": "Number of days before endDate when notifications about contract expiry must be sent to the agents concerned"
        },
        "startDate": {
          "type": "string",
          "text": "Date from which the contract is valid"
        },
        "endDate": {
          "type": "string",
          "text": "Date until which the contract is valid"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the contract owner"
        },
        "contractName": {
          "type": "string",
          "text": "Name of the contract"
        },
        "description": {
          "type": "string",
          "text": "A short description of the contract"
        },
        "cf": {
          "type": "array",
          "text": "User-defined fields associated with the contract"
        },
        "sla": {
          "type": "array",
          "text": "SLA fields associated with the contract"
        },
        "account": {
          "type": "array",
          "text": "Account fields associated with the contract"
        },
        "product": {
          "type": "array",
          "text": "Product fields associated with the contract"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing contract",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contracts/{contract_id}",
        "alias_endpoint": "/zohodesk/api/v1/contracts/contract_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Updateacontract"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__movetotrash___post": {
      "provider_intent": "zohodeskapi__v1__contracts__movetotrash___post",
      "provider_alias_intent": "api/v1/contracts/movetotrash",
      "text": "Delete contracts",
      "category": "Contracts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contractIds": {
          "type": "array",
          "text": "IDs of the contracts that you want to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves contracts to the Recycle Bin of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/moveToTrash",
        "alias_endpoint": "/zohodeskapi/v1/contracts/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Deletecontracts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contracts__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__contracts__updatemany___post",
      "provider_alias_intent": "/api/v1/contracts/updatemany",
      "text": "Update many contracts",
      "category": "Contracts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple contracts at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contracts/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/contracts/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Contracts_Updatemanycontracts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id__comments___post",
      "provider_alias_intent": "api/v1/contracts/contract_id/comments",
      "text": "Create a contract comment",
      "category": "Contracts Comments",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a contract",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{contract_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContractsComments_Createacontractcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/contracts/contract_id/comments/comment_id",
      "text": "Update a contract comment",
      "category": "Contracts Comments",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. max chars: 32000. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}zsu."
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which may be html or plainText. The default type is html. max chars: 100"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing contract comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{contract_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContractsComments_Updateacontractcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/contracts/contract_id/comments/comment_id",
      "text": "Delete a contract comment",
      "category": "Contracts Comments",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing contract comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{contract_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContractsComments_Deleteacontractcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/contracts/contract_id/comments/comment_id",
      "text": "Get a contract comment",
      "category": "Contracts Comments",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a contract comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{contract_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContractsComments_Getacontractcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__contracts__contract_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__contracts__contract_id__comments___get",
      "provider_alias_intent": "api/v1/contracts/contract_id/comments",
      "text": "List all contract comment",
      "category": "Contracts Comments",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a contract, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/contracts/{contract_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/contracts/contract_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ContractsComments_Listallcontractcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__customerhappiness___get": {
      "provider_intent": "zohodeskapi__v1__customerhappiness___get",
      "provider_alias_intent": "api/v1/customerhappiness",
      "text": "List all customer feedback",
      "category": "Customer Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "department": {
          "type": "string",
          "text": "Mandatory param to fetch the customer-happiness list for a given ID of the department. You can also provide department as allDepartment to fetch customer happiness from all departments",
          "required": true
        },
        "agentId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular agent"
        },
        "contactId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular contact"
        },
        "accountId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular account"
        },
        "ticketId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular ticket"
        },
        "startTime": {
          "type": "number",
          "text": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds"
        },
        "endTime": {
          "type": "number",
          "text": "Start time till which the customer-happiness list should show. End time should be in GMT time zone and in milliseconds"
        },
        "from": {
          "type": "number",
          "text": "The starting index from which the list should be displayed based on the time of receiving customer feedback"
        },
        "limit": {
          "type": "number",
          "text": "Number of ratings to be displayed in the list"
        },
        "rating": {
          "type": "string",
          "text": "Segregate the list based on the type of rating. Allowed values are good, ok, or bad"
        },
        "duration": {
          "type": "string",
          "text": "Period from which the customer happiness rating must be fetched. Values allowed are: TODAY, THIS_WEEK, LAST_WEEK, THIS_MONTH, LAST_MONTH, LAST_7_DAYS, YESTERDAY, LAST_1_HOUR, CUSTOM_IN_DATE, LAST_100_RATINGS, LAST24HOURS and LAST_30_DAYS"
        },
        "startDate": {
          "type": "string",
          "text": "start date time"
        },
        "endDate": {
          "type": "string",
          "text": "end date time"
        },
        "sortBy": {
          "type": "string",
          "text": "Sorted by ratedtime"
        },
        "include": {
          "type": "string",
          "text": "Allowed values are : contacts, tickets, agents. You can include both by separating them with a comma in the query param"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get customer feedback list for a given department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/customerHappiness",
        "alias_endpoint": "/zohodeskapi/v1/customerhappiness",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CustomerFeedback_Listallcustomerfeedback"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__customerhappiness__count___get": {
      "provider_intent": "zohodeskapi__v1__customerhappiness__count___get",
      "provider_alias_intent": "api/v1/customerhappiness/count",
      "text": "Get customer feedback count",
      "category": "Customer Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "department": {
          "type": "string",
          "text": "Mandatory param to fetch the customer-happiness list for a given ID of the department. You can also provide department as allDepartment to fetch customer happiness from all departments",
          "required": true
        },
        "agentId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular agent"
        },
        "contactId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular contact"
        },
        "accountId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular account"
        },
        "ticketId": {
          "type": "number",
          "text": "Filter that returns the customer-happiness list for a particular ticket"
        },
        "startTime": {
          "type": "number",
          "text": "Start time from which the customer-happiness list should show. Start time should be in GMT time zone and in milliseconds"
        },
        "endTime": {
          "type": "number",
          "text": "Start time till which the customer-happiness list should show. End time should be in GMT time zone and in milliseconds"
        },
        "duration": {
          "type": "string",
          "text": "Period from which the customer happiness rating must be fetched. Values allowed are: TODAY, THIS_WEEK, LAST_WEEK, THIS_MONTH, LAST_MONTH, LAST_7_DAYS, YESTERDAY, LAST_1_HOUR, CUSTOM_IN_DATE, LAST_100_RATINGS, LAST24HOURS and LAST_30_DAYS"
        },
        "startDate": {
          "type": "string",
          "text": "start date time"
        },
        "endDate": {
          "type": "string",
          "text": "end date time"
        },
        "from": {
          "type": "number",
          "text": "The from index"
        },
        "limit": {
          "type": "number",
          "text": "Number of rating to be displayed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API gives you the count of the ratings given by the customers for each category of a given department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/customerHappiness/count",
        "alias_endpoint": "/zohodeskapi/v1/customerhappiness/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CustomerFeedback_Getcustomerfeedbackcount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__customerhappiness__thread_id__content___get": {
      "provider_intent": "zohodeskapi__v1__customerhappiness__thread_id__content___get",
      "provider_alias_intent": "api/v1/customerhappiness/thread_id/content",
      "text": "Get the customer feedback content",
      "category": "Customer Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API retrieves the content of specific customer feedback",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/customerHappiness/{thread_id}/content",
        "alias_endpoint": "/zohodeskapi/v1/customerhappiness/thread_id/content",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CustomerFeedback_Getthecustomerfeedbackcontent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__customerhappinesslinkholder___get": {
      "provider_intent": "zohodeskapi__v1__customerhappinesslinkholder___get",
      "provider_alias_intent": "api/v1/customerhappinesslinkholder",
      "text": "Get the customer feedback placeholder link",
      "category": "Customer Feedback",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department for which the placeholder should be collected",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API provides an html placeholder to insert the customer feedback link into the reply mail",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/customerHappinessLinkHolder",
        "alias_endpoint": "/zohodeskapi/v1/customerhappinesslinkholder",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#CustomerFeedback_Getthecustomerfeedbackplaceholderlink"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__createdtickets___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__createdtickets___get",
      "provider_alias_intent": "/api/v1/dashboards/createdtickets",
      "text": "Get created tickets count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute. This value can be date channel agent | hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of tickets created in a particular duration",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/createdTickets",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/createdtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Getcreatedticketscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__onholdtickets___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__onholdtickets___get",
      "provider_alias_intent": "/api/v1/dashboards/onholdtickets",
      "text": "Get on hold tickets count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of tickets that are in the on hold status",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/onholdTickets",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/onholdtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Getonholdticketscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__solvedtickets___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__solvedtickets___get",
      "provider_alias_intent": "/api/v1/dashboards/solvedtickets",
      "text": "Get closed tickets count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of tickets that are resolved",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/solvedTickets",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/solvedtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Getclosedticketscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__backlogtickets___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__backlogtickets___get",
      "provider_alias_intent": "/api/v1/dashboards/backlogtickets",
      "text": "Get unresolved tickets count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of tickets that have remained unresolved over a particular period",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/backlogTickets",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/backlogtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Getunresolvedticketscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__ticketsresolutiontime___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__ticketsresolutiontime___get",
      "provider_alias_intent": "/api/v1/dashboards/ticketsresolutiontime",
      "text": "List resolution times",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups stats according to a specific attribute: date, channel, agent, or hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the durations taken to resolve tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/ticketsResolutionTime",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/ticketsresolutiontime",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Listresolutiontimes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__responsetime___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__responsetime___get",
      "provider_alias_intent": "/api/v1/dashboards/responsetime",
      "text": "List response times",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups stats according to a specific attribute: date, channel, agent, or hour",
          "required": true
        },
        "isFirstResponse": {
          "type": "boolean",
          "text": "Key that specifies if the response is the first response to the customer question",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the durations taken to respond to tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/responseTime",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/responsetime",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards#Dashboards_Listresponsetimes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__responsecount___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__responsecount___get",
      "provider_alias_intent": "/api/v1/dashboards/responsecount",
      "text": "Get total response count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the total number of responses sent/made by your agents",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/responseCount",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/responsecount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards_Gettotalresponsecount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dashboards__reopenedtickets___get": {
      "provider_intent": "zohodesk__api__v1__dashboards__reopenedtickets___get",
      "provider_alias_intent": "/api/v1/dashboards/reopenedtickets",
      "text": "Get reopened tickets count",
      "category": "Dashboards",
      "method": "GET",
      "type": "API",
      "params": {
        "groupBy": {
          "type": "string",
          "text": "Key that groups the ticket count according to a particular attribute.This value can be date channel agent | hour",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID(s) of the department(s) from which the stats must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "ID(s) of the agent(s) whose stats must be fetched"
        },
        "teamId": {
          "type": "number",
          "text": "ID(s) of the team(s) from which the stats must be fetched"
        },
        "duration": {
          "type": "string",
          "text": "Predefined time range from which the stats must be fetched",
          "required": true
        },
        "startDate": {
          "type": "string",
          "text": "Starting date for defining custom time range"
        },
        "endDate": {
          "type": "string",
          "text": "Ending date for defining custom time range"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of tickets that were reopened in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dashboards/reopenedTickets",
        "alias_endpoint": "/zohodesk/api/v1/dashboards/reopenedtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Dashboards_Getreopenedticketscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__datasharingrules___get": {
      "provider_intent": "zohodesk__api__v1__datasharingrules___get",
      "provider_alias_intent": "/api/v1/datasharingrules",
      "text": "Get data sharing rules",
      "category": "Data Sharing Rules",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the different data sharing rules configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dataSharingRules",
        "alias_endpoint": "/zohodesk/api/v1/datasharingrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DataSharingRules#DataSharingRules_Getdatasharingrules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__datasharingrules___patch": {
      "provider_intent": "zohodesk__api__v1__datasharingrules___patch",
      "provider_alias_intent": "/api/v1/datasharingrules",
      "text": "Update data sharing rules",
      "category": "Data Sharing Rules",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contracts": {
          "type": "string",
          "text": "Data sharing rules related to SLA contracts, max chars : 100"
        },
        "tickets": {
          "type": "string",
          "text": "Data sharing rules related to tickets, max chars : 100"
        },
        "contacts": {
          "type": "string",
          "text": "Data sharing rules related to contacts, max chars : 100"
        },
        "accounts": {
          "type": "string",
          "text": "Data sharing rules related to accounts, max chars : 100"
        },
        "products": {
          "type": "string",
          "text": "Data sharing rules related to products, max chars : 100"
        },
        "tasks": {
          "type": "string",
          "text": "Data sharing rules related to tasks, max chars : 100"
        },
        "calls": {
          "type": "string",
          "text": "Data sharing rules related to calls, max chars : 100"
        },
        "events": {
          "type": "string",
          "text": "Data sharing rules related to events, max chars : 100"
        },
        "cm_[a-zA-Z0-9_]+": {
          "type": "string",
          "text": "Data sharing rules related to custom module, max chars : 100"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the data sharing rules configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dataSharingRules",
        "alias_endpoint": "/zohodesk/api/v1/datasharingrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DataSharingRules#DataSharingRules_Updatedatasharingrules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id___get": {
      "provider_intent": "zohodesk__api__v1__departments__department_id___get",
      "provider_alias_intent": "/api/v1/departments/department_id",
      "text": "Get department",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a department from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Getdepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments___get": {
      "provider_intent": "zohodesk__api__v1__departments___get",
      "provider_alias_intent": "/api/v1/departments",
      "text": "List departments",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "isEnabled": {
          "type": "boolean",
          "text": "Key that filters departments based on their enabled status",
          "enum": [
            true,
            false
          ]
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the departments must be fetched"
        },
        "searchStr": {
          "type": "String",
          "text": "String to search for departments by name, help center name, or description"
        },
        "limit": {
          "type": "number",
          "text": "Number of departments to fetch"
        },
        "chatStatus": {
          "type": "string",
          "text": "Key that filters departments based on their chat status"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of departments, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments",
        "alias_endpoint": "/zohodesk/api/v1/departments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Listdepartments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__agents___get": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__agents___get",
      "provider_alias_intent": "/api/v1/departments/department_id/agents",
      "text": "List agents in department",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the agents must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of agents to fetch; default value is 10 and maximum value is 200"
        },
        "status": {
          "type": "String",
          "text": "Key that filters agents, based on their activation status: ACTIVE or DISABLED"
        },
        "isLightAgent": {
          "type": "boolean",
          "text": "Key that denotes if the agents must be light or non light",
          "enum": [
            true,
            false
          ]
        },
        "isConfirmed": {
          "type": "boolean",
          "text": "Key that denotes if the agents must be confirmed or unconfirmed",
          "enum": [
            true,
            false
          ]
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for agents by first name, last name, or email ID"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field that must be used for searching and listing agents"
        },
        "sortOrder": {
          "type": "string",
          "text": "To sort the available list of agents in either ascending or descending order"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the agents in a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/agents",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/agents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Listagentsindepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__count___get": {
      "provider_intent": "zohodesk__api__v1__departments__count___get",
      "provider_alias_intent": "/api/v1/departments/count",
      "text": "Get department count",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "isEnabled": {
          "type": "boolean",
          "text": "Key that filters departments based on their enabled status",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of departments configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/count",
        "alias_endpoint": "/zohodesk/api/v1/departments/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Getdepartmentcount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departmentsbyids___get": {
      "provider_intent": "zohodesk__api__v1__departmentsbyids___get",
      "provider_alias_intent": "/api/v1/departmentsbyids",
      "text": "Get department details by department IDs",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentIds": {
          "type": "number",
          "text": "Comma-separated array of department IDs",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of the departments whose IDs are passed in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departmentsByIds",
        "alias_endpoint": "/zohodesk/api/v1/departmentsbyids",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_GetdepartmentdetailsbydepartmentIDs"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__checkexists___get": {
      "provider_intent": "zohodesk__api__v1__departments__checkexists___get",
      "provider_alias_intent": "/api/v1/departments/checkexists",
      "text": "Check for duplicate departments",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentName": {
          "type": "string",
          "text": "Name of the department for which you want to check duplicate entries",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API checks if multiple departments have the same name",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/checkExists",
        "alias_endpoint": "/zohodesk/api/v1/departments/checkexists",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Checkforduplicatedepartments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments___post": {
      "provider_intent": "zohodesk__api__v1__departments___post",
      "provider_alias_intent": "/api/v1/departments",
      "text": "Add department",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the department",
          "required": true
        },
        "nameInCustomerPortal": {
          "type": "string",
          "text": "Display name of the department in the help center"
        },
        "description": {
          "type": "String",
          "text": "A short description of the department"
        },
        "isVisibleInCustomerPortal": {
          "type": "boolean",
          "text": "Key that denotes if the department is visible in the help center or not",
          "enum": [
            true,
            false
          ]
        },
        "isAssignToTeamEnabled": {
          "type": "boolean",
          "text": "Key that denotes if the assign to team functionality is enabled or not",
          "enum": [
            true,
            false
          ]
        },
        "associatedAgentIds": {
          "type": "array",
          "text": "IDs of agents associated with the department",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a department to your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments",
        "alias_endpoint": "/zohodesk/api/v1/departments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Adddepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id___patch": {
      "provider_intent": "zohodesk__api__v1__departments__department_id___patch",
      "provider_alias_intent": "/api/v1/departments/department_id",
      "text": "Update department",
      "category": "Departments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the department"
        },
        "nameInCustomerPortal": {
          "type": "string",
          "text": "Display name of the department in the help center"
        },
        "description": {
          "type": "String",
          "text": "A short description of the department"
        },
        "isVisibleInCustomerPortal": {
          "type": "boolean",
          "text": "Key that denotes if the department is visible in the help center or not",
          "enum": [
            true,
            false
          ]
        },
        "isAssignToTeamEnabled": {
          "type": "boolean",
          "text": "Key that denotes if the assign to team functionality is enabled or not",
          "enum": [
            true,
            false
          ]
        },
        "associatedAgentIds": {
          "type": "array",
          "text": "IDs of agents associated with the department",
          "required": true
        }
      },
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Updatedepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__disable___post": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__disable___post",
      "provider_alias_intent": "/api/v1/departments/department_id/disable",
      "text": "Disable department",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "agentNewDepartment": {
          "type": "number",
          "text": "Agents move to new department ID",
          "required": true
        },
        "emailNewDepartment": {
          "type": "number",
          "text": "Email move to new department ID"
        }
      },
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API disables a department in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/disable",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/disable",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Disabledepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__enable___post": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__enable___post",
      "provider_alias_intent": "/api/v1/departments/department_id/enable",
      "text": "Enable department",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API enables a department in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/enable",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/enable",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Enabledepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__associateagents___post": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__associateagents___post",
      "provider_alias_intent": "/api/v1/departments/department_id/associateagents",
      "text": "Associate agents to department",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "agentIds": {
          "type": "array",
          "text": "Ids of Agents",
          "required": true
        }
      },
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates agents to a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/associateAgents",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/associateagents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments_Associateagentstodepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__dissociateagents___post": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__dissociateagents___post",
      "provider_alias_intent": "/api/v1/departments/department_id/dissociateagents",
      "text": "Dissociate agents from department",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "agentIds": {
          "type": "array",
          "text": "Ids of Agents",
          "required": true
        }
      },
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API dissociates agents from a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/dissociateAgents",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/dissociateagents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Dissociateagentsfromdepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__logo___get": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__logo___get",
      "provider_alias_intent": "/api/v1/departments/department_id/logo",
      "text": "Get department logo",
      "category": "Departments",
      "method": "GET",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        },
        "fileSize": {
          "type": "string",
          "text": "Size of the image file to download"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the logo set for a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments#Departments_Getdepartmentlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__logo___post": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__logo___post",
      "provider_alias_intent": "/api/v1/departments/department_id/logo",
      "text": "Upload department logo",
      "category": "Departments",
      "method": "POST",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentLogo": {
          "type": "file",
          "text": "Image file of the logo"
        }
      },
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the logo set for a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments_Uploaddepartmentlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__logo___delete": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__logo___delete",
      "provider_alias_intent": "/api/v1/departments/department_id/logo",
      "text": "Delete department logo",
      "category": "Departments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes the logo set for a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Departments_Deletedepartmentlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dependencymappings___get": {
      "provider_intent": "zohodesk__api__v1__dependencymappings___get",
      "provider_alias_intent": "/api/v1/dependencymappings",
      "text": "List dependency mappings in a layout",
      "category": "DependencyMappings",
      "method": "GET",
      "type": "API",
      "params": {
        "layoutId": {
          "type": "number",
          "text": "ID of the layout in which the dependency is mapped"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the dependency mappings configured in a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dependencyMappings",
        "alias_endpoint": "/zohodesk/api/v1/dependencymappings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DependencyMappings_Listdependencymappingsinalayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__availabledependencymappings___get": {
      "provider_intent": "zohodesk__api__v1__availabledependencymappings___get",
      "provider_alias_intent": "/api/v1/availabledependencymappings",
      "text": "Get possible dependency mappings in a layout",
      "category": "DependencyMappings",
      "method": "GET",
      "type": "API",
      "params": {
        "layoutId": {
          "type": "number",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the parent and child fields using which you can configure dependency mappings in a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/availableDependencyMappings",
        "alias_endpoint": "/zohodesk/api/v1/availabledependencymappings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DependencyMappings_Getpossibledependencymappingsinalayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dependencymappings___post": {
      "provider_intent": "zohodesk__api__v1__dependencymappings___post",
      "provider_alias_intent": "/api/v1/dependencymappings",
      "text": "Create dependency mapping",
      "category": "DependencyMappings",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "layoutId": {
          "type": "number",
          "text": "ID of the layout in which the dependency is mapped",
          "required": true
        },
        "parentId": {
          "type": "number",
          "text": "ID of the parent field",
          "required": true
        },
        "childId": {
          "type": "number",
          "text": "ID of the child field",
          "required": true
        },
        "mappings": {
          "type": "array",
          "text": "JSON object that shows the mapping configured",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a dependency mapping between two fields",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dependencyMappings",
        "alias_endpoint": "/zohodesk/api/v1/dependencymappings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DependencyMappings#DependencyMappings_Createdependencymapping"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dependencymappings__dependencymapping_id___patch": {
      "provider_intent": "zohodesk__api__v1__dependencymappings__dependencymapping_id___patch",
      "provider_alias_intent": "/api/v1/dependencymappings/dependencymapping_id",
      "text": "Update dependency mapping",
      "category": "DependencyMappings",
      "method": "PATCH",
      "type": "API",
      "params": {
        "dependencymapping_id": {
          "type": "string",
          "text": "Dependencymapping ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "mappings": {
          "type": "array",
          "text": "A JSON object containing elements, each of which is a JSON array"
        }
      },
      "path": {
        "dependencymapping_id": {
          "type": "string",
          "text": "Dependencymapping ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing dependency mapping",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dependencyMappings/{dependencymapping_id}",
        "alias_endpoint": "/zohodesk/api/v1/dependencymappings/dependencymapping_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DependencyMappings#DependencyMappings_Updatedependencymapping"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__dependencymappings__dependencymapping_id___delete": {
      "provider_intent": "zohodesk__api__v1__dependencymappings__dependencymapping_id___delete",
      "provider_alias_intent": "/api/v1/dependencymappings/dependencymapping_id",
      "text": "Delete dependency mapping",
      "category": "DependencyMappings",
      "method": "DELETE",
      "type": "API",
      "params": {
        "dependencymapping_id": {
          "type": "string",
          "text": "Dependencymapping ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "dependencymapping_id": {
          "type": "string",
          "text": "Dependencymapping ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a dependency mapping from a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/dependencyMappings/{dependencymapping_id}",
        "alias_endpoint": "/zohodesk/api/v1/dependencymappings/dependencymapping_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DependencyMappings#DependencyMappings_Deletedependencymapping"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__domains___post": {
      "provider_intent": "zohodesk__api__v1__domains___post",
      "provider_alias_intent": "/api/v1/domains",
      "text": "Add domain",
      "category": "Domain Mapping",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "domain": {
          "type": "string",
          "text": "Address of the domain",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a domain to your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/domains",
        "alias_endpoint": "/zohodesk/api/v1/domains",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DomainMapping_Adddomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__domains__verify___post": {
      "provider_intent": "zohodesk__api__v1__domains__verify___post",
      "provider_alias_intent": "/api/v1/domains/verify",
      "text": "Verify domain",
      "category": "Domain Mapping",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "domain": {
          "type": "string",
          "text": "Domain to be verified",
          "required": true
        },
        "method": {
          "type": "string",
          "text": "Domain verification method. CNAME or HTML",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API verifies a domain in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/domains/verify",
        "alias_endpoint": "/zohodesk/api/v1/domains/verify",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DomainMapping_Verifydomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__domains__apply___post": {
      "provider_intent": "zohodesk__api__v1__domains__apply___post",
      "provider_alias_intent": "/api/v1/domains/apply",
      "text": "Apply domain",
      "category": "Domain Mapping",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "domain": {
          "type": "string",
          "text": "Address of the domain",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API maps a domain to the default portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/domains/apply",
        "alias_endpoint": "/zohodesk/api/v1/domains/apply",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DomainMapping_Applydomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__domains__reset___post": {
      "provider_intent": "zohodesk__api__v1__domains__reset___post",
      "provider_alias_intent": "/api/v1/domains/reset",
      "text": "Reset current domain",
      "category": "Domain Mapping",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API resets the current domain of the default portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/domains/reset",
        "alias_endpoint": "/zohodesk/api/v1/domains/reset",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DomainMapping#DomainMapping_Resetcurrentdomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__domains___get": {
      "provider_intent": "zohodesk__api__v1__domains___get",
      "provider_alias_intent": "/api/v1/domains",
      "text": "List domains",
      "category": "Domain Mapping",
      "method": "GET",
      "type": "API",
      "params": {
        "isVerified": {
          "type": "boolean",
          "text": "Key that filters domains based on their verification status",
          "enum": [
            true,
            false
          ]
        },
        "isApplied": {
          "type": "boolean",
          "text": "Key that filters domains based on their application status in the help desk",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the domains configured in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/domains",
        "alias_endpoint": "/zohodesk/api/v1/domains",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#DomainMapping_Listdomains"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates___post": {
      "provider_intent": "zohodesk__api__v1__templates___post",
      "provider_alias_intent": "/api/v1/templates",
      "text": "Add Template",
      "category": "EmailTemplates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "templateName": {
          "type": "string",
          "text": "The name of the Template",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "The Subject of the template",
          "required": true
        },
        "recordType": {
          "type": "string",
          "text": "The recordType of the template can be contacts, accounts, tickets, products, tasks",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "The department of the template",
          "required": true
        },
        "folderId": {
          "type": "number",
          "text": "The folder of the template",
          "required": true
        },
        "fromId": {
          "type": "string",
          "text": "The from email of the template",
          "required": true
        },
        "replyTo": {
          "type": "string",
          "text": "The reply to mail id"
        },
        "body": {
          "type": "string",
          "text": "the body of the template"
        },
        "contentType": {
          "type": "string",
          "text": "content type of the template",
          "required": true
        },
        "attachmentIds": {
          "type": "array",
          "text": "List of file attachments in the template"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Add a new Template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates",
        "alias_endpoint": "/zohodesk/api/v1/templates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates_AddTemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__template_id___get": {
      "provider_intent": "zohodesk__api__v1__templates__template_id___get",
      "provider_alias_intent": "/api/v1/templates/template_id",
      "text": "View Template",
      "category": "EmailTemplates",
      "method": "GET",
      "type": "API",
      "params": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "View a particular Template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/{template_id}",
        "alias_endpoint": "/zohodesk/api/v1/templates/template_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates#EmailTemplates_ViewTemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__template_id___patch": {
      "provider_intent": "zohodesk__api__v1__templates__template_id___patch",
      "provider_alias_intent": "/api/v1/templates/template_id",
      "text": "Update Template",
      "category": "EmailTemplates",
      "method": "PATCH",
      "type": "API",
      "params": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "templateName": {
          "type": "string",
          "text": "The name of the Template"
        },
        "subject": {
          "type": "string",
          "text": "The Subject of the template"
        },
        "recordType": {
          "type": "string",
          "text": "The recordType of the template can be contacts, accounts, tickets, products, tasks"
        },
        "departmentId": {
          "type": "number",
          "text": "The department of the template"
        },
        "folderId": {
          "type": "number",
          "text": "The folder of the template"
        },
        "fromId": {
          "type": "string",
          "text": "The from email of the template"
        },
        "replyTo": {
          "type": "string",
          "text": "The reply to mail id"
        },
        "body": {
          "type": "string",
          "text": "the body of the template"
        },
        "contentType": {
          "type": "string",
          "text": "content type of the template"
        },
        "attachmentIds": {
          "type": "array",
          "text": "List of file attachments in the template"
        }
      },
      "path": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Update an existing Template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/{template_id}",
        "alias_endpoint": "/zohodesk/api/v1/templates/template_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates_UpdateTemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__template_id___delete": {
      "provider_intent": "zohodesk__api__v1__templates__template_id___delete",
      "provider_alias_intent": "/api/v1/templates/template_id",
      "text": "Delete Template",
      "category": "EmailTemplates",
      "method": "DELETE",
      "type": "API",
      "params": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Delete a Template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/{template_id}",
        "alias_endpoint": "/zohodesk/api/v1/templates/template_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates#EmailTemplates_DeleteTemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates___get": {
      "provider_intent": "zohodesk__api__v1__templates___get",
      "provider_alias_intent": "/api/v1/templates",
      "text": "Listing Templates",
      "category": "EmailTemplates",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "The corresponding department to be fetched",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "The name of the module"
        },
        "from": {
          "type": "number",
          "text": "from index, DEFAULT 1",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "number of templates to be retrieved Range 1-50, DEFAULT 50",
          "required": true
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for templates by name"
        },
        "folderId": {
          "type": "number",
          "text": "the corresponding folder to be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List all Templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates",
        "alias_endpoint": "/zohodesk/api/v1/templates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates#EmailTemplates_ListingTemplates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__template_id__render___post": {
      "provider_intent": "zohodesk__api__v1__templates__template_id__render___post",
      "provider_alias_intent": "/api/v1/templates/template_id/render",
      "text": "Rendering a Template",
      "category": "EmailTemplates",
      "method": "POST",
      "type": "API",
      "params": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "entityId": {
          "type": "number",
          "text": "The id of the entity can be contact,ticket or account",
          "required": true
        },
        "source": {
          "type": "string",
          "text": "Source from which template content has to be rendered. Values can be TICKET_REPLY , NOTIFICATIONS , AUTOMATION_ALERTS , SLA"
        }
      },
      "path": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Render an exisiting Template into reply",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/{template_id}/render",
        "alias_endpoint": "/zohodesk/api/v1/templates/template_id/render",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates_RenderingaTemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__placeholders___get": {
      "provider_intent": "zohodesk__api__v1__templates__placeholders___get",
      "provider_alias_intent": "/api/v1/templates/placeholders",
      "text": "Fetching placeholders",
      "category": "EmailTemplates",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "To get placeholders for this module. Allowed values are tickets, tasks, contacts, accounts, products, solutions, calls, events",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "To get placeholders for this departmentId",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List the placeholders supported in emailTemplates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/placeHolders",
        "alias_endpoint": "/zohodesk/api/v1/templates/placeholders",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates#EmailTemplates_Fetchingplaceholders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templates__template_id__cloneattachments___post": {
      "provider_intent": "zohodesk__api__v1__templates__template_id__cloneattachments___post",
      "provider_alias_intent": "/api/v1/templates/template_id/cloneattachments",
      "text": "Cloning a Email Template Attachments",
      "category": "EmailTemplates",
      "method": "POST",
      "type": "API",
      "params": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "template_id": {
          "type": "string",
          "text": "Template ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Cloning an exisiting Template's attachments",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templates/{template_id}/cloneAttachments",
        "alias_endpoint": "/zohodesk/api/v1/templates/template_id/cloneattachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EmailTemplates_CloningaEmailTemplateAttachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__moduleapiname__entityid__followerscount___get": {
      "provider_intent": "zohodesk__api__v1__moduleapiname__entityid__followerscount___get",
      "provider_alias_intent": "/api/v1/moduleapiname/entityid/followerscount",
      "text": "Get Entity followers count",
      "category": "Entity Followers",
      "method": "GET",
      "type": "API",
      "params": {
        "moduleAPIName": {
          "type": "string",
          "text": "Module API Name",
          "required": true
        },
        "entityId": {
          "type": "string",
          "text": "Entity ID",
          "required": true
        },
        "userType": {
          "type": "string",
          "text": "To get the followers count based on userType. Allowed values: AGENTS, END_USERS. Default value: all users will be processed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "moduleAPIName": {
          "type": "string",
          "text": "Module API Name",
          "required": true
        },
        "entityId": {
          "type": "string",
          "text": "Entity ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the count of follower list based on given filter",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/{moduleAPIName}/{entityId}/followersCount",
        "alias_endpoint": "/zohodesk/api/v1/moduleapiname/entityid/followerscount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EntityFollowers_GetEntityfollowerscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__moduleapiname__entityid__followers___get": {
      "provider_intent": "zohodesk__api__v1__moduleapiname__entityid__followers___get",
      "provider_alias_intent": "/api/v1/moduleapiname/entityid/followers",
      "text": "Get Entity followers details",
      "category": "Entity Followers",
      "method": "GET",
      "type": "API",
      "params": {
        "moduleAPIName": {
          "type": "string",
          "text": "Module API Name",
          "required": true
        },
        "entityId": {
          "type": "string",
          "text": "Entity ID",
          "required": true
        },
        "userType": {
          "type": "string",
          "text": "To get the followers based on userType. Allowed values: AGENTS, END_USERS. Default value: all users will be processed"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the followers must be listed. Default value is 1.",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of followers to list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "moduleAPIName": {
          "type": "string",
          "text": "Module API Name",
          "required": true
        },
        "entityId": {
          "type": "string",
          "text": "Entity ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the list of follower details based on the given filter",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/{moduleAPIName}/{entityId}/followers",
        "alias_endpoint": "/zohodesk/api/v1/moduleapiname/entityid/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EntityFollowers_GetEntityfollowersdetails"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id___get": {
      "provider_intent": "zohodeskapi__v1__events__event_id___get",
      "provider_alias_intent": "api/v1/events/event_id",
      "text": "Get event",
      "category": "Events",
      "method": "GET",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Allowed values are: contacts, assignee, tickets, teams, integInfo."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of an event",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Getevent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events___get": {
      "provider_intent": "zohodeskapi__v1__events___get",
      "provider_alias_intent": "api/v1/events",
      "text": "List events",
      "category": "Events",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Additional information related to the event. Allowed values are: contacts, assignee, tickets, teams, integInfo"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the events must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of events to list. Range: 1-100"
        },
        "startTime": {
          "type": "string",
          "text": "Start time for completing the event. Values allowed are Overdue, Tomorrow, CurrentWeek, CurrentMonth, and Today. You can pass multiple values by separating them with commas"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the events must be fetched"
        },
        "departmentIds": {
          "type": "number",
          "text": "Departments from which the events need to be queried"
        },
        "assignee": {
          "type": "number",
          "text": "Key that filters events by assignee. Values allowed are any valid assignee ID or multiple assignee IDs separated by commas"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes whether the event is completed or not",
          "enum": [
            true,
            false
          ]
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the events by a specific attribute: startTime or createdTime. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of events, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events",
        "alias_endpoint": "/zohodeskapi/v1/events",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Listevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events___post": {
      "provider_intent": "zohodeskapi__v1__events___post",
      "provider_alias_intent": "api/v1/events",
      "text": "Create event",
      "category": "Events",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the event"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department associated with the event and ticket",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "Subject of the event. Max chars: 300",
          "required": true
        },
        "startTime": {
          "type": "string",
          "text": "Time when the event started. Must be in ISO date format (yyyy-MM-ddThh:mm:ss.SSSZ)",
          "required": true
        },
        "duration": {
          "type": "number",
          "text": "Duration of the event in seconds",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Completion status of the event. Max chars: 120"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the event is assigned"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the event. Max chars: 120"
        },
        "description": {
          "type": "string",
          "text": "Description of the event. Max chars: 65535"
        },
        "category": {
          "type": "string",
          "text": "Category of the event. Max chars: 120"
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket associated with the event"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the event",
          "required": true
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder associated with the event"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds an event entry to your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events",
        "alias_endpoint": "/zohodeskapi/v1/events",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events#Events_Createevent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.CREATE , Desk.activities.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id___patch": {
      "provider_intent": "zohodeskapi__v1__events__event_id___patch",
      "provider_alias_intent": "api/v1/events/event_id",
      "text": "Update event",
      "category": "Events",
      "method": "PATCH",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the event"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department associated with the event and ticket"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the event. Max chars: 300",
          "required": true
        },
        "startTime": {
          "type": "string",
          "text": "Time when the event started. Must be in ISO date format (yyyy-MM-ddThh:mm:ss.SSSZ)"
        },
        "duration": {
          "type": "number",
          "text": "Duration of the event in seconds"
        },
        "status": {
          "type": "string",
          "text": "Completion status of the event. Max chars: 120"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the event is assigned"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the event. Max chars: 120"
        },
        "description": {
          "type": "string",
          "text": "Description of the event. Max chars: 65535"
        },
        "category": {
          "type": "string",
          "text": "Category of the event. Max chars: 120"
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket associated with the event"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the event"
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder associated with the event"
        }
      },
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an event",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Updateevent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__events___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__events___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/events",
      "text": "List events by ticket",
      "category": "Events",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the events must be listed"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes if the event was completed or not",
          "enum": [
            true,
            false
          ]
        },
        "isSpam": {
          "type": "boolean",
          "text": "Key that denotes whether to fetch spam events or not",
          "enum": [
            true,
            false
          ]
        },
        "limit": {
          "type": "number",
          "text": "Number of events to list. Range: 1-100"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: startTime or createdTime. Default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Allowed values are: contacts, assignee, tickets, teams, integInfo. Max chars: 100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of events associated with a ticket, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/events",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/events",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Listeventsbyticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__events__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__events__movetotrash___post",
      "provider_alias_intent": "/api/v1/events/movetotrash",
      "text": "Delete events",
      "category": "Events",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "entityIds": {
          "type": "array",
          "text": "IDs of the activities to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves event entries to the Recycle Bin of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/events/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/events/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Deleteevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__events__deletespam___post": {
      "provider_intent": "zohodesk__api__v1__events__deletespam___post",
      "provider_alias_intent": "/api/v1/events/deletespam",
      "text": "Delete spam events",
      "category": "Events",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "eventIds": {
          "type": "array",
          "text": "IDs of the spam events",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the given spam events",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/events/deleteSpam",
        "alias_endpoint": "/zohodesk/api/v1/events/deletespam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events#Events_Deletespamevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__events__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__events__updatemany___post",
      "provider_alias_intent": "/api/v1/events/updatemany",
      "text": "Update many events",
      "category": "Events",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple events at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/events/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/events/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events#Events_Updatemanyevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__events__emptyspam___post": {
      "provider_intent": "zohodesk__api__v1__events__emptyspam___post",
      "provider_alias_intent": "/api/v1/events/emptyspam",
      "text": "Empty spam events",
      "category": "Events",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the activities belong",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all spam events",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/events/emptySpam",
        "alias_endpoint": "/zohodesk/api/v1/events/emptyspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Events_Emptyspamevents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.DELETE , Desk.activities.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__events__event_id__comments___post",
      "provider_alias_intent": "api/v1/events/event_id/comments",
      "text": "Create a event comment",
      "category": "Events Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html"
        }
      },
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a event",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EventsComments#EventsComments_Createaeventcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__events__event_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/events/event_id/comments/comment_id",
      "text": "Update a event comment",
      "category": "Events Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html"
        }
      },
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing event comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EventsComments#EventsComments_Updateaeventcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__events__event_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/events/event_id/comments/comment_id",
      "text": "Delete a event comment",
      "category": "Events Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing event comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EventsComments#EventsComments_Deleteaeventcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.UPDATE , Desk.activities.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__events__event_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/events/event_id/comments/comment_id",
      "text": "Get a event comment",
      "category": "Events Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "include": {
          "type": "String",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a event comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EventsComments#EventsComments_Getaeventcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__events__event_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__events__event_id__comments___get",
      "provider_alias_intent": "api/v1/events/event_id/comments",
      "text": "List all event comments",
      "category": "Events Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No. of comments to fetch. Default is 50, range is 1-100",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting. Max chars: 100"
        },
        "include": {
          "type": "String",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "event_id": {
          "type": "string",
          "text": "Event ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a event, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/events/{event_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/events/event_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#EventsComments_Listalleventcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.events.READ , Desk.activities.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__zohofinance__financeservice__estimates__id___patch": {
      "provider_intent": "zohodesk__api__v1__zohofinance__financeservice__estimates__id___patch",
      "provider_alias_intent": "/api/v1/zohofinance/financeservice/estimates/id",
      "text": "Update estimate status",
      "category": "Finance",
      "method": "PATCH",
      "type": "API",
      "params": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "status": {
          "type": "string",
          "text": "status to be updated"
        }
      },
      "path": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This will update status of estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/zohoFinance/{financeService}/estimates/{id}",
        "alias_endpoint": "/zohodesk/api/v1/zohofinance/financeservice/estimates/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance_Updateestimatestatus"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.integrations.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__zohofinance__financeservice__invoices___get": {
      "provider_intent": "zohodesk__api__v1__zohofinance__financeservice__invoices___get",
      "provider_alias_intent": "/api/v1/zohofinance/financeservice/invoices",
      "text": "List invoices",
      "category": "Finance",
      "method": "GET",
      "type": "API",
      "params": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "deskEntityId": {
          "type": "number",
          "text": "To fetch invoice by desk contact or account or ticket id"
        },
        "deskModuleName": {
          "type": "string",
          "text": "Desk Module Name Contacts or Cases or Accounts",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "Department Id"
        },
        "status": {
          "type": "string",
          "text": "To fetch invoice by status"
        },
        "pageNumber": {
          "type": "number",
          "text": "Page number"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To list invoices",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/zohoFinance/{financeService}/invoices",
        "alias_endpoint": "/zohodesk/api/v1/zohofinance/financeservice/invoices",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance#Finance_Listinvoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.integrations.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__zohofinance__financeservice__invoices__id___patch": {
      "provider_intent": "zohodesk__api__v1__zohofinance__financeservice__invoices__id___patch",
      "provider_alias_intent": "/api/v1/zohofinance/financeservice/invoices/id",
      "text": "Update invoice status",
      "category": "Finance",
      "method": "PATCH",
      "type": "API",
      "params": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "status": {
          "type": "string",
          "text": "status to be updated"
        }
      },
      "path": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This will update status of invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/zohoFinance/{financeService}/invoices/{id}",
        "alias_endpoint": "/zohodesk/api/v1/zohofinance/financeservice/invoices/id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance#Finance_Updateinvoicestatus"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.integrations.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__zohofinance__financeservice__invoices__markassent___post": {
      "provider_intent": "zohodesk__api__v1__zohofinance__financeservice__invoices__markassent___post",
      "provider_alias_intent": "/api/v1/zohofinance/financeservice/invoices/markassent",
      "text": "MarkAllInvoicesSent",
      "category": "Finance",
      "method": "POST",
      "type": "API",
      "params": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "id of the invoice or estimate"
        }
      },
      "path": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This will update status of invoice to sent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/zohoFinance/{financeService}/invoices/markAsSent",
        "alias_endpoint": "/zohodesk/api/v1/zohofinance/financeservice/invoices/markassent",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance#Finance_MarkAllInvoicesSent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.integrations.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__zohofinance__financeservice__estimates___get": {
      "provider_intent": "zohodesk__api__v1__zohofinance__financeservice__estimates___get",
      "provider_alias_intent": "/api/v1/zohofinance/financeservice/estimates",
      "text": "List estimates",
      "category": "Finance",
      "method": "GET",
      "type": "API",
      "params": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        },
        "deskEntityId": {
          "type": "number",
          "text": "To fetch invoice by desk contact or account or ticket id"
        },
        "deskModuleName": {
          "type": "string",
          "text": "Desk Module Name",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "To fetch estimates by status"
        },
        "pageNumber": {
          "type": "number",
          "text": "Page number"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "financeService": {
          "type": "string",
          "text": "Finance Service",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To list estimates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/zohoFinance/{financeService}/estimates",
        "alias_endpoint": "/zohodesk/api/v1/zohofinance/financeservice/estimates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance#Finance_Listestimates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.integrations.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__finance__invoices__id__tickets___get": {
      "provider_intent": "zohodesk__api__v1__finance__invoices__id__tickets___get",
      "provider_alias_intent": "/api/v1/finance/invoices/id/tickets",
      "text": "Get tickets for invoices",
      "category": "Finance",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "To get associated tickets for invoice id",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/finance/invoices/{id}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/finance/invoices/id/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Finance#Finance_Getticketsforinvoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups___post": {
      "provider_intent": "zohodesk__api__v1__groups___post",
      "provider_alias_intent": "/api/v1/groups",
      "text": "Create user groups",
      "category": "Groups",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the group",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A brief description of the group"
        },
        "logoId": {
          "type": "number",
          "text": "ID of the logo to associate with the group"
        },
        "helpCenterId": {
          "type": "number",
          "text": "helpCenterId",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a user group in your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups",
        "alias_endpoint": "/zohodesk/api/v1/groups",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Createusergroups"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id___patch": {
      "provider_intent": "zohodesk__api__v1__groups__group_id___patch",
      "provider_alias_intent": "/api/v1/groups/group_id",
      "text": "Update group",
      "category": "Groups",
      "method": "PATCH",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the group"
        },
        "description": {
          "type": "string",
          "text": "A brief description of the group"
        },
        "logoId": {
          "type": "number",
          "text": "ID of the logo to associate with the group"
        }
      },
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the details of a user group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_Id}",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Updategroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDAT",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id___get": {
      "provider_intent": "zohodesk__api__v1__groups__group_id___get",
      "provider_alias_intent": "/api/v1/groups/group_id",
      "text": "Get details of group",
      "category": "Groups",
      "method": "GET",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular user group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_id}",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Getdetailsofgroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups___get": {
      "provider_intent": "zohodesk__api__v1__groups___get",
      "provider_alias_intent": "/api/v1/groups",
      "text": "List groups",
      "category": "Groups",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the groups must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of groups to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of groups by a particular attribute: -(createdTime modifiedTime name or count)"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular group The keyword must contain at least two characters"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the resource must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of groups, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups",
        "alias_endpoint": "/zohodesk/api/v1/groups",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Listgroups"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id___delete": {
      "provider_intent": "zohodesk__api__v1__groups__group_id___delete",
      "provider_alias_intent": "/api/v1/groups/group_id",
      "text": "Delete group",
      "category": "Groups",
      "method": "DELETE",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a user group from your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_Id}",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Deletegroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id__users__add___post": {
      "provider_intent": "zohodesk__api__v1__groups__group_id__users__add___post",
      "provider_alias_intent": "/api/v1/groups/group_id/users/add",
      "text": "Add users to group",
      "category": "Groups",
      "method": "POST",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "users": {
          "type": "array",
          "text": "IDs of the users who must be added to the group",
          "required": true
        }
      },
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds users to a particular group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_id}/users/add",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id/users/add",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Adduserstogroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id__users__remove___post": {
      "provider_intent": "zohodesk__api__v1__groups__group_id__users__remove___post",
      "provider_alias_intent": "/api/v1/groups/group_id/users/remove",
      "text": "Remove users from group",
      "category": "Groups",
      "method": "POST",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users who must be removed from the group",
          "required": true
        }
      },
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes particular users from a group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_Id}/users/remove",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id/users/remove",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Removeusersfromgroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__groups__group_id__users___get": {
      "provider_intent": "zohodesk__api__v1__groups__group_id__users___get",
      "provider_alias_intent": "/api/v1/groups/group_id/users",
      "text": "List users in a group",
      "category": "Groups",
      "method": "GET",
      "type": "API",
      "params": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the users must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of users based on a specific attribute: -(addedTime)"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular user"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "group_Id": {
          "type": "string",
          "text": "Group ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users in a group, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/groups/{group_Id}/users",
        "alias_endpoint": "/zohodesk/api/v1/groups/group_id/users",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Groups_Listusersinagroup"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__helpcenters___get": {
      "provider_intent": "zohodesk__api__v1__helpcenters___get",
      "provider_alias_intent": "/api/v1/helpcenters",
      "text": "List help centers",
      "category": "Help Center",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the help centers configured in your Zoho Desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/helpCenters",
        "alias_endpoint": "/zohodesk/api/v1/helpcenters",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HelpCenter_Listhelpcenters"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__helpcenters__helpcenter_id___get": {
      "provider_intent": "zohodesk__api__v1__helpcenters__helpcenter_id___get",
      "provider_alias_intent": "/api/v1/helpcenters/helpcenter_id",
      "text": "Get details of help center",
      "category": "Help Center",
      "method": "GET",
      "type": "API",
      "params": {
        "helpcenter_id": {
          "type": "string",
          "text": "Helpcenter ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "helpcenter_id": {
          "type": "string",
          "text": "Helpcenter ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/helpCenters/{helpcenter_id}",
        "alias_endpoint": "/zohodesk/api/v1/helpcenters/helpcenter_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HelpCenter_Getdetailsofhelpcenter"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__helpcenters__helpcenter_id__sitemaps___post": {
      "provider_intent": "zohodesk__api__v1__helpcenters__helpcenter_id__sitemaps___post",
      "provider_alias_intent": "/api/v1/helpcenters/helpcenter_id/sitemaps",
      "text": "Update Helpcenter sitemaps",
      "category": "Help Center",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API will generate sitemaps for the given Helpcenter",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/helpCenters/{helpcenter_id}/sitemaps",
        "alias_endpoint": "/zohodesk/api/v1/helpcenters/helpcenter_id/sitemaps",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HelpCenter_UpdateHelpcentersitemaps"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__holidaylist___post": {
      "provider_intent": "zohodesk__api__v1__holidaylist___post",
      "provider_alias_intent": "/api/v1/holidaylist",
      "text": "Create holiday list",
      "category": "HolidayList",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the holiday list",
          "required": true
        },
        "holidays": {
          "type": "array",
          "text": "Holidays to define in the list",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Activation status of the holiday list",
          "required": true
        },
        "associatedBusinessHourIds": {
          "type": "array",
          "text": "IDs of the business hour sets associated with the holiday list"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a holiday list in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/holidayList",
        "alias_endpoint": "/zohodesk/api/v1/holidaylist",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HolidayList_Createholidaylist"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__holidaylist__holidaylistid___get": {
      "provider_intent": "zohodesk__api__v1__holidaylist__holidaylistid___get",
      "provider_alias_intent": "/api/v1/holidaylist/holidaylistid",
      "text": "Get holiday list",
      "category": "HolidayList",
      "method": "GET",
      "type": "API",
      "params": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a holiday list configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/holidayList/{holidayListId}",
        "alias_endpoint": "/zohodesk/api/v1/holidaylist/holidaylistid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HolidayList#HolidayList_Getholidaylist"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__holidaylist__holidaylistid___patch": {
      "provider_intent": "zohodesk__api__v1__holidaylist__holidaylistid___patch",
      "provider_alias_intent": "/api/v1/holidaylist/holidaylistid",
      "text": "Update holiday list",
      "category": "HolidayList",
      "method": "PATCH",
      "type": "API",
      "params": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the holiday list"
        },
        "holidays": {
          "type": "array",
          "text": "Holidays to define in the list"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the holiday list"
        },
        "associatedBusinessHourIds": {
          "type": "array",
          "text": "IDs of the business hour sets associated with the holiday list"
        }
      },
      "path": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of a holiday list configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/holidayList/{holidayListId}",
        "alias_endpoint": "/zohodesk/api/v1/holidaylist/holidaylistid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HolidayList#HolidayList_Updateholidaylist"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__holidaylist__holidaylistid___delete": {
      "provider_intent": "zohodesk__api__v1__holidaylist__holidaylistid___delete",
      "provider_alias_intent": "/api/v1/holidaylist/holidaylistid",
      "text": "Delete holiday list",
      "category": "HolidayList",
      "method": "DELETE",
      "type": "API",
      "params": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "holidayListId": {
          "type": "string",
          "text": "Holiday List ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a holiday list from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/holidayList/{holidayListId}",
        "alias_endpoint": "/zohodesk/api/v1/holidaylist/holidaylistid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HolidayList#HolidayList_Deleteholidaylist"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__holidaylist___get": {
      "provider_intent": "zohodesk__api__v1__holidaylist___get",
      "provider_alias_intent": "/api/v1/holidaylist",
      "text": "List holiday lists",
      "category": "HolidayList",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the holiday lists must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of holiday lists to list"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the holiday list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of holiday lists, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/holidayList",
        "alias_endpoint": "/zohodesk/api/v1/holidaylist",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#HolidayList#HolidayList_Listholidaylists"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__jiraissue__issueid__tickets___get": {
      "provider_intent": "zohodesk__api__v1__jiraissue__issueid__tickets___get",
      "provider_alias_intent": "/api/v1/jiraissue/issueid/tickets",
      "text": "Get Linked Tickets by Jira Issue Id",
      "category": "Jira",
      "method": "GET",
      "type": "API",
      "params": {
        "issueId": {
          "type": "string",
          "text": "Issue ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Start index"
        },
        "limit": {
          "type": "number",
          "text": "Length of the response"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "issueId": {
          "type": "string",
          "text": "Issue ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches support tickets associated with the Jira issue specified in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/jiraIssue/{issueId}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/jiraissue/issueid/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Jira#Jira_GetLinkedTicketsbyJiraIssueId"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories___post": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories___post",
      "provider_alias_intent": "/api/v1/kbrootcategories",
      "text": "Create root category",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the category",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A brief description of the category",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Activation status of the category",
          "required": true
        },
        "visibility": {
          "type": "string",
          "text": "Visibility setting of the category",
          "required": true
        },
        "groupIds": {
          "type": "array",
          "text": "List of group IDs"
        },
        "articleViewType": {
          "type": "string",
          "text": "View to apply while listing help articles",
          "required": true
        },
        "isReviewEnabled": {
          "type": "boolean",
          "text": "Key that specifies whether the category must be reviewed or not",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "logoId": {
          "type": "number",
          "text": "ID of the logo to set for the category",
          "required": true
        },
        "associatedDepartmentIds": {
          "type": "array",
          "text": "IDs of the departments associated with the category"
        },
        "primaryDepartmentId": {
          "type": "number",
          "text": "ID of the department to which the category belongs"
        },
        "helpcenterId": {
          "type": "number",
          "text": "ID of the help center to which the category belongs"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a root category in your knowledge base",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Createrootcategory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbcategorylogo___post": {
      "provider_intent": "zohodesk__api__v1__kbcategorylogo___post",
      "provider_alias_intent": "/api/v1/kbcategorylogo",
      "text": "Upload logo image",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is used to upload an image to be used as logo",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbCategoryLogo",
        "alias_endpoint": "/zohodesk/api/v1/kbcategorylogo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Uploadlogoimage"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbsections___post": {
      "provider_intent": "zohodesk__api__v1__kbsections___post",
      "provider_alias_intent": "/api/v1/kbsections",
      "text": "Create a section",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Section Name",
          "required": true
        },
        "parentCategoryId": {
          "type": "number",
          "text": "Parent id (either section or rootCategoryId) below which we need to create a section",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A short description of the section"
        },
        "logoId": {
          "type": "number",
          "text": "Logo for each category"
        },
        "status": {
          "type": "string",
          "text": "Status of the section"
        },
        "visibility": {
          "type": "string",
          "text": "Visibility of the section"
        },
        "groupIds": {
          "type": "array",
          "text": "group ids list"
        },
        "articlePermission": {
          "type": "string",
          "text": "To update the article permission based on category visibility"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a section in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbSections",
        "alias_endpoint": "/zohodesk/api/v1/kbsections",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Createasection"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbsections__sectionid___patch": {
      "provider_intent": "zohodesk__api__v1__kbsections__sectionid___patch",
      "provider_alias_intent": "/api/v1/kbsections/sectionid",
      "text": "Update a section",
      "category": "KBCategory",
      "method": "PATCH",
      "type": "API",
      "params": {
        "sectionId": {
          "type": "string",
          "text": "Section ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Section Name"
        },
        "description": {
          "type": "string",
          "text": "A short description of the section"
        },
        "logoId": {
          "type": "number",
          "text": "Logo for each category"
        },
        "status": {
          "type": "string",
          "text": "Status of the section"
        },
        "visibility": {
          "type": "string",
          "text": "Visibility of the section"
        },
        "groupIds": {
          "type": "array",
          "text": "group ids list"
        },
        "articlePermission": {
          "type": "string",
          "text": "To update the article permission based on category visibility"
        }
      },
      "path": {
        "sectionId": {
          "type": "string",
          "text": "Section ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates a section in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbSections/{sectionId}",
        "alias_endpoint": "/zohodesk/api/v1/kbsections/sectionid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Updateasection"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbsections__sectionid___get": {
      "provider_intent": "zohodesk__api__v1__kbsections__sectionid___get",
      "provider_alias_intent": "/api/v1/kbsections/sectionid",
      "text": "Get a section",
      "category": "KBCategory",
      "method": "GET",
      "type": "API",
      "params": {
        "sectionId": {
          "type": "string",
          "text": "Section ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Include params are publicArticlesCount allArticlesCount"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "sectionId": {
          "type": "string",
          "text": "Section ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a section in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbSections/{sectionId}",
        "alias_endpoint": "/zohodesk/api/v1/kbsections/sectionid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Getasection"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid___get": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid___get",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid",
      "text": "Get root category",
      "category": "KBCategory",
      "method": "GET",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the category"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a root category",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Getrootcategory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__categorytree___get": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__categorytree___get",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/categorytree",
      "text": "Get a category tree",
      "category": "KBCategory",
      "method": "GET",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale of the translated name"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort order of the categories"
        },
        "includeTrash": {
          "type": "boolean",
          "text": "Presence flag of the category",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Include params are publicArticlesCount allArticlesCount"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the full tree of a root category in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/categoryTree",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/categorytree",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Getacategorytree"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories___get": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories___get",
      "provider_alias_intent": "/api/v1/kbrootcategories",
      "text": "List root categories",
      "category": "KBCategory",
      "method": "GET",
      "type": "API",
      "params": {
        "locale": {
          "type": "string",
          "text": "Language of the category"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the categories based on a specific attribute: name or order"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the categories must be fetched",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of categories to list",
          "required": true
        },
        "searchValue": {
          "type": "string",
          "text": "Keyword for searching for a particular category"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the category"
        },
        "isTrashed": {
          "type": "boolean",
          "text": "Key that denotes whether the category is deleted or not",
          "enum": [
            true,
            false
          ]
        },
        "isReviewEnabled": {
          "type": "boolean",
          "text": "Key that specifies whether the category must be reviewed or not",
          "enum": [
            true,
            false
          ]
        },
        "visibility": {
          "type": "string",
          "text": "Visibility setting of the category"
        },
        "departmentId": {
          "type": "string",
          "text": "ID of the department associated with the category"
        },
        "helpcenterId": {
          "type": "string",
          "text": "ID of the help center to which the category belongs"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the category"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of root categories, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Listrootcategories"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners___get": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners___get",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/reviewowners",
      "text": "Get review owners",
      "category": "KBCategory",
      "method": "GET",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort order of the owners"
        },
        "from": {
          "type": "number",
          "text": "Offset value",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of objects",
          "required": true
        },
        "searchValue": {
          "type": "string",
          "text": "Search string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches review owners of a root category in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/reviewowners",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Getreviewowners"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners__add___post": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners__add___post",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/reviewowners/add",
      "text": "Add review owner",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "reviewOwnerIds": {
          "type": "array",
          "text": "review owner ids list",
          "required": true
        }
      },
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds review owners of a root category in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners/add",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/reviewowners/add",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Addreviewowner"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners__remove___post": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__reviewowners__remove___post",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/reviewowners/remove",
      "text": "Remove review owner",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "reviewOwnerIds": {
          "type": "array",
          "text": "review owner ids list",
          "required": true
        }
      },
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes review owners of a root category in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/reviewOwners/remove",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/reviewowners/remove",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Removereviewowner"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__translations__locale__permalinks__add___post": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__translations__locale__permalinks__add___post",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/translations/locale/permalinks/add",
      "text": "Add a permalink to a root catgeory",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "permalink": {
          "type": "string",
          "text": "The permalink of Solution",
          "required": true
        },
        "isOldPermalinkNeeded": {
          "type": "boolean",
          "text": "The variable that defines if permalink needs to be added to redirect list",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a permalink to a root category translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/translations/{locale}/permalinks/add",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/translations/locale/permalinks/add",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Addapermalinktoarootcatgeory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__kbrootcategories__rootcategoryid__translations__locale__permalinks__remove___post": {
      "provider_intent": "zohodesk__api__v1__kbrootcategories__rootcategoryid__translations__locale__permalinks__remove___post",
      "provider_alias_intent": "/api/v1/kbrootcategories/rootcategoryid/translations/locale/permalinks/remove",
      "text": "Remove a permalink of a root category",
      "category": "KBCategory",
      "method": "POST",
      "type": "API",
      "params": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "permalink": {
          "type": "string",
          "text": "The permalink of Solution",
          "required": true
        }
      },
      "path": {
        "rootCategoryId": {
          "type": "string",
          "text": "Root Category ID",
          "required": true
        },
        "locale": {
          "type": "string",
          "text": "Locale",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes a permalink of a root category translation",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/kbRootCategories/{rootCategoryId}/translations/{locale}/permalinks/remove",
        "alias_endpoint": "/zohodesk/api/v1/kbrootcategories/rootcategoryid/translations/locale/permalinks/remove",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#KBCategory_Removeapermalinkofarootcategory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels___post": {
      "provider_intent": "zohodesk__api__v1__labels___post",
      "provider_alias_intent": "/api/v1/labels",
      "text": "Create label",
      "category": "Labels",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the label",
          "required": true
        },
        "logoId": {
          "type": "number",
          "text": "ID of the logo set for the label"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center in which the label must be created",
          "required": true
        },
        "preferences": {
          "type": "object",
          "text": "Visual preferences related to the label/logo"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a label in your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels",
        "alias_endpoint": "/zohodesk/api/v1/labels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Createlabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id___patch": {
      "provider_intent": "zohodesk__api__v1__labels__label_id___patch",
      "provider_alias_intent": "/api/v1/labels/label_id",
      "text": "Update label",
      "category": "Labels",
      "method": "PATCH",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the label"
        },
        "logoId": {
          "type": "number",
          "text": "ID of the logo set for the label"
        },
        "preferences": {
          "type": "object",
          "text": "Visual preferences related to the label/logo"
        }
      },
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the details of a label",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Updatelabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id___get": {
      "provider_intent": "zohodesk__api__v1__labels__label_id___get",
      "provider_alias_intent": "/api/v1/labels/label_id",
      "text": "Get details of label",
      "category": "Labels",
      "method": "GET",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular label",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Getdetailsoflabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels___get": {
      "provider_intent": "zohodesk__api__v1__labels___get",
      "provider_alias_intent": "/api/v1/labels",
      "text": "List labels",
      "category": "Labels",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the labels must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of labels to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of labels by a particular attribute: -(createdTime or modifiedTime or name)"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular label"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the labels must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of labels, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels",
        "alias_endpoint": "/zohodesk/api/v1/labels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Listlabels"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id___delete": {
      "provider_intent": "zohodesk__api__v1__labels__label_id___delete",
      "provider_alias_intent": "/api/v1/labels/label_id",
      "text": "Delete label",
      "category": "Labels",
      "method": "DELETE",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a label from your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Deletelabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels___delete": {
      "provider_intent": "zohodesk__api__v1__labels___delete",
      "provider_alias_intent": "/api/v1/labels",
      "text": "Delete label by labelIds",
      "category": "Labels",
      "method": "DELETE",
      "type": "API",
      "params": {
        "labelIds": {
          "type": "number",
          "text": "IDs of the labels to delete"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes labels, based on the IDs specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels",
        "alias_endpoint": "/zohodesk/api/v1/labels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_DeletelabelbylabelIds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id__users__add___post": {
      "provider_intent": "zohodesk__api__v1__labels__label_id__users__add___post",
      "provider_alias_intent": "/api/v1/labels/label_id/users/add",
      "text": "Assign label to users",
      "category": "Labels",
      "method": "POST",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users to whom the label must be assigned",
          "required": true
        }
      },
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API assigns a particular label to multiple users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}/users/add",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id/users/add",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Assignlabeltousers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id__users__remove___post": {
      "provider_intent": "zohodesk__api__v1__labels__label_id__users__remove___post",
      "provider_alias_intent": "/api/v1/labels/label_id/users/remove",
      "text": "Remove users under a label",
      "category": "Labels",
      "method": "POST",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "userIds": {
          "type": "array",
          "text": "IDs of the users from whom the label must be removed",
          "required": true
        }
      },
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes all users under a particular label",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}/users/remove",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id/users/remove",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Removeusersunderalabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__labels__label_id__users___get": {
      "provider_intent": "zohodesk__api__v1__labels__label_id__users___get",
      "provider_alias_intent": "/api/v1/labels/label_id/users",
      "text": "List users under a label",
      "category": "Labels",
      "method": "GET",
      "type": "API",
      "params": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the users must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of users by a specific attribute: -(assignedTime)"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular user"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "label_id": {
          "type": "string",
          "text": "Label ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of users under a label, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/labels/{label_id}/users",
        "alias_endpoint": "/zohodesk/api/v1/labels/label_id/users",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Labels_Listusersunderalabel"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
      "text": "Get Layout Rule",
      "category": "LayoutRules",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the rules. Values allowed are: creator and modifier"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single rule from your help desk layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules_GetLayoutRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layoutrules___get": {
      "provider_intent": "zohodesk__api__v1__layoutrules___get",
      "provider_alias_intent": "/api/v1/layoutrules",
      "text": "Get Layout Rules for department or layout",
      "category": "LayoutRules",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Get the rules of the department"
        },
        "layoutId": {
          "type": "number",
          "text": "Get the rules of the layout"
        },
        "module": {
          "type": "string",
          "text": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events"
        },
        "activeLayouts": {
          "type": "boolean",
          "text": "Get the rules for active layouts",
          "enum": [
            true,
            false
          ]
        },
        "activeRules": {
          "type": "boolean",
          "text": "Get the rules that are active in the layout",
          "enum": [
            true,
            false
          ]
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "Get the rules that can be executed in help centre",
          "enum": [
            true,
            false
          ]
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the rules must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of rules to be fetched. Default is 50"
        },
        "searchString": {
          "type": "string",
          "text": "Get the rules that have this search term"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the rules. Values allowed are: creator and modifier"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Get Layout Rules for department or layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layoutRules",
        "alias_endpoint": "/zohodesk/api/v1/layoutrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules_GetLayoutRulesfordepartmentorlayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__layoutrules___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__layoutrules___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/layoutrules",
      "text": "Create Layout Rule",
      "category": "LayoutRules",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the rules. Values allowed are: creator and modifier"
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the rule",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A short description of the rule"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the primary field to be used for creating the rule",
          "required": true
        },
        "displayLabel": {
          "type": "string",
          "text": "Display Label of the primary field to be used for creating the rule"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the rule: ACTIVE or DEACTIVE"
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "To execute the rule in help centre or not: true or false",
          "enum": [
            true,
            false
          ]
        },
        "fieldConditions": {
          "type": "array",
          "text": "Conditions in the layout rule",
          "required": true
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a rule for a field in a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/layoutRules",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/layoutrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules_CreateLayoutRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___patch": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___patch",
      "provider_alias_intent": "/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
      "text": "Update Layout Rule",
      "category": "LayoutRules",
      "method": "PATCH",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the rules. Values allowed are: creator and modifier"
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the rule"
        },
        "description": {
          "type": "string",
          "text": "A short description of the rule"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the primary field to be used for creating the rule"
        },
        "displayLabel": {
          "type": "string",
          "text": "Display Label of the primary field to be used for creating the rule"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the rule: ACTIVE or DEACTIVE"
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "To execute the rule in help centre or not: true or false",
          "enum": [
            true,
            false
          ]
        },
        "fieldConditions": {
          "type": "array",
          "text": "Conditions in the layout rule"
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing layout rule in a particular layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules_UpdateLayoutRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___delete": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__layoutrules__layoutrule_id___delete",
      "provider_alias_intent": "/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
      "text": "Delete Layout Rule",
      "category": "LayoutRules",
      "method": "DELETE",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "layoutRule_id": {
          "type": "string",
          "text": "Layout Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a layout rule created for a field from a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/layoutRules/{layoutRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/layoutrules/layoutrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules#LayoutRules_DeleteLayoutRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__layoutrules__criteriafields___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__layoutrules__criteriafields___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id/layoutrules/criteriafields",
      "text": "List Criteria Fields For Layout Rules",
      "category": "LayoutRules",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "Category for getting the field criteria for primary or secondary fields",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the fields that can be used in criteria of a specified module in layout rules",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/layoutRules/criteriaFields",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/layoutrules/criteriafields",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#LayoutRules_ListCriteriaFieldsForLayoutRules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts___get": {
      "provider_intent": "zohodesk__api__v1__layouts___get",
      "provider_alias_intent": "/api/v1/layouts",
      "text": "List Layouts",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Name of the module whose layouts must be fetched. Values allowed are tickets, contacts, accounts, calls, events, tasks, timeEntry, products, and contracts",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the layouts are configured"
        },
        "status": {
          "type": "string",
          "text": "Status of the layout. Values allowed are active, inactive, all",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of layouts to be fetched. Default is 100",
          "required": true
        },
        "layoutName": {
          "type": "string",
          "text": "Name of the layout used as the keyword for the search. Max length: 200."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all the layouts configured for a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts",
        "alias_endpoint": "/zohodesk/api/v1/layouts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_ListLayouts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id",
      "text": "Get Layout",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a layout configured for a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_GetLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__clone___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__clone___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/clone",
      "text": "Clone Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "layoutName": {
          "type": "string",
          "text": "Name of the layout. Max length: 150",
          "required": true
        },
        "layoutDesc": {
          "type": "string",
          "text": "Description of the layout. Max length: 500."
        },
        "layoutDisplayName": {
          "type": "string",
          "text": "Display Name of the layout in HelpCenter. Max length: 150.",
          "required": true
        },
        "isDefaultLayout": {
          "type": "boolean",
          "text": "Key that returns if the layout is the default layout in the module",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "departmentId": {
          "type": "number",
          "text": "ID which helps to clone a layout in another department."
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates new Layout by cloning existing layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/clone",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/clone",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_CloneLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts___post": {
      "provider_intent": "zohodesk__api__v1__layouts___post",
      "provider_alias_intent": "/api/v1/layouts",
      "text": "Create Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "isDefaultLayout": {
          "type": "boolean",
          "text": "Key that returns if the layout is the default layout in the module",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "sections": {
          "type": "array",
          "text": "Sections in the layout",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Name of the module. Max length: 100",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates the layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts",
        "alias_endpoint": "/zohodesk/api/v1/layouts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_CreateLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id___patch": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id___patch",
      "provider_alias_intent": "/api/v1/layouts/layout_id",
      "text": "Update Layout",
      "category": "Layouts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "isDefaultLayout": {
          "type": "boolean",
          "text": "Key that returns if the layout is the default layout in the module",
          "enum": [
            true,
            false
          ]
        },
        "sections": {
          "type": "array",
          "text": "Sections in the layout"
        },
        "module": {
          "type": "string",
          "text": "Name of the module. Max length: 100"
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_UpdateLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id___delete": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id___delete",
      "provider_alias_intent": "/api/v1/layouts/layout_id",
      "text": "Delete Layout",
      "category": "Layouts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "transferToLayoutId": {
          "type": "number",
          "text": "The layout id to which the entities in the deleted layout to be transferred to",
          "required": true
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_DeleteLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__deactivate___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__deactivate___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/deactivate",
      "text": "DeActivate Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "transferToLayoutId": {
          "type": "number",
          "text": "The layout id to which the entities in the deleted layout to be transferred to",
          "required": true
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This Api deactivates existing layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/deactivate",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/deactivate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_DeActivateLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__activate___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__activate___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/activate",
      "text": "Activate Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This api activates the deactivated Layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/activate",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/activate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_ActivateLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__profiles___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__profiles___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id/profiles",
      "text": "Get Layout Profiles",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This api returns the profiles associated with a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/profiles",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/profiles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_GetLayoutProfiles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__profiles___patch": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__profiles___patch",
      "provider_alias_intent": "/api/v1/layouts/layout_id/profiles",
      "text": "Associate Layout profiles",
      "category": "Layouts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "layoutProfileIds": {
          "type": "array",
          "text": "The profile id to which the layout needs to be associated to"
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This api Associates the given profiles to the layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/profiles",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/profiles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_AssociateLayoutprofiles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__standardlayoutformat___get": {
      "provider_intent": "zohodesk__api__v1__layouts__standardlayoutformat___get",
      "provider_alias_intent": "/api/v1/layouts/standardlayoutformat",
      "text": "Standard Layout Format",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Name of the module whose layouts must be fetched. Values allowed are tickets, contacts, accounts , calls , events, tasks, timeEntry, products, and contracts",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This Api provides the standrd layout format for the given module with organisations fields that can be used for create layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/standardLayoutFormat",
        "alias_endpoint": "/zohodesk/api/v1/layouts/standardlayoutformat",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_StandardLayoutFormat"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myform___get": {
      "provider_intent": "zohodesk__api__v1__myform___get",
      "provider_alias_intent": "/api/v1/myform",
      "text": "Get MyForm",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "layoutId": {
          "type": "number",
          "text": "ID of the layout"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of a layout, based on the profile of the current user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myForm",
        "alias_endpoint": "/zohodesk/api/v1/myform",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_GetMyForm"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__replacevalues___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__replacevalues___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/replacevalues",
      "text": "Replace PickList Value in all Existing Records",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "fieldId": {
          "type": "number",
          "text": "field Id",
          "required": true
        },
        "oldValue": {
          "type": "string",
          "text": "oldValue",
          "required": true
        },
        "newValue": {
          "type": "string",
          "text": "newValue",
          "required": true
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API replaces the old value with the new value for the PickList field type in all existing records only",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/replaceValues",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/replacevalues",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts_ReplacePickListValueinallExistingRecords"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__fields__field_id___patch": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__fields__field_id___patch",
      "provider_alias_intent": "/api/v1/layouts/layout_id/fields/field_id",
      "text": "Update Layout Field",
      "category": "Layouts",
      "method": "PATCH",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "expression": {
          "type": "string",
          "text": "Formula Expression"
        },
        "isMandatory": {
          "type": "boolean",
          "text": "Key that returns if a field is mandatory in a layout or not",
          "enum": [
            true,
            false
          ]
        },
        "defaultValue": {
          "type": "string",
          "text": "Default value set for a field. Applicable for Checkbox fields and PickList fields"
        },
        "allowedValues": {
          "type": "array",
          "text": "Values allowed in a field. Applicable for PickList fields"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts values in a PickList field either alphabetically or by a user-defined order"
        },
        "isNested": {
          "type": "boolean",
          "text": "Key that returns if the picklist is nested or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of a field in the layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/fields/{field_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/fields/field_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_UpdateLayoutField"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__fields__value__unassociate___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__fields__value__unassociate___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/fields/value/unassociate",
      "text": "Remove Field in Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is to remove fields from a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/fields/([0-9]+)/unassociate",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/fields/value/unassociate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_RemoveFieldinLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__fields__value__clonefieldsinlayout___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__fields__value__clonefieldsinlayout___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/fields/value/clonefieldsinlayout",
      "text": "Clone Fields to other Layout",
      "category": "Layouts",
      "method": "POST",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "layoutIds": {
          "type": "array",
          "text": "List of layout ids to which the field should be cloned"
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is to clone a field to other layouts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/fields/([0-9]+)/cloneFieldsInLayout",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/fields/value/clonefieldsinlayout",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_CloneFieldstootherLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__value__fields__value__value___get": {
      "provider_intent": "zohodesk__api__v1__layouts__value__fields__value__value___get",
      "provider_alias_intent": "/api/v1/layouts/value/fields/value/value",
      "text": "Get PickList Value in Layout",
      "category": "Layouts",
      "method": "GET",
      "type": "API",
      "params": {
        "fileType": {
          "type": "string",
          "text": "Export Format in which format should be shown. This value can be CSV"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This api behaves as below\r\n(i)When Query param fileType=CSV is passed the picklist values gets downloaded in csv file with *fieldlabel* as its name\r\n(ii) When header param is not passed empty 200 response",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/([0-9]+)/fields/([0-9]+)/value",
        "alias_endpoint": "/zohodesk/api/v1/layouts/value/fields/value/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Layouts#Layouts_GetPickListValueinLayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__countries___get": {
      "provider_intent": "zohodesk__api__v1__countries___get",
      "provider_alias_intent": "/api/v1/countries",
      "text": "List all countries",
      "category": "Locales",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the countries that can be set in the locale field in Zoho Desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/countries",
        "alias_endpoint": "/zohodesk/api/v1/countries",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Locales#Locales_Listallcountries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__languages___get": {
      "provider_intent": "zohodesk__api__v1__languages___get",
      "provider_alias_intent": "/api/v1/languages",
      "text": "List all languages",
      "category": "Locales",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the languages that are available for listing in Zoho Desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/languages",
        "alias_endpoint": "/zohodesk/api/v1/languages",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Locales_Listalllanguages"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__timezones___get": {
      "provider_intent": "zohodesk__api__v1__timezones___get",
      "provider_alias_intent": "/api/v1/timezones",
      "text": "List all time zones",
      "category": "Locales",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the time zones that are available for listing in Zoho Desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/timeZones",
        "alias_endpoint": "/zohodesk/api/v1/timezones",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Locales_Listalltimezones"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__mailconfigurations___get": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__mailconfigurations___get",
      "provider_alias_intent": "/api/v1/departments/department_id/mailconfigurations",
      "text": "List department-level MailConfigurations",
      "category": "MailConfigurations",
      "method": "GET",
      "type": "API",
      "params": {
        "department_Id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_Id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the MailConfigurations set for a specific department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_Id}/mailConfigurations",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/mailconfigurations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailConfigurations#MailConfigurations_Listdepartment-levelMailConfigurations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailconfigurations___get": {
      "provider_intent": "zohodesk__api__v1__mailconfigurations___get",
      "provider_alias_intent": "/api/v1/mailconfigurations",
      "text": "List organization-level MailConfigurations",
      "category": "MailConfigurations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the MailConfigurations set for the entire help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailConfigurations",
        "alias_endpoint": "/zohodesk/api/v1/mailconfigurations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailConfigurations_Listorganization-levelMailConfigurations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__mailconfigurations___patch": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__mailconfigurations___patch",
      "provider_alias_intent": "/api/v1/departments/department_id/mailconfigurations",
      "text": "Update department-level MailConfigurations",
      "category": "MailConfigurations",
      "method": "PATCH",
      "type": "API",
      "params": {
        "department_Id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "autoCCToMailbox": {
          "type": "boolean",
          "text": "Key that enables or disables auto CC of email replies to your",
          "enum": [
            true,
            false
          ]
        },
        "createContactWithReplyTo": {
          "type": "boolean",
          "text": "Key that enables or disables creation of contacts from 'Reply To' email addresses",
          "enum": [
            true,
            false
          ]
        },
        "agentNameInTicketReply": {
          "type": "boolean",
          "text": "Key that enables or disables display of the agent's name in replies to customers",
          "enum": [
            true,
            false
          ]
        },
        "createTicketForOriginalSender": {
          "type": "boolean",
          "text": "Key that enables or disables creation of tickets on behalf of the sender while forwarding emails",
          "enum": [
            true,
            false
          ]
        },
        "privateThreadConfig": {
          "type": "boolean",
          "text": "Key that enables or disables private thread handling",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "department_Id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the MailConfigurations set for a specific department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_Id}/mailConfigurations",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/mailconfigurations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailConfigurations#MailConfigurations_Updatedepartment-level%C2%A0MailConfigurations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailconfigurations___patch": {
      "provider_intent": "zohodesk__api__v1__mailconfigurations___patch",
      "provider_alias_intent": "/api/v1/mailconfigurations",
      "text": "Update organization-level MailConfigurations",
      "category": "MailConfigurations",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "autoCCToMailbox": {
          "type": "boolean",
          "text": "Key that enables or disables auto CC of email replies to your",
          "enum": [
            true,
            false
          ]
        },
        "createContactWithReplyTo": {
          "type": "boolean",
          "text": "Key that enables or disables creation of contacts from 'Reply To' email addresses",
          "enum": [
            true,
            false
          ]
        },
        "agentNameInTicketReply": {
          "type": "boolean",
          "text": "Key that enables or disables display of the agent's name in replies to customers",
          "enum": [
            true,
            false
          ]
        },
        "createTicketForOriginalSender": {
          "type": "boolean",
          "text": "Key that enables or disables creation of tickets on behalf of the sender while forwarding emails",
          "enum": [
            true,
            false
          ]
        },
        "privateThreadConfig": {
          "type": "boolean",
          "text": "Key that enables or disables private thread handling",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the MailConfigurations set for the entire help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailConfigurations",
        "alias_endpoint": "/zohodesk/api/v1/mailconfigurations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailConfigurations#MailConfigurations_Updateorganization-levelMailConfigurations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___get": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___get",
      "provider_alias_intent": "/api/v1/mailreplyaddress/mailreplyaddress_id",
      "text": "Get details of a MailReplyAddress",
      "category": "MailReplyAddress",
      "method": "GET",
      "type": "API",
      "params": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a MailReplyAddress",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress/{mailReplyAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress/mailreplyaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress#MailReplyAddress_GetdetailsofaMailReplyAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress___get": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress___get",
      "provider_alias_intent": "/api/v1/mailreplyaddress",
      "text": "List MailReplyAddresses",
      "category": "MailReplyAddress",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the Department from which the addresses need to be queried",
          "required": true
        },
        "isActive": {
          "type": "boolean",
          "text": "Key that returns if the mailReplyAddress is active or not",
          "enum": [
            true,
            false
          ]
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the mail addresses must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of mail addresses to fetch, range: 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the mailReplyAddresses configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress_ListMailReplyAddresses"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress___post": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress___post",
      "provider_alias_intent": "/api/v1/mailreplyaddress",
      "text": "Add MailReplyAddress",
      "category": "MailReplyAddress",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the MailReplyAddress must be configured",
          "required": true
        },
        "address": {
          "type": "string",
          "text": "Email ID to add, max chars: 100",
          "required": true
        },
        "displayName": {
          "type": "string",
          "text": "Display name for the MailReplyAddress, max chars: 100",
          "required": true
        },
        "smtpDetails": {
          "type": "object",
          "text": "Details related to the SMTP authentication for the MailReplyAddress"
        },
        "serviceProviderType": {
          "type": "string",
          "text": "MailService Provider name, max chars: 50"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a MailReplyAddress to your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress#MailReplyAddress_AddMailReplyAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___patch": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___patch",
      "provider_alias_intent": "/api/v1/mailreplyaddress/mailreplyaddress_id",
      "text": "Update MailReplyAddress",
      "category": "MailReplyAddress",
      "method": "PATCH",
      "type": "API",
      "params": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department(s) in which the MailReplyAddress is configured"
        },
        "displayName": {
          "type": "string",
          "text": "Display name"
        },
        "isActive": {
          "type": "boolean",
          "text": "Key that returns if the MailReplyAddress is active or not",
          "enum": [
            true,
            false
          ]
        },
        "serviceProviderType": {
          "type": "string",
          "text": "MailService Provider name, max chars: 50"
        },
        "smtpDetails": {
          "type": "object",
          "text": "Details related to the SMTP authentication for the MailReplyAddress"
        }
      },
      "path": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing MailReplyAddress",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress/{mailReplyAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress/mailreplyaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress_UpdateMailReplyAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___delete": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id___delete",
      "provider_alias_intent": "/api/v1/mailreplyaddress/mailreplyaddress_id",
      "text": "Delete MailReplyAddress",
      "category": "MailReplyAddress",
      "method": "DELETE",
      "type": "API",
      "params": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a MailReplyAddress from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress/{mailReplyAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress/mailreplyaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress_DeleteMailReplyAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id__sendverification___post": {
      "provider_intent": "zohodesk__api__v1__mailreplyaddress__mailreplyaddress_id__sendverification___post",
      "provider_alias_intent": "/api/v1/mailreplyaddress/mailreplyaddress_id/sendverification",
      "text": "Send Verification Mail",
      "category": "MailReplyAddress",
      "method": "POST",
      "type": "API",
      "params": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "mailReplyAddress_id": {
          "type": "string",
          "text": "Mail Reply Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sends a verification link to the MailReplyAddress configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/mailReplyAddress/{mailReplyAddress_id}/sendVerification",
        "alias_endpoint": "/zohodesk/api/v1/mailreplyaddress/mailreplyaddress_id/sendverification",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#MailReplyAddress_SendVerificationMail"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationmodules___get": {
      "provider_intent": "zohodesk__api__v1__organizationmodules___get",
      "provider_alias_intent": "/api/v1/organizationmodules",
      "text": "Get All Modules",
      "category": "Modules",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches all the modules",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationModules",
        "alias_endpoint": "/zohodesk/api/v1/organizationmodules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Modules#Modules_GetAllModules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationmodules__module_id___get": {
      "provider_intent": "zohodesk__api__v1__organizationmodules__module_id___get",
      "provider_alias_intent": "/api/v1/organizationmodules/module_id",
      "text": "Get a Module",
      "category": "Modules",
      "method": "GET",
      "type": "API",
      "params": {
        "module_id": {
          "type": "string",
          "text": "Module Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "module_id": {
          "type": "string",
          "text": "Module Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single Module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationModules/{module_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizationmodules/module_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Modules#Modules_GetaModule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myaccessiblemodules___get": {
      "provider_intent": "zohodesk__api__v1__myaccessiblemodules___get",
      "provider_alias_intent": "/api/v1/myaccessiblemodules",
      "text": "Get modules accessible to current user profile",
      "category": "Modules",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a list of modules that are accessible to the current user profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myAccessibleModules",
        "alias_endpoint": "/zohodesk/api/v1/myaccessiblemodules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Modules#Modules_Getmodulesaccessibletocurrentuserprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationmodules___post": {
      "provider_intent": "zohodesk__api__v1__organizationmodules___post",
      "provider_alias_intent": "/api/v1/organizationmodules",
      "text": "Create Custom Module",
      "category": "Modules",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The primary field of the Module for the record",
          "required": true
        },
        "layout": {
          "type": "object",
          "text": "Layout of the record"
        },
        "owner": {
          "type": "object",
          "text": "The owner of the record"
        },
        "cf": {
          "type": "object",
          "text": "Custom fields associated with the record"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a Custom Module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationModules",
        "alias_endpoint": "/zohodesk/api/v1/organizationmodules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Modules#Modules_CreateCustomModule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationmodules__module_id___put": {
      "provider_intent": "zohodesk__api__v1__organizationmodules__module_id___put",
      "provider_alias_intent": "/api/v1/organizationmodules/module_id",
      "text": "Edit Custom Module",
      "category": "Modules",
      "method": "PUT",
      "type": "API",
      "params": {
        "module_id": {
          "type": "string",
          "text": "Module Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "singularLabel": {
          "type": "string",
          "text": "Max chars: 50, Singular Label of the module",
          "required": true
        },
        "pluralLabel": {
          "type": "string",
          "text": "Max chars: 50, Plural Label of the module",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Max chars: 200, Description of the module"
        },
        "departmentIds": {
          "type": "array",
          "text": "IDs of departments associated with the module",
          "required": true
        },
        "profileIds": {
          "type": "array",
          "text": "IDs of profileIds associated with the module",
          "required": true
        }
      },
      "path": {
        "module_id": {
          "type": "string",
          "text": "Module Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API edits a Custom Module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationModules/{module_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizationmodules/module_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Modules#Modules_EditCustomModule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__emailfailurealerts___get": {
      "provider_intent": "zohodesk__api__v1__emailfailurealerts___get",
      "provider_alias_intent": "/api/v1/emailfailurealerts",
      "text": "List email delivery failure alerts",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "department": {
          "type": "string",
          "text": "ID of the department from which the email delivery failure alerts must be fetched",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the alerts must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of alerts to list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the email delivery failure alerts configured in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/emailFailureAlerts",
        "alias_endpoint": "/zohodesk/api/v1/emailfailurealerts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Notification#Notification_Listemaildeliveryfailurealerts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__emailfailurealerts___patch": {
      "provider_intent": "zohodesk__api__v1__emailfailurealerts___patch",
      "provider_alias_intent": "/api/v1/emailfailurealerts",
      "text": "Clear email delivery failure alerts",
      "category": "Notification",
      "method": "PATCH",
      "type": "API",
      "params": {
        "department": {
          "type": "string",
          "text": "ID of the department from which the email delivery failure alerts must be deleted",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all email delivery failure alerts configured in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/emailFailureAlerts",
        "alias_endpoint": "/zohodesk/api/v1/emailfailurealerts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Notification#Notification_Clearemaildeliveryfailurealerts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__mypendingapprovals___get": {
      "provider_intent": "zohodesk__api__v1__mypendingapprovals___get",
      "provider_alias_intent": "/api/v1/mypendingapprovals",
      "text": "Get my pending approvals",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the pending approvals for a give user must be fetched"
        },
        "department": {
          "type": "string",
          "text": "ID of the department from which pending approvals must be fetched",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of pending approvals to list",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "The default sorting order is ascending"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the pending approvals for a given user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myPendingApprovals",
        "alias_endpoint": "/zohodesk/api/v1/mypendingapprovals",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Notification#Notification_Getmypendingapprovals"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields___get": {
      "provider_intent": "zohodesk__api__v1__organizationfields___get",
      "provider_alias_intent": "/api/v1/organizationfields",
      "text": "Get organization fields in a module",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "The module name within which search is to be done. Value may be tickets, contacts, accounts, tasks, calls, events, timeEntry, products, contracts, agents",
          "required": true
        },
        "apiNames": {
          "type": "string",
          "text": "Key that fetches only the fields whose apiNames are given. Multiple values can be passed, separated by commas"
        },
        "departmentId": {
          "type": "number",
          "text": "Key that fetches only the fields for the given departmentId"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches fields in a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields_Getorganizationfieldsinamodule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields___post": {
      "provider_intent": "zohodesk__api__v1__organizationfields___post",
      "provider_alias_intent": "/api/v1/organizationfields",
      "text": "Create Field",
      "category": "OrganizationFields",
      "method": "POST",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Name of the module whose fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, timeEntry, products , calls , events, and contracts",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "displayLabel": {
          "type": "string",
          "text": "Name of the field on the UI",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText",
          "required": true
        },
        "maxLength": {
          "type": "number",
          "text": "Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields"
        },
        "decimalPlaces": {
          "type": "number",
          "text": "Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields"
        },
        "roundingPrecision": {
          "type": "number",
          "text": "Precision of the value in the field. Precision refers to the total number of digits in a decimal number. For example, the precision of 30.12 is 4. Applicable for Currency fields"
        },
        "roundingOption": {
          "type": "string",
          "text": "Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp. Applicable only for Currency fields"
        },
        "defaultValue": {
          "type": "string",
          "text": "Default value set for a field. Applicable for Checkbox fields"
        },
        "isEncryptedField": {
          "type": "boolean",
          "text": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption",
          "enum": [
            true,
            false
          ]
        },
        "toolTip": {
          "type": "string",
          "text": "The tooltip of the field"
        },
        "toolTipType": {
          "type": "string",
          "text": "The tooltip type of the field"
        },
        "isTrackLastActivityTime": {
          "type": "boolean",
          "text": "While enabled tracks the last activity of the particular field",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields#OrganizationFields_CreateField"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id___patch": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id___patch",
      "provider_alias_intent": "/api/v1/organizationfields/field_id",
      "text": "Edit Field",
      "category": "OrganizationFields",
      "method": "PATCH",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "displayLabel": {
          "type": "string",
          "text": "Name of the field on the UI"
        },
        "type": {
          "type": "string",
          "text": "Data type of the field. Values allowed are Text, Number, Percent, Decimal, Currency, Date, Date Time, Email, Phone, PickList, Website, Textarea, Checkbox, Multiselect, Boolean and LargeText"
        },
        "maxLength": {
          "type": "number",
          "text": "Maximum permissible length of the value in the field. Applicable for Text, Number, Decimal, and Currency fields"
        },
        "decimalPlaces": {
          "type": "number",
          "text": "Number of decimal places the value in a field can take. Applicable for Decimal and Currency fields"
        },
        "roundingPrecision": {
          "type": "number",
          "text": "Precision of the value in the field. Precision refers to the total number of digits in a decimal number"
        },
        "roundingOption": {
          "type": "string",
          "text": "Option to round off complex decimal numbers to the nearest whole number or shorter decimal number. Values allowed are roundOff, roundDown, and roundUp. Applicable only for Currency fields"
        },
        "defaultValue": {
          "type": "string",
          "text": "Default value set for a field. Applicable for Checkbox fields"
        },
        "isEncryptedField": {
          "type": "boolean",
          "text": "Key that returns if the value in the field is encrypted or not. The field types are Text, Number, Percent, Decimal, Email, Phone, URL which supports encryption",
          "enum": [
            true,
            false
          ]
        },
        "toolTip": {
          "type": "string",
          "text": "The tooltip of the field"
        },
        "toolTipType": {
          "type": "string",
          "text": "The tooltip type of the field"
        },
        "isTrackLastActivityTime": {
          "type": "boolean",
          "text": "While enabled tracks the last activity of the particular field",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API edits a field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields_EditField"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id___get": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id___get",
      "provider_alias_intent": "/api/v1/organizationfields/field_id",
      "text": "Get Field",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API get a field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields#OrganizationFields_GetField"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id__permissions___get": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id__permissions___get",
      "provider_alias_intent": "/api/v1/organizationfields/field_id/permissions",
      "text": "Get Field Permissions",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API get a field permissions for all the profiles",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}/permissions",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id/permissions",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields_GetFieldPermissions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id__permissions___patch": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id__permissions___patch",
      "provider_alias_intent": "/api/v1/organizationfields/field_id/permissions",
      "text": "Update Field Permissions",
      "category": "OrganizationFields",
      "method": "PATCH",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "profiles": {
          "type": "array",
          "text": "Profile"
        }
      },
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API update field permissions",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}/permissions",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id/permissions",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields#OrganizationFields_UpdateFieldPermissions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id___delete": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id___delete",
      "provider_alias_intent": "/api/v1/organizationfields/field_id",
      "text": "Delete Field",
      "category": "OrganizationFields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API delete a custom field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields_DeleteField"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__customfieldcount___get": {
      "provider_intent": "zohodesk__api__v1__customfieldcount___get",
      "provider_alias_intent": "/api/v1/customfieldcount",
      "text": "Get organization custom fields count in a module",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Name of the module whose allowed and available custom fields must be fetched. Values allowed are tickets, contacts, accounts, tasks, calls, events, timeEntry, products, and contracts",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the custom field count allowed and available in a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/customFieldCount",
        "alias_endpoint": "/zohodesk/api/v1/customfieldcount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields_Getorganizationcustomfieldscountinamodule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizationfields__field_id__criteriareferences___get": {
      "provider_intent": "zohodesk__api__v1__organizationfields__field_id__criteriareferences___get",
      "provider_alias_intent": "/api/v1/organizationfields/field_id/criteriareferences",
      "text": "Get organization custom fields criteria references",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        },
        "featureType": {
          "type": "string",
          "text": "Feature name from which criteria references has to be fetched - DirectAssignment, RoundRobin, WorkFlow, SLA, Supervise, BluePrint, CustomView, Report, GameTrophy, GameBadge, LayoutRules, ValidationRules",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the rules must be listed",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of references to fetch",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "field_id": {
          "type": "string",
          "text": "Field ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches criteria references of a custom field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizationFields/{field_id}/criteriaReferences",
        "alias_endpoint": "/zohodesk/api/v1/organizationfields/field_id/criteriareferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#OrganizationFields#OrganizationFields_Getorganizationcustomfieldscriteriareferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id___get": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id___get",
      "provider_alias_intent": "/api/v1/organizations/organization_id",
      "text": "Get organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        },
        "includeCustomDomain": {
          "type": "boolean",
          "text": "Key that denotes if the customDomain field must be included in the API response",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of an organization from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Getorganization"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations___get": {
      "provider_intent": "zohodesk__api__v1__organizations___get",
      "provider_alias_intent": "/api/v1/organizations",
      "text": "Get all organizations",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all organizations to which the current user belongs",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations",
        "alias_endpoint": "/zohodesk/api/v1/organizations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Getallorganizations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accessibleorganizations___get": {
      "provider_intent": "zohodesk__api__v1__accessibleorganizations___get",
      "provider_alias_intent": "/api/v1/accessibleorganizations",
      "text": "Get accessible organizations",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all organizations which can be accessed using the current Oauth token",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accessibleOrganizations",
        "alias_endpoint": "/zohodesk/api/v1/accessibleorganizations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Getaccessibleorganizations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id___patch": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id___patch",
      "provider_alias_intent": "/api/v1/organizations/organization_id",
      "text": "Update organization",
      "category": "Organizations",
      "method": "PATCH",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "companyName": {
          "type": "string",
          "text": "Actual name of the organization/business"
        },
        "portalName": {
          "type": "string",
          "text": "Unique name for the help desk portal. Only lower-case letters and numbers are allowed in the name"
        },
        "phoneNumber": {
          "type": "string",
          "text": "Phone number of the organization"
        },
        "edition": {
          "type": "string",
          "text": "Zoho Desk edition purchased. Values allowed are: FREE, ENTERPRISE, PROFESSIONAL, STANDARD and EXPRESS"
        },
        "alias": {
          "type": "string",
          "text": "Alternative name for the help desk portal"
        },
        "employeeCount": {
          "type": "string",
          "text": "Number of employees in the organization"
        },
        "description": {
          "type": "string",
          "text": "Brief description of the organization"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the organization"
        },
        "website": {
          "type": "string",
          "text": "Website of the organization"
        },
        "fax": {
          "type": "string",
          "text": "Fax number of the organization"
        },
        "primaryContact": {
          "type": "string",
          "text": "Primary contact person in the organization"
        },
        "street": {
          "type": "string",
          "text": "Street in which the organization's office is located"
        },
        "city": {
          "type": "string",
          "text": "City in which the organization's office is located"
        },
        "state": {
          "type": "string",
          "text": "State in which the organization's office is located"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the organization's address"
        },
        "country": {
          "type": "string",
          "text": "Country in which the organization's office is located"
        },
        "currencyLocale": {
          "type": "string",
          "text": "Currency locale in which the organization operates"
        }
      },
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Updateorganization"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__logo___get": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__logo___get",
      "provider_alias_intent": "/api/v1/organizations/organization_id/logo",
      "text": "Get organization logo",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        },
        "no-cache": {
          "type": "string",
          "text": "Key that helps avoid browser cache"
        },
        "fileSize": {
          "type": "string",
          "text": "Size of the image file to download"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the logo set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Getorganizationlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__favicon___get": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__favicon___get",
      "provider_alias_intent": "/api/v1/organizations/organization_id/favicon",
      "text": "Get organization favicon",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        },
        "no-cache": {
          "type": "string",
          "text": "Key that helps avoid browser cache"
        },
        "fileSize": {
          "type": "string",
          "text": "Size of the image file to download"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the favicon set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/favicon",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/favicon",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Getorganizationfavicon"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__logo___post": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__logo___post",
      "provider_alias_intent": "/api/v1/organizations/organization_id/logo",
      "text": "Update organization logo",
      "category": "Organizations",
      "method": "POST",
      "type": "UPLOAD",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "logo": {
          "type": "file",
          "text": "Image file of the logo.The maximum file size allowed is 2 MB"
        }
      },
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the logo set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Updateorganizationlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__favicon___post": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__favicon___post",
      "provider_alias_intent": "/api/v1/organizations/organization_id/favicon",
      "text": "Update organization favicon",
      "category": "Organizations",
      "method": "POST",
      "type": "UPLOAD",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "favicon": {
          "type": "file",
          "text": "Image file of the favicon.The maximum file size allowed is 2 MB"
        }
      },
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the favicon set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/favicon",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/favicon",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Updateorganizationfavicon"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__logo___delete": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__logo___delete",
      "provider_alias_intent": "/api/v1/organizations/organization_id/logo",
      "text": "Delete organization logo",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the logo set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/logo",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/logo",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Deleteorganizationlogo"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__organization_id__favicon___delete": {
      "provider_intent": "zohodesk__api__v1__organizations__organization_id__favicon___delete",
      "provider_alias_intent": "/api/v1/organizations/organization_id/favicon",
      "text": "Delete organization favicon",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "organization_id": {
          "type": "string",
          "text": "Organization ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the favicon set for an organization/portal in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/{organization_id}/favicon",
        "alias_endpoint": "/zohodesk/api/v1/organizations/organization_id/favicon",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Deleteorganizationfavicon"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__organizations__markdefault___post": {
      "provider_intent": "zohodesk__api__v1__organizations__markdefault___post",
      "provider_alias_intent": "/api/v1/organizations/markdefault",
      "text": "Update default organization",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "id": {
          "type": "number",
          "text": "Unique ID of the organization to be marked as default org",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the default organization for the current user in Zoho Desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/organizations/markDefault",
        "alias_endpoint": "/zohodesk/api/v1/organizations/markdefault",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Organizations#Organizations_Updatedefaultorganization"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id__attachments\n___get": {
      "provider_intent": "zohodesk__api__v1__products__product_id__attachments\n___get",
      "provider_alias_intent": "/api/v1/products/product_id/attachments\n",
      "text": "List all attachments",
      "category": "Product Attachments",
      "method": "GET",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "from": {
          "type": "number",
          "text": "From Index"
        },
        "limit": {
          "type": "number",
          "text": "The number of attachments to be displayed"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the attachments. Value allowed is creator, which returns the details of users who added the attachments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all attachments in a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}/attachments\n",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id/attachments\n",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ProductAttachments#ProductAttachments_Listallattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id__attachments\n___post": {
      "provider_intent": "zohodesk__api__v1__products__product_id__attachments\n___post",
      "provider_alias_intent": "/api/v1/products/product_id/attachments\n",
      "text": "Create an attachment",
      "category": "Product Attachments",
      "method": "POST",
      "type": "UPLOAD",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "attachment to be added"
        }
      },
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches a file to a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}/attachments\n",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id/attachments\n",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ProductAttachments#ProductAttachments_Createanattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__products__product_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/products/product_id/attachments/attachment_id",
      "text": "Delete an attachment",
      "category": "Product Attachments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an attachment from a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ProductAttachments_Deleteanattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id___get": {
      "provider_intent": "zohodesk__api__v1__products__product_id___get",
      "provider_alias_intent": "/api/v1/products/product_id",
      "text": "Get product",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Max chars : 100. Key that fetches secondary information related to the product. Values allowed are: departments and owner. You can pass multiple values by separating them with commas."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single product from your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products#Products_Getproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products___get": {
      "provider_intent": "zohodesk__api__v1__products___get",
      "provider_alias_intent": "/api/v1/products",
      "text": "List products",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the products"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the products must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the products must be fetched"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of user to whom the product is assigned"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute : productName productCode unitPrice createdTime or modifiedTime"
        },
        "fields": {
          "type": "string",
          "text": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal"
        },
        "include": {
          "type": "array",
          "text": "Secondary information related to the contact"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a specific number of products from your help desk portal, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products",
        "alias_endpoint": "/zohodesk/api/v1/products",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Listproducts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products___post": {
      "provider_intent": "zohodesk__api__v1__products___post",
      "provider_alias_intent": "/api/v1/products",
      "text": "Create product",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentIds": {
          "type": "array",
          "text": "IDs of departments associated with the product",
          "required": true
        },
        "ownerId": {
          "type": "number",
          "text": "ID of user to whom the product is assigned"
        },
        "productName": {
          "type": "string",
          "text": "Name of the product"
        },
        "productCode": {
          "type": "string",
          "text": "Reference code of the product"
        },
        "productCategory": {
          "type": "string",
          "text": "Category to which the product belongs"
        },
        "manufacturer": {
          "type": "string",
          "text": "Organization that manufactures the product"
        },
        "unitPrice": {
          "type": "number",
          "text": "Price of the product"
        },
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the product"
        },
        "description": {
          "type": "string",
          "text": "Description of the product"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a product to your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products",
        "alias_endpoint": "/zohodesk/api/v1/products",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Createproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id__tickets___get": {
      "provider_intent": "zohodesk__api__v1__products__product_id__tickets___get",
      "provider_alias_intent": "/api/v1/products/product_id/tickets",
      "text": "List tickets by products",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tickets must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: createdTime or modifiedTime"
        },
        "dueDate": {
          "type": "string",
          "text": "Filter by ticket duedate"
        },
        "isSpam": {
          "type": "boolean",
          "text": "Filters Spam tickets",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the tickets"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists tickets received from a specific products",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}/tickets",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Listticketsbyproducts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__product_id___patch": {
      "provider_intent": "zohodesk__api__v1__products__product_id___patch",
      "provider_alias_intent": "/api/v1/products/product_id",
      "text": "Update product",
      "category": "Products",
      "method": "PATCH",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentIds": {
          "type": "array",
          "text": "IDs of departments associated with the product"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of user to whom the product is assigned"
        },
        "productName": {
          "type": "string",
          "text": "Name of the product"
        },
        "productCode": {
          "type": "string",
          "text": "Reference code of the product"
        },
        "productCategory": {
          "type": "string",
          "text": "Category to which the product belongs"
        },
        "manufacturer": {
          "type": "string",
          "text": "Organization that manufactures the product"
        },
        "unitPrice": {
          "type": "number",
          "text": "Price of the product"
        },
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the product"
        },
        "description": {
          "type": "string",
          "text": "Description of the product"
        }
      },
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of a product in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/{product_id}",
        "alias_endpoint": "/zohodesk/api/v1/products/product_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Updateproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__products__movetotrash___post",
      "provider_alias_intent": "/api/v1/products/movetotrash",
      "text": "Move Products to trash",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department containing the products"
        },
        "productIds": {
          "type": "array",
          "text": "IDs of the products you want to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves products to the Recycle Bin of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/products/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_MoveProductstotrash"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__searchduplicates___get": {
      "provider_intent": "zohodesk__api__v1__products__searchduplicates___get",
      "provider_alias_intent": "/api/v1/products/searchduplicates",
      "text": "Search for duplicate records",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the products must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "No"
        },
        "productName": {
          "type": "string",
          "text": "Name of the product used as the keyword for the search",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for duplicate records of a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/searchDuplicates",
        "alias_endpoint": "/zohodesk/api/v1/products/searchduplicates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Searchforduplicaterecords"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__products__product_id__associatecontacts___post": {
      "provider_intent": "zohodeskapi__v1__products__product_id__associatecontacts___post",
      "provider_alias_intent": "api/v1/products/product_id/associatecontacts",
      "text": "Associate contacts with a product",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the resources to associate",
          "required": true
        },
        "associate": {
          "type": "boolean",
          "text": "true for associating the resource and false for dissociating the resource",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates contacts with a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/products/{product_id}/associateContacts",
        "alias_endpoint": "/zohodeskapi/v1/products/product_id/associatecontacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Associatecontactswithaproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__products__product_id__associateaccounts___post": {
      "provider_intent": "zohodeskapi__v1__products__product_id__associateaccounts___post",
      "provider_alias_intent": "api/v1/products/product_id/associateaccounts",
      "text": "Associate accounts with a product",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the resources to associate",
          "required": true
        },
        "associate": {
          "type": "boolean",
          "text": "true for associating the resource and false for dissociating the resource",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API associates accounts with a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/products/{product_id}/associateAccounts",
        "alias_endpoint": "/zohodeskapi/v1/products/product_id/associateaccounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Associateaccountswithaproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.products.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__products__products_id__accounts___get": {
      "provider_intent": "zohodeskapi__v1__products__products_id__accounts___get",
      "provider_alias_intent": "api/v1/products/products_id/accounts",
      "text": "List accounts associated with product",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the accounts must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the accounts by a specific attribute: accountName or createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the accounts associated with a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/products/{products_id}/accounts",
        "alias_endpoint": "/zohodeskapi/v1/products/products_id/accounts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Listaccountsassociatedwithproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__products__products_id__contacts___get": {
      "provider_intent": "zohodeskapi__v1__products__products_id__contacts___get",
      "provider_alias_intent": "api/v1/products/products_id/contacts",
      "text": "List contacts associated with product",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the contacts must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of accounts to fetch"
        },
        "sortBy": {
          "type": "string",
          "text": "Parameter that sorts contacts"
        },
        "include": {
          "type": "array",
          "text": "Key that fetches secondary information related to the contact"
        },
        "isSpam": {
          "type": "boolean",
          "text": "Filters Spam contacts",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "product_id": {
          "type": "string",
          "text": "Product ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the contacts associated with a product",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/products/{products_id}/contacts",
        "alias_endpoint": "/zohodeskapi/v1/products/products_id/contacts",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Products_Listcontactsassociatedwithproduct"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles___get": {
      "provider_intent": "zohodesk__api__v1__profiles___get",
      "provider_alias_intent": "/api/v1/profiles",
      "text": "List profiles",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {
        "visible": {
          "type": "boolean",
          "text": "Key that filters profiles according to their visibility in the UI",
          "enum": [
            true,
            false
          ]
        },
        "default": {
          "type": "boolean",
          "text": "Key that denotes whether the profiles must be default profiles or custom profiles",
          "enum": [
            true,
            false
          ]
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for profile by name or description"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of user profiles, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles",
        "alias_endpoint": "/zohodesk/api/v1/profiles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Listprofiles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__count___get": {
      "provider_intent": "zohodesk__api__v1__profiles__count___get",
      "provider_alias_intent": "/api/v1/profiles/count",
      "text": "Get profile count",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {
        "visible": {
          "type": "boolean",
          "text": "Key that filters profiles according to their visibility in the UI",
          "enum": [
            true,
            false
          ]
        },
        "default": {
          "type": "boolean",
          "text": "Key that denotes whether the profiles must be default profiles or custom profiles",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of profiles configured in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/count",
        "alias_endpoint": "/zohodesk/api/v1/profiles/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Getprofilecount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__profile_id___get": {
      "provider_intent": "zohodesk__api__v1__profiles__profile_id___get",
      "provider_alias_intent": "/api/v1/profiles/profile_id",
      "text": "Get profile",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/{profile_id}",
        "alias_endpoint": "/zohodesk/api/v1/profiles/profile_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles_Getprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__profile_id__clone___post": {
      "provider_intent": "zohodesk__api__v1__profiles__profile_id__clone___post",
      "provider_alias_intent": "/api/v1/profiles/profile_id/clone",
      "text": "Clone profile",
      "category": "Profiles",
      "method": "POST",
      "type": "API",
      "params": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the profile to be created"
        },
        "description": {
          "type": "string",
          "text": "Description of the profile to be created"
        }
      },
      "path": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API replicates an existing profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/{profile_id}/clone",
        "alias_endpoint": "/zohodesk/api/v1/profiles/profile_id/clone",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Cloneprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__profile_id___patch": {
      "provider_intent": "zohodesk__api__v1__profiles__profile_id___patch",
      "provider_alias_intent": "/api/v1/profiles/profile_id",
      "text": "Update profile",
      "category": "Profiles",
      "method": "PATCH",
      "type": "API",
      "params": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the profile"
        },
        "description": {
          "type": "string",
          "text": "Description of the profile"
        },
        "permissions": {
          "type": "object",
          "text": "Details of the permissions for the profile"
        }
      },
      "path": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/{profile_id}",
        "alias_endpoint": "/zohodesk/api/v1/profiles/profile_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Updateprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__profile_id__delete___post": {
      "provider_intent": "zohodesk__api__v1__profiles__profile_id__delete___post",
      "provider_alias_intent": "/api/v1/profiles/profile_id/delete",
      "text": "Delete profile",
      "category": "Profiles",
      "method": "POST",
      "type": "API",
      "params": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "transferToProfileId": {
          "type": "number",
          "text": "The profile id to which the agents in the delete profile to be transferred to",
          "required": true
        }
      },
      "path": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a profile from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/{profile_id}/delete",
        "alias_endpoint": "/zohodesk/api/v1/profiles/profile_id/delete",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Deleteprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myprofile___get": {
      "provider_intent": "zohodesk__api__v1__myprofile___get",
      "provider_alias_intent": "/api/v1/myprofile",
      "text": "Get my profile details",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the configuration details and permissions defined for the profile of the currently logged in user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myProfile",
        "alias_endpoint": "/zohodesk/api/v1/myprofile",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Getmyprofiledetails"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__myprofilepermissions___get": {
      "provider_intent": "zohodesk__api__v1__myprofilepermissions___get",
      "provider_alias_intent": "/api/v1/myprofilepermissions",
      "text": "Get my profile permissions",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the permissions associated with the profile of the currently logged in user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/myProfilePermissions",
        "alias_endpoint": "/zohodesk/api/v1/myprofilepermissions",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Getmyprofilepermissions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__profiles__profile_id__agents___get": {
      "provider_intent": "zohodesk__api__v1__profiles__profile_id__agents___get",
      "provider_alias_intent": "/api/v1/profiles/profile_id/agents",
      "text": "List agents by profile",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        },
        "active": {
          "type": "boolean",
          "text": "Activation status of the agents to list",
          "enum": [
            true,
            false
          ]
        },
        "confirmed": {
          "type": "boolean",
          "text": "Confirmation status of the agents to list",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "profile_id": {
          "type": "string",
          "text": "Profile ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists agents mapped to a particular profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/profiles/{profile_id}/agents",
        "alias_endpoint": "/zohodesk/api/v1/profiles/profile_id/agents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Listagentsbyprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__lightagentprofile___get": {
      "provider_intent": "zohodesk__api__v1__lightagentprofile___get",
      "provider_alias_intent": "/api/v1/lightagentprofile",
      "text": "Get light agent profile",
      "category": "Profiles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the different permissions configured for the light agent profile",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/lightAgentProfile",
        "alias_endpoint": "/zohodesk/api/v1/lightagentprofile",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Profiles#Profiles_Getlightagentprofile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recyclebin___get": {
      "provider_intent": "zohodeskapi__v1__recyclebin___get",
      "provider_alias_intent": "api/v1/recyclebin",
      "text": "List deleted resources",
      "category": "Recycle Bin",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the resources must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of resources to list"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the deleted resources belong"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: name, type, department, deletedBy, or deletedTime"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the resources"
        },
        "module": {
          "type": "string",
          "text": "Filter by a specific module: accounts, contacts, tickets, tasks, timeEntry, calls, events, contracts, products, topics, or solutions"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of deleted resources, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recycleBin",
        "alias_endpoint": "/zohodeskapi/v1/recyclebin",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RecycleBin#RecycleBin_Listdeletedresources"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recyclebin__restore___post": {
      "provider_intent": "zohodeskapi__v1__recyclebin__restore___post",
      "provider_alias_intent": "api/v1/recyclebin/restore",
      "text": "Restore deleted resources",
      "category": "Recycle Bin",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "list",
          "text": "Array containing the IDs of the resources to restore",
          "required": true
        },
        "isChildNeedToBeRestored": {
          "type": "boolean",
          "text": "Key that denotes whether the child resources must be restored or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API restores the deleted resources specified in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recycleBin/restore",
        "alias_endpoint": "/zohodeskapi/v1/recyclebin/restore",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RecycleBin#RecycleBin_Restoredeletedresources"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recyclebin__restoreall___post": {
      "provider_intent": "zohodeskapi__v1__recyclebin__restoreall___post",
      "provider_alias_intent": "api/v1/recyclebin/restoreall",
      "text": "Restore all resources from Recycle Bin",
      "category": "Recycle Bin",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API restores all deleted resources from the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recycleBin/restoreAll",
        "alias_endpoint": "/zohodeskapi/v1/recyclebin/restoreall",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RecycleBin#RecycleBin_RestoreallresourcesfromRecycleBin"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recyclebin__delete___post": {
      "provider_intent": "zohodeskapi__v1__recyclebin__delete___post",
      "provider_alias_intent": "api/v1/recyclebin/delete",
      "text": "Delete resources from Recycle Bin",
      "category": "Recycle Bin",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the resources to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API permanently deletes the resources specified in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recycleBin/delete",
        "alias_endpoint": "/zohodeskapi/v1/recyclebin/delete",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RecycleBin#RecycleBin_DeleteresourcesfromRecycleBin"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recyclebin__deleteall___post": {
      "provider_intent": "zohodeskapi__v1__recyclebin__deleteall___post",
      "provider_alias_intent": "api/v1/recyclebin/deleteall",
      "text": "Delete all resources from Recycle Bin",
      "category": "Recycle Bin",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API permanently deletes all resources from the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recycleBin/deleteAll",
        "alias_endpoint": "/zohodeskapi/v1/recyclebin/deleteall",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RecycleBin#RecycleBin_DeleteallresourcesfromRecycleBin"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles___get": {
      "provider_intent": "zohodesk__api__v1__roles___get",
      "provider_alias_intent": "/api/v1/roles",
      "text": "List roles",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the roles must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of roles to display"
        },
        "isVisible": {
          "type": "boolean",
          "text": "Key that filters roles according to their visibility in the UI",
          "enum": [
            true,
            false
          ]
        },
        "isDefault": {
          "type": "boolean",
          "text": "Key that denotes whether the roles must be default roles or custom roles",
          "enum": [
            true,
            false
          ]
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for roles by name or description"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of roles, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles",
        "alias_endpoint": "/zohodesk/api/v1/roles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Listroles"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__role_id__agents___get": {
      "provider_intent": "zohodesk__api__v1__roles__role_id__agents___get",
      "provider_alias_intent": "/api/v1/roles/role_id/agents",
      "text": "List agents by role",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists agents mapped to a particular role",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/{role_id}/agents",
        "alias_endpoint": "/zohodesk/api/v1/roles/role_id/agents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Listagentsbyrole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles___post": {
      "provider_intent": "zohodesk__api__v1__roles___post",
      "provider_alias_intent": "/api/v1/roles",
      "text": "Create role",
      "category": "Roles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the role",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A short description of the role"
        },
        "shareDataWithPeers": {
          "type": "boolean",
          "text": "Key that denotes if the role shares data with its peer roles",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "reportsTo": {
          "type": "number",
          "text": "ID of the role to which the current role reports"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a role in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles",
        "alias_endpoint": "/zohodesk/api/v1/roles",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Createrole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__role_id___patch": {
      "provider_intent": "zohodesk__api__v1__roles__role_id___patch",
      "provider_alias_intent": "/api/v1/roles/role_id",
      "text": "Update role",
      "category": "Roles",
      "method": "PATCH",
      "type": "API",
      "params": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the role"
        },
        "description": {
          "type": "string",
          "text": "A short description of the role"
        },
        "shareDataWithPeers": {
          "type": "boolean",
          "text": "Key that denotes if the role shares data with its peer roles",
          "enum": [
            true,
            false
          ]
        },
        "reportsTo": {
          "type": "number",
          "text": "ID of the role to which the current role reports"
        }
      },
      "path": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing role",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/{role_id}",
        "alias_endpoint": "/zohodesk/api/v1/roles/role_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Updaterole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__role_id__delete___post": {
      "provider_intent": "zohodesk__api__v1__roles__role_id__delete___post",
      "provider_alias_intent": "/api/v1/roles/role_id/delete",
      "text": "Delete role",
      "category": "Roles",
      "method": "POST",
      "type": "API",
      "params": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "transferToRoleId": {
          "type": "number",
          "text": "Transfer the child-roles to the given role",
          "required": true
        }
      },
      "path": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a role from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/{role_id}/delete",
        "alias_endpoint": "/zohodesk/api/v1/roles/role_id/delete",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Deleterole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__role_id___get": {
      "provider_intent": "zohodesk__api__v1__roles__role_id___get",
      "provider_alias_intent": "/api/v1/roles/role_id",
      "text": "Get role",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular role",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/{role_id}",
        "alias_endpoint": "/zohodesk/api/v1/roles/role_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Getrole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__count___get": {
      "provider_intent": "zohodesk__api__v1__roles__count___get",
      "provider_alias_intent": "/api/v1/roles/count",
      "text": "Get role count",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "isVisible": {
          "type": "boolean",
          "text": "Key that filters roles according to their visibility in the UI",
          "enum": [
            true,
            false
          ]
        },
        "isDefault": {
          "type": "boolean",
          "text": "Key that denotes whether the roles must be default roles or custom roles",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the number of roles configured in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/count",
        "alias_endpoint": "/zohodesk/api/v1/roles/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Getrolecount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__personalrole___get": {
      "provider_intent": "zohodesk__api__v1__personalrole___get",
      "provider_alias_intent": "/api/v1/personalrole",
      "text": "Get personal role",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of the personal role configured in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/personalRole",
        "alias_endpoint": "/zohodesk/api/v1/personalrole",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_Getpersonalrole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__rolesbyids___get": {
      "provider_intent": "zohodesk__api__v1__rolesbyids___get",
      "provider_alias_intent": "/api/v1/rolesbyids",
      "text": "List roles by role IDs",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "roleIds": {
          "type": "number",
          "text": "Comma separated role ids",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists details of the roles whose IDs are passed in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/rolesByIds",
        "alias_endpoint": "/zohodesk/api/v1/rolesbyids",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Roles#Roles_ListrolesbyroleIDs"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__routingpreferences___get": {
      "provider_intent": "zohodesk__api__v1__routingpreferences___get",
      "provider_alias_intent": "/api/v1/routingpreferences",
      "text": "Get Routing Preferences",
      "category": "RoutingPreference",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the Department",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is used to Get the Routing Preferences for a Department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/routingPreferences",
        "alias_endpoint": "/zohodesk/api/v1/routingpreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RoutingPreference_GetRoutingPreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__routingpreferences___patch": {
      "provider_intent": "zohodesk__api__v1__routingpreferences___patch",
      "provider_alias_intent": "/api/v1/routingpreferences",
      "text": "Update Routing Preferences",
      "category": "RoutingPreference",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the Department"
        },
        "isThresholdEnabled": {
          "type": "boolean",
          "text": "Used to enable/disable ticket threshold for Round Robin",
          "enum": [
            true,
            false
          ]
        },
        "thresholdLimit": {
          "type": "number",
          "text": "Threshold Per Agent, Range 1-200, thresholdEnabled has to be True to Update this limit"
        },
        "assignBacklog": {
          "type": "boolean",
          "text": "Will bulk-assign tickets that were created when agents were unavailable.",
          "enum": [
            true,
            false
          ]
        },
        "backLogLimit": {
          "type": "number",
          "text": "Max. number of backlog tickets that can be bulk-assigned to an agent. Range 1-50"
        },
        "assignBacklogsBy": {
          "type": "string",
          "text": "Assign Backlogs Based on Due Date or Created Time, Allowed values DUEDATE and CREATEDTIME"
        },
        "assignToOfflineAgents": {
          "type": "boolean",
          "text": "Will include mail-channel offline agents also while assigning tickets",
          "enum": [
            true,
            false
          ]
        },
        "freshTicketAssignMode": {
          "type": "string",
          "text": "Fresh Ticket Assignment Mode, allowed values are IMMEDIATE, MOVE_TO_BACKLOG"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API is used to Update the Routing Preferences for a Department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/routingPreferences",
        "alias_endpoint": "/zohodesk/api/v1/routingpreferences",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#RoutingPreference#RoutingPreference_UpdateRoutingPreferences"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__search___get": {
      "provider_intent": "zohodesk__api__v1__search___get",
      "provider_alias_intent": "/api/v1/search",
      "text": "Search across modules",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "searchStr": {
          "type": "string",
          "text": "Keyword or phrase to search"
        },
        "module": {
          "type": "string",
          "text": "Module to search in: tickets accounts contacts or tasks"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the resource must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the resources must be searched"
        },
        "limit": {
          "type": "number",
          "text": "Number of resources to return in the search result"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: relevance or modifiedTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns information from all modules or a specific module, based on the value of the module query param",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/search",
        "alias_endpoint": "/zohodesk/api/v1/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_Searchacrossmodules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ , Desk.contacts.READ , Desk.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__search___get": {
      "provider_intent": "zohodesk__api__v1__tickets__search___get",
      "provider_alias_intent": "/api/v1/tickets/search",
      "text": "Tickets Search API",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the entity must be fetched"
        },
        "id": {
          "type": "number",
          "text": "ID of the ticket exact match"
        },
        "ticketNumber": {
          "type": "string",
          "text": "Serial number of the ticket in the help desk exact match"
        },
        "subject": {
          "type": "string",
          "text": "subject of the ticket in the help desk wildcard search"
        },
        "description": {
          "type": "string",
          "text": "description of the ticket in the help desk wildcard search"
        },
        "status": {
          "type": "string",
          "text": "Status of the ticket. Includes the custom statuses that exist in your help desk exact match"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the ticket exact match"
        },
        "email": {
          "type": "string",
          "text": "Email ID in the ticket wildcard search, empty check, not empty check"
        },
        "phone": {
          "type": "string",
          "text": "Phone number in the ticket wildcard search, empty check, not empty check"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the ticket was received exact match, empty check, not empty check"
        },
        "category": {
          "type": "string",
          "text": "Category in the ticket wildcard search, empty check, not empty check"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to resolve the ticket exact match"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact who raised the ticket exact match"
        },
        "accountId": {
          "type": "number",
          "text": "ID of the account associated with the ticket exact match"
        },
        "productId": {
          "type": "number",
          "text": "ID of the product associated with the ticket exact match"
        },
        "contactName": {
          "type": "string",
          "text": "Name of the contact who raised the ticket wildcard search"
        },
        "accountName": {
          "type": "string",
          "text": "Name of the account associated with the ticket wildcard search, empty check, not empty check"
        },
        "productName": {
          "type": "string",
          "text": "Name of the product associated with the ticket wildcard search, empty check, not empty check"
        },
        "tag": {
          "type": "string",
          "text": "Tag in the ticket wildcard search, empty check, not empty check"
        },
        "_all": {
          "type": "string",
          "text": "Search throughout the ticket wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the ticket wildcard search, empty check, not empty check"
        },
        "customerResponseTimeRange": {
          "type": "string",
          "text": "Key that filters tickets in which customer responses were recorded in a particular period of time"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters tickets created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters tickets modified in a particular period of time"
        },
        "dueDateRange": {
          "type": "string",
          "text": "Key that filters tickets due in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime,customerResponseTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for tickets in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/search",
        "alias_endpoint": "/zohodesk/api/v1/tickets/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_TicketsSearchAPI"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__accounts__search___get": {
      "provider_intent": "zohodesk__api__v1__accounts__search___get",
      "provider_alias_intent": "/api/v1/accounts/search",
      "text": "Search accounts",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "id": {
          "type": "number",
          "text": "ID of the account exact match"
        },
        "accountName": {
          "type": "string",
          "text": "Name of the account wildcard search"
        },
        "_all": {
          "type": "string",
          "text": "Search throughout the account wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the account wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters account created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters account modified in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime, accountName"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for accounts in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/accounts/search",
        "alias_endpoint": "/zohodesk/api/v1/accounts/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_Searchaccounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__contacts__search___get": {
      "provider_intent": "zohodesk__api__v1__contacts__search___get",
      "provider_alias_intent": "/api/v1/contacts/search",
      "text": "Search Contacts",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "id": {
          "type": "number",
          "text": "ID of the ticket exact match"
        },
        "fullName": {
          "type": "string",
          "text": "Full name of the contact wildcard search"
        },
        "firstName": {
          "type": "string",
          "text": "subject of the ticket in the help desk wildcard search, empty check, not empty check"
        },
        "lastName": {
          "type": "string",
          "text": "Last name of the contact wildcard search"
        },
        "email": {
          "type": "string",
          "text": "Email ID of the contact wildcard search, empty check, not empty check"
        },
        "phone": {
          "type": "string",
          "text": "Phone number of the contact wildcard search, empty check, not empty check"
        },
        "mobile": {
          "type": "string",
          "text": "Mobile number of the contact wildcard search, empty check, not empty check"
        },
        "accountName": {
          "type": "string",
          "text": "Name of the account associated with the Contact wildcard search, empty check, not empty check"
        },
        "_all": {
          "type": "string",
          "text": "Search throughout the contact wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the Contact wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters contacts created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters contacts modified in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be: relevance, modifiedTime, createdTime,lastName, firstName"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for contacts in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/contacts/search",
        "alias_endpoint": "/zohodesk/api/v1/contacts/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_SearchContacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.contacts.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__articles__search___get": {
      "provider_intent": "zohodesk__api__v1__articles__search___get",
      "provider_alias_intent": "/api/v1/articles/search",
      "text": "Article Search API",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the entity must be fetched"
        },
        "id": {
          "type": "number",
          "text": "ID of the articles exact match"
        },
        "title": {
          "type": "string",
          "text": "title of the help article wildcard search"
        },
        "categoryName": {
          "type": "string",
          "text": "Name of the Category wildcard search"
        },
        "categoryId": {
          "type": "number",
          "text": "ID of the Category"
        },
        "tag": {
          "type": "string",
          "text": "Tag in the articles wildcard search, empty check, not empty check"
        },
        "_all": {
          "type": "string",
          "text": "Key that includes all article details for the search wildcard search"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters articles created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters articles modified in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for help articles in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/articles/search",
        "alias_endpoint": "/zohodesk/api/v1/articles/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_ArticleSearchAPI"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.articles.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__search___get": {
      "provider_intent": "zohodesk__api__v1__tasks__search___get",
      "provider_alias_intent": "/api/v1/tasks/search",
      "text": "Search Tasks",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the entity must be fetched if not passed then searches in permitted departments exact match"
        },
        "id": {
          "type": "number",
          "text": "ID of the task exact match"
        },
        "subject": {
          "type": "string",
          "text": "subject of the task in the help desk wildcard search"
        },
        "ticketNumber": {
          "type": "string",
          "text": "ticket Number of the ticket that associated with the task exact match"
        },
        "status": {
          "type": "string",
          "text": "status of the task exact match"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the task exact match"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to resolve the task exact match"
        },
        "_all": {
          "type": "string",
          "text": "Search throughout the task wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the task wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters tasks created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters tasks modified in a particular period of time"
        },
        "dueDateRange": {
          "type": "string",
          "text": "Key that filters tasks due in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for tasks in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/search",
        "alias_endpoint": "/zohodesk/api/v1/tasks/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_SearchTasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ, Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ, Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__calls__search___get": {
      "provider_intent": "zohodesk__api__v1__calls__search___get",
      "provider_alias_intent": "/api/v1/calls/search",
      "text": "Call Search API",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the calls must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of calls to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the call must be fetched"
        },
        "id": {
          "type": "number",
          "text": "ID of the call exact match"
        },
        "subject": {
          "type": "string",
          "text": "subject of the call wildcard search"
        },
        "ticketNumber": {
          "type": "string",
          "text": "Ticket number of the ticket associated with the call exact match"
        },
        "status": {
          "type": "string",
          "text": "Status of the call exact match"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the call exact match"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to handle the call exact match"
        },
        "_all": {
          "type": "string",
          "text": "Key that includes all call details for the search wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the call wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters calls recorded in the help desk in a particular period"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters calls whose details were modified in a particular period"
        },
        "startDateRange": {
          "type": "string",
          "text": "Key that filters calls that were made in a particular period"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for calls in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/calls/search",
        "alias_endpoint": "/zohodesk/api/v1/calls/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_CallSearchAPI"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ, Desk.calls.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__events__search___get": {
      "provider_intent": "zohodesk__api__v1__events__search___get",
      "provider_alias_intent": "/api/v1/events/search",
      "text": "Event Search API",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the events must be fetched, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "Number of events to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the event must be fetched"
        },
        "id": {
          "type": "number",
          "text": "ID of the event exact match"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the event wildcard search"
        },
        "ticketNumber": {
          "type": "string",
          "text": "Ticket number of the ticket associated with the event exact match"
        },
        "status": {
          "type": "string",
          "text": "Status of the event exact match"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the event exact match"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to handle the event exact match"
        },
        "_all": {
          "type": "string",
          "text": "Key that includes all event details for the search wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the event wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters events recorded in the help desk in a particular period"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters events whose details were modified in a particular period"
        },
        "startDateRange": {
          "type": "string",
          "text": "Key that filters events that were made in a particular period"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for events in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/events/search",
        "alias_endpoint": "/zohodesk/api/v1/events/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_EventSearchAPI"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.events.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__products__search___get": {
      "provider_intent": "zohodesk__api__v1__products__search___get",
      "provider_alias_intent": "/api/v1/products/search",
      "text": "Products Search API",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "From index, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "No. of entities to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the entity must be fetched if not passed then searches in permitted departments exact match"
        },
        "id": {
          "type": "number",
          "text": "ID of the Product exact match"
        },
        "productName": {
          "type": "string",
          "text": "Name of the Product wildcard search"
        },
        "productCode": {
          "type": "string",
          "text": "Code of the product wildcard search, empty check, not empty check"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the product exact match"
        },
        "accountId": {
          "type": "number",
          "text": "ID of the account associated with the product exact match"
        },
        "_all": {
          "type": "string",
          "text": "Search throughout the product wildcard search"
        },
        "customField1": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField2": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField3": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField4": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField5": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField6": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField7": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField8": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField9": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "customField10": {
          "type": "string",
          "text": "Custom field in the Product wildcard search, empty check, not empty check"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters products created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters products modified in a particular period of time"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be:relevance, modifiedTime, createdTime, productName"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for products in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/products/search",
        "alias_endpoint": "/zohodesk/api/v1/products/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_ProductsSearchAPI"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.products.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__activities__search___get": {
      "provider_intent": "zohodesk__api__v1__activities__search___get",
      "provider_alias_intent": "/api/v1/activities/search",
      "text": "Search Activities",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the activities must be fetched, starts from 0"
        },
        "limit": {
          "type": "number",
          "text": "Number of activities to list"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the activity must be fetched. If you do not pass a value for this parameter, the search is performed in all permitted departments Exact match"
        },
        "id": {
          "type": "number",
          "text": "ID of the activity Exact match"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the activity Wildcard search"
        },
        "ticketNumber": {
          "type": "string",
          "text": "Serial number of the ticket associated with the activity Exact match"
        },
        "status": {
          "type": "string",
          "text": "Completion status of the activity Exact match"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the activity Exact match"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to handle the activity Exact match"
        },
        "_all": {
          "type": "string",
          "text": "Key that searches across all fields in all activities Wildcard search"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters activities created in a particular period of time Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, createdTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters activities whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ; for example, modifiedTimeRange=2017-11-05T00:00:00.000Z,2018-09-05T23:59:00.000Z"
        },
        "sortBy": {
          "type": "string",
          "text": "SortBy can be: relevance, modifiedTime, createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for activities in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/activities/search",
        "alias_endpoint": "/zohodesk/api/v1/activities/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Search_SearchActivities"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ, Desk.activities.calls.READ, Desk.activities.events.READ, Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skillconfiguration___get": {
      "provider_intent": "zohodesk__api__v1__skillconfiguration___get",
      "provider_alias_intent": "/api/v1/skillconfiguration",
      "text": "Get Skill Configuration",
      "category": "SkillConfiguration",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API gets Configuration of Skill in a Department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillConfiguration",
        "alias_endpoint": "/zohodesk/api/v1/skillconfiguration",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillConfiguration_GetSkillConfiguration"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skillconfiguration___patch": {
      "provider_intent": "zohodesk__api__v1__skillconfiguration___patch",
      "provider_alias_intent": "/api/v1/skillconfiguration",
      "text": "Update Skill Configuration",
      "category": "SkillConfiguration",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the Department"
        },
        "attachSkillsOption": {
          "type": "string",
          "text": "Append new skills at AT_FIRST or AT_THE_END or BY_SKILL_ORDER"
        },
        "autoSkillStamping": {
          "type": "string",
          "text": "Indicates if Auto Stamping is active or not"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates Configuration of Skill in a Department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillConfiguration",
        "alias_endpoint": "/zohodesk/api/v1/skillconfiguration",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillConfiguration#SkillConfiguration_UpdateSkillConfiguration"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skilltypes___post": {
      "provider_intent": "zohodesk__api__v1__skilltypes___post",
      "provider_alias_intent": "/api/v1/skilltypes",
      "text": "Create Skill Type",
      "category": "SkillTypes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the skilltype",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "DepartmentId of the Skill Type",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Creates a Skill Type",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillTypes",
        "alias_endpoint": "/zohodesk/api/v1/skilltypes",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillTypes_CreateSkillType"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skilltypes__skiltype_id___get": {
      "provider_intent": "zohodesk__api__v1__skilltypes__skiltype_id___get",
      "provider_alias_intent": "/api/v1/skilltypes/skiltype_id",
      "text": "View Skill Type",
      "category": "SkillTypes",
      "method": "GET",
      "type": "API",
      "params": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Gets the details of a Skill Type",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillTypes/{skilType_id}",
        "alias_endpoint": "/zohodesk/api/v1/skilltypes/skiltype_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillTypes#SkillTypes_ViewSkillType"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skilltypes__skiltype_id___patch": {
      "provider_intent": "zohodesk__api__v1__skilltypes__skiltype_id___patch",
      "provider_alias_intent": "/api/v1/skilltypes/skiltype_id",
      "text": "Update a Skill Type",
      "category": "SkillTypes",
      "method": "PATCH",
      "type": "API",
      "params": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the skilltype"
        }
      },
      "path": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Updates a Skill Type",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillTypes/{skilType_id}",
        "alias_endpoint": "/zohodesk/api/v1/skilltypes/skiltype_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillTypes#SkillTypes_UpdateaSkillType"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skilltypes__skiltype_id___delete": {
      "provider_intent": "zohodesk__api__v1__skilltypes__skiltype_id___delete",
      "provider_alias_intent": "/api/v1/skilltypes/skiltype_id",
      "text": "Delete a Skill Type",
      "category": "SkillTypes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "skilType_id": {
          "type": "string",
          "text": "Skil Type ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Deletes a Skill Type",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillTypes/{skilType_id}",
        "alias_endpoint": "/zohodesk/api/v1/skilltypes/skiltype_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillTypes#SkillTypes_DeleteaSkillType"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skilltypes___get": {
      "provider_intent": "zohodesk__api__v1__skilltypes___get",
      "provider_alias_intent": "/api/v1/skilltypes",
      "text": "List all Skill Types",
      "category": "SkillTypes",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department Id"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the skills must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of skilltypes to list"
        },
        "mappedSkillsStatus": {
          "type": "string",
          "text": "Filter skill types by associated skills status"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Lists all Skill Types in a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skillTypes",
        "alias_endpoint": "/zohodesk/api/v1/skilltypes",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SkillTypes#SkillTypes_ListallSkillTypes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills___post": {
      "provider_intent": "zohodesk__api__v1__skills___post",
      "provider_alias_intent": "/api/v1/skills",
      "text": "Create skill",
      "category": "Skills",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the skill",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the skill"
        },
        "status": {
          "type": "string",
          "text": "Values allowed are ACTIVE and INACTIVE",
          "required": true
        },
        "skillTypeId": {
          "type": "number",
          "text": "ID of the Skill Type",
          "required": true
        },
        "criteria": {
          "type": "array",
          "text": "The criteria details for the skill",
          "required": true
        },
        "agentIds": {
          "type": "array",
          "text": "IDs of the agents mapped with the skill"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Creates a skill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills",
        "alias_endpoint": "/zohodesk/api/v1/skills",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Createskill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__skill_id___get": {
      "provider_intent": "zohodesk__api__v1__skills__skill_id___get",
      "provider_alias_intent": "/api/v1/skills/skill_id",
      "text": "View skill",
      "category": "Skills",
      "method": "GET",
      "type": "API",
      "params": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Gets the details of a skill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/{skill_id}",
        "alias_endpoint": "/zohodesk/api/v1/skills/skill_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Viewskill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__skill_id___patch": {
      "provider_intent": "zohodesk__api__v1__skills__skill_id___patch",
      "provider_alias_intent": "/api/v1/skills/skill_id",
      "text": "Update skill",
      "category": "Skills",
      "method": "PATCH",
      "type": "API",
      "params": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the skill"
        },
        "description": {
          "type": "string",
          "text": "Description of the skill"
        },
        "status": {
          "type": "string",
          "text": "Values allowed are ACTIVE and INACTIVE"
        },
        "skillTypeId": {
          "type": "number",
          "text": "ID of the Skill Type"
        },
        "criteria": {
          "type": "array",
          "text": "The criteria details for the skill"
        },
        "agentIds": {
          "type": "array",
          "text": "IDs of the agents mapped with the skill"
        }
      },
      "path": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API Updates a skill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/{skill_id}",
        "alias_endpoint": "/zohodesk/api/v1/skills/skill_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Updateskill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__skill_id___delete": {
      "provider_intent": "zohodesk__api__v1__skills__skill_id___delete",
      "provider_alias_intent": "/api/v1/skills/skill_id",
      "text": "Delete skill",
      "category": "Skills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a skill from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/{skill_id}",
        "alias_endpoint": "/zohodesk/api/v1/skills/skill_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Deleteskill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills___get": {
      "provider_intent": "zohodesk__api__v1__skills___get",
      "provider_alias_intent": "/api/v1/skills",
      "text": "List all skills",
      "category": "Skills",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department Id",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the skills must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of skills to list"
        },
        "status": {
          "type": "string",
          "text": "Active inactive filter for Skills. Values allowed are ACTIVE and INACTIVE"
        },
        "searchString": {
          "type": "string",
          "text": "Search string. Used to filter skills by name starting with this string"
        },
        "skillTypeId": {
          "type": "number",
          "text": "Skill Type Id. Used to filter skills by SkillType"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all skills in a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills",
        "alias_endpoint": "/zohodesk/api/v1/skills",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Listallskills"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__skill_id__relatedrules___get": {
      "provider_intent": "zohodesk__api__v1__skills__skill_id__relatedrules___get",
      "provider_alias_intent": "/api/v1/skills/skill_id/relatedrules",
      "text": "List associated automation rules",
      "category": "Skills",
      "method": "GET",
      "type": "API",
      "params": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the related rules must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of rules to list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "skill_id": {
          "type": "string",
          "text": "skill ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of automation rules that include a skill,based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/{skill_id}/relatedRules",
        "alias_endpoint": "/zohodesk/api/v1/skills/skill_id/relatedrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_Listassociatedautomationrules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__order___post": {
      "provider_intent": "zohodesk__api__v1__skills__order___post",
      "provider_alias_intent": "/api/v1/skills/order",
      "text": "Reorder Skills in a Department",
      "category": "Skills",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "skillIds": {
          "type": "array",
          "text": "List of skill ids to reorder",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "Department of the skills to be reordered",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists reorders Skills in a Department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/order",
        "alias_endpoint": "/zohodesk/api/v1/skills/order",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_ReorderSkillsinaDepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__skills___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__skills___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/skills",
      "text": "Get Skills of an Agent",
      "category": "Skills",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        },
        "departmentIds": {
          "type": "number",
          "text": "List of Department Ids separated by commas. Maximum 10 department ids allowed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Returns skills mapped with an agent by department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/skills",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/skills",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_GetSkillsofanAgent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__mapskills___post": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__mapskills___post",
      "provider_alias_intent": "/api/v1/agents/agent_id/mapskills",
      "text": "Map Skills in a Department with an Agent",
      "category": "Skills",
      "method": "POST",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the Department",
          "required": true
        },
        "skillIds": {
          "type": "array",
          "text": "Ids of skills to be mapped"
        }
      },
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API modifies skills mapped for an agent in a department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/mapSkills",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/mapskills",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_MapSkillsinaDepartmentwithanAgent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__skills__criteriafields___get": {
      "provider_intent": "zohodesk__api__v1__skills__criteriafields___get",
      "provider_alias_intent": "/api/v1/skills/criteriafields",
      "text": "Get Criteria Fields for Skill in a Department",
      "category": "Skills",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Department Id",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns list of fields supported in criteria for Skills by module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/skills/criteriaFields",
        "alias_endpoint": "/zohodesk/api/v1/skills/criteriafields",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Skills#Skills_GetCriteriaFieldsforSkillinaDepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__subjectaccessrequests___get": {
      "provider_intent": "zohodesk__api__v1__subjectaccessrequests___get",
      "provider_alias_intent": "/api/v1/subjectaccessrequests",
      "text": "List subject access requests",
      "category": "Subject Access Requests",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the requests must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of requests to list. The default value is 10 and the maximum value supported is 100."
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the contact who made the request."
        },
        "status": {
          "type": "string",
          "text": "Processing status of the request"
        },
        "duration": {
          "type": "string",
          "text": "Period in which the requests were made"
        },
        "startTime": {
          "type": "string",
          "text": "Starting time of the time range in which the requests should have been created"
        },
        "endTime": {
          "type": "string",
          "text": "Ending time of the time range in which the requests should have been created"
        },
        "requestType": {
          "type": "string",
          "text": "Filter by type of the request"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the requests"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of subject access requests, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/subjectAccessRequests",
        "alias_endpoint": "/zohodesk/api/v1/subjectaccessrequests",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests_Listsubjectaccessrequests"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__subjectaccessrequests__subjectaccessrequest_id___get": {
      "provider_intent": "zohodesk__api__v1__subjectaccessrequests__subjectaccessrequest_id___get",
      "provider_alias_intent": "/api/v1/subjectaccessrequests/subjectaccessrequest_id",
      "text": "Get subject access request",
      "category": "Subject Access Requests",
      "method": "GET",
      "type": "API",
      "params": {
        "subjectAccessRequest_id": {
          "type": "string",
          "text": "Subject Access Request ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the request"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "subjectAccessRequest_id": {
          "type": "string",
          "text": "Subject Access Request ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular SAR",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/subjectAccessRequests/{subjectAccessRequest_id}",
        "alias_endpoint": "/zohodesk/api/v1/subjectaccessrequests/subjectaccessrequest_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Getsubjectaccessrequest"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__entities___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__entities___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/entities",
      "text": "List resources related to subject",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "module": {
          "type": "string",
          "text": "Name of the modules from which the resources must be fetched",
          "required": true
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the contact who made the request",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the resources must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of resources to list"
        },
        "fieldConditions": {
          "type": "array",
          "text": "Field-related conditions, based on which the resources must be filtered"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of resources related to the subject, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/entities",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/entities",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Listresourcesrelatedtosubject"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__count___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__count___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/count",
      "text": "Get count of resources related to request",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "fieldConditions": {
          "type": "array",
          "text": "Field-related conditions, based on which the resources must be filtered"
        },
        "module": {
          "type": "string",
          "text": "Name of the modules from which the data must be exported",
          "required": true
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the user who made the request",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of resources related to a subject access request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/count",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Getcountofresourcesrelatedtorequest"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__exportall___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__exportall___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/exportall",
      "text": "Export all subject data from Zoho Desk",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "module": {
          "type": "string",
          "text": "Name of the modules from which the resources must be fetched",
          "required": true
        },
        "fieldConditions": {
          "type": "array",
          "text": "Field-related conditions, based on which the data must be filtered"
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the user who made the request",
          "required": true
        },
        "callBackUrl": {
          "type": "string",
          "text": "The URL which will be used for the notification"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API exports data related to the subject, from your Zoho Desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/exportAll",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/exportall",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_ExportallsubjectdatafromZohoDesk"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__export___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__export___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/export",
      "text": "Export specific resources",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the resources that must be exported",
          "required": true
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the user who made the request",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API exports specific resources related to a subject access request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/export",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/export",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Exportspecificresources"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__fieldsandconditions___get": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__fieldsandconditions___get",
      "provider_alias_intent": "api/v1/subjectaccessrequests/fieldsandconditions",
      "text": "Get fields and conditions",
      "category": "Subject Access Requests",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Name of the modules from which the resources must be fetched",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetchs possible fileds list and conditions",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/fieldsAndConditions",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/fieldsandconditions",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Getfieldsandconditions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__eraseall___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__eraseall___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/eraseall",
      "text": "Erase all subject data from Zoho Desk",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "module": {
          "type": "string",
          "text": "Name of the modules from which the resources must be fetched",
          "required": true
        },
        "fieldConditions": {
          "type": "array",
          "text": "Field-related conditions, based on which the data must be filtered"
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the user who made the request",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API erases data related to the subject, from your Zoho Desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/eraseAll",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/eraseall",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_EraseallsubjectdatafromZohoDesk"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__subjectaccessrequests__erase___post": {
      "provider_intent": "zohodeskapi__v1__subjectaccessrequests__erase___post",
      "provider_alias_intent": "api/v1/subjectaccessrequests/erase",
      "text": "Erase specific resources",
      "category": "Subject Access Requests",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the resources that must be exported",
          "required": true
        },
        "contactEmailId": {
          "type": "string",
          "text": "Email ID of the user who made the request",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API erases specific resources related to a subject access request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/subjectAccessRequests/erase",
        "alias_endpoint": "/zohodeskapi/v1/subjectaccessrequests/erase",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SubjectAccessRequests#SubjectAccessRequests_Erasespecificresources"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___get": {
      "provider_intent": "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___get",
      "provider_alias_intent": "/api/v1/supportemailaddress/supportemailaddress_id",
      "text": "Get details of a SupportEmailAddress",
      "category": "SupportEmailAddress",
      "method": "GET",
      "type": "API",
      "params": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a SupportEmailAddress",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailAddress/{supportEmailAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/supportemailaddress/supportemailaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailAddress_GetdetailsofaSupportEmailAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemailaddress___get": {
      "provider_intent": "zohodesk__api__v1__supportemailaddress___get",
      "provider_alias_intent": "/api/v1/supportemailaddress",
      "text": "List SupportEmailAddresses",
      "category": "SupportEmailAddress",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department(s) from which the SupportEmailAddresses must be fetched",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the mail addresses must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of mail addresses to fetch, range: 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the SupportEmailAddresses configured in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailAddress",
        "alias_endpoint": "/zohodesk/api/v1/supportemailaddress",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailAddress#SupportEmailAddress_ListSupportEmailAddresses"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemailaddress___post": {
      "provider_intent": "zohodesk__api__v1__supportemailaddress___post",
      "provider_alias_intent": "/api/v1/supportemailaddress",
      "text": "Add SupportEmailAddress",
      "category": "SupportEmailAddress",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the SupportEmailAddress must be configured",
          "required": true
        },
        "friendlyName": {
          "type": "string",
          "text": "Display name for the SupportEmailAddress, max chars: 100",
          "required": true
        },
        "address": {
          "type": "string",
          "text": "Email ID to add, max chars: 100",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a SupportEmailAddress to your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailAddress",
        "alias_endpoint": "/zohodesk/api/v1/supportemailaddress",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailAddress_AddSupportEmailAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___patch": {
      "provider_intent": "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___patch",
      "provider_alias_intent": "/api/v1/supportemailaddress/supportemailaddress_id",
      "text": "Update SupportEmailAddress",
      "category": "SupportEmailAddress",
      "method": "PATCH",
      "type": "API",
      "params": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the SupportEmailAddress is configured"
        },
        "friendlyName": {
          "type": "string",
          "text": "Display name for the SupportEmailAddress, max chars: 100"
        },
        "isMailFetching": {
          "type": "boolean",
          "text": "Key that returns if the SupportEmailAddress fetches emails or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing SupportEmailAddress",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailAddress/{supportEmailAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/supportemailaddress/supportemailaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailAddress#SupportEmailAddress_UpdateSupportEmailAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___delete": {
      "provider_intent": "zohodesk__api__v1__supportemailaddress__supportemailaddress_id___delete",
      "provider_alias_intent": "/api/v1/supportemailaddress/supportemailaddress_id",
      "text": "Delete SupportEmailAddress",
      "category": "SupportEmailAddress",
      "method": "DELETE",
      "type": "API",
      "params": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "supportEmailAddress_id": {
          "type": "string",
          "text": "Support Email Address ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a SupportEmailAddress from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailAddress/{supportEmailAddress_id}",
        "alias_endpoint": "/zohodesk/api/v1/supportemailaddress/supportemailaddress_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailAddress#SupportEmailAddress_DeleteSupportEmailAddress"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemaildomain___patch": {
      "provider_intent": "zohodesk__api__v1__supportemaildomain___patch",
      "provider_alias_intent": "/api/v1/supportemaildomain",
      "text": "Update SupportEmailAddress SubDomain",
      "category": "SupportEmailDomain",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "supportEmailDomain": {
          "type": "string",
          "text": "Name of the new email subdomain"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the subdomain (the \"mycompany\" part) of the support email address",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailDomain",
        "alias_endpoint": "/zohodesk/api/v1/supportemaildomain",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailDomain#SupportEmailDomain_UpdateSupportEmailAddressSubDomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__supportemaildomain___get": {
      "provider_intent": "zohodesk__api__v1__supportemaildomain___get",
      "provider_alias_intent": "/api/v1/supportemaildomain",
      "text": "Get SupportEmailAddress SubDomain",
      "category": "SupportEmailDomain",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the subdomain of the support email address",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/supportEmailDomain",
        "alias_endpoint": "/zohodesk/api/v1/supportemaildomain",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#SupportEmailDomain_GetSupportEmailAddressSubDomain"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentry/timeentry_id",
      "text": "Get a Task Time Entry",
      "category": "Task TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a time entry recorded for a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_GetaTaskTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentry___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentry___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentry",
      "text": "List Task Time Entries",
      "category": "Task TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch. Range: 1-100"
        },
        "orderBy": {
          "type": "string",
          "text": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute. Values allowed are ASC (default) and DESC."
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Value supported is owner. Max chars: 100"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters time entries created in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters time entries whose details were modified in a particular period of time. Enter the from and to dates in the ISO date format of yyyy-MM-ddThh:mm:ss.SSSZ"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the time entries associated with a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_ListTaskTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentry___post": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentry___post",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentry",
      "text": "Add a Task Time Entry",
      "category": "Task TimeEntry",
      "method": "POST",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "requestChargeType": {
          "type": "string",
          "text": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. Max chars: 120"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user associated with the time entry"
        },
        "executedTime": {
          "type": "string",
          "text": "Time when work related to the time entry was started",
          "required": true
        },
        "hoursSpent": {
          "type": "number",
          "text": "Number of hours in the time entry"
        },
        "minutesSpent": {
          "type": "number",
          "text": "Number of minutes in the time entry"
        },
        "secondsSpent": {
          "type": "number",
          "text": "Number of seconds in the time entry"
        },
        "agentCostPerHour": {
          "type": "number",
          "text": "Per hour cost of an agent"
        },
        "additionalCost": {
          "type": "number",
          "text": "Additional cost incurred"
        },
        "fixedCost": {
          "type": "number",
          "text": "Fixed cost"
        },
        "description": {
          "type": "string",
          "text": "Description of the time entry. Max chars: 65535"
        },
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the time entry"
        },
        "mode": {
          "type": "string",
          "text": "Mode configured in time tracking. Supported values are Manual and Auto"
        },
        "isBillable": {
          "type": "boolean",
          "text": "Billing Preference",
          "enum": [
            true,
            false
          ]
        },
        "invoiceId": {
          "type": "number",
          "text": "ID of the invoice related to the time entry"
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a time entry in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_AddaTaskTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.CREATE , Desk.activities.tasks.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___patch": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___patch",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentry/timeentry_id",
      "text": "Update a Task Time Entry",
      "category": "Task TimeEntry",
      "method": "PATCH",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "requestChargeType": {
          "type": "string",
          "text": "Type of request in the ticket. Values supported are Customer Service, Upgrade Request, Product Consultation, and Support and Maintenance. Max chars: 120"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user associated with the time entry"
        },
        "executedTime": {
          "type": "string",
          "text": "Time when work related to the time entry was started"
        },
        "hoursSpent": {
          "type": "number",
          "text": "Number of hours in the time entry"
        },
        "minutesSpent": {
          "type": "number",
          "text": "Number of minutes in the time entry"
        },
        "secondsSpent": {
          "type": "number",
          "text": "Number of seconds in the time entry"
        },
        "agentCostPerHour": {
          "type": "number",
          "text": "Per hour cost of an agent"
        },
        "additionalCost": {
          "type": "number",
          "text": "Additional cost incurred"
        },
        "fixedCost": {
          "type": "number",
          "text": "Fixed cost"
        },
        "description": {
          "type": "string",
          "text": "Description of the time entry. Max chars: 65535"
        },
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the time entry"
        },
        "mode": {
          "type": "string",
          "text": "Mode configured in time tracking. Supported values are Manual and Auto"
        },
        "isBillable": {
          "type": "boolean",
          "text": "Billing Preference",
          "enum": [
            true,
            false
          ]
        },
        "invoiceId": {
          "type": "number",
          "text": "ID of the invoice related to the time entry"
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing time entry",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_UpdateaTaskTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___delete": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentry__timeentry_id___delete",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentry/timeentry_id",
      "text": "Delete a Task Time Entry",
      "category": "Task TimeEntry",
      "method": "DELETE",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a time entry recorded for a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_DeleteaTaskTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timeentrysummation___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timeentrysummation___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/timeentrysummation",
      "text": "Get summation of Task Time Entries",
      "category": "Task TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable, billable, or billed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the sum of time entries associated with a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timeEntrySummation",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timeentrysummation",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimeEntry_GetsummationofTaskTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timer___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timer___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/timer",
      "text": "Get Task Timer",
      "category": "Task Timer",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the time elapsed in the task timer, along with the current state",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timer",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimer_GetTaskTimer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__timer___post": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__timer___post",
      "provider_alias_intent": "/api/v1/tasks/task_id/timer",
      "text": "Performs Task Timer actions",
      "category": "Task Timer",
      "method": "POST",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "action": {
          "type": "string",
          "text": "Action of the timer. Supported actions are START, STOP, PAUSE, and RESUME",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/timer",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/timer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TaskTimer_PerformsTaskTimeractions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id___get",
      "provider_alias_intent": "/api/v1/tasks/task_id",
      "text": "Get task",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the task"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a task from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Gettask"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks___get": {
      "provider_intent": "zohodesk__api__v1__tasks___get",
      "provider_alias_intent": "/api/v1/tasks",
      "text": "List tasks",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "include": {
          "type": "string",
          "text": "Additional information related to the task"
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the tasks must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tasks to list"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tasks must be fetched"
        },
        "departmentIds": {
          "type": "number",
          "text": "Departments from which the tasks need to be queried"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "assignee": {
          "type": "number",
          "text": "Key that filters tickets by assignee"
        },
        "dueDate": {
          "type": "string",
          "text": "Due date for completing the task"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes whether the task is completed or not",
          "enum": [
            true,
            false
          ]
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the tasks by a specific attribute: dueDate or createdTime"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a particular number of tasks, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks",
        "alias_endpoint": "/zohodesk/api/v1/tasks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Listtasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks___post": {
      "provider_intent": "zohodesk__api__v1__tasks___post",
      "provider_alias_intent": "/api/v1/tasks",
      "text": "Create task",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the task"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the task must be created",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "Subject of the task",
          "required": true
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket with which the task must be associated"
        },
        "dueDate": {
          "type": "string",
          "text": "Due date for completing the task"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the task is assigned"
        },
        "category": {
          "type": "string",
          "text": "Category of the task"
        },
        "status": {
          "type": "string",
          "text": "Status of task completion"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the task"
        },
        "description": {
          "type": "string",
          "text": "Description of the task"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the task"
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder set for the task"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a task in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks",
        "alias_endpoint": "/zohodesk/api/v1/tasks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Createtask"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.CREATE , Desk.activities.tasks.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id___patch": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id___patch",
      "provider_alias_intent": "/api/v1/tasks/task_id",
      "text": "Update task",
      "category": "Tasks",
      "method": "PATCH",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cf": {
          "type": "array",
          "text": "User-defined fields related to the task"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the task must be created"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the task"
        },
        "ticketId": {
          "type": "number",
          "text": "ID of the ticket with which the task must be associated"
        },
        "dueDate": {
          "type": "string",
          "text": "Due date for completing the task"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user to whom the task is assigned"
        },
        "category": {
          "type": "string",
          "text": "Category of the task"
        },
        "status": {
          "type": "string",
          "text": "Status of task completion"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the task"
        },
        "description": {
          "type": "string",
          "text": "Description of the task"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact associated with the task"
        },
        "reminder": {
          "type": "array",
          "text": "Details of the reminder set for the task"
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the details of a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Updatetask"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__tasks__movetotrash___post",
      "provider_alias_intent": "/api/v1/tasks/movetotrash",
      "text": "Delete tasks",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "entityIds": {
          "type": "array",
          "text": "IDs of the activities to delete",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves task entries to the Recycle Bin of your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/tasks/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Deletetasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.DELETE , Desk.activities.tasks.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__deletespam___post": {
      "provider_intent": "zohodesk__api__v1__tasks__deletespam___post",
      "provider_alias_intent": "/api/v1/tasks/deletespam",
      "text": "Delete spam tasks",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "taskIds": {
          "type": "array",
          "text": "IDs of the spam tasks",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the given spam tasks",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/deleteSpam",
        "alias_endpoint": "/zohodesk/api/v1/tasks/deletespam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Deletespamtasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.DELETE , Desk.activities.tasks.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__tasks___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__tasks___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/tasks",
      "text": "List tasks by ticket",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the tasks must be fetched"
        },
        "isCompleted": {
          "type": "boolean",
          "text": "Key that denotes whether the task is completed or not",
          "enum": [
            true,
            false
          ]
        },
        "isSpam": {
          "type": "boolean",
          "text": "Key that denotes whether to fetch spam tasks or not",
          "enum": [
            true,
            false
          ]
        },
        "limit": {
          "type": "number",
          "text": "Number of tasks to list"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the tasks by a specific attribute: dueDate or createdTime"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the task"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all tasks associated with a particular ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/tasks",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/tasks",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Listtasksbyticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__count___get": {
      "provider_intent": "zohodesk__api__v1__tasks__count___get",
      "provider_alias_intent": "/api/v1/tasks/count",
      "text": "List all tasks count",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the task count must be fetched",
          "required": true
        },
        "assignee": {
          "type": "string",
          "text": "Key that filters tasks by assignee"
        },
        "dueDate": {
          "type": "string",
          "text": "Filter by task duedate"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of tasks in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/count",
        "alias_endpoint": "/zohodesk/api/v1/tasks/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Listalltaskscount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tasks.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__tasks__updatemany___post",
      "provider_alias_intent": "/api/v1/tasks/updatemany",
      "text": "Update many tasks",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple tasks at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/tasks/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Updatemanytasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__emptyspam___post": {
      "provider_intent": "zohodesk__api__v1__tasks__emptyspam___post",
      "provider_alias_intent": "/api/v1/tasks/emptyspam",
      "text": "Empty spam tasks",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the activities belong",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all spam tasks",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/emptySpam",
        "alias_endpoint": "/zohodesk/api/v1/tasks/emptyspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tasks_Emptyspamtasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.DELETE , Desk.activities.tasks.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__attachments___get": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__attachments___get",
      "provider_alias_intent": "/api/v1/tasks/task_id/attachments",
      "text": "List Task attachments",
      "category": "Tasks Attachments",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the attachments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of attachments to fetch. Range: 1-100"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the attachments. Value allowed is creator, which returns the details of users who added the attachments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the files attached to a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksAttachments_ListTaskattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__attachments___post": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__attachments___post",
      "provider_alias_intent": "/api/v1/tasks/task_id/attachments",
      "text": "Create Task attachment",
      "category": "Tasks Attachments",
      "method": "POST",
      "type": "UPLOAD",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File to attach to the task"
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches a file to a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksAttachments_CreateTaskattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tasks__task_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__tasks__task_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/tasks/task_id/attachments/attachment_id",
      "text": "Delete Task attachment",
      "category": "Tasks Attachments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes an attachment from a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tasks/{task_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/tasks/task_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksAttachments#TasksAttachments_DeleteTaskattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tasks__task_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__tasks__task_id__comments___post",
      "provider_alias_intent": "api/v1/tasks/task_id/comments",
      "text": "Create a task comment",
      "category": "Tasks Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Max chars: 32000, Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}]zsu."
        },
        "contentType": {
          "type": "string",
          "text": "Max chars: 100, Used to denote the content-type which maybe html or plainText. The default type is html."
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tasks/{task_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/tasks/task_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksComments_Createataskcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tasks__task_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__tasks__task_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/tasks/task_id/comments/comment_id",
      "text": "Update a task comment",
      "category": "Tasks Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Max chars: 32000, Content of the comment. To retrieve or set user mentions, use this code format: zsu[@user:{zuid}]zsu."
        },
        "contentType": {
          "type": "string",
          "text": "Max chars: 100, Used to denote the content-type which maybe html or plainText. The default type is html."
        }
      },
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing task comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tasks/{task_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tasks/task_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksComments_Updateataskcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE, Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tasks__task_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__tasks__task_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/tasks/task_id/comments/comment_id",
      "text": "Delete a task comment",
      "category": "Tasks Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing task comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tasks/{task_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tasks/task_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksComments_Deleteataskcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.UPDATE , Desk.activities.tasks.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tasks__task_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__tasks__task_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/tasks/task_id/comments/comment_id",
      "text": "Get a task comment",
      "category": "Tasks Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a task comment from the portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tasks/{task_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tasks/task_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksComments_Getataskcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ , Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tasks__task_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__tasks__task_id__comments___get",
      "provider_alias_intent": "api/v1/tasks/task_id/comments",
      "text": "List all task comments",
      "category": "Tasks Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Range: >=0, Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Default: 50, range: 1-100, No. of comments to fetch",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Max chars: 100, Sort comments by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. Value allowed is mentions, which returns the details of users mentioned in the comments"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "task_id": {
          "type": "string",
          "text": "Task Id",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a task, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tasks/{task_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/tasks/task_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TasksComments_Listalltaskcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.activities.READ, Desk.activities.tasks.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams___post": {
      "provider_intent": "zohodesk__api__v1__teams___post",
      "provider_alias_intent": "/api/v1/teams",
      "text": "Create team",
      "category": "Teams",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "String",
          "text": "Name of the team",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "A short description of the team"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the team belongs",
          "required": true
        },
        "subTeams": {
          "type": "array",
          "text": "List of sub-teams within the team"
        },
        "roles": {
          "type": "array",
          "text": "List of roles to add to the team"
        },
        "rolesWithSubordinates": {
          "type": "array",
          "text": "List of roles with subordinates to add to the team"
        },
        "agents": {
          "type": "array",
          "text": "List of agents to add to the team"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a team in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams",
        "alias_endpoint": "/zohodesk/api/v1/teams",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Createteam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE , Desk.basic.CREATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams__team_id___patch": {
      "provider_intent": "zohodesk__api__v1__teams__team_id___patch",
      "provider_alias_intent": "/api/v1/teams/team_id",
      "text": "Update team",
      "category": "Teams",
      "method": "PATCH",
      "type": "API",
      "params": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "String",
          "text": "Name of the team"
        },
        "description": {
          "type": "string",
          "text": "A short description of the team"
        },
        "subTeams": {
          "type": "array",
          "text": "List of sub-teams within the team"
        },
        "roles": {
          "type": "array",
          "text": "List of roles to add to the team"
        },
        "rolesWithSubordinates": {
          "type": "array",
          "text": "List of roles with subordinates to add to the team"
        },
        "agents": {
          "type": "array",
          "text": "List of agents to add to the team"
        }
      },
      "path": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates details of an existing team",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams/{team_id}",
        "alias_endpoint": "/zohodesk/api/v1/teams/team_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Updateteam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams__team_id__deleteteam___post": {
      "provider_intent": "zohodesk__api__v1__teams__team_id__deleteteam___post",
      "provider_alias_intent": "/api/v1/teams/team_id/deleteteam",
      "text": "Delete team",
      "category": "Teams",
      "method": "POST",
      "type": "API",
      "params": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ticketNewTeam": {
          "type": "number",
          "text": "Assign open and on hold tickets of the team being deleted to this team",
          "required": true
        },
        "ticketNewAgent": {
          "type": "number",
          "text": "Assign open and on hold tickets of the team being deleted to this agent",
          "required": true
        },
        "taskNewTeam": {
          "type": "number",
          "text": "Assign open tasks of the team being deleted to this team",
          "required": true
        },
        "taskNewAgent": {
          "type": "number",
          "text": "Assign open tasks of the team being deleted to this agent",
          "required": true
        }
      },
      "path": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an existing team from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams/{team_id}/deleteTeam",
        "alias_endpoint": "/zohodesk/api/v1/teams/team_id/deleteteam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Deleteteam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE , Desk.basic.DELETE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams__team_id___get": {
      "provider_intent": "zohodesk__api__v1__teams__team_id___get",
      "provider_alias_intent": "/api/v1/teams/team_id",
      "text": "Get team",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a team",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams/{team_id}",
        "alias_endpoint": "/zohodesk/api/v1/teams/team_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Getteam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams___get": {
      "provider_intent": "zohodesk__api__v1__teams___get",
      "provider_alias_intent": "/api/v1/teams",
      "text": "List teams from all associated departments",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all teams created in all departments to which the current user belongs",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams",
        "alias_endpoint": "/zohodesk/api/v1/teams",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Listteamsfromallassociateddepartments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams__team_id__members___get": {
      "provider_intent": "zohodesk__api__v1__teams__team_id__members___get",
      "provider_alias_intent": "/api/v1/teams/team_id/members",
      "text": "List details of team members",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the team",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all the members of a particular team",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams/{team_id}/members",
        "alias_endpoint": "/zohodesk/api/v1/teams/team_id/members",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams_Listdetailsofteammembers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__teams__team_id__associables___get": {
      "provider_intent": "zohodesk__api__v1__teams__team_id__associables___get",
      "provider_alias_intent": "/api/v1/teams/team_id/associables",
      "text": "List associable teams",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "team_id": {
          "type": "string",
          "text": "Team ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the other teams that can be added as sub-teams to the current team",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/teams/{team_id}/associables",
        "alias_endpoint": "/zohodesk/api/v1/teams/team_id/associables",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Listassociableteams"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agents__agent_id__teams___get": {
      "provider_intent": "zohodesk__api__v1__agents__agent_id__teams___get",
      "provider_alias_intent": "/api/v1/agents/agent_id/teams",
      "text": "List associated teams of agent",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "agent_id": {
          "type": "string",
          "text": "Agent ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all the teams to which an agent belongs",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agents/{agent_id}/teams",
        "alias_endpoint": "/zohodesk/api/v1/agents/agent_id/teams",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Listassociatedteamsofagent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__roles__role_id__teams___get": {
      "provider_intent": "zohodesk__api__v1__roles__role_id__teams___get",
      "provider_alias_intent": "/api/v1/roles/role_id/teams",
      "text": "List associated teams for a role",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "role_id": {
          "type": "string",
          "text": "Role ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all the teams associated with a particular role",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/roles/{role_id}/teams",
        "alias_endpoint": "/zohodesk/api/v1/roles/role_id/teams",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Listassociatedteamsforarole"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__departments__department_id__teams___get": {
      "provider_intent": "zohodesk__api__v1__departments__department_id__teams___get",
      "provider_alias_intent": "/api/v1/departments/department_id/teams",
      "text": "List teams in department",
      "category": "Teams",
      "method": "GET",
      "type": "API",
      "params": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "department_id": {
          "type": "string",
          "text": "Department ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all the teams in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/departments/{department_id}/teams",
        "alias_endpoint": "/zohodesk/api/v1/departments/department_id/teams",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Teams#Teams_Listteamsindepartment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templatefolders___post": {
      "provider_intent": "zohodesk__api__v1__templatefolders___post",
      "provider_alias_intent": "/api/v1/templatefolders",
      "text": "Adding a Template Folder",
      "category": "TemplateFolders",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "folderName": {
          "type": "string",
          "text": "Name of the template folder",
          "required": true
        },
        "folderDesc": {
          "type": "string",
          "text": "The description of the folder",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "The ID of the department"
        },
        "folderAccessDetails": {
          "type": "object",
          "text": "The access details of the folder",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Adding a Template Folder",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templateFolders",
        "alias_endpoint": "/zohodesk/api/v1/templatefolders",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TemplateFolders#TemplateFolders_AddingaTemplateFolder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templatefolders__templatefolder_id___get": {
      "provider_intent": "zohodesk__api__v1__templatefolders__templatefolder_id___get",
      "provider_alias_intent": "/api/v1/templatefolders/templatefolder_id",
      "text": "Getting a single Template Folder",
      "category": "TemplateFolders",
      "method": "GET",
      "type": "API",
      "params": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Listing a particular Template Folder",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templateFolders/{templateFolder_id}",
        "alias_endpoint": "/zohodesk/api/v1/templatefolders/templatefolder_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TemplateFolders#TemplateFolders_GettingasingleTemplateFolder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templatefolders__templatefolder_id___patch": {
      "provider_intent": "zohodesk__api__v1__templatefolders__templatefolder_id___patch",
      "provider_alias_intent": "/api/v1/templatefolders/templatefolder_id",
      "text": "Updating a Template Folder",
      "category": "TemplateFolders",
      "method": "PATCH",
      "type": "API",
      "params": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "folderName": {
          "type": "string",
          "text": "Name of the template folder"
        },
        "folderDesc": {
          "type": "string",
          "text": "The description of the folder"
        },
        "departmentId": {
          "type": "number",
          "text": "The ID of the department"
        },
        "folderAccessDetails": {
          "type": "object",
          "text": "The access details of the folder"
        }
      },
      "path": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Updating a Template Folder",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templateFolders/{templateFolder_id}",
        "alias_endpoint": "/zohodesk/api/v1/templatefolders/templatefolder_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TemplateFolders#TemplateFolders_UpdatingaTemplateFolder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templatefolders__templatefolder_id___delete": {
      "provider_intent": "zohodesk__api__v1__templatefolders__templatefolder_id___delete",
      "provider_alias_intent": "/api/v1/templatefolders/templatefolder_id",
      "text": "Delete Template Folder",
      "category": "TemplateFolders",
      "method": "DELETE",
      "type": "API",
      "params": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "templateFolder_id": {
          "type": "string",
          "text": "Template Folder ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "Delete a Template Folder",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templateFolders/{templateFolder_id}",
        "alias_endpoint": "/zohodesk/api/v1/templatefolders/templatefolder_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TemplateFolders#TemplateFolders_DeleteTemplateFolder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__templatefolders___get": {
      "provider_intent": "zohodesk__api__v1__templatefolders___get",
      "provider_alias_intent": "/api/v1/templatefolders",
      "text": "Listing Template Folders",
      "category": "TemplateFolders",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "The corresponding department to be fetched",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index, default is 1, range: 1-1000",
          "required": true
        },
        "limit": {
          "type": "number",
          "text": "Number of folders to be retrieved, default is 1000, range: 1-1000",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Meta information related to the template folder"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "List all Template Folders in alphabetical order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/templateFolders",
        "alias_endpoint": "/zohodesk/api/v1/templatefolders",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TemplateFolders#TemplateFolders_ListingTemplateFolders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads__thread_id___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads__thread_id___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads/thread_id",
      "text": "Get a thread",
      "category": "Threads",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Content of the thread in plain text format"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single thread from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads/{thread_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads/thread_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_Getathread"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__originalcontent___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__originalcontent___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads/thread_id/originalcontent",
      "text": "Get Original Mail Content",
      "category": "Threads",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        },
        "inline": {
          "type": "boolean",
          "text": "set this param as true if attachment is to be rendered",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API get the orginal mail content including mail headers",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads/{thread_id}/originalContent",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads/thread_id/originalcontent",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_GetOriginalMailContent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__latestthread___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__latestthread___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/latestthread",
      "text": "Get Latest thread",
      "category": "Threads",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "needPublic": {
          "type": "boolean",
          "text": "Key that denotes if the thread must be a public thread",
          "enum": [
            true,
            false
          ]
        },
        "needIncomingThread": {
          "type": "boolean",
          "text": "Key that denotes if the thread must be an incoming threads only",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Content of the thread in plain text format"
        },
        "threadStatus": {
          "type": "string",
          "text": "Receipt status of the thread"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the most recent thread recorded in a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/latestThread",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/latestthread",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads#Threads_GetLatestthread"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__sendforreview___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__sendforreview___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads/thread_id/sendforreview",
      "text": "Send For Review",
      "category": "Threads",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API saves drafts of agent's responses to customers and sends them to a manager/senior agent for review",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads/{thread_id}/sendForReview",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads/thread_id/sendforreview",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_SendForReview"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads",
      "text": "List all threads",
      "category": "Threads",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the threads must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of threads to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists all threads in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_Listallthreads"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__conversations___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__conversations___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/conversations",
      "text": "List conversations",
      "category": "Threads",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the conversations must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of conversations to fetch",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of threads and comments recorded on a ticket, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/conversations",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/conversations",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_Listconversations"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__sendreply___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__sendreply___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/sendreply",
      "text": "Send Forum Reply",
      "category": "Threads",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API sends a reply to a comment on a forum post",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/sendReply",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/sendreply",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_SendForumReply"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__draftreply___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__draftreply___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/draftreply",
      "text": "Draft Forum Reply",
      "category": "Threads",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API drafts a reply to a forum post",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/draftReply",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/draftreply",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_DraftForumReply"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__draftreply__thread_id___patch": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__draftreply__thread_id___patch",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/draftreply/thread_id",
      "text": "Update Draft",
      "category": "Threads",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "channel": {
          "type": "string",
          "text": "Channel through which the thread originated"
        },
        "content": {
          "type": "string",
          "text": "Content of the thread"
        },
        "contentType": {
          "type": "string",
          "text": "Formatting type of the content. Applicable only for the EMAIL channel"
        },
        "isForward": {
          "type": "boolean",
          "text": "Key that returns if the thread was sent as a forward",
          "enum": [
            true,
            false
          ]
        },
        "isPrivate": {
          "type": "boolean",
          "text": "Specifies whether the thread is Private or Public",
          "enum": [
            true,
            false
          ]
        },
        "inReplyToThreadId": {
          "type": "number",
          "text": "ID of the thread to which current thread is a reply, applicable only for EMAIL channel"
        },
        "attachmentIds": {
          "type": "array",
          "text": "List of attachment IDs, applicable only for EMAIL channel"
        },
        "direction": {
          "type": "string",
          "text": "Key that returns whether the thread is incoming or outgoing"
        },
        "fromEmailAddress": {
          "type": "string",
          "text": "Mandatory parameter for creating an email thread"
        },
        "to": {
          "type": "string",
          "text": "To email ID in the thread, applicable only for EMAIL channel"
        },
        "cc": {
          "type": "string",
          "text": "Email ID to be CC-ed. Applicable only for EMAIL channel"
        },
        "bcc": {
          "type": "string",
          "text": "Email ID to be BCC-ed., if any exist"
        },
        "hasAttach": {
          "type": "boolean",
          "text": "States whether the thread has attachments",
          "enum": [
            true,
            false
          ]
        },
        "ticketStatus": {
          "type": "string",
          "text": "Status of the ticket"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates a draft thread created via the EMAIL, FACEBOOK, or FORUM channel",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/draftReply/{thread_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/draftreply/thread_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads#Threads_UpdateDraft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads/thread_id/attachments/attachment_id",
      "text": "Delete attachment",
      "category": "Threads",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "thread_id": {
          "type": "string",
          "text": "Thread ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an attachment from a draft thread",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads/{thread_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads/thread_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Threads_Deleteattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "isChecked": "Done",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__approvals___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__approvals___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/approvals",
      "text": "List approvals",
      "category": "Ticket Approvals",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the approvals must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of approvals to fetch"
        },
        "status": {
          "type": "string",
          "text": "Key that filters the approvals by status"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the approvals submitted in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/approvals",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/approvals",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketApprovals_Listapprovals"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__approvals__approval_id___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__approvals__approval_id___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/approvals/approval_id",
      "text": "Get approval",
      "category": "Ticket Approvals",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "approval_id": {
          "type": "string",
          "text": "Approval ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "approval_id": {
          "type": "string",
          "text": "Approval ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of an approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/approvals/{approval_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/approvals/approval_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketApprovals_Getapproval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__approvals___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__approvals___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/approvals",
      "text": "Create approval",
      "category": "Ticket Approvals",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "approverIds": {
          "type": "array",
          "text": "IDs of users to whom the approval must be submitted",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "Subject of the approval",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "Status of the approval"
        },
        "description": {
          "type": "string",
          "text": "Description of the approval"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates an approval in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/approvals",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/approvals",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketApprovals_Createapproval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__approvals__approval_id___patch": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__approvals__approval_id___patch",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/approvals/approval_id",
      "text": "Update approval",
      "category": "Ticket Approvals",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "approval_id": {
          "type": "string",
          "text": "Approval ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "approverIds": {
          "type": "array",
          "text": "IDs of users to whom the approval must be submitted"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the approval"
        },
        "status": {
          "type": "string",
          "text": "Status of the approval"
        },
        "description": {
          "type": "string",
          "text": "Description of the approval"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "approval_id": {
          "type": "string",
          "text": "Approval ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing ticket approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/approvals/{approval_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/approvals/approval_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketApprovals_Updateapproval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__attachments___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__attachments___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/attachments",
      "text": "List ticket attachments",
      "category": "Ticket Attachments",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting."
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the attachments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of attachments to fetch. Range: 1-100"
        },
        "isPublic": {
          "type": "boolean",
          "text": "Key that returns if the attachment is public or not",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the attachments. Value allowed is creator, which returns the details of users who added the attachments. Max chars: 100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the files attached to a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketAttachments_Listticketattachments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__attachments___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__attachments___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/attachments",
      "text": "Create Ticket attachment",
      "category": "Ticket Attachments",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "isPublic": {
          "type": "boolean",
          "text": "Field that determines whether the attachment is public or private",
          "enum": [
            true,
            false
          ]
        },
        "file": {
          "type": "file",
          "text": "File to attach to the ticket"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API attaches a file to a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/attachments",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/attachments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketAttachments_CreateTicketattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__attachments__attachment_id___patch": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__attachments__attachment_id___patch",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/attachments/attachment_id",
      "text": "Update Ticket attachment",
      "category": "Ticket Attachments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "isPublic": {
          "type": "boolean",
          "text": "Whether to Show",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing attachment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketAttachments_UpdateTicketattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__attachments__attachment_id___delete": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__attachments__attachment_id___delete",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/attachments/attachment_id",
      "text": "Delete Ticket attachment",
      "category": "Ticket Attachments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "attachment_id": {
          "type": "string",
          "text": "Attachment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes an attachment from a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/attachments/{attachment_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/attachments/attachment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketAttachments_DeleteTicketattachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__ticketscount___get": {
      "provider_intent": "zohodesk__api__v1__ticketscount___get",
      "provider_alias_intent": "/api/v1/ticketscount",
      "text": "Get ticket count",
      "category": "Ticket Count",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which ticket count must be fetched"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to resolve the ticket"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact who raised the ticket"
        },
        "category": {
          "type": "string",
          "text": "Category of the ticket"
        },
        "customField1": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "customField2": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "customField3": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters tickets created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters tickets modified in a particular period of time"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the ticket count of your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/ticketsCount",
        "alias_endpoint": "/zohodesk/api/v1/ticketscount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketCount_Getticketcount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__ticketscountbyfieldvalues___get": {
      "provider_intent": "zohodesk__api__v1__ticketscountbyfieldvalues___get",
      "provider_alias_intent": "/api/v1/ticketscountbyfieldvalues",
      "text": "Get ticket count by field",
      "category": "Ticket Count",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which ticket count must be fetched"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of the agent assigned to resolve the ticket"
        },
        "contactId": {
          "type": "number",
          "text": "ID of the contact who raised the ticket"
        },
        "accountId": {
          "type": "number",
          "text": "ID of the account to which the ticket is mapped"
        },
        "category": {
          "type": "string",
          "text": "Category of the ticket"
        },
        "customField1": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "customField2": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "customField3": {
          "type": "string",
          "text": "User-defined field in the ticket"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters tickets created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters tickets modified in a particular period of time"
        },
        "field": {
          "type": "string",
          "text": "Field by which the ticket count must be filtered",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the ticket count of your help desk, filtered by a specific field",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/ticketsCountByFieldValues",
        "alias_endpoint": "/zohodesk/api/v1/ticketscountbyfieldvalues",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketCount_Getticketcountbyfield"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__addfollowers___post": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__addfollowers___post",
      "provider_alias_intent": "api/v1/tickets/ticket_id/addfollowers",
      "text": "Add ticket followers",
      "category": "Ticket Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "the list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds one or more users to the followers list of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/addFollowers",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/addfollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketFollowers#TicketFollowers_Addticketfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__removefollowers___post": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__removefollowers___post",
      "provider_alias_intent": "api/v1/tickets/ticket_id/removefollowers",
      "text": "Remove ticket followers",
      "category": "Ticket Followers",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "followerIds": {
          "type": "array",
          "text": "the list of ids to be added as follower",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes one or more users from the followers list of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/removeFollowers",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/removefollowers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketFollowers#TicketFollowers_Removeticketfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__followers___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__followers___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/followers",
      "text": "Get ticket followers",
      "category": "Ticket Followers",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the list of users following a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/followers",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/followers",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketFollowers_Getticketfollowers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tags__search___get": {
      "provider_intent": "zohodeskapi__v1__tags__search___get",
      "provider_alias_intent": "api/v1/tags/search",
      "text": "Search tags",
      "category": "Ticket Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tags must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tags to fetch. Range: 1-100"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tags must be fetched",
          "required": true
        },
        "searchVal": {
          "type": "string",
          "text": "Search keyword related to the tag"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API searches for tags added in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tags/search",
        "alias_endpoint": "/zohodeskapi/v1/tags/search",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Searchtags"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettags___get": {
      "provider_intent": "zohodeskapi__v1__tickettags___get",
      "provider_alias_intent": "api/v1/tickettags",
      "text": "List ticket tags",
      "category": "Ticket Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tags must be fetched",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts tags by a specific attribute: createdTime or count. The default sorting order is descending. Max chars: 100"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tags must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tags to fetch. Range: 1-100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the ticket tags added in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTags",
        "alias_endpoint": "/zohodeskapi/v1/tickettags",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Listtickettags"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tags__tag_id__tickets___get": {
      "provider_intent": "zohodeskapi__v1__tags__tag_id__tickets___get",
      "provider_alias_intent": "api/v1/tags/tag_id/tickets",
      "text": "List tickets by tag",
      "category": "Ticket Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to list. Range: 1-100"
        },
        "assignee": {
          "type": "string",
          "text": "User assigned to resolve the ticket. Values allowed are Unassigned or a valid assigneeId. You can pass multiple assigneeIds as comma-separated values. Max chars: 100"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the tickets were received. You can pass multiple values by separating them with commas. Max chars: 100"
        },
        "status": {
          "type": "string",
          "text": "Resolution status of the tickets. You can pass multiple values by separating them with commas. Max chars: 100"
        },
        "receivedInDays": {
          "type": "number",
          "text": "Number of days since the tickets were received. Values allowed are 15, 30, 90."
        },
        "priority": {
          "type": "string",
          "text": "Priority of the tickets. You can pass multiple values by separating them with commas. Max chars: 100"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the tickets by a specific attribute: dueDate, recentThread, createdTime, or ticketNumber. The default sorting order is ascending. A - prefix denotes a descending order of sorting. Max chars: 100"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the tickets. Values allowed are: contacts, products, departments, team, isRead and assignee. You can pass multiple values by separating them with commas. Max chars: 100"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists tickets containing the tag specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tags/{tag_id}/tickets",
        "alias_endpoint": "/zohodeskapi/v1/tags/tag_id/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Listticketsbytag"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__associatetag___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__associatetag___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/associatetag",
      "text": "Associate Tag",
      "category": "Ticket Tags",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "array",
          "text": "Names of the tags",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a single tag or multiple tags to a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/associateTag",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/associatetag",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_AssociateTag"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__dissociatetag___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__dissociatetag___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/dissociatetag",
      "text": "Dissociate Tag",
      "category": "Ticket Tags",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "array",
          "text": "Names of the tags",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes a single tag or multiple tags from a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/dissociateTag",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/dissociatetag",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_DissociateTag"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__tags___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__tags___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/tags",
      "text": "List tags in a ticket",
      "category": "Ticket Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists tags associated with a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/tags",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/tags",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Listtagsinaticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__recenttickettags___get": {
      "provider_intent": "zohodeskapi__v1__recenttickettags___get",
      "provider_alias_intent": "api/v1/recenttickettags",
      "text": "List recent tags",
      "category": "Ticket Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tags must be fetched",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the five most recent tags associated with tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/recentTicketTags",
        "alias_endpoint": "/zohodeskapi/v1/recenttickettags",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Listrecenttags"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__recenttickettags__tag_id___post": {
      "provider_intent": "zohodesk__api__v1__recenttickettags__tag_id___post",
      "provider_alias_intent": "/api/v1/recenttickettags/tag_id",
      "text": "Update recent tags",
      "category": "Ticket Tags",
      "method": "POST",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a tag to the list of recently viewed tags. tag_id is a mandatory parameter in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/recentTicketTags/{tag_id}",
        "alias_endpoint": "/zohodesk/api/v1/recenttickettags/tag_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags#TicketTags_Updaterecenttags"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tags__tag_id__replace___patch": {
      "provider_intent": "zohodesk__api__v1__tags__tag_id__replace___patch",
      "provider_alias_intent": "/api/v1/tags/tag_id/replace",
      "text": "Replace the specified tags",
      "category": "Ticket Tags",
      "method": "PATCH",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "id": {
          "type": "number",
          "text": "Tag ID of the Replacing Tag"
        }
      },
      "path": {
        "tag_id": {
          "type": "string",
          "text": "Tag ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API replaces a tag to the specified tag. tag_id is a mandatory parameter in the API request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tags/{tag_id}/replace",
        "alias_endpoint": "/zohodesk/api/v1/tags/tag_id/replace",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTags_Replacethespecifiedtags"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettemplates___post": {
      "provider_intent": "zohodeskapi__v1__tickettemplates___post",
      "provider_alias_intent": "api/v1/tickettemplates",
      "text": "Create ticket template",
      "category": "Ticket Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ticketTemplateName": {
          "type": "string",
          "text": "Name of the ticket template",
          "required": true
        },
        "showInCustomerPortal": {
          "type": "boolean",
          "text": "Key that specifies if the template must be displayed in the help center or not",
          "enum": [
            true,
            false
          ]
        },
        "ticketTemplateValues": {
          "type": "array",
          "text": "Values to auto-populate in the different fields in the template",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps create a ticket template in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTemplates",
        "alias_endpoint": "/zohodeskapi/v1/tickettemplates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTemplates_Createtickettemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettemplates__tickettemplates_id___get": {
      "provider_intent": "zohodeskapi__v1__tickettemplates__tickettemplates_id___get",
      "provider_alias_intent": "api/v1/tickettemplates/tickettemplates_id",
      "text": "Get ticket template",
      "category": "Ticket Templates",
      "method": "GET",
      "type": "API",
      "params": {
        "ticketTemplates_id": {
          "type": "string",
          "text": "Ticket Templates ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the template. Values allowed are: contacts, products, departments, team, and assignee. You can pass multiple values by separating them using commas in the API request"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticketTemplates_id": {
          "type": "string",
          "text": "Ticket Templates ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular ticket template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTemplates/{ticketTemplates_id}",
        "alias_endpoint": "/zohodeskapi/v1/tickettemplates/tickettemplates_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTemplates_Gettickettemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettemplates___get": {
      "provider_intent": "zohodeskapi__v1__tickettemplates___get",
      "provider_alias_intent": "api/v1/tickettemplates",
      "text": "List ticket templates",
      "category": "Ticket Templates",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the templates must be fetched"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which templates must be fetched"
        },
        "layoutId": {
          "type": "number",
          "text": "ID of the layout from which templates must be fetched for the given department ID"
        },
        "limit": {
          "type": "number",
          "text": "Number of templates to list. The default value is 10 and the maximum value supported is 100"
        },
        "showInCustomerPortal": {
          "type": "boolean",
          "text": "Visibility of the templates in the help center",
          "enum": [
            true,
            false
          ]
        },
        "searchStr": {
          "type": "string",
          "text": "String to search for ticket templates by ticket template name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of ticket templates, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTemplates",
        "alias_endpoint": "/zohodeskapi/v1/tickettemplates",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTemplates_Listtickettemplates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettemplates__tickettemplates_id___patch": {
      "provider_intent": "zohodeskapi__v1__tickettemplates__tickettemplates_id___patch",
      "provider_alias_intent": "api/v1/tickettemplates/tickettemplates_id",
      "text": "Update ticket template",
      "category": "Ticket Templates",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticketTemplates_id": {
          "type": "string",
          "text": "Ticket Templates ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ticketTemplateName": {
          "type": "string",
          "text": "Name of the ticket template"
        },
        "showInCustomerPortal": {
          "type": "boolean",
          "text": "Key that specifies if the template must be displayed in the help center or not",
          "enum": [
            true,
            false
          ]
        },
        "ticketTemplateValues": {
          "type": "array",
          "text": "Values to auto-populate in the different fields in the template"
        }
      },
      "path": {
        "ticketTemplates_id": {
          "type": "string",
          "text": "Ticket Templates ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the details of a particular ticket template",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTemplates/{ticketTemplates_id}",
        "alias_endpoint": "/zohodeskapi/v1/tickettemplates/tickettemplates_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTemplates_Updatetickettemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickettemplates__deletemany___post": {
      "provider_intent": "zohodeskapi__v1__tickettemplates__deletemany___post",
      "provider_alias_intent": "api/v1/tickettemplates/deletemany",
      "text": "Delete ticket template",
      "category": "Ticket Templates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array of Entity id to be deleted",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a ticket template from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketTemplates/deleteMany",
        "alias_endpoint": "/zohodeskapi/v1/tickettemplates/deletemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTemplates_Deletetickettemplate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentry/timeentry_id",
      "text": "Get Ticket Time Entry",
      "category": "Ticket TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a time entry recorded for a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_GetTicketTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk___api__v1__tickets__ticket_id__timeentry___get": {
      "provider_intent": "zohodesk___api__v1__tickets__ticket_id__timeentry___get",
      "provider_alias_intent": " /api/v1/tickets/ticket_id/timeentry",
      "text": "List Ticket Time Entries",
      "category": "Ticket TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module from which the time entries must be fetched"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch"
        },
        "orderBy": {
          "type": "String",
          "text": "Key that sorts the time entries in ascending or descending order, based on the executedTime attribute"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry"
        },
        "billStatus": {
          "type": "String",
          "text": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
        },
        "createdTimeRange": {
          "type": "string",
          "text": "Key that filters time entries created in a particular period of time"
        },
        "modifiedTimeRange": {
          "type": "string",
          "text": "Key that filters time entries whose details were modified in a particular period of time"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the time entries associated with a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint} /api/v1/tickets/{ticket_id}/timeEntry",
        "alias_endpoint": "/zohodesk /api/v1/tickets/ticket_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_ListTicketTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentry___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentry___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentry",
      "text": "Add Ticket Time Entry",
      "category": "Ticket TimeEntry",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "requestChargeType": {
          "type": "string",
          "text": "Type of request in the ticket"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user associated with the time entry"
        },
        "executedTime": {
          "type": "string",
          "text": "Time when work related to the time entry was started"
        },
        "hoursSpent": {
          "type": "number",
          "text": "Number of hours in the time entry"
        },
        "minutesSpent": {
          "type": "number",
          "text": "Number of minutes in the time entry"
        },
        "secondsSpent": {
          "type": "number",
          "text": "Number of seconds in the time entry"
        },
        "agentCostPerHour": {
          "type": "number",
          "text": "Per hour cost of an agent"
        },
        "additionalCost": {
          "type": "number",
          "text": "Additional cost incurred"
        },
        "fixedCost": {
          "type": "number",
          "text": "Fixed cost"
        },
        "description": {
          "type": "string",
          "text": "Description of the time entry"
        },
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the time entry"
        },
        "mode": {
          "type": "string",
          "text": "Mode configured in time tracking.   Supported values are Manual and Auto"
        },
        "isBillable": {
          "type": "boolean",
          "text": "Billing Preference",
          "enum": [
            true,
            false
          ]
        },
        "invoiceId": {
          "type": "number",
          "text": "ID of the invoice related to the time entry"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a time entry in your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntry",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentry",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_AddTicketTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___patch": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___patch",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentry/timeentry_id",
      "text": "Update Ticket Time Entry",
      "category": "Ticket TimeEntry",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "requestChargeType": {
          "type": "string",
          "text": "Type of request in the ticket"
        },
        "ownerId": {
          "type": "number",
          "text": "ID of the user associated with the time entry"
        },
        "executedTime": {
          "type": "string",
          "text": "Time when work related to the time entry was started"
        },
        "hoursSpent": {
          "type": "number",
          "text": "Number of hours in the time entry"
        },
        "minutesSpent": {
          "type": "number",
          "text": "Number of minutes in the time entry"
        },
        "secondsSpent": {
          "type": "number",
          "text": "Number of seconds in the time entry"
        },
        "agentCostPerHour": {
          "type": "number",
          "text": "Per hour cost of an agent"
        },
        "additionalCost": {
          "type": "number",
          "text": "Additional cost incurred"
        },
        "fixedCost": {
          "type": "number",
          "text": "Fixed cost"
        },
        "description": {
          "type": "string",
          "text": "Description of the time entry"
        },
        "cf": {
          "type": "object",
          "text": "User-defined fields related to the time entry"
        },
        "mode": {
          "type": "string",
          "text": "Mode configured in time tracking.   Supported values are Manual and Auto"
        },
        "isBillable": {
          "type": "boolean",
          "text": "Billing Preference",
          "enum": [
            true,
            false
          ]
        },
        "invoiceId": {
          "type": "number",
          "text": "ID of the invoice related to the time entry"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing ticket time entry",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_UpdateTicketTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___delete": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentry__timeentry_id___delete",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentry/timeentry_id",
      "text": "Delete Ticket Time Entry",
      "category": "Ticket TimeEntry",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "timeEntry_id": {
          "type": "string",
          "text": "Time Entry ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a time entry recorded for a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntry/{timeEntry_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentry/timeentry_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_DeleteTicketTimeEntry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentrysummation___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentrysummation___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentrysummation",
      "text": "Get summation of Ticket Time Entries",
      "category": "Ticket TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "module": {
          "type": "string",
          "text": "Module from which the time entries must be fetched"
        },
        "billStatus": {
          "type": "string",
          "text": "Key that filters time entries, based on their billing status: nonBillable , billable or billed"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the sum of time entries associated with a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntrySummation",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentrysummation",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_GetsummationofTicketTimeEntries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timeentrybybillingtype___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timeentrybybillingtype___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timeentrybybillingtype",
      "text": "Get Ticket Time Entries by Billing Type",
      "category": "Ticket TimeEntry",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "billingType": {
          "type": "String",
          "text": "Allowed values are FIXED_COST_FOR_TICKETS FIXED_COST_FOR_AGENTS SPECIFIC_COST_PER_AGENT SPECIFIC_COST_PER_PROFILE",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry. Allowed value is : owner"
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the time entries must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of time entries to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches time entries for a ticket created after recently modified time of the given billing type from your help desk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timeEntryByBillingType",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timeentrybybillingtype",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimeEntry_GetTicketTimeEntriesbyBillingType"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timer___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timer___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timer",
      "text": "Get Ticket Timer",
      "category": "Ticket Timer",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the time elapsed in the ticket timer, along with the current state",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timer",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimer_GetTicketTimer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__timer___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__timer___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/timer",
      "text": "Performs Ticket Timer actions",
      "category": "Ticket Timer",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "action": {
          "type": "string",
          "text": "Action of the timer. Supported actions are START, STOP, PAUSE, and RESUME",
          "required": true
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API performs timer-related actions, such as START, STOP, PAUSE and RESUME ",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/timer",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/timer",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketTimer_PerformsTicketTimeractions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id",
      "text": "Get a ticket",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Key that fetches secondary information related to the ticket"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a single ticket from your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Getaticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets___get": {
      "provider_intent": "zohodesk__api__v1__tickets___get",
      "provider_alias_intent": "/api/v1/tickets",
      "text": "List all tickets",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "departmentIds": {
          "type": "number",
          "text": "Departments from which the tickets need to be queried"
        },
        "teamIds": {
          "type": "String",
          "text": "Key that filters tickets by Teams"
        },
        "viewId": {
          "type": "number",
          "text": "ID of the view to apply while fetching the resources"
        },
        "assignee": {
          "type": "string",
          "text": "assignee - Key that filters tickets by assignee"
        },
        "channel": {
          "type": "string",
          "text": "Filter by channel through which the tickets originated"
        },
        "status": {
          "type": "string",
          "text": "Filter by resolution status of the ticket"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by a specific attribute: responseDueDate or customerResponseTime or createdTime"
        },
        "receivedInDays": {
          "type": "number",
          "text": "Fetches recent tickets, based on customer response time. Values allowed are 15, 30 , 90"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the tickets"
        },
        "fields": {
          "type": "string",
          "text": "Key that returns the values of mentioned fields (both pre-defined and custom) in your portal"
        },
        "priority": {
          "type": "string",
          "text": "Key that filters tickets by priority"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of tickets, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets",
        "alias_endpoint": "/zohodesk/api/v1/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Listalltickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__archivedtickets___get": {
      "provider_intent": "zohodesk__api__v1__tickets__archivedtickets___get",
      "provider_alias_intent": "/api/v1/tickets/archivedtickets",
      "text": "Get Archived Ticket List",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tickets must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tickets must be fetched"
        },
        "viewType": {
          "type": "number",
          "text": "View Type - Supported Values 1 for Compact view , 2 for Classic view ,4 for Table View"
        },
        "include": {
          "type": "string",
          "text": "Key that returns additional information related to a ticket"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API gets the archived tickets list in given department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/archivedTickets",
        "alias_endpoint": "/zohodesk/api/v1/tickets/archivedtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_GetArchivedTicketList"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__associatedtickets___get": {
      "provider_intent": "zohodesk__api__v1__associatedtickets___get",
      "provider_alias_intent": "/api/v1/associatedtickets",
      "text": "List all associated tickets",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number, starting from which the tickets must be listed"
        },
        "limit": {
          "type": "number",
          "text": "Number of tickets to fetch"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the tickets must be fetched"
        },
        "assignee": {
          "type": "string",
          "text": "assignee - Key that filters tickets by assignee"
        },
        "status": {
          "type": "string",
          "text": "Filter by resolution status of the ticket"
        },
        "follower": {
          "type": "string",
          "text": "Filter by followers of the ticket. Values allowed : a valid agentId"
        },
        "commenter": {
          "type": "string",
          "text": "Filter by commenters of the ticket"
        },
        "sharedDepartmentId": {
          "type": "number",
          "text": "Fetches only the tickets shared from departmentId to sharedDepartmentId"
        },
        "isShared": {
          "type": "boolean",
          "text": "Filter all shared tickets actually belonging to departmentId if isShared is true",
          "enum": [
            true,
            false
          ]
        },
        "receivedInDays": {
          "type": "number",
          "text": "Fetches recent tickets, based on customer response time"
        },
        "include": {
          "type": "string",
          "text": "Key that returns additional information related to a ticket"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of tickets that are associated to you from your help desk, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/associatedTickets",
        "alias_endpoint": "/zohodesk/api/v1/associatedtickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Listallassociatedtickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets___post": {
      "provider_intent": "zohodesk__api__v1__tickets___post",
      "provider_alias_intent": "/api/v1/tickets",
      "text": "Create a ticket",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subject": {
          "type": "string",
          "text": "Subject of the ticket",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the ticket belongs",
          "required": true
        },
        "contactId": {
          "type": "object",
          "text": "ID of the contact who raised the ticket"
        },
        "contact": {
          "type": "string",
          "text": "Details of the contact who raised the ticket"
        },
        "productId": {
          "type": "object",
          "text": "ID of the product to which the ticket is mapped"
        },
        "uploads": {
          "type": "array",
          "text": "File attachments in the ticket"
        },
        "email": {
          "type": "string",
          "text": "Email ID in the ticket"
        },
        "phone": {
          "type": "string",
          "text": "Phone number in the ticket"
        },
        "description": {
          "type": "string",
          "text": "Description in the ticket"
        },
        "status": {
          "type": "string",
          "text": "Status of the ticket"
        },
        "assigneeId": {
          "type": "number",
          "text": "ID of agent to whom the ticket is assigned"
        },
        "category": {
          "type": "string",
          "text": "Category of the ticket"
        },
        "subCategory": {
          "type": "string",
          "text": "Subcategory of the ticket"
        },
        "resolution": {
          "type": "string",
          "text": "Resolution notes recorded in the ticket"
        },
        "dueDate": {
          "type": "number",
          "text": "Due date for resolving the ticket"
        },
        "priority": {
          "type": "string",
          "text": "Priority of the ticket"
        },
        "language": {
          "type": "string",
          "text": "Language preference to set for the ticket"
        },
        "responseDueDate": {
          "type": "string",
          "text": "Date on or before which a response must be sent for the ticket"
        },
        "channel": {
          "type": "string",
          "text": "Channel through which the ticket originated"
        },
        "classification": {
          "type": "string",
          "text": "Type of ticket. Values supported are Problem, Request, Question, and Others"
        },
        "cf": {
          "type": "object",
          "text": "Custom fields in the ticket"
        },
        "webUrl": {
          "type": "string",
          "text": "URL to access the resource"
        },
        "teamId": {
          "type": "number",
          "text": "ID of the team assigned to resolve the ticket"
        },
        "secondaryContacts": {
          "type": "array",
          "text": "Secondary contacts, such as CC'ed users, associated with the ticket"
        },
        "entitySkills": {
          "type": "array",
          "text": "Comma-separated array of skill IDs to be mapped with a ticket"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a ticket in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets",
        "alias_endpoint": "/zohodesk/api/v1/tickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Createaticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id___patch": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id___patch",
      "provider_alias_intent": "/api/v1/tickets/ticket_id",
      "text": "Update a ticket",
      "category": "Tickets",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "disableClosureNotification": {
          "type": "boolean",
          "text": "Key that enables or disables sending notifications to the corresponding contact when a ticket is closed",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Updateaticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__movetotrash___post": {
      "provider_intent": "zohodesk__api__v1__tickets__movetotrash___post",
      "provider_alias_intent": "/api/v1/tickets/movetotrash",
      "text": "Move Tickets to trash",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ticketIds": {
          "type": "array",
          "text": "IDs of the tickets to move to the Recycle Bin",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API moves tickets to the Recycle Bin",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/moveToTrash",
        "alias_endpoint": "/zohodesk/api/v1/tickets/movetotrash",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_MoveTicketstotrash"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__deletespam___post": {
      "provider_intent": "zohodesk__api__v1__tickets__deletespam___post",
      "provider_alias_intent": "/api/v1/tickets/deletespam",
      "text": "Delete spam tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ticketIds": {
          "type": "array",
          "text": "IDs of the spam tickets",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes the given spam tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/deleteSpam",
        "alias_endpoint": "/zohodesk/api/v1/tickets/deletespam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Deletespamtickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__merge___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__merge___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/merge",
      "text": "Merge two tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of the tickets to merge",
          "required": true
        },
        "source": {
          "type": "object",
          "text": "JSON object of the tickets to merge"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API merges two different tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/merge",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/merge",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Mergetwotickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__move___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__move___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/move",
      "text": "Move ticket",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which you want to move the ticket"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps move a ticket from one department to another",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/move",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/move",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Moveticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__split___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__threads__thread_id__split___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/threads/thread_id/split",
      "text": "Split tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API splits an incoming ticket thread into a new ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/threads/{thread_id}/split",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/threads/thread_id/split",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Splittickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__updatemany___post": {
      "provider_intent": "zohodesk__api__v1__tickets__updatemany___post",
      "provider_alias_intent": "/api/v1/tickets/updatemany",
      "text": "Bulk update tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "Array containing the IDs of the entities to update",
          "required": true
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the field to update",
          "required": true
        },
        "fieldValue": {
          "type": "string",
          "text": "Value in the field"
        },
        "isCustomField": {
          "type": "boolean",
          "text": "Key that denotes if the field is a user-defined field or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates multiple tickets at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/updateMany",
        "alias_endpoint": "/zohodesk/api/v1/tickets/updatemany",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets#Tickets_Bulkupdatetickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__closetickets___post": {
      "provider_intent": "zohodesk__api__v1__closetickets___post",
      "provider_alias_intent": "/api/v1/closetickets",
      "text": "Closed many tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ids": {
          "type": "array",
          "text": "IDs of tickets to close",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API closes multiple tickets at once",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/closeTickets",
        "alias_endpoint": "/zohodesk/api/v1/closetickets",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Closedmanytickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__markasread___post": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__markasread___post",
      "provider_alias_intent": "api/v1/tickets/ticket_id/markasread",
      "text": "Mark as read",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks a ticket as read by the user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/markAsRead",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/markasread",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Markasread"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__markasunread___post": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__markasunread___post",
      "provider_alias_intent": "api/v1/tickets/ticket_id/markasunread",
      "text": "Mark as unread",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks a ticket as unread by the user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/markAsUnRead",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/markasunread",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Markasunread"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__markspam___post": {
      "provider_intent": "zohodesk__api__v1__tickets__markspam___post",
      "provider_alias_intent": "/api/v1/tickets/markspam",
      "text": "Mark ticket as spam",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "isSpam": {
          "type": "boolean",
          "text": "Key that marks or unmarks a single ticket or multiple tickets as spam",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "ids": {
          "type": "array",
          "text": "ID(s) of the ticket(s) that must be marked or unmarked as spam",
          "required": true
        },
        "contactSpam": {
          "type": "boolean",
          "text": "Key that marks or unmarks the associated contact as spam",
          "enum": [
            true,
            false
          ]
        },
        "handleExistingTickets": {
          "type": "boolean",
          "text": "Key that marks or unmarks the other tickets from the contact(s) as spam",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API marks tickets as spam",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/markSpam",
        "alias_endpoint": "/zohodesk/api/v1/tickets/markspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets#Tickets_Markticketasspam"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__ticketqueueview__count___get": {
      "provider_intent": "zohodeskapi__v1__ticketqueueview__count___get",
      "provider_alias_intent": "api/v1/ticketqueueview/count",
      "text": "List all ticketQueueView count",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "viewId": {
          "type": "number",
          "text": "ID of the view whose ticket count must be fetched",
          "required": true
        },
        "departmentId": {
          "type": "string",
          "text": "ID of the department from which the ticket count must be fetched",
          "required": true
        },
        "agentId": {
          "type": "number",
          "text": "ID of the agent assigned to resolve the tickets"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of tickets in a particular view",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/ticketQueueView/count",
        "alias_endpoint": "/zohodeskapi/v1/ticketqueueview/count",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets#Tickets_ListallticketQueueViewcount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__agentsticketscount___get": {
      "provider_intent": "zohodeskapi__v1__agentsticketscount___get",
      "provider_alias_intent": "api/v1/agentsticketscount",
      "text": "List all agentsTicketsCount",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "string",
          "text": "ID of the department from which the ticket count must be fetched"
        },
        "agentId": {
          "type": "number",
          "text": "IDs of the agents whose ticket count must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API returns the number of tickets assigned to multiple agents",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/agentsTicketsCount",
        "alias_endpoint": "/zohodeskapi/v1/agentsticketscount",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_ListallagentsTicketsCount"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__history___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__history___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/history",
      "text": "Get ticket history",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "From index for fetching the records"
        },
        "limit": {
          "type": "number",
          "text": "No. of records to fetch"
        },
        "operationName": {
          "type": "string",
          "text": "Filter to apply, based on the record type"
        },
        "agentId": {
          "type": "number",
          "text": "Filter that returns the ticket-related activities performed by a particular agent"
        },
        "fieldName": {
          "type": "string",
          "text": "Filter that returns the history of a particular field"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details of all actions — called events — performed on a ticket and in the sub-tabs on the ticket detail page",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/History",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/history",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Gettickethistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__resolution___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__resolution___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/resolution",
      "text": "Get ticket resolution",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details related to the resolution of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/resolution",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/resolution",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Getticketresolution"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__resolutionhistory___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__resolutionhistory___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/resolutionhistory",
      "text": "Get resolution history",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which records must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of records to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the resolution history of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/resolutionHistory",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/resolutionhistory",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Getresolutionhistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__resolution___patch": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__resolution___patch",
      "provider_alias_intent": "api/v1/tickets/ticket_id/resolution",
      "text": "Update ticket resolution",
      "category": "Tickets",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content to add in the field"
        },
        "isNotifyContact": {
          "type": "boolean",
          "text": "Key that specifies if the contact associated must be notified about the resolution",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the resolution field of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/resolution",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/resolution",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Updateticketresolution"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__resolution___delete": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__resolution___delete",
      "provider_alias_intent": "api/v1/tickets/ticket_id/resolution",
      "text": "Delete ticket resolution",
      "category": "Tickets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a resolution added to a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/resolution",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/resolution",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Deleteticketresolution"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__value__metrics___get": {
      "provider_intent": "zohodesk__api__v1__tickets__value__metrics___get",
      "provider_alias_intent": "/api/v1/tickets/value/metrics",
      "text": "Get ticket metrics",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches details related to the response and resolution times of a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/([0-9]+)/metrics",
        "alias_endpoint": "/zohodesk/api/v1/tickets/value/metrics",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Getticketmetrics"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__emptyspam___post": {
      "provider_intent": "zohodesk__api__v1__tickets__emptyspam___post",
      "provider_alias_intent": "/api/v1/tickets/emptyspam",
      "text": "Empty spam tickets",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the tickets belong",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes all spam tickets",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/emptySpam",
        "alias_endpoint": "/zohodesk/api/v1/tickets/emptyspam",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Emptyspamtickets"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__executeskillbasedassignment___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__executeskillbasedassignment___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/executeskillbasedassignment",
      "text": "Execute Skill Based Assignment",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API assigns tickets to agents according to their designated skills and routing preferences",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/executeSkillbasedAssignment",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/executeskillbasedassignment",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_ExecuteSkillBasedAssignment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__recalculateskills___post": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__recalculateskills___post",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/recalculateskills",
      "text": "Recalculate Skills",
      "category": "Tickets",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes existing skills and reapplies the required ones based on the ticket's current circumstances",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/recalculateSkills",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/recalculateskills",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_RecalculateSkills"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__tickets__ticket_id__articlesuggestion___get": {
      "provider_intent": "zohodesk__api__v1__tickets__ticket_id__articlesuggestion___get",
      "provider_alias_intent": "/api/v1/tickets/ticket_id/articlesuggestion",
      "text": "Suggest relevant articles for ticket",
      "category": "Tickets",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the articles must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of articles to list"
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department to which the help article belongs"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API suggests help articles that could be relevant to resolving a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/tickets/{ticket_id}/articleSuggestion",
        "alias_endpoint": "/zohodesk/api/v1/tickets/ticket_id/articlesuggestion",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Tickets_Suggestrelevantarticlesforticket"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.articles.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments___post": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments___post",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments",
      "text": "Create ticket comment",
      "category": "Tickets Comments",
      "method": "POST",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "isPublic": {
          "type": "boolean",
          "text": "Key that returns if a comment is public or not. The value of this key can be set only at the time of making a comment.",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "List of file attachments in the comment. For more information on attachments, refer to the Uploads section of this document."
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a comment to a ticket",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Createticketcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___patch": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___patch",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments/comment_id",
      "text": "Update ticket comment",
      "category": "Tickets Comments",
      "method": "PATCH",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of the comment. To retrieve or set user mentions"
        },
        "isPublic": {
          "type": "boolean",
          "text": "Key that returns if a comment is public or not. The value of this key can be set only at the time of making a comment.",
          "enum": [
            true,
            false
          ]
        },
        "attachmentIds": {
          "type": "array",
          "text": "List of file attachments in the comment. For more information on attachments, refer to the Uploads section of this document."
        },
        "contentType": {
          "type": "string",
          "text": "Used to denote the content-type which maybe html or plainText. The default type is html"
        }
      },
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API modifies an existing comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Updateticketcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___delete": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___delete",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments/comment_id",
      "text": "Delete ticket comment",
      "category": "Tickets Comments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Deleteticketcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments__comment_id___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments/comment_id",
      "text": "Get ticket comment",
      "category": "Tickets Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. The allowed values are mentions and plainText. In the API request, you can pass mention, plainText, or both by using commas to separate them"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a ticket comment from your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments/{comment_id}",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments/comment_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Getticketcomment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments",
      "text": "List all ticket comments",
      "category": "Tickets Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the comments must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of comments to fetch",
          "required": true
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the commentedTime attribute. The default sorting order is ascending. A - prefix denotes descending order of sorting"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. The allowed values are mentions and plainText. In the API request, you can pass mention, plainText, or both by using commas to separate them"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of comments recorded on a ticket, based on the limit specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Listallticketcomments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__tickets__ticket_id__comments__comment_id__history___get": {
      "provider_intent": "zohodeskapi__v1__tickets__ticket_id__comments__comment_id__history___get",
      "provider_alias_intent": "api/v1/tickets/ticket_id/comments/comment_id/history",
      "text": "Get a ticket comment history",
      "category": "Tickets Comments",
      "method": "GET",
      "type": "API",
      "params": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the comment activities must be fetched"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the comments. The allowed values are mentions and plainText. In the API request, you can pass mention, plainText, or both by using commas to separate them"
        },
        "limit": {
          "type": "number",
          "text": "Number of comment activities to fetch",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ticket_id": {
          "type": "string",
          "text": "Ticket ID",
          "required": true
        },
        "comment_id": {
          "type": "string",
          "text": "Comment ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the history of comments recorded on a ticket, including instances of adding and editing the comments",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/tickets/{ticket_id}/comments/{comment_id}/history",
        "alias_endpoint": "/zohodeskapi/v1/tickets/ticket_id/comments/comment_id/history",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#TicketsComments_Getaticketcommenthistory"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.tickets.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__timetracksettings___post": {
      "provider_intent": "zohodesk__api__v1__timetracksettings___post",
      "provider_alias_intent": "/api/v1/timetracksettings",
      "text": "Create TimeTrackSettings",
      "category": "Timetracking",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "isTimeTracking": {
          "type": "boolean",
          "text": "Time tracking refers to the process of recording the time agents take to resolve tickets",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "depId": {
          "type": "number",
          "text": "ID of the department in which time tracking must be enabled or disabled",
          "required": true
        },
        "isBillable": {
          "type": "boolean",
          "text": "Key that returns if the time tracked is billable or not",
          "enum": [
            true,
            false
          ]
        },
        "billingType": {
          "type": "string",
          "text": "Type of billing configured"
        },
        "fixedCost": {
          "type": "number",
          "text": "Cost fixed for either billing category - by ticket or by agent"
        },
        "agents": {
          "type": "array",
          "text": "List of agents in the department"
        },
        "profiles": {
          "type": "array",
          "text": "List of user profiles defined in the department"
        },
        "timerAction": {
          "type": "string",
          "text": "Action that the active timers in the department must perform"
        },
        "activityPreference": {
          "type": "array",
          "text": "Activity preference(s)"
        },
        "ticketPreference": {
          "type": "array",
          "text": "Ticket preference(s)"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a TimeTracking configuration to your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/timeTrackSettings",
        "alias_endpoint": "/zohodesk/api/v1/timetracksettings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Timetracking_CreateTimeTrackSettings"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__timetracksettings___put": {
      "provider_intent": "zohodesk__api__v1__timetracksettings___put",
      "provider_alias_intent": "/api/v1/timetracksettings",
      "text": "Update TimeTrackSettings",
      "category": "Timetracking",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "isTimeTracking": {
          "type": "boolean",
          "text": "Time tracking refers to the process of recording the time agents take to resolve tickets",
          "enum": [
            true,
            false
          ]
        },
        "depId": {
          "type": "number",
          "text": "ID of the department in which time tracking must be enabled or disabled"
        },
        "isBillable": {
          "type": "boolean",
          "text": "Key that returns if the time tracked is billable or not",
          "enum": [
            true,
            false
          ]
        },
        "billingType": {
          "type": "string",
          "text": "Type of billing configured"
        },
        "fixedCost": {
          "type": "number",
          "text": "Cost fixed for either billing category - by ticket or by agent"
        },
        "agents": {
          "type": "array",
          "text": "List of agents in the department"
        },
        "profiles": {
          "type": "array",
          "text": "List of user profiles defined in the department"
        },
        "timerAction": {
          "type": "string",
          "text": "Action that the active timers in the department must perform"
        },
        "activityPreference": {
          "type": "array",
          "text": "Activity preference(s)"
        },
        "ticketPreference": {
          "type": "array",
          "text": "Ticket preference(s)"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates an existing TimeTracking configuration",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/timeTrackSettings",
        "alias_endpoint": "/zohodesk/api/v1/timetracksettings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Timetracking_UpdateTimeTrackSettings"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__timetracksettings___get": {
      "provider_intent": "zohodesk__api__v1__timetracksettings___get",
      "provider_alias_intent": "/api/v1/timetracksettings",
      "text": "Get TimeTrack Settings",
      "category": "Timetracking",
      "method": "GET",
      "type": "API",
      "params": {
        "depId": {
          "type": "number",
          "text": "ID of the department",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of the TimeTrack Settings configured in your helpdesk",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/timeTrackSettings",
        "alias_endpoint": "/zohodesk/api/v1/timetracksettings",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Timetracking_GetTimeTrackSettings"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__timetrackhistory___get": {
      "provider_intent": "zohodesk__api__v1__timetrackhistory___get",
      "provider_alias_intent": "/api/v1/timetrackhistory",
      "text": "List history details of billing TimeTrack Settings",
      "category": "Timetracking",
      "method": "GET",
      "type": "API",
      "params": {
        "depId": {
          "type": "number",
          "text": "ID of the department from which the history must be fetched",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the events must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of events to be fetched"
        },
        "include": {
          "type": "string",
          "text": "Secondary information related to the time entry"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the history of changes made to the billing preferences in time tracking settings",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/timeTrackHistory",
        "alias_endpoint": "/zohodesk/api/v1/timetrackhistory",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Timetracking_ListhistorydetailsofbillingTimeTrackSettings"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__uploads___post": {
      "provider_intent": "zohodesk__api__v1__uploads___post",
      "provider_alias_intent": "/api/v1/uploads",
      "text": "Upload file",
      "category": "Uploads",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "file": {
          "type": "file",
          "text": "File to attach"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API uploads a file",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/uploads",
        "alias_endpoint": "/zohodesk/api/v1/uploads",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Uploads_Uploadfile"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users___get": {
      "provider_intent": "zohodesk__api__v1__users___get",
      "provider_alias_intent": "/api/v1/users",
      "text": "List help center users",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "number",
          "text": "Index number starting from which the users must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of users to list"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular user"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of users by a particular attribute: -(email or modifiedTime)"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the users to list"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the users must be fetched"
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the user"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of help center users, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users",
        "alias_endpoint": "/zohodesk/api/v1/users",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Listhelpcenterusers"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.search.READ , Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id___get": {
      "provider_intent": "zohodesk__api__v1__users__user_id___get",
      "provider_alias_intent": "/api/v1/users/user_id",
      "text": "Get details of user",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the user"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the user must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the details of a particular help center user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Getdetailsofuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id___patch": {
      "provider_intent": "zohodesk__api__v1__users__user_id___patch",
      "provider_alias_intent": "/api/v1/users/user_id",
      "text": "Update details of user",
      "category": "Users",
      "method": "PATCH",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the user must be updated"
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps update the details of a particular help center user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Updatedetailsofuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__users__user_id__anonymize___post": {
      "provider_intent": "zohodeskapi__v1__users__user_id__anonymize___post",
      "provider_alias_intent": "api/v1/users/user_id/anonymize",
      "text": "Anonymize user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "anonymizedName": {
          "type": "string",
          "text": "Display name of the user in tickets and community topics after anonymization"
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API permanently deletes all identifying information about a user from your help center",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/users/{user_id}/anonymize",
        "alias_endpoint": "/zohodeskapi/v1/users/user_id/anonymize",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Anonymizeuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__groups___get": {
      "provider_intent": "zohodesk__api__v1__users__user_id__groups___get",
      "provider_alias_intent": "/api/v1/users/user_id/groups",
      "text": "List user groups",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the groups must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of groups to list"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular user"
        },
        "sortBy": {
          "type": "string",
          "text": "Key that sorts the list of user groups by a particular attribute: -(addedTime)"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the groups must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of user groups in a help center, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/groups",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/groups",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Listusergroups"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__groups__associate___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__groups__associate___post",
      "provider_alias_intent": "/api/v1/users/user_id/groups/associate",
      "text": "Add user to groups",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the groups must be validated"
        },
        "groups": {
          "type": "array",
          "text": "IDs of the groups to which the user must be added",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds a user to the groups specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/groups/associate",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/groups/associate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Addusertogroups"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__groups__dissociate___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__groups__dissociate___post",
      "provider_alias_intent": "/api/v1/users/user_id/groups/dissociate",
      "text": "Remove user from groups",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the groups must be removed"
        },
        "groupIds": {
          "type": "array",
          "text": "IDs of the groups from which the user must be removed",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes a user from the groups specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/groups/dissociate",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/groups/dissociate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Removeuserfromgroups"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__labels___get": {
      "provider_intent": "zohodesk__api__v1__users__user_id__labels___get",
      "provider_alias_intent": "/api/v1/users/user_id/labels",
      "text": "List labels of user",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        },
        "isPrimary": {
          "type": "boolean",
          "text": "Key that filters the primary label assigned to the user",
          "enum": [
            true,
            false
          ]
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the labels must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of labels to list"
        },
        "sortBy": {
          "type": "String",
          "text": "Key that sorts the list of labels by a particular attribute: -(assignedTime)"
        },
        "searchBy": {
          "type": "string",
          "text": "Search keyword to use for finding a particular user"
        },
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the labels must be fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists a particular number of labels associated with a user, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/labels",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/labels",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Listlabelsofuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__labels__assign___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__labels__assign___post",
      "provider_alias_intent": "/api/v1/users/user_id/labels/assign",
      "text": "Assign labels to user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the labels must be validated"
        },
        "labels": {
          "type": "array",
          "text": "List containing the details of the labels to assign",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API assigns the labels you specify to a particular user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/labels/assign",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/labels/assign",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Assignlabelstouser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__labels__remove___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__labels__remove___post",
      "provider_alias_intent": "/api/v1/users/user_id/labels/remove",
      "text": "Remove labels from user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "helpCenterId": {
          "type": "number",
          "text": "ID of the help center from which the labels must be removed"
        },
        "labelIds": {
          "type": "array",
          "text": "List containing the IDs of the labels to remove",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes the labels you specify from a particular user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/labels/remove",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/labels/remove",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_Removelabelsfromuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__value__badges___get": {
      "provider_intent": "zohodesk__api__v1__users__value__badges___get",
      "provider_alias_intent": "/api/v1/users/value/badges",
      "text": "List User badges",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number starting from which the badges must be fetched"
        },
        "limit": {
          "type": "number",
          "text": "Number of badges to list"
        },
        "type": {
          "type": "string",
          "text": "Type of badge: default or custom"
        },
        "sortBy": {
          "type": "string",
          "text": "Sort by the createdTime attribute"
        },
        "startTime": {
          "type": "string",
          "text": "Start time should be in GMT time zone"
        },
        "endTime": {
          "type": "string",
          "text": "End time should be in GMT time zone"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists user's default and custom badges, based on the limit defined",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/([0-9]+)/badges",
        "alias_endpoint": "/zohodesk/api/v1/users/value/badges",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_ListUserbadges"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__badges__associate___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__badges__associate___post",
      "provider_alias_intent": "/api/v1/users/user_id/badges/associate",
      "text": "Add Badges to a user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "badgeIds": {
          "type": "array",
          "text": "IDs of the badges to which the user must be associated",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API adds specified badges to user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/badges/associate",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/badges/associate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_AddBadgestoauser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__users__user_id__badges__dissociate___post": {
      "provider_intent": "zohodesk__api__v1__users__user_id__badges__dissociate___post",
      "provider_alias_intent": "/api/v1/users/user_id/badges/dissociate",
      "text": "Remove Badges from user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "badgeIds": {
          "type": "array",
          "text": "IDs of the badges from which the user must be dissociated",
          "required": true
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API removes specified badges from the users",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/users/{user_id}/badges/dissociate",
        "alias_endpoint": "/zohodesk/api/v1/users/user_id/badges/dissociate",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Users_RemoveBadgesfromuser"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id/validationrules/validationrule_id",
      "text": "Get Layout Validation Rule",
      "category": "ValidationRules",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Additional information related to rules. Values allowed are: creator, modifier"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches a validation rule configured for your layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/validationrules/validationrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules#ValidationRules_GetLayoutValidationRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__validationrules___get": {
      "provider_intent": "zohodesk__api__v1__validationrules___get",
      "provider_alias_intent": "/api/v1/validationrules",
      "text": "Get Layout Validation Rules for department or layout",
      "category": "ValidationRules",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "Get the rules of the department"
        },
        "layoutId": {
          "type": "number",
          "text": "Get the rules of the layout"
        },
        "module": {
          "type": "string",
          "text": "Name of the module for which you want to fetch the layout rules. Allowed values are tickets, contacts, accounts, tasks, timeEntry, contracts, products, calls, events"
        },
        "activeLayouts": {
          "type": "boolean",
          "text": "Get the rules for active layouts",
          "enum": [
            true,
            false
          ]
        },
        "activeRules": {
          "type": "boolean",
          "text": "Get the rules that are active in the layout",
          "enum": [
            true,
            false
          ]
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the rules must be fetched. Default is 0"
        },
        "limit": {
          "type": "number",
          "text": "Number of rules to be fetched. Default is 50. Range: 1-50",
          "required": true
        },
        "searchString": {
          "type": "string",
          "text": "Get the rules that have this search term"
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "Get the rules that can be executed in help centre",
          "enum": [
            true,
            false
          ]
        },
        "include": {
          "type": "string",
          "text": "Additional information related to the rules. Values allowed are: creator and modifier"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches all the validation rules configured for your department/layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/validationRules",
        "alias_endpoint": "/zohodesk/api/v1/validationrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules_GetLayoutValidationRulesfordepartmentorlayout"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__validationrules___post": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__validationrules___post",
      "provider_alias_intent": "/api/v1/layouts/layout_id/validationrules",
      "text": "Create Layout Validation Rule",
      "category": "ValidationRules",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "include": {
          "type": "string",
          "text": "Additional information related to rules. Values allowed are: creator, modifier"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the primary field to be used for creating the validation rule",
          "required": true
        },
        "displayLabel": {
          "type": "string",
          "text": "Display Label of the primary field to be used for creating the rule"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the validation rule: ACTIVE or DEACTIVE"
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "To execute the rule in help centre or not: true or false",
          "enum": [
            true,
            false
          ]
        },
        "fieldConditions": {
          "type": "array",
          "text": "Conditions in the validation rule",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API creates a validation rule for a field in a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/layout_id/validationRules",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/validationrules",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules_CreateLayoutValidationRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___patch": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___patch",
      "provider_alias_intent": "/api/v1/layouts/layout_id/validationrules/validationrule_id",
      "text": "Update Layout Validation Rule",
      "category": "ValidationRules",
      "method": "PATCH",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "include": {
          "type": "string",
          "text": "Additional information related to rules. Values allowed are: creator, modifier"
        },
        "fieldName": {
          "type": "string",
          "text": "Name of the primary field to be used for creating the validation rule"
        },
        "displayLabel": {
          "type": "string",
          "text": "Display Label of the primary field to be used for creating the rule"
        },
        "status": {
          "type": "string",
          "text": "Activation status of the validation rule: ACTIVE or DEACTIVE"
        },
        "executeInHelpCentre": {
          "type": "boolean",
          "text": "To execute the rule in help centre or not: true or false",
          "enum": [
            true,
            false
          ]
        },
        "fieldConditions": {
          "type": "array",
          "text": "Conditions in the validation rule"
        }
      },
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the details of an existing validation rule in a particular layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/validationrules/validationrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules_UpdateLayoutValidationRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___delete": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__validationrules__validationrule_id___delete",
      "provider_alias_intent": "/api/v1/layouts/layout_id/validationrules/validationrule_id",
      "text": "Delete Validation Rule",
      "category": "ValidationRules",
      "method": "DELETE",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "validationRule_id": {
          "type": "string",
          "text": "Validation Rule ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API deletes a validation rule created for a field from a layout",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/validationRules/{validationRule_id}",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/validationrules/validationrule_id",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules_DeleteValidationRule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__layouts__layout_id__validationrules__criteriafields___get": {
      "provider_intent": "zohodesk__api__v1__layouts__layout_id__validationrules__criteriafields___get",
      "provider_alias_intent": "/api/v1/layouts/layout_id/validationrules/criteriafields",
      "text": "List Criteria Fields For Layout Validation Rules",
      "category": "ValidationRules",
      "method": "GET",
      "type": "API",
      "params": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "Category for getting the field criteria for primary or secondary fields",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "layout_id": {
          "type": "string",
          "text": "Layout ID",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the fields that can be used in criteria of a specified module in validation rules",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/layouts/{layout_id}/validationRules/criteriaFields",
        "alias_endpoint": "/zohodesk/api/v1/layouts/layout_id/validationrules/criteriafields",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#ValidationRules#ValidationRules_ListCriteriaFieldsForLayoutValidationRules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__views___get": {
      "provider_intent": "zohodesk__api__v1__views___get",
      "provider_alias_intent": "/api/v1/views",
      "text": "List Views",
      "category": "Views",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Module Name (for which the view configured and need to be fetched)",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "Allowed values are : Valid Department Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the different views configured for a specific module or for all modules in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/views",
        "alias_endpoint": "/zohodesk/api/v1/views",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_ListViews"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__views__view_id__star___post": {
      "provider_intent": "zohodesk__api__v1__views__view_id__star___post",
      "provider_alias_intent": "/api/v1/views/view_id/star",
      "text": "Add Star View",
      "category": "Views",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the view(s) is (are) configured"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API stars a view, enabling quick access to the view",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/views/{view_id}/star",
        "alias_endpoint": "/zohodesk/api/v1/views/view_id/star",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_AddStarView"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__starredviews__view_id__unstar___post": {
      "provider_intent": "zohodesk__api__v1__starredviews__view_id__unstar___post",
      "provider_alias_intent": "/api/v1/starredviews/view_id/unstar",
      "text": "Remove Star View",
      "category": "Views",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "Allowed values are : Valid Department Id"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API unstars a view, disabling quick access to the view",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/starredViews/{view_id}/unstar",
        "alias_endpoint": "/zohodesk/api/v1/starredviews/view_id/unstar",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_RemoveStarView"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__starredviews___get": {
      "provider_intent": "zohodesk__api__v1__starredviews___get",
      "provider_alias_intent": "/api/v1/starredviews",
      "text": "List Starred Views",
      "category": "Views",
      "method": "GET",
      "type": "API",
      "params": {
        "module": {
          "type": "string",
          "text": "Module associated with the view",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the view(s) is (are) configured"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the starred views in a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/starredViews",
        "alias_endpoint": "/zohodesk/api/v1/starredviews",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_ListStarredViews"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__starredviews__order___put": {
      "provider_intent": "zohodesk__api__v1__starredviews__order___put",
      "provider_alias_intent": "/api/v1/starredviews/order",
      "text": "Starred Views Reorder",
      "category": "Views",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "module": {
          "type": "string",
          "text": "Module Name (for which the view configured and need to be fetched)",
          "required": true
        },
        "departmentId": {
          "type": "number",
          "text": "Allowed values are : Valid Department Id"
        },
        "starredViewIds": {
          "type": "array",
          "text": "IDs of the starred views",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API helps reorder the starred views in a module",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/starredViews/order",
        "alias_endpoint": "/zohodesk/api/v1/starredviews/order",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_StarredViewsReorder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__lastaccessedview___get": {
      "provider_intent": "zohodesk__api__v1__lastaccessedview___get",
      "provider_alias_intent": "/api/v1/lastaccessedview",
      "text": "Get Last Accessed View",
      "category": "Views",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the view(s) is (are) configured"
        },
        "module": {
          "type": "string",
          "text": "Module associated with the view",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the view last accessed by the user in the module and department specified in the request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/lastAccessedView",
        "alias_endpoint": "/zohodesk/api/v1/lastaccessedview",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_GetLastAccessedView"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__lastaccessedview__value___put": {
      "provider_intent": "zohodesk__api__v1__lastaccessedview__value___put",
      "provider_alias_intent": "/api/v1/lastaccessedview/value",
      "text": "Update Last Accessed View",
      "category": "Views",
      "method": "PUT",
      "type": "API",
      "params": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department in which the view(s) is (are) configured"
        }
      },
      "path": {
        "value": {
          "type": "string",
          "text": "Possible Values : ([0-9]+)",
          "required": true
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the view last accessed by the user in the module and department specified in the request",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/lastAccessedView/([0-9]+)",
        "alias_endpoint": "/zohodesk/api/v1/lastaccessedview/value",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#Views_UpdateLastAccessedView"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agentavailabilityconfig___post": {
      "provider_intent": "zohodesk__api__v1__agentavailabilityconfig___post",
      "provider_alias_intent": "/api/v1/agentavailabilityconfig",
      "text": "Update Agent Availability Configuration",
      "category": "agentAvailability",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "treatIdleAgentsAsOffline": {
          "type": "string",
          "text": "Key that specifies if idle agents should be marked as offline after a particular duration"
        },
        "agentIdleTime": {
          "type": "number",
          "text": "Duration after which idle agents should be marked as offline"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API updates the agent availability setting configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agentAvailabilityConfig",
        "alias_endpoint": "/zohodesk/api/v1/agentavailabilityconfig",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#agentAvailability_UpdateAgentAvailabilityConfiguration"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.UPDATE , Desk.basic.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodesk__api__v1__agentavailabilityconfig___get": {
      "provider_intent": "zohodesk__api__v1__agentavailabilityconfig___get",
      "provider_alias_intent": "/api/v1/agentavailabilityconfig",
      "text": "Get Agent Availability Configuration",
      "category": "agentAvailability",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API fetches the agent availability setting configured in your help desk portal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/api/v1/agentAvailabilityConfig",
        "alias_endpoint": "/zohodesk/api/v1/agentavailabilityconfig",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#agentAvailability#agentAvailability_GetAgentAvailabilityConfiguration"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__agentavailability___get": {
      "provider_intent": "zohodeskapi__v1__agentavailability___get",
      "provider_alias_intent": "api/v1/agentavailability",
      "text": "Get Current Availability",
      "category": "agentAvailability",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the availability details should be fetched",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Key that includes additional, channel-specific information"
        },
        "limit": {
          "type": "number",
          "text": "Number of agents to list",
          "required": true
        },
        "from": {
          "type": "number",
          "text": "Index number, starting from which the agents must be fetched",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the current availability of agents in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/agentAvailability",
        "alias_endpoint": "/zohodeskapi/v1/agentavailability",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#agentAvailability#agentAvailability_GetCurrentAvailability"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__onlineagents___get": {
      "provider_intent": "zohodeskapi__v1__onlineagents___get",
      "provider_alias_intent": "api/v1/onlineagents",
      "text": "Get Online Agents",
      "category": "agentAvailability",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the availability details should be fetched",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Key that includes additional, channel-specific information"
        },
        "limit": {
          "type": "number",
          "text": "Number of agents to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the agents who are currently online in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/onlineAgents",
        "alias_endpoint": "/zohodeskapi/v1/onlineagents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#agentAvailability#agentAvailability_GetOnlineAgents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohodeskapi__v1__offlineagents___get": {
      "provider_intent": "zohodeskapi__v1__offlineagents___get",
      "provider_alias_intent": "api/v1/offlineagents",
      "text": "Get Offline Agents",
      "category": "agentAvailability",
      "method": "GET",
      "type": "API",
      "params": {
        "departmentId": {
          "type": "number",
          "text": "ID of the department from which the availability details should be fetched",
          "required": true
        },
        "include": {
          "type": "string",
          "text": "Key that includes additional, channel-specific information"
        },
        "limit": {
          "type": "number",
          "text": "Number of agents to list",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v1",
        "auth": [],
        "description": "This API lists the agents who are currently offline in a particular department",
        "rate_limit": [],
        "api_endpoint": "{endpoint}api/v1/offlineAgents",
        "alias_endpoint": "/zohodeskapi/v1/offlineagents",
        "api_ref": "https://desk.zoho.com/DeskAPIDocument#agentAvailability_GetOfflineAgents"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "scope": "Desk.settings.READ , Desk.basic.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}