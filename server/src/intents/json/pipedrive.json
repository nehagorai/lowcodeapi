{
  "routes": {
    "pipedrive__v1__activities___delete": {
      "provider_intent": "pipedrive__v1__activities___delete",
      "provider_alias_intent": "/v1/activities",
      "text": "Delete multiple activities in bulk ðŸš§",
      "category": "Activities",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated IDs of activities that will be deleted",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple activities as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities",
        "alias_endpoint": "/pipedrive/v1/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities___get": {
      "provider_intent": "pipedrive__v1__activities___get",
      "provider_alias_intent": "/v1/activities",
      "text": "Get all activities assigned to a particular user ðŸš§",
      "category": "Activities",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user whose activities will be fetched"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use (will narrow down results if used together with `user_id` parameter)"
        },
        "type": {
          "type": "string",
          "text": "The type of the activity can be one type or multiple types separated by a comma"
        },
        "limit": {
          "type": "integer",
          "text": "For pagination the limit of entries to be returned"
        },
        "start": {
          "type": "integer",
          "text": "For pagination the position that represents the first result for the page"
        },
        "start_date": {
          "type": "string",
          "text": "Use the activity due date where you wish to begin fetching activities from"
        },
        "end_date": {
          "type": "string",
          "text": "Use the activity due date where you wish to stop fetching activities from"
        },
        "done": {
          "type": "number",
          "text": "Whether the activity is done or not"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all activities assigned to a particular user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities",
        "alias_endpoint": "/pipedrive/v1/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities___post": {
      "provider_intent": "pipedrive__v1__activities___post",
      "provider_alias_intent": "/v1/activities",
      "text": "Add an activity ðŸš§",
      "category": "Activities",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new activity.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities",
        "alias_endpoint": "/pipedrive/v1/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities__collection___get": {
      "provider_intent": "pipedrive__v1__activities__collection___get",
      "provider_alias_intent": "/v1/activities/collection",
      "text": "Get all activities (BETA) ðŸš§",
      "category": "Activities",
      "method": "GET",
      "type": "API",
      "params": {
        "cursor": {
          "type": "string",
          "text": "For pagination the marker (an opaque string value) representing the first item on the next page"
        },
        "limit": {
          "type": "integer",
          "text": "For pagination the limit of entries to be returned"
        },
        "since": {
          "type": "string",
          "text": "The time boundary that points to the start of the range of data"
        },
        "until": {
          "type": "string",
          "text": "The time boundary that points to the end of the range of data"
        },
        "user_id": {
          "type": "integer",
          "text": "The ID of the user whose activities will be fetched"
        },
        "done": {
          "type": "number",
          "text": "Whether the activity is done or not"
        },
        "type": {
          "type": "string",
          "text": "The type of the activity can be one type or multiple types separated by a comma"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all activities.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities/collection",
        "alias_endpoint": "/pipedrive/v1/activities/collection",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities__id___delete": {
      "provider_intent": "pipedrive__v1__activities__id___delete",
      "provider_alias_intent": "/v1/activities/id",
      "text": "Delete an activity ðŸš§",
      "category": "Activities",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the activity\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks an activity as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities/{id}",
        "alias_endpoint": "/pipedrive/v1/activities/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities__id___get": {
      "provider_intent": "pipedrive__v1__activities__id___get",
      "provider_alias_intent": "/v1/activities/id",
      "text": "Get details of an activity ðŸš§",
      "category": "Activities",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the activity\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of a specific activity.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities/{id}",
        "alias_endpoint": "/pipedrive/v1/activities/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activities__id___put": {
      "provider_intent": "pipedrive__v1__activities__id___put",
      "provider_alias_intent": "/v1/activities/id",
      "text": "Update an activity ðŸš§",
      "category": "Activities",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the activity\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an activity.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activities/{id}",
        "alias_endpoint": "/pipedrive/v1/activities/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activityfields___get": {
      "provider_intent": "pipedrive__v1__activityfields___get",
      "provider_alias_intent": "/v1/activityfields",
      "text": "Get all activity fields ðŸš§",
      "category": "ActivityFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all activity fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityFields",
        "alias_endpoint": "/pipedrive/v1/activityfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activitytypes___delete": {
      "provider_intent": "pipedrive__v1__activitytypes___delete",
      "provider_alias_intent": "/v1/activitytypes",
      "text": "Delete multiple activity types in bulk ðŸš§",
      "category": "ActivityTypes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated activity type IDs",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple activity types as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityTypes",
        "alias_endpoint": "/pipedrive/v1/activitytypes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activitytypes___get": {
      "provider_intent": "pipedrive__v1__activitytypes___get",
      "provider_alias_intent": "/v1/activitytypes",
      "text": "Get all activity types ðŸš§",
      "category": "ActivityTypes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all activity types.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityTypes",
        "alias_endpoint": "/pipedrive/v1/activitytypes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activitytypes___post": {
      "provider_intent": "pipedrive__v1__activitytypes___post",
      "provider_alias_intent": "/v1/activitytypes",
      "text": "Add new activity type ðŸš§",
      "category": "ActivityTypes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the activity type",
          "required": true
        },
        "icon_key": {
          "type": "string",
          "text": "Icon graphic to use for representing this activity type",
          "required": true
        },
        "color": {
          "type": "string",
          "text": "A designated color for the activity type in 6-character HEX format (e"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new activity type.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityTypes",
        "alias_endpoint": "/pipedrive/v1/activitytypes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activitytypes__id___delete": {
      "provider_intent": "pipedrive__v1__activitytypes__id___delete",
      "provider_alias_intent": "/v1/activitytypes/id",
      "text": "Delete an activity type ðŸš§",
      "category": "ActivityTypes",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the activity type\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks an activity type as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityTypes/{id}",
        "alias_endpoint": "/pipedrive/v1/activitytypes/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__activitytypes__id___put": {
      "provider_intent": "pipedrive__v1__activitytypes__id___put",
      "provider_alias_intent": "/v1/activitytypes/id",
      "text": "Update an activity type ðŸš§",
      "category": "ActivityTypes",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the activity type"
        },
        "icon_key": {
          "type": "string",
          "text": "Icon graphic to use for representing this activity type"
        },
        "color": {
          "type": "string",
          "text": "A designated color for the activity type in 6-character HEX format (e"
        },
        "order_nr": {
          "type": "integer",
          "text": "An order number for this activity type"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the activity type\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an activity type.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/activityTypes/{id}",
        "alias_endpoint": "/pipedrive/v1/activitytypes/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__billing__subscriptions__addons___get": {
      "provider_intent": "pipedrive__v1__billing__subscriptions__addons___get",
      "provider_alias_intent": "/v1/billing/subscriptions/addons",
      "text": "Get all add-ons for a single company ðŸš§",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the add-ons for a single company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/billing/subscriptions/addons",
        "alias_endpoint": "/pipedrive/v1/billing/subscriptions/addons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__calllogs___post": {
      "provider_intent": "pipedrive__v1__calllogs___post",
      "provider_alias_intent": "/v1/calllogs",
      "text": "Add a call log ðŸš§",
      "category": "CallLogs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the owner of the call log"
        },
        "activity_id": {
          "type": "integer",
          "text": "If specified this activity will be converted into a call log with the information provided"
        },
        "subject": {
          "type": "string",
          "text": "The name of the activity this call is attached to"
        },
        "duration": {
          "type": "string",
          "text": "The duration of the call in seconds"
        },
        "outcome": {
          "type": "string",
          "text": "Describes the outcome of the call",
          "required": true
        },
        "from_phone_number": {
          "type": "string",
          "text": "The number that made the call"
        },
        "to_phone_number": {
          "type": "string",
          "text": "The number called",
          "required": true
        },
        "start_time": {
          "type": "string",
          "text": "The date and time of the start of the call in UTC",
          "required": true
        },
        "end_time": {
          "type": "string",
          "text": "The date and time of the end of the call in UTC",
          "required": true
        },
        "person_id": {
          "type": "integer",
          "text": "The ID of the person this call is associated with"
        },
        "org_id": {
          "type": "integer",
          "text": "The ID of the organization this call is associated with"
        },
        "deal_id": {
          "type": "integer",
          "text": "The ID of the deal this call is associated with"
        },
        "note": {
          "type": "string",
          "text": "The note for the call log in HTML format"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new call log.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/callLogs",
        "alias_endpoint": "/pipedrive/v1/calllogs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__calllogs___get": {
      "provider_intent": "pipedrive__v1__calllogs___get",
      "provider_alias_intent": "/v1/calllogs",
      "text": "Get all call logs assigned to a particular user ðŸš§",
      "category": "CallLogs",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "For pagination the limit of entries to be returned"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all call logs assigned to a particular user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/callLogs",
        "alias_endpoint": "/pipedrive/v1/calllogs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__calllogs__id___delete": {
      "provider_intent": "pipedrive__v1__calllogs__id___delete",
      "provider_alias_intent": "/v1/calllogs/id",
      "text": "Delete a call log ðŸš§",
      "category": "CallLogs",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID received when you create the call log\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a call log.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/callLogs/{id}",
        "alias_endpoint": "/pipedrive/v1/calllogs/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__calllogs__id___get": {
      "provider_intent": "pipedrive__v1__calllogs__id___get",
      "provider_alias_intent": "/v1/calllogs/id",
      "text": "Get details of a call log ðŸš§",
      "category": "CallLogs",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID received when you create the call log\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details of a specific call log.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/callLogs/{id}",
        "alias_endpoint": "/pipedrive/v1/calllogs/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__calllogs__id__recordings___post": {
      "provider_intent": "pipedrive__v1__calllogs__id__recordings___post",
      "provider_alias_intent": "/v1/calllogs/id/recordings",
      "text": "Attach an audio file to the call log ðŸš§",
      "category": "CallLogs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID received when you create the call log\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds an audio recording to the call log.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/callLogs/{id}/recordings",
        "alias_endpoint": "/pipedrive/v1/calllogs/id/recordings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__channels___post": {
      "provider_intent": "pipedrive__v1__channels___post",
      "provider_alias_intent": "/v1/channels",
      "text": "Add a channel ðŸš§",
      "category": "Channels",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the channel",
          "required": true
        },
        "provider_channel_id": {
          "type": "string",
          "text": "The channel ID",
          "required": true
        },
        "avatar_url": {
          "type": "string",
          "text": "The URL for an icon that represents your channel"
        },
        "template_support": {
          "type": "boolean",
          "text": "If true enables templates logic on UI",
          "enum": [
            true,
            false
          ]
        },
        "provider_type": {
          "type": "string",
          "text": "It controls the icons (like the icon next to the conversation)"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new messaging channel only admins are able to register new channels.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/channels",
        "alias_endpoint": "/pipedrive/v1/channels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__channels__id___delete": {
      "provider_intent": "pipedrive__v1__channels__id___delete",
      "provider_alias_intent": "/v1/channels/id",
      "text": "Delete a channel ðŸš§",
      "category": "Channels",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the channel provided by the integration\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes an existing messengerâ€™s channel and all related entities (conversations and messages).",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/channels/{id}",
        "alias_endpoint": "/pipedrive/v1/channels/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__channels__messages__receive___post": {
      "provider_intent": "pipedrive__v1__channels__messages__receive___post",
      "provider_alias_intent": "/v1/channels/messages/receive",
      "text": "Receives an incoming message ðŸš§",
      "category": "Channels",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "id": {
          "type": "string",
          "text": "The ID of the message",
          "required": true
        },
        "channel_id": {
          "type": "string",
          "text": "The channel ID as in the provider",
          "required": true
        },
        "sender_id": {
          "type": "string",
          "text": "The ID of the provider's user that sent the message",
          "required": true
        },
        "conversation_id": {
          "type": "string",
          "text": "The ID of the conversation",
          "required": true
        },
        "message": {
          "type": "string",
          "text": "The body of the message",
          "required": true
        },
        "status": {
          "type": "string",
          "text": "The status of the message",
          "required": true
        },
        "created_at": {
          "type": "string",
          "text": "The date and time when the message was created in the provider in UTC",
          "required": true
        },
        "reply_by": {
          "type": "string",
          "text": "The date and time when the message can no longer receive a reply in UTC"
        },
        "conversation_link": {
          "type": "string",
          "text": "A URL that can open the conversation in the provider's side"
        },
        "attachments": {
          "type": "array",
          "text": "The list of attachments available in the message"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a message to a conversation.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/channels/messages/receive",
        "alias_endpoint": "/pipedrive/v1/channels/messages/receive",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__channels__channel-id__conversations__conversation-id___delete": {
      "provider_intent": "pipedrive__v1__channels__channel-id__conversations__conversation-id___delete",
      "provider_alias_intent": "/v1/channels/channel-id/conversations/conversation-id",
      "text": "Delete a conversation ðŸš§",
      "category": "Channels",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"channel-id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the channel provided by the integration\",\n    \"required\": true\n  },\n  \"conversation-id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the conversation provided by the integration\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes an existing conversation.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/channels/{channel-id}/conversations/{conversation-id}",
        "alias_endpoint": "/pipedrive/v1/channels/channel-id/conversations/conversation-id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__currencies___get": {
      "provider_intent": "pipedrive__v1__currencies___get",
      "provider_alias_intent": "/v1/currencies",
      "text": "Get all supported currencies ðŸš§",
      "category": "Currencies",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "Optional search term that is searched for from currency's name and/or code"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all supported currencies in given account which should be used when saving monetary values with other objects.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/currencies",
        "alias_endpoint": "/pipedrive/v1/currencies",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields___get": {
      "provider_intent": "pipedrive__v1__dealfields___get",
      "provider_alias_intent": "/v1/dealfields",
      "text": "Get all deal fields ðŸš§",
      "category": "DealFields",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all deal fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields",
        "alias_endpoint": "/pipedrive/v1/dealfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields___post": {
      "provider_intent": "pipedrive__v1__dealfields___post",
      "provider_alias_intent": "/v1/dealfields",
      "text": "Add a new deal field ðŸš§",
      "category": "DealFields",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new deal field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields",
        "alias_endpoint": "/pipedrive/v1/dealfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields___delete": {
      "provider_intent": "pipedrive__v1__dealfields___delete",
      "provider_alias_intent": "/v1/dealfields",
      "text": "Delete multiple deal fields in bulk ðŸš§",
      "category": "DealFields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated field IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple deal fields as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields",
        "alias_endpoint": "/pipedrive/v1/dealfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields__id___get": {
      "provider_intent": "pipedrive__v1__dealfields__id___get",
      "provider_alias_intent": "/v1/dealfields/id",
      "text": "Get one deal field ðŸš§",
      "category": "DealFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific deal field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields/{id}",
        "alias_endpoint": "/pipedrive/v1/dealfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields__id___delete": {
      "provider_intent": "pipedrive__v1__dealfields__id___delete",
      "provider_alias_intent": "/v1/dealfields/id",
      "text": "Delete a deal field ðŸš§",
      "category": "DealFields",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a field as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields/{id}",
        "alias_endpoint": "/pipedrive/v1/dealfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__dealfields__id___put": {
      "provider_intent": "pipedrive__v1__dealfields__id___put",
      "provider_alias_intent": "/v1/dealfields/id",
      "text": "Update a deal field ðŸš§",
      "category": "DealFields",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the field"
        },
        "options": {
          "type": "string",
          "text": "When `field_type` is either set or enum possible options must be supplied as a JSON-encoded sequential array of objects"
        },
        "add_visible_flag": {
          "type": "boolean",
          "text": "Whether the field is available in 'add new' modal or not (both in web and mobile app)",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a deal field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/dealFields/{id}",
        "alias_endpoint": "/pipedrive/v1/dealfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals___get": {
      "provider_intent": "pipedrive__v1__deals___get",
      "provider_alias_intent": "/v1/deals",
      "text": "Get all deals ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given user will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use"
        },
        "stage_id": {
          "type": "integer",
          "text": "If supplied only deals within the given stage will be returned"
        },
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        },
        "owned_by_you": {
          "type": "number",
          "text": "When supplied only deals owned by you are returned"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all deals.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals",
        "alias_endpoint": "/pipedrive/v1/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals___post": {
      "provider_intent": "pipedrive__v1__deals___post",
      "provider_alias_intent": "/v1/deals",
      "text": "Add a deal ðŸš§",
      "category": "Deals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals",
        "alias_endpoint": "/pipedrive/v1/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals___delete": {
      "provider_intent": "pipedrive__v1__deals___delete",
      "provider_alias_intent": "/v1/deals",
      "text": "Delete multiple deals in bulk ðŸš§",
      "category": "Deals",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated IDs that will be deleted",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple deals as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals",
        "alias_endpoint": "/pipedrive/v1/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__collection___get": {
      "provider_intent": "pipedrive__v1__deals__collection___get",
      "provider_alias_intent": "/v1/deals/collection",
      "text": "Get all deals (BETA) ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "cursor": {
          "type": "string",
          "text": "For pagination the marker (an opaque string value) representing the first item on the next page"
        },
        "limit": {
          "type": "integer",
          "text": "For pagination the limit of entries to be returned"
        },
        "since": {
          "type": "string",
          "text": "The time boundary that points to the start of the range of data"
        },
        "until": {
          "type": "string",
          "text": "The time boundary that points to the end of the range of data"
        },
        "user_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given user will be returned"
        },
        "stage_id": {
          "type": "integer",
          "text": "If supplied only deals within the given stage will be returned"
        },
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all deals.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/collection",
        "alias_endpoint": "/pipedrive/v1/deals/collection",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__search___get": {
      "provider_intent": "pipedrive__v1__deals__search___get",
      "provider_alias_intent": "/v1/deals/search",
      "text": "Search deals ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "person_id": {
          "type": "integer",
          "text": "Will filter deals by the provided person ID"
        },
        "organization_id": {
          "type": "integer",
          "text": "Will filter deals by the provided organization ID"
        },
        "status": {
          "type": "string",
          "text": "Will filter deals by the provided specific status"
        },
        "include_fields": {
          "type": "string",
          "text": "Supports including optional fields in the results which are not provided by default"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Searches all deals by title notes and/or custom fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/search",
        "alias_endpoint": "/pipedrive/v1/deals/search",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__summary___get": {
      "provider_intent": "pipedrive__v1__deals__summary___get",
      "provider_alias_intent": "/v1/deals/summary",
      "text": "Get deals summary ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        },
        "filter_id": {
          "type": "integer",
          "text": "<code>user_id</code> will not be considered"
        },
        "user_id": {
          "type": "integer",
          "text": "Only deals matching the given user will be returned"
        },
        "stage_id": {
          "type": "integer",
          "text": "Only deals within the given stage will be returned"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns a summary of all the deals.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/summary",
        "alias_endpoint": "/pipedrive/v1/deals/summary",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__timeline___get": {
      "provider_intent": "pipedrive__v1__deals__timeline___get",
      "provider_alias_intent": "/v1/deals/timeline",
      "text": "Get deals timeline ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start_date": {
          "type": "string",
          "text": "The date when the first interval starts",
          "required": true
        },
        "interval": {
          "type": "string",
          "text": "The type of the interval<table><tr><th>Value</th><th>Description</th></tr><tr><td>`day`</td><td>Day</td></tr><tr><td>`week`</td><td>A full week (7 days) starting from `start_date`</td></tr><tr><td>`month`</td><td>A full month (depending on the number of days in given month) starting from `start_date`</td></tr><tr><td>`quarter`</td><td>A full quarter (3 months) starting from `start_date`</td></tr></table>",
          "required": true
        },
        "amount": {
          "type": "integer",
          "text": "The number of given intervals starting from `start_date` to fetch",
          "required": true
        },
        "field_key": {
          "type": "string",
          "text": "The date field key which deals will be retrieved from",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given user will be returned"
        },
        "pipeline_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given pipeline will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given filter will be returned"
        },
        "exclude_deals": {
          "type": "number",
          "text": "Whether to exclude deals list (1) or not (0)"
        },
        "totals_convert_currency": {
          "type": "string",
          "text": "The 3-letter currency code of any of the supported currencies"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns open and won deals grouped by a defined interval of time set in a date-type dealField (`field_key`) â€” e.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/timeline",
        "alias_endpoint": "/pipedrive/v1/deals/timeline",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id___delete": {
      "provider_intent": "pipedrive__v1__deals__id___delete",
      "provider_alias_intent": "/v1/deals/id",
      "text": "Delete a deal ðŸš§",
      "category": "Deals",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a deal as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}",
        "alias_endpoint": "/pipedrive/v1/deals/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id___get": {
      "provider_intent": "pipedrive__v1__deals__id___get",
      "provider_alias_intent": "/v1/deals/id",
      "text": "Get details of a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of a specific deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}",
        "alias_endpoint": "/pipedrive/v1/deals/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id___put": {
      "provider_intent": "pipedrive__v1__deals__id___put",
      "provider_alias_intent": "/v1/deals/id",
      "text": "Update a deal ðŸš§",
      "category": "Deals",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}",
        "alias_endpoint": "/pipedrive/v1/deals/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__activities___get": {
      "provider_intent": "pipedrive__v1__deals__id__activities___get",
      "provider_alias_intent": "/v1/deals/id/activities",
      "text": "List activities associated with a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "done": {
          "type": "number",
          "text": "Whether the activity is done or not"
        },
        "exclude": {
          "type": "string",
          "text": "A comma-separated string of activity IDs to exclude from result"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists activities associated with a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/activities",
        "alias_endpoint": "/pipedrive/v1/deals/id/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__duplicate___post": {
      "provider_intent": "pipedrive__v1__deals__id__duplicate___post",
      "provider_alias_intent": "/v1/deals/id/duplicate",
      "text": "Duplicate deal ðŸš§",
      "category": "Deals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Duplicates a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/duplicate",
        "alias_endpoint": "/pipedrive/v1/deals/id/duplicate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__files___get": {
      "provider_intent": "pipedrive__v1__deals__id__files___get",
      "provider_alias_intent": "/v1/deals/id/files",
      "text": "List files attached to a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists files associated with a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/files",
        "alias_endpoint": "/pipedrive/v1/deals/id/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__flow___get": {
      "provider_intent": "pipedrive__v1__deals__id__flow___get",
      "provider_alias_intent": "/v1/deals/id/flow",
      "text": "List updates about a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "all_changes": {
          "type": "string",
          "text": "Whether to show custom field updates or not"
        },
        "items": {
          "type": "string",
          "text": "A comma-separated string for filtering out item specific updates"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists updates about a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/flow",
        "alias_endpoint": "/pipedrive/v1/deals/id/flow",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__followers___get": {
      "provider_intent": "pipedrive__v1__deals__id__followers___get",
      "provider_alias_intent": "/v1/deals/id/followers",
      "text": "List followers of a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the followers of a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/deals/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__followers___post": {
      "provider_intent": "pipedrive__v1__deals__id__followers___post",
      "provider_alias_intent": "/v1/deals/id/followers",
      "text": "Add a follower to a deal ðŸš§",
      "category": "Deals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a follower to a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/deals/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__followers__follower_id___delete": {
      "provider_intent": "pipedrive__v1__deals__id__followers__follower_id___delete",
      "provider_alias_intent": "/v1/deals/id/followers/follower_id",
      "text": "Delete a follower from a deal ðŸš§",
      "category": "Deals",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  },\n  \"follower_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the follower\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a follower from a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/followers/{follower_id}",
        "alias_endpoint": "/pipedrive/v1/deals/id/followers/follower_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__mailmessages___get": {
      "provider_intent": "pipedrive__v1__deals__id__mailmessages___get",
      "provider_alias_intent": "/v1/deals/id/mailmessages",
      "text": "List mail messages associated with a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists mail messages associated with a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/mailMessages",
        "alias_endpoint": "/pipedrive/v1/deals/id/mailmessages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__merge___put": {
      "provider_intent": "pipedrive__v1__deals__id__merge___put",
      "provider_alias_intent": "/v1/deals/id/merge",
      "text": "Merge two deals ðŸš§",
      "category": "Deals",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "merge_with_id": {
          "type": "integer",
          "text": "The ID of the deal that the deal will be merged with",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Merges a deal with another deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/merge",
        "alias_endpoint": "/pipedrive/v1/deals/id/merge",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__participants___get": {
      "provider_intent": "pipedrive__v1__deals__id__participants___get",
      "provider_alias_intent": "/v1/deals/id/participants",
      "text": "List participants of a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the participants associated with a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/participants",
        "alias_endpoint": "/pipedrive/v1/deals/id/participants",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__participants___post": {
      "provider_intent": "pipedrive__v1__deals__id__participants___post",
      "provider_alias_intent": "/v1/deals/id/participants",
      "text": "Add a participant to a deal ðŸš§",
      "category": "Deals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "person_id": {
          "type": "integer",
          "text": "The ID of the person",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a participant to a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/participants",
        "alias_endpoint": "/pipedrive/v1/deals/id/participants",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__participants__deal_participant_id___delete": {
      "provider_intent": "pipedrive__v1__deals__id__participants__deal_participant_id___delete",
      "provider_alias_intent": "/v1/deals/id/participants/deal_participant_id",
      "text": "Delete a participant from a deal ðŸš§",
      "category": "Deals",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  },\n  \"deal_participant_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the participant of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a participant from a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/participants/{deal_participant_id}",
        "alias_endpoint": "/pipedrive/v1/deals/id/participants/deal_participant_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__permittedusers___get": {
      "provider_intent": "pipedrive__v1__deals__id__permittedusers___get",
      "provider_alias_intent": "/v1/deals/id/permittedusers",
      "text": "List permitted users ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the users permitted to access a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/permittedUsers",
        "alias_endpoint": "/pipedrive/v1/deals/id/permittedusers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__persons___get": {
      "provider_intent": "pipedrive__v1__deals__id__persons___get",
      "provider_alias_intent": "/v1/deals/id/persons",
      "text": "List all persons associated with a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists all persons associated with a deal regardless of whether the person is the primary contact of the deal or added as a participant.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/persons",
        "alias_endpoint": "/pipedrive/v1/deals/id/persons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__products___get": {
      "provider_intent": "pipedrive__v1__deals__id__products___get",
      "provider_alias_intent": "/v1/deals/id/products",
      "text": "List products attached to a deal ðŸš§",
      "category": "Deals",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "include_product_data": {
          "type": "number",
          "text": "Whether to fetch product data along with each attached product (1) or not (0 default)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists products attached to a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/products",
        "alias_endpoint": "/pipedrive/v1/deals/id/products",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__products___post": {
      "provider_intent": "pipedrive__v1__deals__id__products___post",
      "provider_alias_intent": "/v1/deals/id/products",
      "text": "Add a product to a deal ðŸš§",
      "category": "Deals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a product to a deal creating a new item called a deal-product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/products",
        "alias_endpoint": "/pipedrive/v1/deals/id/products",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__products__product_attachment_id___put": {
      "provider_intent": "pipedrive__v1__deals__id__products__product_attachment_id___put",
      "provider_alias_intent": "/v1/deals/id/products/product_attachment_id",
      "text": "Update the product attached to a deal ðŸš§",
      "category": "Deals",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "product_id": {
          "type": "integer",
          "text": "The ID of the product to use",
          "required": true
        },
        "item_price": {
          "type": "number",
          "text": "The price at which this product will be added to the deal"
        },
        "quantity": {
          "type": "integer",
          "text": "How many items of this product will be added to the deal"
        },
        "discount_percentage": {
          "type": "number",
          "text": "The discount %"
        },
        "duration": {
          "type": "number",
          "text": "The duration of the product"
        },
        "duration_unit": {
          "type": "string",
          "text": "The unit duration of the product"
        },
        "product_variation_id": {
          "type": "integer",
          "text": "The ID of the product variation to use"
        },
        "comments": {
          "type": "string",
          "text": "A textual comment associated with this product-deal attachment"
        },
        "tax": {
          "type": "number",
          "text": "The tax percentage"
        },
        "enabled_flag": {
          "type": "boolean",
          "text": "Whether the product is enabled for a deal or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  },\n  \"product_attachment_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal-product (the ID of the product attached to the deal)\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the details of the product that has been attached to a deal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/products/{product_attachment_id}",
        "alias_endpoint": "/pipedrive/v1/deals/id/products/product_attachment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__deals__id__products__product_attachment_id___delete": {
      "provider_intent": "pipedrive__v1__deals__id__products__product_attachment_id___delete",
      "provider_alias_intent": "/v1/deals/id/products/product_attachment_id",
      "text": "Delete an attached product from a deal ðŸš§",
      "category": "Deals",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  },\n  \"product_attachment_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The product attachment ID\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a product attachment from a deal using the `product_attachment_id`.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/deals/{id}/products/{product_attachment_id}",
        "alias_endpoint": "/pipedrive/v1/deals/id/products/product_attachment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files___get": {
      "provider_intent": "pipedrive__v1__files___get",
      "provider_alias_intent": "/v1/files",
      "text": "Get all files ðŸš§",
      "category": "Files",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all files.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files",
        "alias_endpoint": "/pipedrive/v1/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files___post": {
      "provider_intent": "pipedrive__v1__files___post",
      "provider_alias_intent": "/v1/files",
      "text": "Add file ðŸš§",
      "category": "Files",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lets you upload a file and associate it with a deal person organization activity product or lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files",
        "alias_endpoint": "/pipedrive/v1/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__remote___post": {
      "provider_intent": "pipedrive__v1__files__remote___post",
      "provider_alias_intent": "/v1/files/remote",
      "text": "Create a remote file and link it to an item ðŸš§",
      "category": "Files",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Creates a new empty file in the remote location (`googledrive`) that will be linked to the item you supply.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/remote",
        "alias_endpoint": "/pipedrive/v1/files/remote",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__remotelink___post": {
      "provider_intent": "pipedrive__v1__files__remotelink___post",
      "provider_alias_intent": "/v1/files/remotelink",
      "text": "Link a remote file to an item ðŸš§",
      "category": "Files",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Links an existing remote file (`googledrive`) to the item you supply.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/remoteLink",
        "alias_endpoint": "/pipedrive/v1/files/remotelink",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__id___delete": {
      "provider_intent": "pipedrive__v1__files__id___delete",
      "provider_alias_intent": "/v1/files/id",
      "text": "Delete a file ðŸš§",
      "category": "Files",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the file\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a file as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/{id}",
        "alias_endpoint": "/pipedrive/v1/files/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__id___get": {
      "provider_intent": "pipedrive__v1__files__id___get",
      "provider_alias_intent": "/v1/files/id",
      "text": "Get one file ðŸš§",
      "category": "Files",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the file\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific file.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/{id}",
        "alias_endpoint": "/pipedrive/v1/files/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__id___put": {
      "provider_intent": "pipedrive__v1__files__id___put",
      "provider_alias_intent": "/v1/files/id",
      "text": "Update file details ðŸš§",
      "category": "Files",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the file\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a file.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/{id}",
        "alias_endpoint": "/pipedrive/v1/files/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__files__id__download___get": {
      "provider_intent": "pipedrive__v1__files__id__download___get",
      "provider_alias_intent": "/v1/files/id/download",
      "text": "Download one file ðŸš§",
      "category": "Files",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the file\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Initializes a file download.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/files/{id}/download",
        "alias_endpoint": "/pipedrive/v1/files/id/download",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters___delete": {
      "provider_intent": "pipedrive__v1__filters___delete",
      "provider_alias_intent": "/v1/filters",
      "text": "Delete multiple filters in bulk ðŸš§",
      "category": "Filters",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated filter IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple filters as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters",
        "alias_endpoint": "/pipedrive/v1/filters",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters___get": {
      "provider_intent": "pipedrive__v1__filters___get",
      "provider_alias_intent": "/v1/filters",
      "text": "Get all filters ðŸš§",
      "category": "Filters",
      "method": "GET",
      "type": "API",
      "params": {
        "type": {
          "type": "string",
          "text": "The types of filters to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all filters.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters",
        "alias_endpoint": "/pipedrive/v1/filters",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters___post": {
      "provider_intent": "pipedrive__v1__filters___post",
      "provider_alias_intent": "/v1/filters",
      "text": "Add a new filter ðŸš§",
      "category": "Filters",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the filter",
          "required": true
        },
        "conditions": {
          "type": "object",
          "text": "The conditions of the filter as a JSON object",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "The type of filter to create",
          "required": true
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new filter returns the ID upon success.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters",
        "alias_endpoint": "/pipedrive/v1/filters",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters__helpers___get": {
      "provider_intent": "pipedrive__v1__filters__helpers___get",
      "provider_alias_intent": "/v1/filters/helpers",
      "text": "Get all filter helpers ðŸš§",
      "category": "Filters",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all supported filter helpers.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters/helpers",
        "alias_endpoint": "/pipedrive/v1/filters/helpers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters__id___delete": {
      "provider_intent": "pipedrive__v1__filters__id___delete",
      "provider_alias_intent": "/v1/filters/id",
      "text": "Delete a filter ðŸš§",
      "category": "Filters",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the filter\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a filter as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters/{id}",
        "alias_endpoint": "/pipedrive/v1/filters/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters__id___get": {
      "provider_intent": "pipedrive__v1__filters__id___get",
      "provider_alias_intent": "/v1/filters/id",
      "text": "Get one filter ðŸš§",
      "category": "Filters",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the filter\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific filter.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters/{id}",
        "alias_endpoint": "/pipedrive/v1/filters/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__filters__id___put": {
      "provider_intent": "pipedrive__v1__filters__id___put",
      "provider_alias_intent": "/v1/filters/id",
      "text": "Update filter ðŸš§",
      "category": "Filters",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the filter"
        },
        "conditions": {
          "type": "object",
          "text": "The conditions of the filter as a JSON object",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the filter\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an existing filter.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/filters/{id}",
        "alias_endpoint": "/pipedrive/v1/filters/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__goals___post": {
      "provider_intent": "pipedrive__v1__goals___post",
      "provider_alias_intent": "/v1/goals",
      "text": "Add a new goal ðŸš§",
      "category": "Goals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the goal"
        },
        "assignee": {
          "type": "object",
          "text": "Who this goal is assigned to",
          "required": true
        },
        "type": {
          "type": "object",
          "text": "The type of the goal",
          "required": true
        },
        "expected_outcome": {
          "type": "object",
          "text": "The expected outcome of the goal",
          "required": true
        },
        "duration": {
          "type": "object",
          "text": "The date when the goal starts and ends",
          "required": true
        },
        "interval": {
          "type": "string",
          "text": "The interval of the goal",
          "required": true
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new goal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/goals",
        "alias_endpoint": "/pipedrive/v1/goals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__goals__find___get": {
      "provider_intent": "pipedrive__v1__goals__find___get",
      "provider_alias_intent": "/v1/goals/find",
      "text": "Find goals ðŸš§",
      "category": "Goals",
      "method": "GET",
      "type": "API",
      "params": {
        "type.name": {
          "type": "string",
          "text": "The type of the goal"
        },
        "title": {
          "type": "string",
          "text": "The title of the goal"
        },
        "is_active": {
          "type": "boolean",
          "text": "Whether the goal is active or not",
          "enum": [
            true,
            false
          ]
        },
        "assignee.id": {
          "type": "integer",
          "text": "The ID of the user who's goal to fetch"
        },
        "assignee.type": {
          "type": "string",
          "text": "The type of the goal's assignee"
        },
        "expected_outcome.target": {
          "type": "number",
          "text": "The numeric value of the outcome"
        },
        "expected_outcome.tracking_metric": {
          "type": "string",
          "text": "The tracking metric of the expected outcome of the goal"
        },
        "expected_outcome.currency_id": {
          "type": "integer",
          "text": "The numeric ID of the goal's currency"
        },
        "type.params.pipeline_id": {
          "type": "array",
          "text": "An array of pipeline IDs or `null` for all pipelines"
        },
        "type.params.stage_id": {
          "type": "integer",
          "text": "The ID of the stage"
        },
        "type.params.activity_type_id": {
          "type": "array",
          "text": "An array of IDs or `null` for all activity types"
        },
        "period.start": {
          "type": "string",
          "text": "The start date of the period for which to find goals"
        },
        "period.end": {
          "type": "string",
          "text": "The end date of the period for which to find goals"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about goals based on criteria.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/goals/find",
        "alias_endpoint": "/pipedrive/v1/goals/find",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__goals__id___put": {
      "provider_intent": "pipedrive__v1__goals__id___put",
      "provider_alias_intent": "/v1/goals/id",
      "text": "Update existing goal ðŸš§",
      "category": "Goals",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the goal"
        },
        "assignee": {
          "type": "object",
          "text": "Who this goal is assigned to"
        },
        "type": {
          "type": "object",
          "text": "The type of the goal"
        },
        "expected_outcome": {
          "type": "object",
          "text": "The expected outcome of the goal"
        },
        "duration": {
          "type": "object",
          "text": "The date when the goal starts and ends"
        },
        "interval": {
          "type": "string",
          "text": "The interval of the goal"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the goal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an existing goal.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/goals/{id}",
        "alias_endpoint": "/pipedrive/v1/goals/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__goals__id___delete": {
      "provider_intent": "pipedrive__v1__goals__id___delete",
      "provider_alias_intent": "/v1/goals/id",
      "text": "Delete existing goal ðŸš§",
      "category": "Goals",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the goal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a goal as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/goals/{id}",
        "alias_endpoint": "/pipedrive/v1/goals/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__goals__id__results___get": {
      "provider_intent": "pipedrive__v1__goals__id__results___get",
      "provider_alias_intent": "/v1/goals/id/results",
      "text": "Get result of a goal ðŸš§",
      "category": "Goals",
      "method": "GET",
      "type": "API",
      "params": {
        "period.start": {
          "type": "string",
          "text": "The start date of the period for which to find the goal's progress",
          "required": true
        },
        "period.end": {
          "type": "string",
          "text": "The end date of the period for which to find the goal's progress",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the goal that the results are looked for\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Gets the progress of a goal for the specified period.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/goals/{id}/results",
        "alias_endpoint": "/pipedrive/v1/goals/id/results",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__itemsearch___get": {
      "provider_intent": "pipedrive__v1__itemsearch___get",
      "provider_alias_intent": "/v1/itemsearch",
      "text": "Perform a search from multiple item types ðŸš§",
      "category": "ItemSearch",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "item_types": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "search_for_related_items": {
          "type": "boolean",
          "text": "When enabled the response will include up to 100 newest related leads and 100 newest related deals for each found person and organization and up to 100 newest related persons for each found organization",
          "enum": [
            true,
            false
          ]
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "include_fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Performs a search from your choice of item types and fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/itemSearch",
        "alias_endpoint": "/pipedrive/v1/itemsearch",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__itemsearch__field___get": {
      "provider_intent": "pipedrive__v1__itemsearch__field___get",
      "provider_alias_intent": "/v1/itemsearch/field",
      "text": "Perform a search using a specific field from an item type ðŸš§",
      "category": "ItemSearch",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "field_type": {
          "type": "string",
          "text": "The type of the field to perform the search from",
          "required": true
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "field_key": {
          "type": "string",
          "text": "The key of the field to search from",
          "required": true
        },
        "return_item_ids": {
          "type": "boolean",
          "text": "Whether to return the IDs of the matching items or not",
          "enum": [
            true,
            false
          ]
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Performs a search from the values of a specific field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/itemSearch/field",
        "alias_endpoint": "/pipedrive/v1/itemsearch/field",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leadlabels___get": {
      "provider_intent": "pipedrive__v1__leadlabels___get",
      "provider_alias_intent": "/v1/leadlabels",
      "text": "Get all lead labels ðŸš§",
      "category": "LeadLabels",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details of all lead labels.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leadLabels",
        "alias_endpoint": "/pipedrive/v1/leadlabels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leadlabels___post": {
      "provider_intent": "pipedrive__v1__leadlabels___post",
      "provider_alias_intent": "/v1/leadlabels",
      "text": "Add a lead label ðŸš§",
      "category": "LeadLabels",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the lead label",
          "required": true
        },
        "color": {
          "type": "string",
          "text": "The color of the label",
          "required": true
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Creates a lead label.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leadLabels",
        "alias_endpoint": "/pipedrive/v1/leadlabels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leadlabels__id___patch": {
      "provider_intent": "pipedrive__v1__leadlabels__id___patch",
      "provider_alias_intent": "/v1/leadlabels/id",
      "text": "Update a lead label ðŸš§",
      "category": "LeadLabels",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the lead label"
        },
        "color": {
          "type": "string",
          "text": "The color of the label"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead label\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates one or more properties of a lead label.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leadLabels/{id}",
        "alias_endpoint": "/pipedrive/v1/leadlabels/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leadlabels__id___delete": {
      "provider_intent": "pipedrive__v1__leadlabels__id___delete",
      "provider_alias_intent": "/v1/leadlabels/id",
      "text": "Delete a lead label ðŸš§",
      "category": "LeadLabels",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead label\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a specific lead label.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leadLabels/{id}",
        "alias_endpoint": "/pipedrive/v1/leadlabels/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leadsources___get": {
      "provider_intent": "pipedrive__v1__leadsources___get",
      "provider_alias_intent": "/v1/leadsources",
      "text": "Get all lead sources ðŸš§",
      "category": "LeadSources",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all lead sources.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leadSources",
        "alias_endpoint": "/pipedrive/v1/leadsources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads___get": {
      "provider_intent": "pipedrive__v1__leads___get",
      "provider_alias_intent": "/v1/leads",
      "text": "Get all leads ðŸš§",
      "category": "Leads",
      "method": "GET",
      "type": "API",
      "params": {
        "limit": {
          "type": "integer",
          "text": "For pagination the limit of entries to be returned"
        },
        "start": {
          "type": "integer",
          "text": "For pagination the position that represents the first result for the page"
        },
        "archived_status": {
          "type": "string",
          "text": "Filtering based on the archived status of a lead"
        },
        "owner_id": {
          "type": "integer",
          "text": "If supplied only leads matching the given user will be returned"
        },
        "person_id": {
          "type": "integer",
          "text": "If supplied only leads matching the given person will be returned"
        },
        "organization_id": {
          "type": "integer",
          "text": "If supplied only leads matching the given organization will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns multiple leads.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads",
        "alias_endpoint": "/pipedrive/v1/leads",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads___post": {
      "provider_intent": "pipedrive__v1__leads___post",
      "provider_alias_intent": "/v1/leads",
      "text": "Add a lead ðŸš§",
      "category": "Leads",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The name of the lead",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "text": "The ID of the user which will be the owner of the created lead"
        },
        "label_ids": {
          "type": "array",
          "text": "The IDs of the lead labels which will be associated with the lead"
        },
        "person_id": {
          "type": "integer",
          "text": "The ID of a person which this lead will be linked to"
        },
        "organization_id": {
          "type": "integer",
          "text": "The ID of an organization which this lead will be linked to"
        },
        "value": {
          "type": "object",
          "text": "The potential value of the lead"
        },
        "expected_close_date": {
          "type": "string",
          "text": "The date of when the deal which will be created from the lead is expected to be closed"
        },
        "visible_to": {
          "type": "string",
          "text": "The visibility of the lead"
        },
        "was_seen": {
          "type": "boolean",
          "text": "A flag indicating whether the lead was seen by someone in the Pipedrive UI",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Creates a lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads",
        "alias_endpoint": "/pipedrive/v1/leads",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads__id___get": {
      "provider_intent": "pipedrive__v1__leads__id___get",
      "provider_alias_intent": "/v1/leads/id",
      "text": "Get one lead ðŸš§",
      "category": "Leads",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details of a specific lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads/{id}",
        "alias_endpoint": "/pipedrive/v1/leads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads__id___patch": {
      "provider_intent": "pipedrive__v1__leads__id___patch",
      "provider_alias_intent": "/v1/leads/id",
      "text": "Update a lead ðŸš§",
      "category": "Leads",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The name of the lead"
        },
        "owner_id": {
          "type": "integer",
          "text": "The ID of the user which will be the owner of the created lead"
        },
        "label_ids": {
          "type": "array",
          "text": "The IDs of the lead labels which will be associated with the lead"
        },
        "person_id": {
          "type": "integer",
          "text": "The ID of a person which this lead will be linked to"
        },
        "organization_id": {
          "type": "integer",
          "text": "The ID of an organization which this lead will be linked to"
        },
        "is_archived": {
          "type": "boolean",
          "text": "A flag indicating whether the lead is archived or not",
          "enum": [
            true,
            false
          ]
        },
        "value": {
          "type": "object",
          "text": "The potential value of the lead"
        },
        "expected_close_date": {
          "type": "string",
          "text": "The date of when the deal which will be created from the lead is expected to be closed"
        },
        "visible_to": {
          "type": "string",
          "text": "The visibility of the lead"
        },
        "was_seen": {
          "type": "boolean",
          "text": "A flag indicating whether the lead was seen by someone in the Pipedrive UI",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates one or more properties of a lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads/{id}",
        "alias_endpoint": "/pipedrive/v1/leads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads__id___delete": {
      "provider_intent": "pipedrive__v1__leads__id___delete",
      "provider_alias_intent": "/v1/leads/id",
      "text": "Delete a lead ðŸš§",
      "category": "Leads",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a specific lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads/{id}",
        "alias_endpoint": "/pipedrive/v1/leads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads__id__permittedusers___get": {
      "provider_intent": "pipedrive__v1__leads__id__permittedusers___get",
      "provider_alias_intent": "/v1/leads/id/permittedusers",
      "text": "List permitted users ðŸš§",
      "category": "Leads",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the lead\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the users permitted to access a lead.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads/{id}/permittedUsers",
        "alias_endpoint": "/pipedrive/v1/leads/id/permittedusers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__leads__search___get": {
      "provider_intent": "pipedrive__v1__leads__search___get",
      "provider_alias_intent": "/v1/leads/search",
      "text": "Search leads ðŸš§",
      "category": "Leads",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "person_id": {
          "type": "integer",
          "text": "Will filter leads by the provided person ID"
        },
        "organization_id": {
          "type": "integer",
          "text": "Will filter leads by the provided organization ID"
        },
        "include_fields": {
          "type": "string",
          "text": "Supports including optional fields in the results which are not provided by default"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Searches all leads by title notes and/or custom fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/leads/search",
        "alias_endpoint": "/pipedrive/v1/leads/search",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams___get": {
      "provider_intent": "pipedrive__v1__legacyteams___get",
      "provider_alias_intent": "/v1/legacyteams",
      "text": "Get all teams ðŸš§",
      "category": "LegacyTeams",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string",
          "text": "The field name to sort returned teams by"
        },
        "skip_users": {
          "type": "number",
          "text": "When enabled the teams will not include IDs of member users"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about teams within the company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams",
        "alias_endpoint": "/pipedrive/v1/legacyteams",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams___post": {
      "provider_intent": "pipedrive__v1__legacyteams___post",
      "provider_alias_intent": "/v1/legacyteams",
      "text": "Add a new team ðŸš§",
      "category": "LegacyTeams",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The team name",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "The team description"
        },
        "manager_id": {
          "type": "integer",
          "text": "The team manager ID",
          "required": true
        },
        "users": {
          "type": "array",
          "text": "The list of user IDs"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new team to the company and returns the created object.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams",
        "alias_endpoint": "/pipedrive/v1/legacyteams",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__id___get": {
      "provider_intent": "pipedrive__v1__legacyteams__id___get",
      "provider_alias_intent": "/v1/legacyteams/id",
      "text": "Get a single team ðŸš§",
      "category": "LegacyTeams",
      "method": "GET",
      "type": "API",
      "params": {
        "skip_users": {
          "type": "number",
          "text": "When enabled the teams will not include IDs of member users"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the team\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific team.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/{id}",
        "alias_endpoint": "/pipedrive/v1/legacyteams/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__id___put": {
      "provider_intent": "pipedrive__v1__legacyteams__id___put",
      "provider_alias_intent": "/v1/legacyteams/id",
      "text": "Update a team ðŸš§",
      "category": "LegacyTeams",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the team\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an existing team and returns the updated object.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/{id}",
        "alias_endpoint": "/pipedrive/v1/legacyteams/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__id__users___get": {
      "provider_intent": "pipedrive__v1__legacyteams__id__users___get",
      "provider_alias_intent": "/v1/legacyteams/id/users",
      "text": "Get all users in a team ðŸš§",
      "category": "LegacyTeams",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the team\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns a list of all user IDs within a team.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/{id}/users",
        "alias_endpoint": "/pipedrive/v1/legacyteams/id/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__id__users___post": {
      "provider_intent": "pipedrive__v1__legacyteams__id__users___post",
      "provider_alias_intent": "/v1/legacyteams/id/users",
      "text": "Add users to a team ðŸš§",
      "category": "LegacyTeams",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "users": {
          "type": "array",
          "text": "The list of user IDs",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the team\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds users to an existing team.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/{id}/users",
        "alias_endpoint": "/pipedrive/v1/legacyteams/id/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__id__users___delete": {
      "provider_intent": "pipedrive__v1__legacyteams__id__users___delete",
      "provider_alias_intent": "/v1/legacyteams/id/users",
      "text": "Delete users from a team ðŸš§",
      "category": "LegacyTeams",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "users": {
          "type": "array",
          "text": "The list of user IDs",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the team\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes users from an existing team.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/{id}/users",
        "alias_endpoint": "/pipedrive/v1/legacyteams/id/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__legacyteams__user__id___get": {
      "provider_intent": "pipedrive__v1__legacyteams__user__id___get",
      "provider_alias_intent": "/v1/legacyteams/user/id",
      "text": "Get all teams of a user ðŸš§",
      "category": "LegacyTeams",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string",
          "text": "The field name to sort returned teams by"
        },
        "skip_users": {
          "type": "number",
          "text": "When enabled the teams will not include IDs of member users"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all teams which have the specified user as a member.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/legacyTeams/user/{id}",
        "alias_endpoint": "/pipedrive/v1/legacyteams/user/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailmessages__id___get": {
      "provider_intent": "pipedrive__v1__mailbox__mailmessages__id___get",
      "provider_alias_intent": "/v1/mailbox/mailmessages/id",
      "text": "Get one mail message ðŸš§",
      "category": "Mailbox",
      "method": "GET",
      "type": "API",
      "params": {
        "include_body": {
          "type": "number",
          "text": "Whether to include the full message body or not"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the mail message to fetch\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific mail message.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailMessages/{id}",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailmessages/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailthreads___get": {
      "provider_intent": "pipedrive__v1__mailbox__mailthreads___get",
      "provider_alias_intent": "/v1/mailbox/mailthreads",
      "text": "Get mail threads ðŸš§",
      "category": "Mailbox",
      "method": "GET",
      "type": "API",
      "params": {
        "folder": {
          "type": "string",
          "text": "The type of folder to fetch",
          "required": true
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns mail threads in a specified folder ordered by the most recent message within.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailThreads",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailthreads",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailthreads__id___delete": {
      "provider_intent": "pipedrive__v1__mailbox__mailthreads__id___delete",
      "provider_alias_intent": "/v1/mailbox/mailthreads/id",
      "text": "Delete mail thread ðŸš§",
      "category": "Mailbox",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the mail thread\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a mail thread as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailThreads/{id}",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailthreads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailthreads__id___get": {
      "provider_intent": "pipedrive__v1__mailbox__mailthreads__id___get",
      "provider_alias_intent": "/v1/mailbox/mailthreads/id",
      "text": "Get one mail thread ðŸš§",
      "category": "Mailbox",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the mail thread\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns a specific mail thread.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailThreads/{id}",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailthreads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailthreads__id___put": {
      "provider_intent": "pipedrive__v1__mailbox__mailthreads__id___put",
      "provider_alias_intent": "/v1/mailbox/mailthreads/id",
      "text": "Update mail thread details ðŸš§",
      "category": "Mailbox",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the mail thread\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a mail thread.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailThreads/{id}",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailthreads/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__mailbox__mailthreads__id__mailmessages___get": {
      "provider_intent": "pipedrive__v1__mailbox__mailthreads__id__mailmessages___get",
      "provider_alias_intent": "/v1/mailbox/mailthreads/id/mailmessages",
      "text": "Get all mail messages of mail thread ðŸš§",
      "category": "Mailbox",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the mail thread\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all the mail messages inside a specified mail thread.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/mailbox/mailThreads/{id}/mailMessages",
        "alias_endpoint": "/pipedrive/v1/mailbox/mailthreads/id/mailmessages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notefields___get": {
      "provider_intent": "pipedrive__v1__notefields___get",
      "provider_alias_intent": "/v1/notefields",
      "text": "Get all note fields ðŸš§",
      "category": "NoteFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all note fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/noteFields",
        "alias_endpoint": "/pipedrive/v1/notefields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes___get": {
      "provider_intent": "pipedrive__v1__notes___get",
      "provider_alias_intent": "/v1/notes",
      "text": "Get all notes ðŸš§",
      "category": "Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user whose notes to fetch"
        },
        "lead_id": {
          "type": "string",
          "text": "The ID of the lead which notes to fetch"
        },
        "deal_id": {
          "type": "integer",
          "text": "The ID of the deal which notes to fetch"
        },
        "person_id": {
          "type": "integer",
          "text": "The ID of the person whose notes to fetch"
        },
        "org_id": {
          "type": "integer",
          "text": "The ID of the organization which notes to fetch"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        },
        "start_date": {
          "type": "string",
          "text": "The date in format of YYYY-MM-DD from which notes to fetch"
        },
        "end_date": {
          "type": "string",
          "text": "The date in format of YYYY-MM-DD until which notes to fetch to"
        },
        "pinned_to_lead_flag": {
          "type": "number",
          "text": "If set the results are filtered by note to lead pinning state"
        },
        "pinned_to_deal_flag": {
          "type": "number",
          "text": "If set the results are filtered by note to deal pinning state"
        },
        "pinned_to_organization_flag": {
          "type": "number",
          "text": "If set the results are filtered by note to organization pinning state"
        },
        "pinned_to_person_flag": {
          "type": "number",
          "text": "If set the results are filtered by note to person pinning state"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all notes.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes",
        "alias_endpoint": "/pipedrive/v1/notes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes___post": {
      "provider_intent": "pipedrive__v1__notes___post",
      "provider_alias_intent": "/v1/notes",
      "text": "Add a note ðŸš§",
      "category": "Notes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes",
        "alias_endpoint": "/pipedrive/v1/notes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id___delete": {
      "provider_intent": "pipedrive__v1__notes__id___delete",
      "provider_alias_intent": "/v1/notes/id",
      "text": "Delete a note ðŸš§",
      "category": "Notes",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a specific note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}",
        "alias_endpoint": "/pipedrive/v1/notes/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id___get": {
      "provider_intent": "pipedrive__v1__notes__id___get",
      "provider_alias_intent": "/v1/notes/id",
      "text": "Get one note ðŸš§",
      "category": "Notes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details about a specific note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}",
        "alias_endpoint": "/pipedrive/v1/notes/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id___put": {
      "provider_intent": "pipedrive__v1__notes__id___put",
      "provider_alias_intent": "/v1/notes/id",
      "text": "Update a note ðŸš§",
      "category": "Notes",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}",
        "alias_endpoint": "/pipedrive/v1/notes/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id__comments___get": {
      "provider_intent": "pipedrive__v1__notes__id__comments___get",
      "provider_alias_intent": "/v1/notes/id/comments",
      "text": "Get all comments for a note ðŸš§",
      "category": "Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all comments associated with a note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}/comments",
        "alias_endpoint": "/pipedrive/v1/notes/id/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id__comments___post": {
      "provider_intent": "pipedrive__v1__notes__id__comments___post",
      "provider_alias_intent": "/v1/notes/id/comments",
      "text": "Add a comment to a note ðŸš§",
      "category": "Notes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "The content of the comment in HTML format",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new comment to a note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}/comments",
        "alias_endpoint": "/pipedrive/v1/notes/id/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id__comments__commentid___get": {
      "provider_intent": "pipedrive__v1__notes__id__comments__commentid___get",
      "provider_alias_intent": "/v1/notes/id/comments/commentid",
      "text": "Get one comment ðŸš§",
      "category": "Notes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  },\n  \"commentId\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the comment\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of a comment.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}/comments/{commentId}",
        "alias_endpoint": "/pipedrive/v1/notes/id/comments/commentid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id__comments__commentid___put": {
      "provider_intent": "pipedrive__v1__notes__id__comments__commentid___put",
      "provider_alias_intent": "/v1/notes/id/comments/commentid",
      "text": "Update a comment related to a note ðŸš§",
      "category": "Notes",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "The content of the comment in HTML format",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  },\n  \"commentId\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the comment\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a comment related to a note.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}/comments/{commentId}",
        "alias_endpoint": "/pipedrive/v1/notes/id/comments/commentid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__notes__id__comments__commentid___delete": {
      "provider_intent": "pipedrive__v1__notes__id__comments__commentid___delete",
      "provider_alias_intent": "/v1/notes/id/comments/commentid",
      "text": "Delete a comment related to a note ðŸš§",
      "category": "Notes",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the note\",\n    \"required\": true\n  },\n  \"commentId\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the comment\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a comment.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/notes/{id}/comments/{commentId}",
        "alias_endpoint": "/pipedrive/v1/notes/id/comments/commentid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields___get": {
      "provider_intent": "pipedrive__v1__organizationfields___get",
      "provider_alias_intent": "/v1/organizationfields",
      "text": "Get all organization fields ðŸš§",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all organization fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields",
        "alias_endpoint": "/pipedrive/v1/organizationfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields___post": {
      "provider_intent": "pipedrive__v1__organizationfields___post",
      "provider_alias_intent": "/v1/organizationfields",
      "text": "Add a new organization field ðŸš§",
      "category": "OrganizationFields",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new organization field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields",
        "alias_endpoint": "/pipedrive/v1/organizationfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields___delete": {
      "provider_intent": "pipedrive__v1__organizationfields___delete",
      "provider_alias_intent": "/v1/organizationfields",
      "text": "Delete multiple organization fields in bulk ðŸš§",
      "category": "OrganizationFields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated field IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple fields as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields",
        "alias_endpoint": "/pipedrive/v1/organizationfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields__id___get": {
      "provider_intent": "pipedrive__v1__organizationfields__id___get",
      "provider_alias_intent": "/v1/organizationfields/id",
      "text": "Get one organization field ðŸš§",
      "category": "OrganizationFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific organization field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields__id___delete": {
      "provider_intent": "pipedrive__v1__organizationfields__id___delete",
      "provider_alias_intent": "/v1/organizationfields/id",
      "text": "Delete an organization field ðŸš§",
      "category": "OrganizationFields",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a field as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationfields__id___put": {
      "provider_intent": "pipedrive__v1__organizationfields__id___put",
      "provider_alias_intent": "/v1/organizationfields/id",
      "text": "Update an organization field ðŸš§",
      "category": "OrganizationFields",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the field"
        },
        "options": {
          "type": "string",
          "text": "When `field_type` is either set or enum possible options must be supplied as a JSON-encoded sequential array of objects"
        },
        "add_visible_flag": {
          "type": "boolean",
          "text": "Whether the field is available in 'add new' modal or not (both in web and mobile app)",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an organization field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationFields/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationrelationships___get": {
      "provider_intent": "pipedrive__v1__organizationrelationships___get",
      "provider_alias_intent": "/v1/organizationrelationships",
      "text": "Get all relationships for organization ðŸš§",
      "category": "OrganizationRelationships",
      "method": "GET",
      "type": "API",
      "params": {
        "org_id": {
          "type": "integer",
          "text": "The ID of the organization to get relationships for",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Gets all of the relationships for a supplied organization ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationRelationships",
        "alias_endpoint": "/pipedrive/v1/organizationrelationships",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationrelationships___post": {
      "provider_intent": "pipedrive__v1__organizationrelationships___post",
      "provider_alias_intent": "/v1/organizationrelationships",
      "text": "Create an organization relationship ðŸš§",
      "category": "OrganizationRelationships",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "org_id": {
          "type": "integer",
          "text": "The ID of the base organization for the returned calculated values"
        },
        "type": {
          "type": "string",
          "text": "The type of organization relationship",
          "required": true
        },
        "rel_owner_org_id": {
          "type": "integer",
          "text": "The owner of the relationship",
          "required": true
        },
        "rel_linked_org_id": {
          "type": "integer",
          "text": "The linked organization in the relationship",
          "required": true
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Creates and returns an organization relationship.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationRelationships",
        "alias_endpoint": "/pipedrive/v1/organizationrelationships",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationrelationships__id___delete": {
      "provider_intent": "pipedrive__v1__organizationrelationships__id___delete",
      "provider_alias_intent": "/v1/organizationrelationships/id",
      "text": "Delete an organization relationship ðŸš§",
      "category": "OrganizationRelationships",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization relationship\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes an organization relationship and returns the deleted ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationRelationships/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationrelationships/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationrelationships__id___get": {
      "provider_intent": "pipedrive__v1__organizationrelationships__id___get",
      "provider_alias_intent": "/v1/organizationrelationships/id",
      "text": "Get one organization relationship ðŸš§",
      "category": "OrganizationRelationships",
      "method": "GET",
      "type": "API",
      "params": {
        "org_id": {
          "type": "integer",
          "text": "The ID of the base organization for the returned calculated values"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization relationship\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Finds and returns an organization relationship from its ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationRelationships/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationrelationships/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizationrelationships__id___put": {
      "provider_intent": "pipedrive__v1__organizationrelationships__id___put",
      "provider_alias_intent": "/v1/organizationrelationships/id",
      "text": "Update an organization relationship ðŸš§",
      "category": "OrganizationRelationships",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "org_id": {
          "type": "integer",
          "text": "The ID of the base organization for the returned calculated values"
        },
        "type": {
          "type": "string",
          "text": "The type of organization relationship"
        },
        "rel_owner_org_id": {
          "type": "integer",
          "text": "The owner of this relationship"
        },
        "rel_linked_org_id": {
          "type": "integer",
          "text": "The linked organization in this relationship"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization relationship\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates and returns an organization relationship.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizationRelationships/{id}",
        "alias_endpoint": "/pipedrive/v1/organizationrelationships/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations___delete": {
      "provider_intent": "pipedrive__v1__organizations___delete",
      "provider_alias_intent": "/v1/organizations",
      "text": "Delete multiple organizations in bulk ðŸš§",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated IDs that will be deleted",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple organizations as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations",
        "alias_endpoint": "/pipedrive/v1/organizations",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations___get": {
      "provider_intent": "pipedrive__v1__organizations___get",
      "provider_alias_intent": "/v1/organizations",
      "text": "Get all organizations ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "If supplied only organizations owned by the given user will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use"
        },
        "first_char": {
          "type": "string",
          "text": "If supplied only organizations whose name starts with the specified letter will be returned (case insensitive)"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all organizations.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations",
        "alias_endpoint": "/pipedrive/v1/organizations",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations___post": {
      "provider_intent": "pipedrive__v1__organizations___post",
      "provider_alias_intent": "/v1/organizations",
      "text": "Add an organization ðŸš§",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations",
        "alias_endpoint": "/pipedrive/v1/organizations",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__search___get": {
      "provider_intent": "pipedrive__v1__organizations__search___get",
      "provider_alias_intent": "/v1/organizations/search",
      "text": "Search organizations ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Searches all organizations by name address notes and/or custom fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/search",
        "alias_endpoint": "/pipedrive/v1/organizations/search",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id___delete": {
      "provider_intent": "pipedrive__v1__organizations__id___delete",
      "provider_alias_intent": "/v1/organizations/id",
      "text": "Delete an organization ðŸš§",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks an organization as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}",
        "alias_endpoint": "/pipedrive/v1/organizations/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id___get": {
      "provider_intent": "pipedrive__v1__organizations__id___get",
      "provider_alias_intent": "/v1/organizations/id",
      "text": "Get details of an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}",
        "alias_endpoint": "/pipedrive/v1/organizations/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id___put": {
      "provider_intent": "pipedrive__v1__organizations__id___put",
      "provider_alias_intent": "/v1/organizations/id",
      "text": "Update an organization ðŸš§",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}",
        "alias_endpoint": "/pipedrive/v1/organizations/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__activities___get": {
      "provider_intent": "pipedrive__v1__organizations__id__activities___get",
      "provider_alias_intent": "/v1/organizations/id/activities",
      "text": "List activities associated with an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "done": {
          "type": "number",
          "text": "Whether the activity is done or not"
        },
        "exclude": {
          "type": "string",
          "text": "A comma-separated string of activity IDs to exclude from result"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists activities associated with an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/activities",
        "alias_endpoint": "/pipedrive/v1/organizations/id/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__deals___get": {
      "provider_intent": "pipedrive__v1__organizations__id__deals___get",
      "provider_alias_intent": "/v1/organizations/id/deals",
      "text": "List deals associated with an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        },
        "only_primary_association": {
          "type": "number",
          "text": "If set only deals that are directly associated to the organization are fetched"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists deals associated with an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/deals",
        "alias_endpoint": "/pipedrive/v1/organizations/id/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__files___get": {
      "provider_intent": "pipedrive__v1__organizations__id__files___get",
      "provider_alias_intent": "/v1/organizations/id/files",
      "text": "List files attached to an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists files associated with an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/files",
        "alias_endpoint": "/pipedrive/v1/organizations/id/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__flow___get": {
      "provider_intent": "pipedrive__v1__organizations__id__flow___get",
      "provider_alias_intent": "/v1/organizations/id/flow",
      "text": "List updates about an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "all_changes": {
          "type": "string",
          "text": "Whether to show custom field updates or not"
        },
        "items": {
          "type": "string",
          "text": "A comma-separated string for filtering out item specific updates"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists updates about an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/flow",
        "alias_endpoint": "/pipedrive/v1/organizations/id/flow",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__followers___get": {
      "provider_intent": "pipedrive__v1__organizations__id__followers___get",
      "provider_alias_intent": "/v1/organizations/id/followers",
      "text": "List followers of an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the followers of an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/organizations/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__followers___post": {
      "provider_intent": "pipedrive__v1__organizations__id__followers___post",
      "provider_alias_intent": "/v1/organizations/id/followers",
      "text": "Add a follower to an organization ðŸš§",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a follower to an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/organizations/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__followers__follower_id___delete": {
      "provider_intent": "pipedrive__v1__organizations__id__followers__follower_id___delete",
      "provider_alias_intent": "/v1/organizations/id/followers/follower_id",
      "text": "Delete a follower from an organization ðŸš§",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  },\n  \"follower_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the follower\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a follower from an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/followers/{follower_id}",
        "alias_endpoint": "/pipedrive/v1/organizations/id/followers/follower_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__mailmessages___get": {
      "provider_intent": "pipedrive__v1__organizations__id__mailmessages___get",
      "provider_alias_intent": "/v1/organizations/id/mailmessages",
      "text": "List mail messages associated with an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists mail messages associated with an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/mailMessages",
        "alias_endpoint": "/pipedrive/v1/organizations/id/mailmessages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__merge___put": {
      "provider_intent": "pipedrive__v1__organizations__id__merge___put",
      "provider_alias_intent": "/v1/organizations/id/merge",
      "text": "Merge two organizations ðŸš§",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "merge_with_id": {
          "type": "integer",
          "text": "The ID of the organization that the organization will be merged with",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Merges an organization with another organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/merge",
        "alias_endpoint": "/pipedrive/v1/organizations/id/merge",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__permittedusers___get": {
      "provider_intent": "pipedrive__v1__organizations__id__permittedusers___get",
      "provider_alias_intent": "/v1/organizations/id/permittedusers",
      "text": "List permitted users ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "List users permitted to access an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/permittedUsers",
        "alias_endpoint": "/pipedrive/v1/organizations/id/permittedusers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__organizations__id__persons___get": {
      "provider_intent": "pipedrive__v1__organizations__id__persons___get",
      "provider_alias_intent": "/v1/organizations/id/persons",
      "text": "List persons of an organization ðŸš§",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the organization\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists persons associated with an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/organizations/{id}/persons",
        "alias_endpoint": "/pipedrive/v1/organizations/id/persons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__permissionsets___get": {
      "provider_intent": "pipedrive__v1__permissionsets___get",
      "provider_alias_intent": "/v1/permissionsets",
      "text": "Get all permission sets ðŸš§",
      "category": "PermissionSets",
      "method": "GET",
      "type": "API",
      "params": {
        "app": {
          "type": "string",
          "text": "The app to filter the permission sets by"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all permission sets.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/permissionSets",
        "alias_endpoint": "/pipedrive/v1/permissionsets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__permissionsets__id___get": {
      "provider_intent": "pipedrive__v1__permissionsets__id___get",
      "provider_alias_intent": "/v1/permissionsets/id",
      "text": "Get one permission set ðŸš§",
      "category": "PermissionSets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the permission set\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific permission set.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/permissionSets/{id}",
        "alias_endpoint": "/pipedrive/v1/permissionsets/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__permissionsets__id__assignments___get": {
      "provider_intent": "pipedrive__v1__permissionsets__id__assignments___get",
      "provider_alias_intent": "/v1/permissionsets/id/assignments",
      "text": "List permission set assignments ðŸš§",
      "category": "PermissionSets",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"string\",\n    \"text\": \"The ID of the permission set\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the list of assignments for a permission set.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/permissionSets/{id}/assignments",
        "alias_endpoint": "/pipedrive/v1/permissionsets/id/assignments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields___get": {
      "provider_intent": "pipedrive__v1__personfields___get",
      "provider_alias_intent": "/v1/personfields",
      "text": "Get all person fields ðŸš§",
      "category": "PersonFields",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all person fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields",
        "alias_endpoint": "/pipedrive/v1/personfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields___post": {
      "provider_intent": "pipedrive__v1__personfields___post",
      "provider_alias_intent": "/v1/personfields",
      "text": "Add a new person field ðŸš§",
      "category": "PersonFields",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new person field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields",
        "alias_endpoint": "/pipedrive/v1/personfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields___delete": {
      "provider_intent": "pipedrive__v1__personfields___delete",
      "provider_alias_intent": "/v1/personfields",
      "text": "Delete multiple person fields in bulk ðŸš§",
      "category": "PersonFields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated field IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple fields as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields",
        "alias_endpoint": "/pipedrive/v1/personfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields__id___get": {
      "provider_intent": "pipedrive__v1__personfields__id___get",
      "provider_alias_intent": "/v1/personfields/id",
      "text": "Get one person field ðŸš§",
      "category": "PersonFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific person field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields/{id}",
        "alias_endpoint": "/pipedrive/v1/personfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields__id___delete": {
      "provider_intent": "pipedrive__v1__personfields__id___delete",
      "provider_alias_intent": "/v1/personfields/id",
      "text": "Delete a person field ðŸš§",
      "category": "PersonFields",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a field as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields/{id}",
        "alias_endpoint": "/pipedrive/v1/personfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__personfields__id___put": {
      "provider_intent": "pipedrive__v1__personfields__id___put",
      "provider_alias_intent": "/v1/personfields/id",
      "text": "Update a person field ðŸš§",
      "category": "PersonFields",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the field"
        },
        "options": {
          "type": "string",
          "text": "When `field_type` is either set or enum possible options must be supplied as a JSON-encoded sequential array of objects"
        },
        "add_visible_flag": {
          "type": "boolean",
          "text": "Whether the field is available in 'add new' modal or not (both in web and mobile app)",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a person field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/personFields/{id}",
        "alias_endpoint": "/pipedrive/v1/personfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons___delete": {
      "provider_intent": "pipedrive__v1__persons___delete",
      "provider_alias_intent": "/v1/persons",
      "text": "Delete multiple persons in bulk ðŸš§",
      "category": "Persons",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated IDs that will be deleted",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple persons as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons",
        "alias_endpoint": "/pipedrive/v1/persons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons___get": {
      "provider_intent": "pipedrive__v1__persons___get",
      "provider_alias_intent": "/v1/persons",
      "text": "Get all persons ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "If supplied only persons owned by the given user will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use"
        },
        "first_char": {
          "type": "string",
          "text": "If supplied only persons whose name starts with the specified letter will be returned (case insensitive)"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all persons.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons",
        "alias_endpoint": "/pipedrive/v1/persons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons___post": {
      "provider_intent": "pipedrive__v1__persons___post",
      "provider_alias_intent": "/v1/persons",
      "text": "Add a person ðŸš§",
      "category": "Persons",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons",
        "alias_endpoint": "/pipedrive/v1/persons",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__search___get": {
      "provider_intent": "pipedrive__v1__persons__search___get",
      "provider_alias_intent": "/v1/persons/search",
      "text": "Search persons ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "organization_id": {
          "type": "integer",
          "text": "Will filter persons by the provided organization ID"
        },
        "include_fields": {
          "type": "string",
          "text": "Supports including optional fields in the results which are not provided by default"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Searches all persons by name email phone notes and/or custom fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/search",
        "alias_endpoint": "/pipedrive/v1/persons/search",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id___delete": {
      "provider_intent": "pipedrive__v1__persons__id___delete",
      "provider_alias_intent": "/v1/persons/id",
      "text": "Delete a person ðŸš§",
      "category": "Persons",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a person as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}",
        "alias_endpoint": "/pipedrive/v1/persons/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id___get": {
      "provider_intent": "pipedrive__v1__persons__id___get",
      "provider_alias_intent": "/v1/persons/id",
      "text": "Get details of a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}",
        "alias_endpoint": "/pipedrive/v1/persons/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id___put": {
      "provider_intent": "pipedrive__v1__persons__id___put",
      "provider_alias_intent": "/v1/persons/id",
      "text": "Update a person ðŸš§",
      "category": "Persons",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}",
        "alias_endpoint": "/pipedrive/v1/persons/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__activities___get": {
      "provider_intent": "pipedrive__v1__persons__id__activities___get",
      "provider_alias_intent": "/v1/persons/id/activities",
      "text": "List activities associated with a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "done": {
          "type": "number",
          "text": "Whether the activity is done or not"
        },
        "exclude": {
          "type": "string",
          "text": "A comma-separated string of activity IDs to exclude from result"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists activities associated with a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/activities",
        "alias_endpoint": "/pipedrive/v1/persons/id/activities",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__deals___get": {
      "provider_intent": "pipedrive__v1__persons__id__deals___get",
      "provider_alias_intent": "/v1/persons/id/deals",
      "text": "List deals associated with a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists deals associated with a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/deals",
        "alias_endpoint": "/pipedrive/v1/persons/id/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__files___get": {
      "provider_intent": "pipedrive__v1__persons__id__files___get",
      "provider_alias_intent": "/v1/persons/id/files",
      "text": "List files attached to a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field names and sorting mode separated by a comma (`field_name_1 ASC` `field_name_2 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists files associated with a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/files",
        "alias_endpoint": "/pipedrive/v1/persons/id/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__flow___get": {
      "provider_intent": "pipedrive__v1__persons__id__flow___get",
      "provider_alias_intent": "/v1/persons/id/flow",
      "text": "List updates about a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "all_changes": {
          "type": "string",
          "text": "Whether to show custom field updates or not"
        },
        "items": {
          "type": "string",
          "text": "A comma-separated string for filtering out item specific updates"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists updates about a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/flow",
        "alias_endpoint": "/pipedrive/v1/persons/id/flow",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__followers___get": {
      "provider_intent": "pipedrive__v1__persons__id__followers___get",
      "provider_alias_intent": "/v1/persons/id/followers",
      "text": "List followers of a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the followers of a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/persons/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__followers___post": {
      "provider_intent": "pipedrive__v1__persons__id__followers___post",
      "provider_alias_intent": "/v1/persons/id/followers",
      "text": "Add a follower to a person ðŸš§",
      "category": "Persons",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a follower to a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/persons/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__followers__follower_id___delete": {
      "provider_intent": "pipedrive__v1__persons__id__followers__follower_id___delete",
      "provider_alias_intent": "/v1/persons/id/followers/follower_id",
      "text": "Delete a follower from a person ðŸš§",
      "category": "Persons",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  },\n  \"follower_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the follower\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a follower from a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/followers/{follower_id}",
        "alias_endpoint": "/pipedrive/v1/persons/id/followers/follower_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__mailmessages___get": {
      "provider_intent": "pipedrive__v1__persons__id__mailmessages___get",
      "provider_alias_intent": "/v1/persons/id/mailmessages",
      "text": "List mail messages associated with a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists mail messages associated with a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/mailMessages",
        "alias_endpoint": "/pipedrive/v1/persons/id/mailmessages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__merge___put": {
      "provider_intent": "pipedrive__v1__persons__id__merge___put",
      "provider_alias_intent": "/v1/persons/id/merge",
      "text": "Merge two persons ðŸš§",
      "category": "Persons",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "merge_with_id": {
          "type": "integer",
          "text": "The ID of the person that will not be overwritten",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Merges a person with another person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/merge",
        "alias_endpoint": "/pipedrive/v1/persons/id/merge",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__permittedusers___get": {
      "provider_intent": "pipedrive__v1__persons__id__permittedusers___get",
      "provider_alias_intent": "/v1/persons/id/permittedusers",
      "text": "List permitted users ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "List users permitted to access a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/permittedUsers",
        "alias_endpoint": "/pipedrive/v1/persons/id/permittedusers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__picture___delete": {
      "provider_intent": "pipedrive__v1__persons__id__picture___delete",
      "provider_alias_intent": "/v1/persons/id/picture",
      "text": "Delete person picture ðŸš§",
      "category": "Persons",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a personâ€™s picture.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/picture",
        "alias_endpoint": "/pipedrive/v1/persons/id/picture",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__picture___post": {
      "provider_intent": "pipedrive__v1__persons__id__picture___post",
      "provider_alias_intent": "/v1/persons/id/picture",
      "text": "Add person picture ðŸš§",
      "category": "Persons",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a picture to a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/picture",
        "alias_endpoint": "/pipedrive/v1/persons/id/picture",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__persons__id__products___get": {
      "provider_intent": "pipedrive__v1__persons__id__products___get",
      "provider_alias_intent": "/v1/persons/id/products",
      "text": "List products associated with a person ðŸš§",
      "category": "Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the person\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists products associated with a person.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/persons/{id}/products",
        "alias_endpoint": "/pipedrive/v1/persons/id/products",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines___get": {
      "provider_intent": "pipedrive__v1__pipelines___get",
      "provider_alias_intent": "/v1/pipelines",
      "text": "Get all pipelines ðŸš§",
      "category": "Pipelines",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all pipelines.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines",
        "alias_endpoint": "/pipedrive/v1/pipelines",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines___post": {
      "provider_intent": "pipedrive__v1__pipelines___post",
      "provider_alias_intent": "/v1/pipelines",
      "text": "Add a new pipeline ðŸš§",
      "category": "Pipelines",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the pipeline",
          "required": true
        },
        "deal_probability": {
          "type": "",
          "text": "Whether deal probability is disabled or enabled for this pipeline"
        },
        "order_nr": {
          "type": "integer",
          "text": "Defines the order of pipelines"
        },
        "active": {
          "type": "",
          "text": "Whether this pipeline will be made inactive (hidden) or active"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new pipeline.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines",
        "alias_endpoint": "/pipedrive/v1/pipelines",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id___delete": {
      "provider_intent": "pipedrive__v1__pipelines__id___delete",
      "provider_alias_intent": "/v1/pipelines/id",
      "text": "Delete a pipeline ðŸš§",
      "category": "Pipelines",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a pipeline as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}",
        "alias_endpoint": "/pipedrive/v1/pipelines/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id___get": {
      "provider_intent": "pipedrive__v1__pipelines__id___get",
      "provider_alias_intent": "/v1/pipelines/id",
      "text": "Get one pipeline ðŸš§",
      "category": "Pipelines",
      "method": "GET",
      "type": "API",
      "params": {
        "totals_convert_currency": {
          "type": "string",
          "text": "The 3-letter currency code of any of the supported currencies"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific pipeline.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}",
        "alias_endpoint": "/pipedrive/v1/pipelines/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id___put": {
      "provider_intent": "pipedrive__v1__pipelines__id___put",
      "provider_alias_intent": "/v1/pipelines/id",
      "text": "Update a pipeline ðŸš§",
      "category": "Pipelines",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the pipeline"
        },
        "deal_probability": {
          "type": "",
          "text": "Whether deal probability is disabled or enabled for this pipeline"
        },
        "order_nr": {
          "type": "integer",
          "text": "Defines the order of pipelines"
        },
        "active": {
          "type": "",
          "text": "Whether this pipeline will be made inactive (hidden) or active"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a pipeline.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}",
        "alias_endpoint": "/pipedrive/v1/pipelines/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id__conversion_statistics___get": {
      "provider_intent": "pipedrive__v1__pipelines__id__conversion_statistics___get",
      "provider_alias_intent": "/v1/pipelines/id/conversion_statistics",
      "text": "Get deals conversion rates in pipeline ðŸš§",
      "category": "Pipelines",
      "method": "GET",
      "type": "API",
      "params": {
        "start_date": {
          "type": "string",
          "text": "The start of the period",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "The end of the period",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "text": "The ID of the user who's pipeline metrics statistics to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all stage-to-stage conversion and pipeline-to-close rates for the given time period.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}/conversion_statistics",
        "alias_endpoint": "/pipedrive/v1/pipelines/id/conversion_statistics",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id__deals___get": {
      "provider_intent": "pipedrive__v1__pipelines__id__deals___get",
      "provider_alias_intent": "/v1/pipelines/id/deals",
      "text": "Get deals in a pipeline ðŸš§",
      "category": "Pipelines",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given filter will be returned"
        },
        "user_id": {
          "type": "integer",
          "text": "If supplied `filter_id` will not be considered and only deals owned by the given user will be returned"
        },
        "everyone": {
          "type": "number",
          "text": "If supplied `filter_id` and `user_id` will not be considered â€“ instead deals owned by everyone will be returned"
        },
        "stage_id": {
          "type": "integer",
          "text": "If supplied only deals within the given stage will be returned"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "get_summary": {
          "type": "number",
          "text": "Whether to include a summary of the pipeline in the `additional_data` or not"
        },
        "totals_convert_currency": {
          "type": "string",
          "text": "The 3-letter currency code of any of the supported currencies"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists deals in a specific pipeline across all its stages.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}/deals",
        "alias_endpoint": "/pipedrive/v1/pipelines/id/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__pipelines__id__movement_statistics___get": {
      "provider_intent": "pipedrive__v1__pipelines__id__movement_statistics___get",
      "provider_alias_intent": "/v1/pipelines/id/movement_statistics",
      "text": "Get deals movements in pipeline ðŸš§",
      "category": "Pipelines",
      "method": "GET",
      "type": "API",
      "params": {
        "start_date": {
          "type": "string",
          "text": "The start of the period",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "The end of the period",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "text": "The ID of the user who's pipeline statistics to fetch"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the pipeline\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns statistics for deals movements for the given time period.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/pipelines/{id}/movement_statistics",
        "alias_endpoint": "/pipedrive/v1/pipelines/id/movement_statistics",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields___delete": {
      "provider_intent": "pipedrive__v1__productfields___delete",
      "provider_alias_intent": "/v1/productfields",
      "text": "Delete multiple product fields in bulk ðŸš§",
      "category": "ProductFields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated field IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple fields as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields",
        "alias_endpoint": "/pipedrive/v1/productfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields___get": {
      "provider_intent": "pipedrive__v1__productfields___get",
      "provider_alias_intent": "/v1/productfields",
      "text": "Get all product fields ðŸš§",
      "category": "ProductFields",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all product fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields",
        "alias_endpoint": "/pipedrive/v1/productfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields___post": {
      "provider_intent": "pipedrive__v1__productfields___post",
      "provider_alias_intent": "/v1/productfields",
      "text": "Add a new product field ðŸš§",
      "category": "ProductFields",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the field",
          "required": true
        },
        "options": {
          "type": "array",
          "text": "When `field_type` is either `set` or `enum` possible options must be supplied as a JSON-encoded sequential array for example</br>`[{\"label\"\"red\"} {\"label\"\"blue\"} {\"label\"\"lilac\"}]`"
        },
        "field_type": {
          "type": "string",
          "text": "The type of the field<table><tr><th>Value</th><th>Description</th></tr><tr><td>`varchar`</td><td>Text (up to 255 characters)</td><tr><td>`varchar_auto`</td><td>Autocomplete text (up to 255 characters)</td><tr><td>`text`</td><td>Long text (up to 65k characters)</td><tr><td>`double`</td><td>Numeric value</td><tr><td>`monetary`</td><td>Monetary field (has a numeric value and a currency value)</td><tr><td>`date`</td><td>Date (format YYYY-MM-DD)</td><tr><td>`set`</td><td>Options field with a possibility of having multiple chosen options</td><tr><td>`enum`</td><td>Options field with a single possible chosen option</td><tr><td>`user`</td><td>User field (contains a user ID of another Pipedrive user)</td><tr><td>`org`</td><td>Organization field (contains an organization ID which is stored on the same account)</td><tr><td>`people`</td><td>Person field (contains a product ID which is stored on the same account)</td><tr><td>`phone`</td><td>Phone field (up to 255 numbers and/or characters)</td><tr><td>`time`</td><td>Time field (format HHMMSS)</td><tr><td>`timerange`</td><td>Time-range field (has a start time and end time value both HHMMSS)</td><tr><td>`daterange`</td><td>Date-range field (has a start date and end date value both YYYY-MM-DD)</td><tr><td>`address`</td><td>Address field (autocompleted by Google Maps)</dd></table>",
          "required": true
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new product field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields",
        "alias_endpoint": "/pipedrive/v1/productfields",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields__id___delete": {
      "provider_intent": "pipedrive__v1__productfields__id___delete",
      "provider_alias_intent": "/v1/productfields/id",
      "text": "Delete a product field ðŸš§",
      "category": "ProductFields",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a product field as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields/{id}",
        "alias_endpoint": "/pipedrive/v1/productfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields__id___get": {
      "provider_intent": "pipedrive__v1__productfields__id___get",
      "provider_alias_intent": "/v1/productfields/id",
      "text": "Get one product field ðŸš§",
      "category": "ProductFields",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific product field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields/{id}",
        "alias_endpoint": "/pipedrive/v1/productfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__productfields__id___put": {
      "provider_intent": "pipedrive__v1__productfields__id___put",
      "provider_alias_intent": "/v1/productfields/id",
      "text": "Update a product field ðŸš§",
      "category": "ProductFields",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the field"
        },
        "options": {
          "type": "array",
          "text": "When `field_type` is either set or enum possible options on update must be supplied as an array of objects each containing id and label for example [{\"id\"1 \"label\"\"red\"}{\"id\"2 \"label\"\"blue\"}{\"id\"3 \"label\"\"lilac\"}]"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product field\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a product field.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/productFields/{id}",
        "alias_endpoint": "/pipedrive/v1/productfields/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products___get": {
      "provider_intent": "pipedrive__v1__products___get",
      "provider_alias_intent": "/v1/products",
      "text": "Get all products ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "integer",
          "text": "If supplied only products owned by the given user will be returned"
        },
        "filter_id": {
          "type": "integer",
          "text": "The ID of the filter to use"
        },
        "ids": {
          "type": "array",
          "text": "An array of integers with the IDs of the products that should be returned in the response"
        },
        "first_char": {
          "type": "string",
          "text": "If supplied only products whose name starts with the specified letter will be returned (case insensitive)"
        },
        "get_summary": {
          "type": "boolean",
          "text": "If supplied the response will return the total numbers of products in the `additional_data",
          "enum": [
            true,
            false
          ]
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all products.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products",
        "alias_endpoint": "/pipedrive/v1/products",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products___post": {
      "provider_intent": "pipedrive__v1__products___post",
      "provider_alias_intent": "/v1/products",
      "text": "Add a product ðŸš§",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new product to the Products inventory.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products",
        "alias_endpoint": "/pipedrive/v1/products",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__search___get": {
      "provider_intent": "pipedrive__v1__products__search___get",
      "provider_alias_intent": "/v1/products/search",
      "text": "Search products ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-separated string array"
        },
        "exact_match": {
          "type": "boolean",
          "text": "When enabled only full exact matches against the given term are returned",
          "enum": [
            true,
            false
          ]
        },
        "include_fields": {
          "type": "string",
          "text": "Supports including optional fields in the results which are not provided by default"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Searches all products by name code and/or custom fields.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/search",
        "alias_endpoint": "/pipedrive/v1/products/search",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id___delete": {
      "provider_intent": "pipedrive__v1__products__id___delete",
      "provider_alias_intent": "/v1/products/id",
      "text": "Delete a product ðŸš§",
      "category": "Products",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a product as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}",
        "alias_endpoint": "/pipedrive/v1/products/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id___get": {
      "provider_intent": "pipedrive__v1__products__id___get",
      "provider_alias_intent": "/v1/products/id",
      "text": "Get one product ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}",
        "alias_endpoint": "/pipedrive/v1/products/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id___put": {
      "provider_intent": "pipedrive__v1__products__id___put",
      "provider_alias_intent": "/v1/products/id",
      "text": "Update a product ðŸš§",
      "category": "Products",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates product data.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}",
        "alias_endpoint": "/pipedrive/v1/products/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__deals___get": {
      "provider_intent": "pipedrive__v1__products__id__deals___get",
      "provider_alias_intent": "/v1/products/id/deals",
      "text": "Get deals where a product is attached to ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "status": {
          "type": "string",
          "text": "Only fetch deals with a specific status"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about deals that have a product attached to it.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/deals",
        "alias_endpoint": "/pipedrive/v1/products/id/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__files___get": {
      "provider_intent": "pipedrive__v1__products__id__files___get",
      "provider_alias_intent": "/v1/products/id/files",
      "text": "List files attached to a product ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        },
        "sort": {
          "type": "string",
          "text": "The field name and sorting mode (`field_name_1 ASC` or `field_name_1 DESC`)"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists files associated with a product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/files",
        "alias_endpoint": "/pipedrive/v1/products/id/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__followers___get": {
      "provider_intent": "pipedrive__v1__products__id__followers___get",
      "provider_alias_intent": "/v1/products/id/followers",
      "text": "List followers of a product ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the followers of a product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/products/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__followers___post": {
      "provider_intent": "pipedrive__v1__products__id__followers___post",
      "provider_alias_intent": "/v1/products/id/followers",
      "text": "Add a follower to a product ðŸš§",
      "category": "Products",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a follower to a product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/products/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__followers__follower_id___delete": {
      "provider_intent": "pipedrive__v1__products__id__followers__follower_id___delete",
      "provider_alias_intent": "/v1/products/id/followers/follower_id",
      "text": "Delete a follower from a product ðŸš§",
      "category": "Products",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  },\n  \"follower_id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the relationship between the follower and the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes a follower from a product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/followers/{follower_id}",
        "alias_endpoint": "/pipedrive/v1/products/id/followers/follower_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__products__id__permittedusers___get": {
      "provider_intent": "pipedrive__v1__products__id__permittedusers___get",
      "provider_alias_intent": "/v1/products/id/permittedusers",
      "text": "List permitted users ðŸš§",
      "category": "Products",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the product\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists users permitted to access a product.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/products/{id}/permittedUsers",
        "alias_endpoint": "/pipedrive/v1/products/id/permittedusers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__recents___get": {
      "provider_intent": "pipedrive__v1__recents___get",
      "provider_alias_intent": "/v1/recents",
      "text": "Get recents ðŸš§",
      "category": "Recents",
      "method": "GET",
      "type": "API",
      "params": {
        "since_timestamp": {
          "type": "string",
          "text": "The timestamp in UTC",
          "required": true
        },
        "items": {
          "type": "string",
          "text": "Multiple selection of item types to include in the query (optional)"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all recent changes occurred after the given timestamp.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/recents",
        "alias_endpoint": "/pipedrive/v1/recents",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles___get": {
      "provider_intent": "pipedrive__v1__roles___get",
      "provider_alias_intent": "/v1/roles",
      "text": "Get all roles ðŸš§",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all the roles within the company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles",
        "alias_endpoint": "/pipedrive/v1/roles",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles___post": {
      "provider_intent": "pipedrive__v1__roles___post",
      "provider_alias_intent": "/v1/roles",
      "text": "Add a role ðŸš§",
      "category": "Roles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the role",
          "required": true
        },
        "parent_role_id": {
          "type": "integer",
          "text": "The ID of the parent role"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles",
        "alias_endpoint": "/pipedrive/v1/roles",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id___delete": {
      "provider_intent": "pipedrive__v1__roles__id___delete",
      "provider_alias_intent": "/v1/roles/id",
      "text": "Delete a role ðŸš§",
      "category": "Roles",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a role as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}",
        "alias_endpoint": "/pipedrive/v1/roles/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id___get": {
      "provider_intent": "pipedrive__v1__roles__id___get",
      "provider_alias_intent": "/v1/roles/id",
      "text": "Get one role ðŸš§",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the details of a specific role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}",
        "alias_endpoint": "/pipedrive/v1/roles/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id___put": {
      "provider_intent": "pipedrive__v1__roles__id___put",
      "provider_alias_intent": "/v1/roles/id",
      "text": "Update role details ðŸš§",
      "category": "Roles",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "parent_role_id": {
          "type": "integer",
          "text": "The ID of the parent role"
        },
        "name": {
          "type": "string",
          "text": "The name of the role"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the parent role and/or the name of a specific role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}",
        "alias_endpoint": "/pipedrive/v1/roles/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__assignments___delete": {
      "provider_intent": "pipedrive__v1__roles__id__assignments___delete",
      "provider_alias_intent": "/v1/roles/id/assignments",
      "text": "Delete a role assignment ðŸš§",
      "category": "Roles",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Removes the assigned user from a role and adds to the default role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/assignments",
        "alias_endpoint": "/pipedrive/v1/roles/id/assignments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__assignments___get": {
      "provider_intent": "pipedrive__v1__roles__id__assignments___get",
      "provider_alias_intent": "/v1/roles/id/assignments",
      "text": "List role assignments ðŸš§",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all users assigned to a role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/assignments",
        "alias_endpoint": "/pipedrive/v1/roles/id/assignments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__assignments___post": {
      "provider_intent": "pipedrive__v1__roles__id__assignments___post",
      "provider_alias_intent": "/v1/roles/id/assignments",
      "text": "Add role assignment ðŸš§",
      "category": "Roles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The ID of the user",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Assigns a user to a role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/assignments",
        "alias_endpoint": "/pipedrive/v1/roles/id/assignments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__settings___get": {
      "provider_intent": "pipedrive__v1__roles__id__settings___get",
      "provider_alias_intent": "/v1/roles/id/settings",
      "text": "List role settings ðŸš§",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the visibility settings of a specific role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/settings",
        "alias_endpoint": "/pipedrive/v1/roles/id/settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__settings___post": {
      "provider_intent": "pipedrive__v1__roles__id__settings___post",
      "provider_alias_intent": "/v1/roles/id/settings",
      "text": "Add or update role setting ðŸš§",
      "category": "Roles",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "setting_key": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "integer",
          "text": "Possible values for the `default_visibility` setting depending on the subscription plan<br> <table class='role-setting'> <caption><b>Essential / Advanced plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner & Followers</td></tr> <tr><td>`3`</td><td>Entire company</td></tr> </table> <br> <table class='role-setting'> <caption><b>Professional / Enterprise plan</b></caption> <tr><th><b>Value</b></th><th><b>Description</b></th></tr> <tr><td>`1`</td><td>Owner only</td></tr> <tr><td>`3`</td><td>Owner&#39;s visibility group</td></tr> <tr><td>`5`</td><td>Owner&#39;s visibility group and sub-groups</td></tr> <tr><td>`7`</td><td>Entire company</td></tr> </table> <br> Read more about visibility groups <a href='https//support",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds or updates the visibility setting for a role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/settings",
        "alias_endpoint": "/pipedrive/v1/roles/id/settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__pipelines___get": {
      "provider_intent": "pipedrive__v1__roles__id__pipelines___get",
      "provider_alias_intent": "/v1/roles/id/pipelines",
      "text": "List pipeline visibility for a role ðŸš§",
      "category": "Roles",
      "method": "GET",
      "type": "API",
      "params": {
        "visible": {
          "type": "boolean",
          "text": "Whether to return the visible or hidden pipelines for the role",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns the list of either visible or hidden pipeline IDs for a specific role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/pipelines",
        "alias_endpoint": "/pipedrive/v1/roles/id/pipelines",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__roles__id__pipelines___put": {
      "provider_intent": "pipedrive__v1__roles__id__pipelines___put",
      "provider_alias_intent": "/v1/roles/id/pipelines",
      "text": "Update pipeline visibility for a role ðŸš§",
      "category": "Roles",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "visible_pipeline_ids": {
          "type": "object",
          "text": "The pipeline IDs to make the pipelines visible (add) and/or hidden (remove) for the specified role",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the role\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the specified pipelines to be visible and/or hidden for a specific role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/roles/{id}/pipelines",
        "alias_endpoint": "/pipedrive/v1/roles/id/pipelines",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages___delete": {
      "provider_intent": "pipedrive__v1__stages___delete",
      "provider_alias_intent": "/v1/stages",
      "text": "Delete multiple stages in bulk ðŸš§",
      "category": "Stages",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ids": {
          "type": "string",
          "text": "The comma-separated stage IDs to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks multiple stages as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages",
        "alias_endpoint": "/pipedrive/v1/stages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages___get": {
      "provider_intent": "pipedrive__v1__stages___get",
      "provider_alias_intent": "/v1/stages",
      "text": "Get all stages ðŸš§",
      "category": "Stages",
      "method": "GET",
      "type": "API",
      "params": {
        "pipeline_id": {
          "type": "integer",
          "text": "The ID of the pipeline to fetch stages for"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all stages.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages",
        "alias_endpoint": "/pipedrive/v1/stages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages___post": {
      "provider_intent": "pipedrive__v1__stages___post",
      "provider_alias_intent": "/v1/stages",
      "text": "Add a new stage ðŸš§",
      "category": "Stages",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the stage",
          "required": true
        },
        "pipeline_id": {
          "type": "integer",
          "text": "The ID of the pipeline to add stage to",
          "required": true
        },
        "deal_probability": {
          "type": "integer",
          "text": "The success probability percentage of the deal"
        },
        "rotten_flag": {
          "type": "boolean",
          "text": "Whether deals in this stage can become rotten",
          "enum": [
            true,
            false
          ]
        },
        "rotten_days": {
          "type": "integer",
          "text": "The number of days the deals not updated in this stage would become rotten"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new stage returns the ID upon success.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages",
        "alias_endpoint": "/pipedrive/v1/stages",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages__id___delete": {
      "provider_intent": "pipedrive__v1__stages__id___delete",
      "provider_alias_intent": "/v1/stages/id",
      "text": "Delete a stage ðŸš§",
      "category": "Stages",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the stage\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks a stage as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages/{id}",
        "alias_endpoint": "/pipedrive/v1/stages/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages__id___get": {
      "provider_intent": "pipedrive__v1__stages__id___get",
      "provider_alias_intent": "/v1/stages/id",
      "text": "Get one stage ðŸš§",
      "category": "Stages",
      "method": "GET",
      "type": "API",
      "params": {
        "everyone": {
          "type": "number",
          "text": "If `everyone=1` is provided deals summary will return deals owned by every user"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the stage\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific stage.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages/{id}",
        "alias_endpoint": "/pipedrive/v1/stages/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages__id___put": {
      "provider_intent": "pipedrive__v1__stages__id___put",
      "provider_alias_intent": "/v1/stages/id",
      "text": "Update stage details ðŸš§",
      "category": "Stages",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the stage\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a stage.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages/{id}",
        "alias_endpoint": "/pipedrive/v1/stages/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__stages__id__deals___get": {
      "provider_intent": "pipedrive__v1__stages__id__deals___get",
      "provider_alias_intent": "/v1/stages/id/deals",
      "text": "Get deals in a stage ðŸš§",
      "category": "Stages",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_id": {
          "type": "integer",
          "text": "If supplied only deals matching the given filter will be returned"
        },
        "user_id": {
          "type": "integer",
          "text": "If supplied `filter_id` will not be considered and only deals owned by the given user will be returned"
        },
        "everyone": {
          "type": "number",
          "text": "If supplied `filter_id` and `user_id` will not be considered â€“ instead deals owned by everyone will be returned"
        },
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the stage\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists deals in a specific stage.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/stages/{id}/deals",
        "alias_endpoint": "/pipedrive/v1/stages/id/deals",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__id___get": {
      "provider_intent": "pipedrive__v1__subscriptions__id___get",
      "provider_alias_intent": "/v1/subscriptions/id",
      "text": "Get details of a subscription ðŸš§",
      "category": "Subscriptions",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details of an installment or a recurring subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/{id}",
        "alias_endpoint": "/pipedrive/v1/subscriptions/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__id___delete": {
      "provider_intent": "pipedrive__v1__subscriptions__id___delete",
      "provider_alias_intent": "/v1/subscriptions/id",
      "text": "Delete a subscription ðŸš§",
      "category": "Subscriptions",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Marks an installment or a recurring subscription as deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/{id}",
        "alias_endpoint": "/pipedrive/v1/subscriptions/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__find__dealid___get": {
      "provider_intent": "pipedrive__v1__subscriptions__find__dealid___get",
      "provider_alias_intent": "/v1/subscriptions/find/dealid",
      "text": "Find subscription by deal ðŸš§",
      "category": "Subscriptions",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"dealId\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the deal\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns details of an installment or a recurring subscription by the deal ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/find/{dealId}",
        "alias_endpoint": "/pipedrive/v1/subscriptions/find/dealid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__id__payments___get": {
      "provider_intent": "pipedrive__v1__subscriptions__id__payments___get",
      "provider_alias_intent": "/v1/subscriptions/id/payments",
      "text": "Get all payments of a subscription ðŸš§",
      "category": "Subscriptions",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns all payments of an installment or recurring subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/{id}/payments",
        "alias_endpoint": "/pipedrive/v1/subscriptions/id/payments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__recurring___post": {
      "provider_intent": "pipedrive__v1__subscriptions__recurring___post",
      "provider_alias_intent": "/v1/subscriptions/recurring",
      "text": "Add a recurring subscription ðŸš§",
      "category": "Subscriptions",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "deal_id": {
          "type": "integer",
          "text": "The ID of the deal this recurring subscription is associated with",
          "required": true
        },
        "currency": {
          "type": "string",
          "text": "The currency of the recurring subscription",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "The description of the recurring subscription"
        },
        "cadence_type": {
          "type": "string",
          "text": "The interval between payments",
          "required": true
        },
        "cycles_count": {
          "type": "integer",
          "text": "Shows how many payments the subscription has"
        },
        "cycle_amount": {
          "type": "integer",
          "text": "The amount of each payment",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "The start date of the recurring subscription",
          "required": true
        },
        "infinite": {
          "type": "boolean",
          "text": "This indicates that the recurring subscription will last until it's manually canceled or deleted",
          "enum": [
            true,
            false
          ]
        },
        "payments": {
          "type": "array",
          "text": "Array of additional payments"
        },
        "update_deal_value": {
          "type": "boolean",
          "text": "Indicates that the deal value must be set to recurring subscription's MRR value",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new recurring subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/recurring",
        "alias_endpoint": "/pipedrive/v1/subscriptions/recurring",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__installment___post": {
      "provider_intent": "pipedrive__v1__subscriptions__installment___post",
      "provider_alias_intent": "/v1/subscriptions/installment",
      "text": "Add an installment subscription ðŸš§",
      "category": "Subscriptions",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "deal_id": {
          "type": "integer",
          "text": "The ID of the deal this installment subscription is associated with",
          "required": true
        },
        "currency": {
          "type": "string",
          "text": "The currency of the installment subscription",
          "required": true
        },
        "payments": {
          "type": "array",
          "text": "Array of payments",
          "required": true
        },
        "update_deal_value": {
          "type": "boolean",
          "text": "Indicates that the deal value must be set to the installment subscription's total value",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new installment subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/installment",
        "alias_endpoint": "/pipedrive/v1/subscriptions/installment",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__recurring__id___put": {
      "provider_intent": "pipedrive__v1__subscriptions__recurring__id___put",
      "provider_alias_intent": "/v1/subscriptions/recurring/id",
      "text": "Update a recurring subscription ðŸš§",
      "category": "Subscriptions",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description of the recurring subscription"
        },
        "cycle_amount": {
          "type": "integer",
          "text": "The amount of each payment"
        },
        "payments": {
          "type": "array",
          "text": "Array of additional payments"
        },
        "update_deal_value": {
          "type": "boolean",
          "text": "Indicates that the deal value must be set to recurring subscription's MRR value",
          "enum": [
            true,
            false
          ]
        },
        "effective_date": {
          "type": "string",
          "text": "All payments after that date will be affected",
          "required": true
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates a recurring subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/recurring/{id}",
        "alias_endpoint": "/pipedrive/v1/subscriptions/recurring/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__installment__id___put": {
      "provider_intent": "pipedrive__v1__subscriptions__installment__id___put",
      "provider_alias_intent": "/v1/subscriptions/installment/id",
      "text": "Update an installment subscription ðŸš§",
      "category": "Subscriptions",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "payments": {
          "type": "array",
          "text": "Array of payments",
          "required": true
        },
        "update_deal_value": {
          "type": "boolean",
          "text": "Indicates that the deal value must be set to installment subscription's total value",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates an installment subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/installment/{id}",
        "alias_endpoint": "/pipedrive/v1/subscriptions/installment/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__subscriptions__recurring__id__cancel___put": {
      "provider_intent": "pipedrive__v1__subscriptions__recurring__id__cancel___put",
      "provider_alias_intent": "/v1/subscriptions/recurring/id/cancel",
      "text": "Cancel a recurring subscription ðŸš§",
      "category": "Subscriptions",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "end_date": {
          "type": "string",
          "text": "The subscription termination date"
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the subscription\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Cancels a recurring subscription.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/subscriptions/recurring/{id}/cancel",
        "alias_endpoint": "/pipedrive/v1/subscriptions/recurring/id/cancel",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__userconnections___get": {
      "provider_intent": "pipedrive__v1__userconnections___get",
      "provider_alias_intent": "/v1/userconnections",
      "text": "Get all user connections ðŸš§",
      "category": "UserConnections",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all connections for the authorized user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/userConnections",
        "alias_endpoint": "/pipedrive/v1/userconnections",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__usersettings___get": {
      "provider_intent": "pipedrive__v1__usersettings___get",
      "provider_alias_intent": "/v1/usersettings",
      "text": "List settings of an authorized user ðŸš§",
      "category": "UserSettings",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the settings of an authorized user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/userSettings",
        "alias_endpoint": "/pipedrive/v1/usersettings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users___get": {
      "provider_intent": "pipedrive__v1__users___get",
      "provider_alias_intent": "/v1/users",
      "text": "Get all users ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all users within the company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users",
        "alias_endpoint": "/pipedrive/v1/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users___post": {
      "provider_intent": "pipedrive__v1__users___post",
      "provider_alias_intent": "/v1/users",
      "text": "Add a new user ðŸš§",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The email of the user",
          "required": true
        },
        "access": {
          "type": "array",
          "text": "The access given to the user"
        },
        "active_flag": {
          "type": "boolean",
          "text": "Whether the user is active or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Adds a new user to the company returns the ID upon success.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users",
        "alias_endpoint": "/pipedrive/v1/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__find___get": {
      "provider_intent": "pipedrive__v1__users__find___get",
      "provider_alias_intent": "/v1/users/find",
      "text": "Find users by name ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "term": {
          "type": "string",
          "text": "The search term to look for",
          "required": true
        },
        "search_by_email": {
          "type": "number",
          "text": "When enabled the term will only be matched against email addresses of users"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Finds users by their name.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/find",
        "alias_endpoint": "/pipedrive/v1/users/find",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__me___get": {
      "provider_intent": "pipedrive__v1__users__me___get",
      "provider_alias_intent": "/v1/users/me",
      "text": "Get current user data ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about an authorized user within the company with bound company data: company ID company name and domain.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/me",
        "alias_endpoint": "/pipedrive/v1/users/me",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id___get": {
      "provider_intent": "pipedrive__v1__users__id___get",
      "provider_alias_intent": "/v1/users/id",
      "text": "Get one user ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about a specific user within the company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}",
        "alias_endpoint": "/pipedrive/v1/users/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id___put": {
      "provider_intent": "pipedrive__v1__users__id___put",
      "provider_alias_intent": "/v1/users/id",
      "text": "Update user details ðŸš§",
      "category": "Users",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "active_flag": {
          "type": "boolean",
          "text": "Whether the user is active or not",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Updates the properties of a user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}",
        "alias_endpoint": "/pipedrive/v1/users/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id__followers___get": {
      "provider_intent": "pipedrive__v1__users__id__followers___get",
      "provider_alias_intent": "/v1/users/id/followers",
      "text": "List followers of a user ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the followers of a specific user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}/followers",
        "alias_endpoint": "/pipedrive/v1/users/id/followers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id__permissions___get": {
      "provider_intent": "pipedrive__v1__users__id__permissions___get",
      "provider_alias_intent": "/v1/users/id/permissions",
      "text": "List user permissions ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists aggregated permissions over all assigned permission sets for a user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}/permissions",
        "alias_endpoint": "/pipedrive/v1/users/id/permissions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id__roleassignments___get": {
      "provider_intent": "pipedrive__v1__users__id__roleassignments___get",
      "provider_alias_intent": "/v1/users/id/roleassignments",
      "text": "List role assignments ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "start": {
          "type": "integer",
          "text": "Pagination start"
        },
        "limit": {
          "type": "integer",
          "text": "Items shown per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists role assignments for a user.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}/roleAssignments",
        "alias_endpoint": "/pipedrive/v1/users/id/roleassignments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__users__id__rolesettings___get": {
      "provider_intent": "pipedrive__v1__users__id__rolesettings___get",
      "provider_alias_intent": "/v1/users/id/rolesettings",
      "text": "List user role settings ðŸš§",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the user\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Lists the settings of user's assigned role.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/users/{id}/roleSettings",
        "alias_endpoint": "/pipedrive/v1/users/id/rolesettings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__webhooks___get": {
      "provider_intent": "pipedrive__v1__webhooks___get",
      "provider_alias_intent": "/v1/webhooks",
      "text": "Get all Webhooks ðŸš§",
      "category": "Webhooks",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Returns data about all the Webhooks of a company.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/webhooks",
        "alias_endpoint": "/pipedrive/v1/webhooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__webhooks___post": {
      "provider_intent": "pipedrive__v1__webhooks___post",
      "provider_alias_intent": "/v1/webhooks",
      "text": "Create a new Webhook ðŸš§",
      "category": "Webhooks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "subscription_url": {
          "type": "string",
          "text": "A full valid publicly accessible URL which determines where to send the notifications",
          "required": true
        },
        "event_action": {
          "type": "string",
          "text": "The type of action to receive notifications about",
          "required": true
        },
        "event_object": {
          "type": "string",
          "text": "The type of object to receive notifications about",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "text": "The ID of the user that this webhook will be authorized with"
        },
        "http_auth_user": {
          "type": "string",
          "text": "The HTTP basic auth username of the subscription URL endpoint (if required)"
        },
        "http_auth_password": {
          "type": "string",
          "text": "The HTTP basic auth password of the subscription URL endpoint (if required)"
        },
        "version": {
          "type": "string",
          "text": "The webhook's version"
        }
      },
      "{}": "{}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Creates a new Webhook and returns its details.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/webhooks",
        "alias_endpoint": "/pipedrive/v1/webhooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "pipedrive__v1__webhooks__id___delete": {
      "provider_intent": "pipedrive__v1__webhooks__id___delete",
      "provider_alias_intent": "/v1/webhooks/id",
      "text": "Delete existing Webhook ðŸš§",
      "category": "Webhooks",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "{}": "{\n  \"id\": {\n    \"type\": \"integer\",\n    \"text\": \"The ID of the Webhook to delete\",\n    \"required\": true\n  }\n}",
      "domain_params": {},
      "meta": {
        "version": "1.0.0",
        "auth": [],
        "description": "Deletes the specified Webhook.",
        "rate_limit": [],
        "api_endpoint": "https://api.pipedrive.com/v1/webhooks/{id}",
        "alias_endpoint": "/pipedrive/v1/webhooks/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}