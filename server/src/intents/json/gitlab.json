{
  "app": {
    "title": "gitlab API",
    "description": "",
    "api_base": "/gitlab",
    "copyright": "",
    "copyright_year": "",
    "contact_email": ""
  },
  "category": {
    "All": ""
  },
  "routes": {
    "get_get_v3deploy_keys": {
      "provider_intent": "get_get_v3deploy_keys",
      "provider_alias_intent": "/v3/deploy_keys",
      "text": "Deploy Keys ðŸš§",
      "category": "Deploy Keys",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Deploy Keys ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/deploy_keys",
        "alias_endpoint": "/gitlab/v3/deploy_keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_namespaces_list": {
      "provider_intent": "get_get_a_namespaces_list",
      "provider_alias_intent": "/v3/namespaces",
      "text": "Get a namespaces list ðŸš§",
      "category": "Get a namespaces list",
      "method": "GET",
      "type": "API",
      "params": {
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a namespaces list",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/namespaces",
        "alias_endpoint": "/gitlab/v3/namespaces",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_currently_authenticated_users_issues": {
      "provider_intent": "get_get_currently_authenticated_users_issues",
      "provider_alias_intent": "/v3/issues",
      "text": "Get currently authenticated user's issues ðŸš§",
      "category": "Get currently authenticated user's issues",
      "method": "GET",
      "type": "API",
      "params": {
        "state": {
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "milestone": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get currently authenticated user's issues",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/issues",
        "alias_endpoint": "/gitlab/v3/issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_single_ssh_key_by_id_only_available_to_admin_users": {
      "provider_intent": "get_get_single_ssh_key_by_id_only_available_to_admin_users",
      "provider_alias_intent": "/v3/keys/id",
      "text": "Get single ssh key by id ðŸš§",
      "category": "Get single ssh key by id. Only available to admin users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get single ssh key by id",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/keys/id",
        "alias_endpoint": "/gitlab/v3/keys/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_version_information_of_the_gitlab_instance": {
      "provider_intent": "get_get_the_version_information_of_the_gitlab_instance",
      "provider_alias_intent": "/v3/version",
      "text": "This feature was introduced in GitLab 8 ðŸš§",
      "category": "Get the version information of the GitLab instance.",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/version",
        "alias_endpoint": "/gitlab/v3/version",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_login_to_get_token": {
      "provider_intent": "post_login_to_get_token",
      "provider_alias_intent": "/v3/session",
      "text": "Login to get token ðŸš§",
      "category": "Login to get token",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "password": {
          "type": "string",
          "text": "The password of the user"
        },
        "login": {
          "type": "string",
          "text": "The username"
        },
        "email": {
          "type": "string",
          "text": "The email of the user"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Login to get token",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/session",
        "alias_endpoint": "/gitlab/v3/session",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_validation_of_gitlabciyml_content": {
      "provider_intent": "post_validation_of_gitlabciyml_content",
      "provider_alias_intent": "/v3/ci/lint",
      "text": "Validation of ðŸš§",
      "category": "Validation of .gitlab-ci.yml content",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "content": {
          "type": "string",
          "text": "Content of"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Validation of ",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/ci/lint",
        "alias_endpoint": "/gitlab/v3/ci/lint",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_current_application_settings": {
      "provider_intent": "get_get_the_current_application_settings",
      "provider_alias_intent": "/v3/application/settings",
      "text": "Get the current application settings ðŸš§",
      "category": "application settings",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the current application settings",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/application/settings",
        "alias_endpoint": "/gitlab/v3/application/settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_modify_application_settings": {
      "provider_intent": "put_modify_application_settings",
      "provider_alias_intent": "/v3/application/settings",
      "text": "Modify application settings ðŸš§",
      "category": "application settings",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "domain_blacklist": {
          "type": "string",
          "text": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up"
        },
        "two_factor_grace_period": {
          "type": "integer",
          "text": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication"
        },
        "shared_runners_text": {
          "type": "string",
          "text": "Shared runners text"
        },
        "metrics_host": {
          "type": "string",
          "text": "The InfluxDB host"
        },
        "metrics_port": {
          "type": "integer",
          "text": "The UDP port to use for connecting to InfluxDB"
        },
        "metrics_pool_size": {
          "type": "integer",
          "text": "The amount of InfluxDB connections to open"
        },
        "metrics_timeout": {
          "type": "integer",
          "text": "The amount of seconds after which an InfluxDB connection will time out"
        },
        "metrics_method_call_threshold": {
          "type": "integer",
          "text": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds"
        },
        "metrics_sample_interval": {
          "type": "integer",
          "text": "The sampling interval in seconds"
        },
        "metrics_packet_size": {
          "type": "integer",
          "text": "The amount of points to store in a single UDP packet"
        },
        "sidekiq_throttling_queus": {
          "type": "[\"string\""
        },
        "\"<string>\"]": {
          "type": ""
        },
        "sidekiq_throttling_factor": {
          "type": "float",
          "text": "The factor by which the queues should be throttled"
        },
        "recaptcha_site_key": {
          "type": "string",
          "text": "Generate site key at http"
        },
        "recaptcha_private_key": {
          "type": "string",
          "text": "Generate private key at http"
        },
        "akismet_api_key": {
          "type": "string",
          "text": "Generate API key at http"
        },
        "sentry_dsn": {
          "type": "string",
          "text": "Sentry Data Source Name"
        },
        "koding_url": {
          "type": "string",
          "text": "The Koding team URL"
        },
        "plantuml_url": {
          "type": "string",
          "text": "The PlantUML server URL"
        },
        "housekeeping_bitmaps_enabled": {
          "type": "boolean",
          "text": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance",
          "enum": [
            true,
            false
          ]
        },
        "housekeeping_incremental_repack_period": {
          "type": "integer",
          "text": "Number of Git pushes after which an incremental 'git repack' is run"
        },
        "housekeeping_full_repack_period": {
          "type": "integer",
          "text": "Number of Git pushes after which a full 'git repack' is run"
        },
        "housekeeping_gc_period": {
          "type": "integer",
          "text": "Number of Git pushes after which 'git gc' is run"
        },
        "default_branch_protection": {
          "type": "integer",
          "text": "Determine if developers can push to master (This can only be one of 012)"
        },
        "default_project_visibility": {
          "type": "integer",
          "text": "The default project visibility (This can only be one of 01020)"
        },
        "default_snippet_visibility": {
          "type": "integer",
          "text": "The default snippet visibility (This can only be one of 01020)"
        },
        "default_group_visibility": {
          "type": "integer",
          "text": "The default group visibility (This can only be one of 01020)"
        },
        "restricted_visibility_levels": {
          "type": "[\"string\""
        },
        "import_sources": {
          "type": "fogbugz",
          "text": "Enabled sources for code import during project creation"
        },
        "disabled_oauth_sign_in_sources": {
          "type": "[\"string\""
        },
        "enabled_git_access_protocol": {
          "type": "string",
          "text": "Allow only the selected protocols to be used for Git access"
        },
        "gravatar_enabled": {
          "type": "boolean",
          "text": "Flag indicating if the Gravatar service is enabled",
          "enum": [
            true,
            false
          ]
        },
        "default_projects_limit": {
          "type": "integer",
          "text": "The maximum number of personal projects"
        },
        "max_attachment_size": {
          "type": "integer",
          "text": "Maximum attachment size in MB"
        },
        "session_expire_delay": {
          "type": "integer",
          "text": "Session duration in minutes"
        },
        "user_oauth_applications": {
          "type": "boolean",
          "text": "Allow users to register any application to use GitLab as an OAuth provider",
          "enum": [
            true,
            false
          ]
        },
        "user_default_external": {
          "type": "boolean",
          "text": "Newly registered users will by default be external",
          "enum": [
            true,
            false
          ]
        },
        "signup_enabled": {
          "type": "boolean",
          "text": "Flag indicating if sign up is enabled",
          "enum": [
            true,
            false
          ]
        },
        "send_user_confirmation_email": {
          "type": "boolean",
          "text": "Send confirmation email on sign-up",
          "enum": [
            true,
            false
          ]
        },
        "domain_whitelist": {
          "type": "string",
          "text": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up"
        },
        "domain_blacklist_enabled": {
          "type": "boolean",
          "text": "Enable domain blacklist for sign ups",
          "enum": [
            true,
            false
          ]
        },
        "after_sign_up_text": {
          "type": "string",
          "text": "Text shown after sign up"
        },
        "signin_enabled": {
          "type": "boolean",
          "text": "Flag indicating if sign in is enabled",
          "enum": [
            true,
            false
          ]
        },
        "require_two_factor_authentication": {
          "type": "boolean",
          "text": "Require all users to setup Two-factor authentication",
          "enum": [
            true,
            false
          ]
        },
        "home_page_url": {
          "type": "string",
          "text": "We will redirect non-logged in users to this page"
        },
        "after_sign_out_path": {
          "type": "string",
          "text": "We will redirect users to this page after they sign out"
        },
        "sign_in_text": {
          "type": "string",
          "text": "The sign in text of the GitLab application"
        },
        "help_page_text": {
          "type": "string",
          "text": "Custom text displayed on the help page"
        },
        "shared_runners_enabled": {
          "type": "boolean",
          "text": "Enable shared runners for new projects",
          "enum": [
            true,
            false
          ]
        },
        "max_artifacts_size": {
          "type": "integer",
          "text": "Set the maximum file size each build's artifacts can have"
        },
        "container_registry_token_expire_delay": {
          "type": "integer",
          "text": "Authorization token duration (minutes)"
        },
        "metrics_enabled": {
          "type": "boolean",
          "text": "Enable the InfluxDB metrics",
          "enum": [
            true,
            false
          ]
        },
        "sidekiq_throttling_enabled": {
          "type": "boolean",
          "text": "Enable Sidekiq Job Throttling",
          "enum": [
            true,
            false
          ]
        },
        "recaptcha_enabled": {
          "type": "boolean",
          "text": "Helps prevent bots from creating accounts",
          "enum": [
            true,
            false
          ]
        },
        "akismet_enabled": {
          "type": "boolean",
          "text": "Helps prevent bots from creating issues",
          "enum": [
            true,
            false
          ]
        },
        "admin_notification_email": {
          "type": "string",
          "text": "Abuse reports will be sent to this address if it is set"
        },
        "sentry_enabled": {
          "type": "boolean",
          "text": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab get it here",
          "enum": [
            true,
            false
          ]
        },
        "repository_storage": {
          "type": "string",
          "text": "Storage paths for new projects"
        },
        "repository_checks_enabled": {
          "type": "boolean",
          "text": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues",
          "enum": [
            true,
            false
          ]
        },
        "koding_enabled": {
          "type": "boolean",
          "text": "Enable Koding",
          "enum": [
            true,
            false
          ]
        },
        "plantuml_enabled": {
          "type": "boolean",
          "text": "Enable PlantUML",
          "enum": [
            true,
            false
          ]
        },
        "version_check_enabled": {
          "type": "boolean",
          "text": "Let GitLab inform you when an update is available",
          "enum": [
            true,
            false
          ]
        },
        "email_author_in_body": {
          "type": "boolean",
          "text": "Some email servers do not support overriding the email sender name",
          "enum": [
            true,
            false
          ]
        },
        "html_emails_enabled": {
          "type": "boolean",
          "text": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use",
          "enum": [
            true,
            false
          ]
        },
        "housekeeping_enabled": {
          "type": "boolean",
          "text": "Enable automatic repository housekeeping (git repack git gc)",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Modify application settings",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/application/settings",
        "alias_endpoint": "/gitlab/v3/application/settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_list_of_the_available_template_dockfiles": {
      "provider_intent": "get_get_the_list_of_the_available_template_dockfiles",
      "provider_alias_intent": "/v3/dockerfiles",
      "text": "Dockerfiles ðŸš§",
      "category": "dockerfiles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/dockerfiles",
        "alias_endpoint": "/gitlab/v3/dockerfiles",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_text_for_a_specific_template_present_in_local_filesystem_dockfiles": {
      "provider_intent": "get_get_the_text_for_a_specific_template_present_in_local_filesystem_dockfiles",
      "provider_alias_intent": "/v3/dockerfiles/name",
      "text": "Dockerfiles ðŸš§",
      "category": "dockerfiles",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/dockerfiles/name",
        "alias_endpoint": "/gitlab/v3/dockerfiles/name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_list_of_the_available_template": {
      "provider_intent": "get_get_the_list_of_the_available_template",
      "provider_alias_intent": "/v3/templates/gitlab_ci_ymls",
      "text": "Templates ðŸš§",
      "category": "templates",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/templates/gitlab_ci_ymls",
        "alias_endpoint": "/gitlab/v3/templates/gitlab_ci_ymls",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_text_for_a_specific_template_present_in_local_filesystem": {
      "provider_intent": "get_get_the_text_for_a_specific_template_present_in_local_filesystem",
      "provider_alias_intent": "/v3/templates/gitlab_ci_ymls/name",
      "text": "Templates ðŸš§",
      "category": "templates",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/templates/gitlab_ci_ymls/name",
        "alias_endpoint": "/gitlab/v3/templates/gitlab_ci_ymls/name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_denies_an_access_request_for_the_given_user": {
      "provider_intent": "delete_denies_an_access_request_for_the_given_user",
      "provider_alias_intent": "/v3/projects/id/access_requests/user_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/access_requests/:user_id",
        "alias_endpoint": "/gitlab/v3/projects/id/access_requests/user_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_approves_an_access_request_for_the_given_user": {
      "provider_intent": "put_approves_an_access_request_for_the_given_user",
      "provider_alias_intent": "/v3/projects/id/access_requests/user_id/approve",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "access_level": {
          "type": "integer",
          "text": "A valid access level (defaults"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/access_requests/:user_id/approve",
        "alias_endpoint": "/gitlab/v3/projects/id/access_requests/user_id/approve",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_list_of_access_requests_for_a_group": {
      "provider_intent": "get_gets_a_list_of_access_requests_for_a_group",
      "provider_alias_intent": "/v3/groups/id/access_requests",
      "text": "Groups ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/access_requests",
        "alias_endpoint": "/gitlab/v3/groups/id/access_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_requests_access_for_the_authenticated_user_to_a_group": {
      "provider_intent": "post_requests_access_for_the_authenticated_user_to_a_group",
      "provider_alias_intent": "/v3/groups/id/access_requests",
      "text": "Groups ðŸš§",
      "category": "groups",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/access_requests",
        "alias_endpoint": "/gitlab/v3/groups/id/access_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_removes_a_user_from_a_group_or_project": {
      "provider_intent": "delete_removes_a_user_from_a_group_or_project",
      "provider_alias_intent": "/v3/projects/id/members/user_id",
      "text": "Removes a user from a group or project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Removes a user from a group or project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/members/:user_id",
        "alias_endpoint": "/gitlab/v3/projects/id/members/user_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_member_of_a_group_or_project": {
      "provider_intent": "get_gets_a_member_of_a_group_or_project",
      "provider_alias_intent": "/v3/projects/id/members/user_id",
      "text": "Gets a member of a group or project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Gets a member of a group or project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/members/:user_id",
        "alias_endpoint": "/gitlab/v3/projects/id/members/user_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_updates_a_member_of_a_group_or_project": {
      "provider_intent": "put_updates_a_member_of_a_group_or_project",
      "provider_alias_intent": "/v3/projects/id/members/user_id",
      "text": "Updates a member of a group or project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "access_level": {
          "type": "integer",
          "text": "A valid access level"
        },
        "expires_at": {
          "type": "dateTime",
          "text": "Date string in the format YEAR-MONTH-DAY"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Updates a member of a group or project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/members/:user_id",
        "alias_endpoint": "/gitlab/v3/projects/id/members/user_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_list_of_group_or_project_members_viewable_by_the_authenticated_user": {
      "provider_intent": "get_gets_a_list_of_group_or_project_members_viewable_by_the_authenticated_user",
      "provider_alias_intent": "/v3/projects/id/members",
      "text": "Gets a list of group or project members viewable by the authenticated user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "query": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Gets a list of group or project members viewable by the authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/members",
        "alias_endpoint": "/gitlab/v3/projects/id/members",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_adds_a_member_to_a_group_or_project": {
      "provider_intent": "post_adds_a_member_to_a_group_or_project",
      "provider_alias_intent": "/v3/projects/id/members",
      "text": "Adds a member to a group or project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "user_id": {
          "type": "integer",
          "text": "The user ID of the new member"
        },
        "access_level": {
          "type": "integer",
          "text": "A valid access level (defaults"
        },
        "expires_at": {
          "type": "dateTime",
          "text": "Date string in the format YEAR-MONTH-DAY"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Adds a member to a group or project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/members",
        "alias_endpoint": "/gitlab/v3/projects/id/members",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_group_level_notification_level_settings_defaults_to_global": {
      "provider_intent": "get_get_group_level_notification_level_settings_defaults_to_global",
      "provider_alias_intent": "/v3/groups/id/notification_settings",
      "text": "This feature was introduced in GitLab 8 ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/notification_settings",
        "alias_endpoint": "/gitlab/v3/groups/id/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_group_level_notification_level_settings_defaults_to_global": {
      "provider_intent": "put_update_group_level_notification_level_settings_defaults_to_global",
      "provider_alias_intent": "/v3/groups/id/notification_settings",
      "text": "This feature was introduced in GitLab 8 ðŸš§",
      "category": "groups",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "level": {
          "type": "string",
          "text": "The group notification level"
        },
        "new_note": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "merge_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "failed_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "success_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/notification_settings",
        "alias_endpoint": "/gitlab/v3/groups/id/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_projects_in_this_group": {
      "provider_intent": "get_get_a_list_of_projects_in_this_group",
      "provider_alias_intent": "/v3/groups/id/projects",
      "text": "Get a list of projects in this group ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of projects in this group",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/projects",
        "alias_endpoint": "/gitlab/v3/groups/id/projects",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_transfer_a_project_to_the_group_namespace_available_only_for_admin": {
      "provider_intent": "post_transfer_a_project_to_the_group_namespace_available_only_for_admin",
      "provider_alias_intent": "/v3/groups/id/projects/project_id",
      "text": "Transfer a project to the group namespace ðŸš§",
      "category": "groups",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Transfer a project to the group namespace",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/projects/:project_id",
        "alias_endpoint": "/gitlab/v3/groups/id/projects/project_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_remove_a_group": {
      "provider_intent": "delete_remove_a_group",
      "provider_alias_intent": "/v3/groups/id",
      "text": "Remove a group ðŸš§",
      "category": "groups",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Remove a group",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id",
        "alias_endpoint": "/gitlab/v3/groups/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_group_with_containing_projects": {
      "provider_intent": "get_get_a_single_group_with_containing_projects",
      "provider_alias_intent": "/v3/groups/id",
      "text": "Get a single group with containing projects ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single group with containing projects",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id",
        "alias_endpoint": "/gitlab/v3/groups/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_a_group_available_only_for_users_who_can_administrate_groups": {
      "provider_intent": "put_update_a_group_available_only_for_users_who_can_administrate_groups",
      "provider_alias_intent": "/v3/groups/id",
      "text": "Update a group ðŸš§",
      "category": "groups",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the group"
        },
        "path": {
          "type": "string",
          "text": "The path of the group"
        },
        "description": {
          "type": "string",
          "text": "The description of the group"
        },
        "visibility_level": {
          "type": "integer",
          "text": "The visibility level of the group"
        },
        "lfs_enabled": {
          "type": "boolean",
          "text": "Enable/disable LFS for the projects in this group",
          "enum": [
            true,
            false
          ]
        },
        "request_access_enabled": {
          "type": "boolean",
          "text": "Allow users to request member access",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update a group",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id",
        "alias_endpoint": "/gitlab/v3/groups/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_group_issues": {
      "provider_intent": "get_get_a_list_of_group_issues",
      "provider_alias_intent": "/v3/groups/id/issues",
      "text": "Get a list of group issues ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {
        "state": {
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "milestone": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of group issues",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/id/issues",
        "alias_endpoint": "/gitlab/v3/groups/id/issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_groups_list": {
      "provider_intent": "get_get_a_groups_list",
      "provider_alias_intent": "/v3/groups",
      "text": "Get a groups list ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {
        "statistics": {
          "type": "string"
        },
        "all_available": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {
        "skip_groups": {
          "type": "[\"integer\""
        },
        "\"<integer>\"]": {
          "type": ""
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a groups list",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups",
        "alias_endpoint": "/gitlab/v3/groups",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_group_available_only_for_users_who_can_create_groups": {
      "provider_intent": "post_create_a_group_available_only_for_users_who_can_create_groups",
      "provider_alias_intent": "/v3/groups",
      "text": "Create a group ðŸš§",
      "category": "groups",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the group"
        },
        "path": {
          "type": "string",
          "text": "The path of the group"
        },
        "description": {
          "type": "string",
          "text": "The description of the group"
        },
        "visibility_level": {
          "type": "integer",
          "text": "The visibility level of the group"
        },
        "lfs_enabled": {
          "type": "boolean",
          "text": "Enable/disable LFS for the projects in this group",
          "enum": [
            true,
            false
          ]
        },
        "request_access_enabled": {
          "type": "boolean",
          "text": "Allow users to request member access",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a group",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups",
        "alias_endpoint": "/gitlab/v3/groups",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_list_of_owned_groups_for_authenticated_user": {
      "provider_intent": "get_get_list_of_owned_groups_for_authenticated_user",
      "provider_alias_intent": "/v3/groups/owned",
      "text": "Get list of owned groups for authenticated user ðŸš§",
      "category": "groups",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "statistics": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get list of owned groups for authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/groups/owned",
        "alias_endpoint": "/gitlab/v3/groups/owned",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_hook": {
      "provider_intent": "delete_delete_a_hook",
      "provider_alias_intent": "/v3/hooks/id",
      "text": "Delete a hook ðŸš§",
      "category": "hooks",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/hooks/id",
        "alias_endpoint": "/gitlab/v3/hooks/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_test_a_hook": {
      "provider_intent": "get_test_a_hook",
      "provider_alias_intent": "/v3/hooks/id",
      "text": "Test a hook ðŸš§",
      "category": "hooks",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Test a hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/hooks/id",
        "alias_endpoint": "/gitlab/v3/hooks/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_list_of_system_hooks": {
      "provider_intent": "get_get_the_list_of_system_hooks",
      "provider_alias_intent": "/v3/hooks",
      "text": "Get the list of system hooks ðŸš§",
      "category": "hooks",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the list of system hooks",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/hooks",
        "alias_endpoint": "/gitlab/v3/hooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_system_hook": {
      "provider_intent": "post_create_a_new_system_hook",
      "provider_alias_intent": "/v3/hooks",
      "text": "Create a new system hook ðŸš§",
      "category": "hooks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "url": {
          "type": "string",
          "text": "The URL to send the request to"
        },
        "token": {
          "type": "string",
          "text": "The token used to validate payloads"
        },
        "push_events": {
          "type": "boolean",
          "text": "Trigger hook on push events",
          "enum": [
            true,
            false
          ]
        },
        "tag_push_events": {
          "type": "boolean",
          "text": "Trigger hook on tag push events",
          "enum": [
            true,
            false
          ]
        },
        "enable_ssl_verification": {
          "type": "boolean",
          "text": "Do SSL verification when triggering the hook",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new system hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/hooks",
        "alias_endpoint": "/gitlab/v3/hooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_v3internal_allowed": {
      "provider_intent": "post_post_v3internal_allowed",
      "provider_alias_intent": "/v3/internal/allowed",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/allowed",
        "alias_endpoint": "/gitlab/v3/internal/allowed",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_v3internal_broadcast_message": {
      "provider_intent": "get_get_v3internal_broadcast_message",
      "provider_alias_intent": "/v3/internal/broadcast_message",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/broadcast_message",
        "alias_endpoint": "/gitlab/v3/internal/broadcast_message",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_v3internal_check": {
      "provider_intent": "get_get_v3internal_check",
      "provider_alias_intent": "/v3/internal/check",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/check",
        "alias_endpoint": "/gitlab/v3/internal/check",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_v3internal_discover": {
      "provider_intent": "get_get_v3internal_discover",
      "provider_alias_intent": "/v3/internal/discover",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/discover",
        "alias_endpoint": "/gitlab/v3/internal/discover",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_v3internal_lfs_authenticate": {
      "provider_intent": "post_post_v3internal_lfs_authenticate",
      "provider_alias_intent": "/v3/internal/lfs_authenticate",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/lfs_authenticate",
        "alias_endpoint": "/gitlab/v3/internal/lfs_authenticate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_v3internal_merge_request_urls": {
      "provider_intent": "get_get_v3internal_merge_request_urls",
      "provider_alias_intent": "/v3/internal/merge_request_urls",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/merge_request_urls",
        "alias_endpoint": "/gitlab/v3/internal/merge_request_urls",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_v3internal_two_factor_recovery_codes": {
      "provider_intent": "post_post_v3internal_two_factor_recovery_codes",
      "provider_alias_intent": "/v3/internal/two_factor_recovery_codes",
      "text": "Internal ðŸš§",
      "category": "internal",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Internal ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/internal/two_factor_recovery_codes",
        "alias_endpoint": "/gitlab/v3/internal/two_factor_recovery_codes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_list_of_the_available_license_template": {
      "provider_intent": "get_get_the_list_of_the_available_license_template",
      "provider_alias_intent": "/v3/templates/licenses",
      "text": "Templates ðŸš§",
      "category": "templates",
      "method": "GET",
      "type": "API",
      "params": {
        "popular": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/templates/licenses",
        "alias_endpoint": "/gitlab/v3/templates/licenses",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_text_for_a_specific_license": {
      "provider_intent": "get_get_the_text_for_a_specific_license",
      "provider_alias_intent": "/v3/templates/licenses/name",
      "text": "Templates ðŸš§",
      "category": "templates",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/templates/licenses/name",
        "alias_endpoint": "/gitlab/v3/templates/licenses/name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_global_notification_level_settings_and_email_defaults_to_participate": {
      "provider_intent": "get_get_global_notification_level_settings_and_email_defaults_to_participate",
      "provider_alias_intent": "/v3/notification_settings",
      "text": "Notification ðŸš§",
      "category": "notification settings",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/notification_settings",
        "alias_endpoint": "/gitlab/v3/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_global_notification_level_settings_and_email_defaults_to_participate": {
      "provider_intent": "put_update_global_notification_level_settings_and_email_defaults_to_participate",
      "provider_alias_intent": "/v3/notification_settings",
      "text": "Notification ðŸš§",
      "category": "notification settings",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "level": {
          "type": "string",
          "text": "The global notification level"
        },
        "notification_email": {
          "type": "string",
          "text": "The email address to send notifications"
        },
        "new_note": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "merge_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "failed_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "success_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/notification_settings",
        "alias_endpoint": "/gitlab/v3/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_list_of_access_requests_for_a_project": {
      "provider_intent": "get_gets_a_list_of_access_requests_for_a_project",
      "provider_alias_intent": "/v3/projects/id/access_requests",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/access_requests",
        "alias_endpoint": "/gitlab/v3/projects/id/access_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_requests_access_for_the_authenticated_user_to_a_project": {
      "provider_intent": "post_requests_access_for_the_authenticated_user_to_a_project",
      "provider_alias_intent": "/v3/projects/id/access_requests",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/access_requests",
        "alias_endpoint": "/gitlab/v3/projects/id/access_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_board_list": {
      "provider_intent": "delete_delete_a_board_list",
      "provider_alias_intent": "/v3/projects/id/boards/board_id/lists/list_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards/:board_id/lists/:list_id",
        "alias_endpoint": "/gitlab/v3/projects/id/boards/board_id/lists/list_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_a_project_board": {
      "provider_intent": "get_get_a_list_of_a_project_board",
      "provider_alias_intent": "/v3/projects/id/boards/board_id/lists/list_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards/:board_id/lists/:list_id",
        "alias_endpoint": "/gitlab/v3/projects/id/boards/board_id/lists/list_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_moves_a_board_list_to_a_new_position": {
      "provider_intent": "put_moves_a_board_list_to_a_new_position",
      "provider_alias_intent": "/v3/projects/id/boards/board_id/lists/list_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "position": {
          "type": "integer",
          "text": "The position of the list"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards/:board_id/lists/:list_id",
        "alias_endpoint": "/gitlab/v3/projects/id/boards/board_id/lists/list_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_lists_of_a_project_board": {
      "provider_intent": "get_get_the_lists_of_a_project_board",
      "provider_alias_intent": "/v3/projects/id/boards/board_id/lists",
      "text": "Does not include `backlog` and `done` lists ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Does not include `backlog` and `done` lists",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards/:board_id/lists",
        "alias_endpoint": "/gitlab/v3/projects/id/boards/board_id/lists",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_board_list": {
      "provider_intent": "post_create_a_new_board_list",
      "provider_alias_intent": "/v3/projects/id/boards/board_id/lists",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "label_id": {
          "type": "integer",
          "text": "The ID of an existing label"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards/:board_id/lists",
        "alias_endpoint": "/gitlab/v3/projects/id/boards/board_id/lists",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_project_boards": {
      "provider_intent": "get_get_all_project_boards",
      "provider_alias_intent": "/v3/projects/id/boards",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/boards",
        "alias_endpoint": "/gitlab/v3/projects/id/boards",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_download_the_artifacts_file_from_build": {
      "provider_intent": "get_download_the_artifacts_file_from_build",
      "provider_alias_intent": "/v3/projects/id/builds/artifacts/ref_name/download",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "job": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/artifacts/:ref_name/download",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/artifacts/ref_name/download",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_keep_the_artifacts_to_prevent_them_from_being_deleted": {
      "provider_intent": "post_keep_the_artifacts_to_prevent_them_from_being_deleted",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/artifacts/keep",
      "text": "Keep the artifacts to prevent them from being deleted ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Keep the artifacts to prevent them from being deleted",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/artifacts/keep",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/artifacts/keep",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_specific_build_of_a_project": {
      "provider_intent": "get_get_a_specific_build_of_a_project",
      "provider_alias_intent": "/v3/projects/id/builds/build_id",
      "text": "Get a specific build of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a specific build of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_cancel_a_specific_build_of_a_project": {
      "provider_intent": "post_cancel_a_specific_build_of_a_project",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/cancel",
      "text": "Cancel a specific build of a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Cancel a specific build of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/cancel",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/cancel",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_erase_build_remove_artifacts_and_build_trace": {
      "provider_intent": "post_erase_build_remove_artifacts_and_build_trace",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/erase",
      "text": "Erase build (remove artifacts and build trace) ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Erase build (remove artifacts and build trace)",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/erase",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/erase",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_trigger_a_manual_build": {
      "provider_intent": "post_trigger_a_manual_build",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/play",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was added in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/play",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/play",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_retry_a_specific_build_of_a_project": {
      "provider_intent": "post_retry_a_specific_build_of_a_project",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/retry",
      "text": "Retry a specific build of a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Retry a specific build of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/retry",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/retry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_trace_of_a_specific_build_of_a_project": {
      "provider_intent": "get_get_a_trace_of_a_specific_build_of_a_project",
      "provider_alias_intent": "/v3/projects/id/builds/build_id/trace",
      "text": "Get a trace of a specific build of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a trace of a specific build of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds/:build_id/trace",
        "alias_endpoint": "/gitlab/v3/projects/id/builds/build_id/trace",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_builds": {
      "provider_intent": "get_get_a_project_builds",
      "provider_alias_intent": "/v3/projects/id/builds",
      "text": "Get a project builds ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "scope": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project builds",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/builds",
        "alias_endpoint": "/gitlab/v3/projects/id/builds",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_deploy_key_for_a_project": {
      "provider_intent": "delete_delete_deploy_key_for_a_project",
      "provider_alias_intent": "/v3/projects/id/keys/key_id",
      "text": "Delete deploy key for a project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete deploy key for a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys/:key_id",
        "alias_endpoint": "/gitlab/v3/projects/id/keys/key_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_single_deploy_key": {
      "provider_intent": "get_get_single_deploy_key",
      "provider_alias_intent": "/v3/projects/id/keys/key_id",
      "text": "Get single deploy key ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get single deploy key",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys/:key_id",
        "alias_endpoint": "/gitlab/v3/projects/id/keys/key_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_disable_a_deploy_key_for_a_project": {
      "provider_intent": "delete_disable_a_deploy_key_for_a_project",
      "provider_alias_intent": "/v3/projects/id/keys/key_id/disable",
      "text": "This feature was added in GitLab 8 ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was added in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys/:key_id/disable",
        "alias_endpoint": "/gitlab/v3/projects/id/keys/key_id/disable",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_enable_a_deploy_key_for_a_project": {
      "provider_intent": "post_enable_a_deploy_key_for_a_project",
      "provider_alias_intent": "/v3/projects/id/keys/key_id/enable",
      "text": "This feature was added in GitLab 8 ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was added in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys/:key_id/enable",
        "alias_endpoint": "/gitlab/v3/projects/id/keys/key_id/enable",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_specific_projects_deploy_keys": {
      "provider_intent": "get_get_a_specific_projects_deploy_keys",
      "provider_alias_intent": "/v3/projects/id/keys",
      "text": "Get a specific project's deploy keys ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a specific project's deploy keys",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys",
        "alias_endpoint": "/gitlab/v3/projects/id/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_new_deploy_key_to_currently_authenticated_user": {
      "provider_intent": "post_add_new_deploy_key_to_currently_authenticated_user",
      "provider_alias_intent": "/v3/projects/id/keys",
      "text": "Add new deploy key to currently authenticated user ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "key": {
          "type": "string",
          "text": "The new deploy key"
        },
        "title": {
          "type": "string",
          "text": "The name of the deploy key"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add new deploy key to currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/keys",
        "alias_endpoint": "/gitlab/v3/projects/id/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_deployments_of_the_project": {
      "provider_intent": "get_get_all_deployments_of_the_project",
      "provider_alias_intent": "/v3/projects/id/deployments",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/deployments",
        "alias_endpoint": "/gitlab/v3/projects/id/deployments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_specific_deployment": {
      "provider_intent": "get_gets_a_specific_deployment",
      "provider_alias_intent": "/v3/projects/id/deployments/deployment_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/deployments/:deployment_id",
        "alias_endpoint": "/gitlab/v3/projects/id/deployments/deployment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_deletes_an_existing_environment": {
      "provider_intent": "delete_deletes_an_existing_environment",
      "provider_alias_intent": "/v3/projects/id/environments/environment_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/environments/:environment_id",
        "alias_endpoint": "/gitlab/v3/projects/id/environments/environment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_updates_an_existing_environment": {
      "provider_intent": "put_updates_an_existing_environment",
      "provider_alias_intent": "/v3/projects/id/environments/environment_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The new environment name"
        },
        "external_url": {
          "type": "string",
          "text": "The new URL on which this deployment is viewable"
        },
        "slug": {
          "type": "string"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/environments/:environment_id",
        "alias_endpoint": "/gitlab/v3/projects/id/environments/environment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_environments_of_the_project": {
      "provider_intent": "get_get_all_environments_of_the_project",
      "provider_alias_intent": "/v3/projects/id/environments",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/environments",
        "alias_endpoint": "/gitlab/v3/projects/id/environments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_creates_a_new_environment": {
      "provider_intent": "post_creates_a_new_environment",
      "provider_alias_intent": "/v3/projects/id/environments",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the environment to be created"
        },
        "external_url": {
          "type": "string",
          "text": "URL on which this deployment is viewable"
        },
        "slug": {
          "type": "string"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/environments",
        "alias_endpoint": "/gitlab/v3/projects/id/environments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_remove_a_forked_from_relationship": {
      "provider_intent": "delete_remove_a_forked_from_relationship",
      "provider_alias_intent": "/v3/projects/id/fork",
      "text": "Remove a forked_from relationship ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Remove a forked_from relationship",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/fork",
        "alias_endpoint": "/gitlab/v3/projects/id/fork",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_mark_this_project_as_forked_from_another": {
      "provider_intent": "post_mark_this_project_as_forked_from_another",
      "provider_alias_intent": "/v3/projects/id/fork/forked_from_id",
      "text": "Mark this project as forked from another ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Mark this project as forked from another",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/fork/:forked_from_id",
        "alias_endpoint": "/gitlab/v3/projects/id/fork/forked_from_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_deletes_project_hook": {
      "provider_intent": "delete_deletes_project_hook",
      "provider_alias_intent": "/v3/projects/id/hooks/hook_id",
      "text": "Deletes project hook ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Deletes project hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/hooks/:hook_id",
        "alias_endpoint": "/gitlab/v3/projects/id/hooks/hook_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_hook": {
      "provider_intent": "get_get_a_project_hook",
      "provider_alias_intent": "/v3/projects/id/hooks/hook_id",
      "text": "Get a project hook ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/hooks/:hook_id",
        "alias_endpoint": "/gitlab/v3/projects/id/hooks/hook_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_project_hook": {
      "provider_intent": "put_update_an_existing_project_hook",
      "provider_alias_intent": "/v3/projects/id/hooks/hook_id",
      "text": "Update an existing project hook ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "url": {
          "type": "string",
          "text": "The URL to send the request to"
        },
        "push_events": {
          "type": "boolean",
          "text": "Trigger hook on push events",
          "enum": [
            true,
            false
          ]
        },
        "issues_events": {
          "type": "boolean",
          "text": "Trigger hook on issues events",
          "enum": [
            true,
            false
          ]
        },
        "merge_requests_events": {
          "type": "boolean",
          "text": "Trigger hook on merge request events",
          "enum": [
            true,
            false
          ]
        },
        "tag_push_events": {
          "type": "boolean",
          "text": "Trigger hook on tag push events",
          "enum": [
            true,
            false
          ]
        },
        "note_events": {
          "type": "boolean",
          "text": "Trigger hook on note(comment) events",
          "enum": [
            true,
            false
          ]
        },
        "build_events": {
          "type": "boolean",
          "text": "Trigger hook on build events",
          "enum": [
            true,
            false
          ]
        },
        "pipeline_events": {
          "type": "boolean",
          "text": "Trigger hook on pipeline events",
          "enum": [
            true,
            false
          ]
        },
        "wiki_page_events": {
          "type": "boolean",
          "text": "Trigger hook on wiki events",
          "enum": [
            true,
            false
          ]
        },
        "enable_ssl_verification": {
          "type": "boolean",
          "text": "Do SSL verification when triggering the hook",
          "enum": [
            true,
            false
          ]
        },
        "token": {
          "type": "string",
          "text": "Secret token to validate received payloads; this will not be returned in the response"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing project hook",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/hooks/:hook_id",
        "alias_endpoint": "/gitlab/v3/projects/id/hooks/hook_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_project_hooks": {
      "provider_intent": "get_get_project_hooks",
      "provider_alias_intent": "/v3/projects/id/hooks",
      "text": "Get project hooks ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get project hooks",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/hooks",
        "alias_endpoint": "/gitlab/v3/projects/id/hooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_hook_to_project": {
      "provider_intent": "post_add_hook_to_project",
      "provider_alias_intent": "/v3/projects/id/hooks",
      "text": "Add hook to project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "url": {
          "type": "string",
          "text": "The URL to send the request to"
        },
        "push_events": {
          "type": "boolean",
          "text": "Trigger hook on push events",
          "enum": [
            true,
            false
          ]
        },
        "issues_events": {
          "type": "boolean",
          "text": "Trigger hook on issues events",
          "enum": [
            true,
            false
          ]
        },
        "merge_requests_events": {
          "type": "boolean",
          "text": "Trigger hook on merge request events",
          "enum": [
            true,
            false
          ]
        },
        "tag_push_events": {
          "type": "boolean",
          "text": "Trigger hook on tag push events",
          "enum": [
            true,
            false
          ]
        },
        "note_events": {
          "type": "boolean",
          "text": "Trigger hook on note(comment) events",
          "enum": [
            true,
            false
          ]
        },
        "build_events": {
          "type": "boolean",
          "text": "Trigger hook on build events",
          "enum": [
            true,
            false
          ]
        },
        "pipeline_events": {
          "type": "boolean",
          "text": "Trigger hook on pipeline events",
          "enum": [
            true,
            false
          ]
        },
        "wiki_page_events": {
          "type": "boolean",
          "text": "Trigger hook on wiki events",
          "enum": [
            true,
            false
          ]
        },
        "enable_ssl_verification": {
          "type": "boolean",
          "text": "Do SSL verification when triggering the hook",
          "enum": [
            true,
            false
          ]
        },
        "token": {
          "type": "string",
          "text": "Secret token to validate received payloads; this will not be returned in the response"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add hook to project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/hooks",
        "alias_endpoint": "/gitlab/v3/projects/id/hooks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_awardables_award_emoji": {
      "provider_intent": "delete_delete_a_awardables_award_emoji",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji/award_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji/award_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_specific_award_emoji": {
      "provider_intent": "get_get_a_specific_award_emoji",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji/award_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji/award_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_project_awardable_award_emoji": {
      "provider_intent": "get_get_a_list_of_project_awardable_award_emoji",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id/notes/:note_id/award_emoji",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_award_a_new_emoji": {
      "provider_intent": "post_award_a_new_emoji",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of a award_emoji (without colons)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id/notes/:note_id/award_emoji",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id/notes/note_id/award_emoji",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_project_issue": {
      "provider_intent": "delete_delete_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id",
      "text": "Delete a project issue ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_project_issue": {
      "provider_intent": "get_get_a_single_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id",
      "text": "Get a single project issue ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_issue": {
      "provider_intent": "put_update_an_existing_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id",
      "text": "Update an existing issue ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of an issue"
        },
        "updated_at": {
          "type": "dateTime",
          "text": "Date time when the issue was updated"
        },
        "state_event": {
          "type": "string",
          "text": "State of the issue (This can only be one of reopenclose)"
        },
        "description": {
          "type": "string",
          "text": "The description of an issue"
        },
        "assignee_id": {
          "type": "integer",
          "text": "The ID of a user to assign issue"
        },
        "milestone_id": {
          "type": "integer",
          "text": "The ID of a milestone to assign issue"
        },
        "labels": {
          "type": "string",
          "text": "Comma-separated list of label names"
        },
        "due_date": {
          "type": "string",
          "text": "Date time string in the format YEAR-MONTH-DAY"
        },
        "confidential": {
          "type": "boolean",
          "text": "Boolean parameter if the issue should be confidential",
          "enum": [
            true,
            false
          ]
        },
        "created_at": {
          "type": "string"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_spent_time_for_a_project_issue": {
      "provider_intent": "post_add_spent_time_for_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/add_spent_time",
      "text": "Add spent time for a project issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "duration": {
          "type": "string",
          "text": "The duration to be parsed"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add spent time for a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/add_spent_time",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/add_spent_time",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_move_an_existing_issue": {
      "provider_intent": "post_move_an_existing_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/move",
      "text": "Move an existing issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "to_project_id": {
          "type": "integer",
          "text": "The ID of the new project"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Move an existing issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/move",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/move",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_reset_spent_time_for_a_project_issue": {
      "provider_intent": "post_reset_spent_time_for_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/reset_spent_time",
      "text": "Reset spent time for a project issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Reset spent time for a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/reset_spent_time",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/reset_spent_time",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_reset_the_time_estimate_for_a_project_issue": {
      "provider_intent": "post_reset_the_time_estimate_for_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/reset_time_estimate",
      "text": "Reset the time estimate for a project issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Reset the time estimate for a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/reset_time_estimate",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/reset_time_estimate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_set_a_time_estimate_for_a_project_issue": {
      "provider_intent": "post_set_a_time_estimate_for_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/time_estimate",
      "text": "Set a time estimate for a project issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "duration": {
          "type": "string",
          "text": "The duration to be parsed"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set a time estimate for a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/time_estimate",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/time_estimate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_show_time_stats_for_a_project_issue": {
      "provider_intent": "get_show_time_stats_for_a_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues/issue_id/time_stats",
      "text": "Show time stats for a project issue ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Show time stats for a project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues/:issue_id/time_stats",
        "alias_endpoint": "/gitlab/v3/projects/id/issues/issue_id/time_stats",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_todo_on_an_issuable": {
      "provider_intent": "post_create_a_todo_on_an_issuable",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/todo",
      "text": "Create a todo on an issuable ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a todo on an issuable",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/todo",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/todo",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_noteable_note": {
      "provider_intent": "delete_delete_a_noteable_note",
      "provider_alias_intent": "/v3/projects/id/snippets/noteable_id/notes/note_id",
      "text": "Delete a +noteable+ note ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a +noteable+ note",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:noteable_id/notes/:note_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/noteable_id/notes/note_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_noteable_note": {
      "provider_intent": "get_get_a_single_noteable_note",
      "provider_alias_intent": "/v3/projects/id/snippets/noteable_id/notes/note_id",
      "text": "Get a single +noteable+ note ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single +noteable+ note",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:noteable_id/notes/:note_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/noteable_id/notes/note_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_noteable_note": {
      "provider_intent": "put_update_an_existing_noteable_note",
      "provider_alias_intent": "/v3/projects/id/snippets/noteable_id/notes/note_id",
      "text": "Update an existing +noteable+ note ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "body": {
          "type": "string",
          "text": "The content of a note"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing +noteable+ note",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:noteable_id/notes/:note_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/noteable_id/notes/note_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_project_noteable_notes": {
      "provider_intent": "get_get_a_list_of_project_noteable_notes",
      "provider_alias_intent": "/v3/projects/id/snippets/noteable_id/notes",
      "text": "Get a list of project +noteable+ notes ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of project +noteable+ notes",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:noteable_id/notes",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/noteable_id/notes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_noteable_note": {
      "provider_intent": "post_create_a_new_noteable_note",
      "provider_alias_intent": "/v3/projects/id/snippets/noteable_id/notes",
      "text": "Create a new +noteable+ note ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "body": {
          "type": "string",
          "text": "The content of a note"
        },
        "created_at": {
          "type": "string",
          "text": "The creation date of the note"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new +noteable+ note",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:noteable_id/notes",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/noteable_id/notes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_unsubscribe_from_a_resource": {
      "provider_intent": "delete_unsubscribe_from_a_resource",
      "provider_alias_intent": "/v3/projects/id/merge_requests/subscribable_id/subscription",
      "text": "Unsubscribe from a resource ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Unsubscribe from a resource",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:subscribable_id/subscription",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/subscribable_id/subscription",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_subscribe_to_a_resource": {
      "provider_intent": "post_subscribe_to_a_resource",
      "provider_alias_intent": "/v3/projects/id/merge_requests/subscribable_id/subscription",
      "text": "Subscribe to a resource ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Subscribe to a resource",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:subscribable_id/subscription",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/subscribable_id/subscription",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_project_issues": {
      "provider_intent": "get_get_a_list_of_project_issues",
      "provider_alias_intent": "/v3/projects/id/issues",
      "text": "Get a list of project issues ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "state": {
          "type": "string"
        },
        "iid": {
          "type": "string"
        },
        "labels": {
          "type": "string"
        },
        "milestone": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of project issues",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues",
        "alias_endpoint": "/gitlab/v3/projects/id/issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_project_issue": {
      "provider_intent": "post_create_a_new_project_issue",
      "provider_alias_intent": "/v3/projects/id/issues",
      "text": "Create a new project issue ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of an issue"
        },
        "created_at": {
          "type": "dateTime",
          "text": "Date time when the issue was created"
        },
        "merge_request_for_resolving_discussions": {
          "type": "integer",
          "text": "The IID of a merge request for which to resolve discussions"
        },
        "description": {
          "type": "string",
          "text": "The description of an issue"
        },
        "assignee_id": {
          "type": "integer",
          "text": "The ID of a user to assign issue"
        },
        "milestone_id": {
          "type": "integer",
          "text": "The ID of a milestone to assign issue"
        },
        "labels": {
          "type": "string",
          "text": "Comma-separated list of label names"
        },
        "due_date": {
          "type": "string",
          "text": "Date time string in the format YEAR-MONTH-DAY"
        },
        "confidential": {
          "type": "boolean",
          "text": "Boolean parameter if the issue should be confidential",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new project issue",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/issues",
        "alias_endpoint": "/gitlab/v3/projects/id/issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_existing_label": {
      "provider_intent": "delete_delete_an_existing_label",
      "provider_alias_intent": "/v3/projects/id/labels",
      "text": "Delete an existing label ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "name": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an existing label",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/labels",
        "alias_endpoint": "/gitlab/v3/projects/id/labels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_labels_of_the_project": {
      "provider_intent": "get_get_all_labels_of_the_project",
      "provider_alias_intent": "/v3/projects/id/labels",
      "text": "Get all labels of the project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get all labels of the project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/labels",
        "alias_endpoint": "/gitlab/v3/projects/id/labels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_label": {
      "provider_intent": "post_create_a_new_label",
      "provider_alias_intent": "/v3/projects/id/labels",
      "text": "Create a new label ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the label to be created"
        },
        "color": {
          "type": "string",
          "text": "The color of the label given in 6-digit hex notation with leading '#' sign (e"
        },
        "description": {
          "type": "string",
          "text": "The description of label to be created"
        },
        "priority": {
          "type": "integer",
          "text": "The priority of the label"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new label",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/labels",
        "alias_endpoint": "/gitlab/v3/projects/id/labels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_label_at_least_one_optional_parameter_is_required": {
      "provider_intent": "put_update_an_existing_label_at_least_one_optional_parameter_is_required",
      "provider_alias_intent": "/v3/projects/id/labels",
      "text": "Update an existing label ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the label to be updated"
        },
        "new_name": {
          "type": "string",
          "text": "The new name of the label"
        },
        "color": {
          "type": "string",
          "text": "The new color of the label given in 6-digit hex notation with leading '#' sign (e"
        },
        "description": {
          "type": "string",
          "text": "The new description of label"
        },
        "priority": {
          "type": "integer",
          "text": "The priority of the label"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing label",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/labels",
        "alias_endpoint": "/gitlab/v3/projects/id/labels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_comments_of_a_merge_request": {
      "provider_intent": "get_get_the_comments_of_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/comments",
      "text": "Duplicate ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Duplicate",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/comments",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_a_comment_to_a_merge_request": {
      "provider_intent": "post_post_a_comment_to_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/comments",
      "text": "Duplicate ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "note": {
          "type": "string",
          "text": "The text of the comment"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Duplicate",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/comments",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_merge_request": {
      "provider_intent": "get_get_a_single_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id",
      "text": "Get a single merge request ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_a_merge_request": {
      "provider_intent": "put_update_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id",
      "text": "Update a merge request ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the merge request"
        },
        "target_branch": {
          "type": "string",
          "text": "The target branch"
        },
        "state_event": {
          "type": "string",
          "text": "Status of the merge request (This can only be one of closereopenmerge)"
        },
        "description": {
          "type": "string",
          "text": "The description of the merge request"
        },
        "assignee_id": {
          "type": "integer",
          "text": "The ID of a user to assign the merge request"
        },
        "milestone_id": {
          "type": "integer",
          "text": "The ID of a milestone to assign the merge request"
        },
        "labels": {
          "type": "string",
          "text": "Comma-separated list of label names"
        },
        "remove_source_branch": {
          "type": "boolean",
          "text": "Remove source branch when merging",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update a merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_cancel_merge_if_\"merge_when_pipeline_succeeds\"_is_enabled": {
      "provider_intent": "post_cancel_merge_if_\"merge_when_pipeline_succeeds\"_is_enabled",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/cancel_merge_when_build_succeeds",
      "text": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/cancel_merge_when_build_succeeds",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/cancel_merge_when_build_succeeds",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_show_the_merge_request_changes": {
      "provider_intent": "get_show_the_merge_request_changes",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/changes",
      "text": "Show the merge request changes ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Show the merge request changes",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/changes",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/changes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_list_issues_that_will_be_closed_on_merge": {
      "provider_intent": "get_list_issues_that_will_be_closed_on_merge",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/closes_issues",
      "text": "List issues that will be closed on merge ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "List issues that will be closed on merge",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/closes_issues",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/closes_issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_commits_of_a_merge_request": {
      "provider_intent": "get_get_the_commits_of_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/commits",
      "text": "Get the commits of a merge request ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the commits of a merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/commits",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/commits",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_merge_a_merge_request": {
      "provider_intent": "put_merge_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/merge",
      "text": "Merge a merge request ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "merge_commit_message": {
          "type": "string",
          "text": "Custom merge commit message"
        },
        "should_remove_source_branch": {
          "type": "boolean",
          "text": "When true the source branch will be deleted if possible",
          "enum": [
            true,
            false
          ]
        },
        "merge_when_build_succeeds": {
          "type": "boolean",
          "text": "When true this merge request will be merged when the pipeline succeeds",
          "enum": [
            true,
            false
          ]
        },
        "sha": {
          "type": "string",
          "text": "When present must have the HEAD SHA of the source branch"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Merge a merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/merge",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/merge",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_merge_request_diff_versions": {
      "provider_intent": "get_get_a_list_of_merge_request_diff_versions",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/versions",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/versions",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/versions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_merge_request_diff_version": {
      "provider_intent": "get_get_a_single_merge_request_diff_version",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/versions/version_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/versions/:version_id",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/versions/version_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_merge_request": {
      "provider_intent": "delete_delete_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id",
      "text": "Delete a merge request ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_spent_time_for_a_project_merge_request": {
      "provider_intent": "post_add_spent_time_for_a_project_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/add_spent_time",
      "text": "Add spent time for a project merge_request ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "duration": {
          "type": "string",
          "text": "The duration to be parsed"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add spent time for a project merge_request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/add_spent_time",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/add_spent_time",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_reset_spent_time_for_a_project_merge_request": {
      "provider_intent": "post_reset_spent_time_for_a_project_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/reset_spent_time",
      "text": "Reset spent time for a project merge_request ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Reset spent time for a project merge_request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/reset_spent_time",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/reset_spent_time",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_reset_the_time_estimate_for_a_project_merge_request": {
      "provider_intent": "post_reset_the_time_estimate_for_a_project_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/reset_time_estimate",
      "text": "Reset the time estimate for a project merge_request ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Reset the time estimate for a project merge_request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/reset_time_estimate",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/reset_time_estimate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_set_a_time_estimate_for_a_project_merge_request": {
      "provider_intent": "post_set_a_time_estimate_for_a_project_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/time_estimate",
      "text": "Set a time estimate for a project merge_request ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "duration": {
          "type": "string",
          "text": "The duration to be parsed"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set a time estimate for a project merge_request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/time_estimate",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/time_estimate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_show_time_stats_for_a_project_merge_request": {
      "provider_intent": "get_show_time_stats_for_a_project_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests/merge_request_id/time_stats",
      "text": "Show time stats for a project merge_request ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Show time stats for a project merge_request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests/:merge_request_id/time_stats",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests/merge_request_id/time_stats",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_list_merge_requests": {
      "provider_intent": "get_list_merge_requests",
      "provider_alias_intent": "/v3/projects/id/merge_requests",
      "text": "List merge requests ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "state": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {
        "iid": {
          "type": "[\"integer\""
        },
        "\"<integer>\"]": {
          "type": ""
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "List merge requests",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_merge_request": {
      "provider_intent": "post_create_a_merge_request",
      "provider_alias_intent": "/v3/projects/id/merge_requests",
      "text": "Create a merge request ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the merge request"
        },
        "source_branch": {
          "type": "string",
          "text": "The source branch"
        },
        "target_branch": {
          "type": "string",
          "text": "The target branch"
        },
        "target_project_id": {
          "type": "integer",
          "text": "The target project of the merge request defaults to the"
        },
        "description": {
          "type": "string",
          "text": "The description of the merge request"
        },
        "assignee_id": {
          "type": "integer",
          "text": "The ID of a user to assign the merge request"
        },
        "milestone_id": {
          "type": "integer",
          "text": "The ID of a milestone to assign the merge request"
        },
        "labels": {
          "type": "string",
          "text": "Comma-separated list of label names"
        },
        "remove_source_branch": {
          "type": "boolean",
          "text": "Remove source branch when merging",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a merge request",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/merge_requests",
        "alias_endpoint": "/gitlab/v3/projects/id/merge_requests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_project_milestone": {
      "provider_intent": "get_get_a_single_project_milestone",
      "provider_alias_intent": "/v3/projects/id/milestones/milestone_id",
      "text": "Get a single project milestone ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single project milestone",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/milestones/:milestone_id",
        "alias_endpoint": "/gitlab/v3/projects/id/milestones/milestone_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_project_milestone": {
      "provider_intent": "put_update_an_existing_project_milestone",
      "provider_alias_intent": "/v3/projects/id/milestones/milestone_id",
      "text": "Update an existing project milestone ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the milestone"
        },
        "state_event": {
          "type": "string",
          "text": "The state event of the milestone  (This can only be one of closeactivate)"
        },
        "description": {
          "type": "string",
          "text": "The description of the milestone"
        },
        "due_date": {
          "type": "string",
          "text": "The due date of the milestone"
        },
        "start_date": {
          "type": "string",
          "text": "The start date of the milestone"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing project milestone",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/milestones/:milestone_id",
        "alias_endpoint": "/gitlab/v3/projects/id/milestones/milestone_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_issues_for_a_single_project_milestone": {
      "provider_intent": "get_get_all_issues_for_a_single_project_milestone",
      "provider_alias_intent": "/v3/projects/id/milestones/milestone_id/issues",
      "text": "Get all issues for a single project milestone ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get all issues for a single project milestone",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/milestones/:milestone_id/issues",
        "alias_endpoint": "/gitlab/v3/projects/id/milestones/milestone_id/issues",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_project_milestones": {
      "provider_intent": "get_get_a_list_of_project_milestones",
      "provider_alias_intent": "/v3/projects/id/milestones",
      "text": "Get a list of project milestones ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "state": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {
        "iid": {
          "type": "[\"integer\""
        },
        "\"<integer>\"]": {
          "type": ""
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of project milestones",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/milestones",
        "alias_endpoint": "/gitlab/v3/projects/id/milestones",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_project_milestone": {
      "provider_intent": "post_create_a_new_project_milestone",
      "provider_alias_intent": "/v3/projects/id/milestones",
      "text": "Create a new project milestone ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the milestone"
        },
        "description": {
          "type": "string",
          "text": "The description of the milestone"
        },
        "due_date": {
          "type": "string",
          "text": "The due date of the milestone"
        },
        "start_date": {
          "type": "string",
          "text": "The start date of the milestone"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new project milestone",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/milestones",
        "alias_endpoint": "/gitlab/v3/projects/id/milestones",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_project_level_notification_level_settings_defaults_to_global": {
      "provider_intent": "get_get_project_level_notification_level_settings_defaults_to_global",
      "provider_alias_intent": "/v3/projects/id/notification_settings",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/notification_settings",
        "alias_endpoint": "/gitlab/v3/projects/id/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_project_level_notification_level_settings_defaults_to_global": {
      "provider_intent": "put_update_project_level_notification_level_settings_defaults_to_global",
      "provider_alias_intent": "/v3/projects/id/notification_settings",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "level": {
          "type": "string",
          "text": "The project notification level"
        },
        "new_note": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_issue": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "new_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reopen_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "close_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "reassign_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "merge_merge_request": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "failed_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        },
        "success_pipeline": {
          "type": "boolean",
          "text": "Enable/disable this notification",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/notification_settings",
        "alias_endpoint": "/gitlab/v3/projects/id/notification_settings",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_a_specific_pipeline_for_the_project": {
      "provider_intent": "get_gets_a_specific_pipeline_for_the_project",
      "provider_alias_intent": "/v3/projects/id/pipelines/pipeline_id",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/pipelines/:pipeline_id",
        "alias_endpoint": "/gitlab/v3/projects/id/pipelines/pipeline_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_cancel_all_builds_in_the_pipeline": {
      "provider_intent": "post_cancel_all_builds_in_the_pipeline",
      "provider_alias_intent": "/v3/projects/id/pipelines/pipeline_id/cancel",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/pipelines/:pipeline_id/cancel",
        "alias_endpoint": "/gitlab/v3/projects/id/pipelines/pipeline_id/cancel",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_retry_failed_builds_in_the_pipeline": {
      "provider_intent": "post_retry_failed_builds_in_the_pipeline",
      "provider_alias_intent": "/v3/projects/id/pipelines/pipeline_id/retry",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/pipelines/:pipeline_id/retry",
        "alias_endpoint": "/gitlab/v3/projects/id/pipelines/pipeline_id/retry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_pipelines_of_the_project": {
      "provider_intent": "get_get_all_pipelines_of_the_project",
      "provider_alias_intent": "/v3/projects/id/pipelines",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/pipelines",
        "alias_endpoint": "/gitlab/v3/projects/id/pipelines",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_branch": {
      "provider_intent": "delete_delete_a_branch",
      "provider_alias_intent": "/v3/projects/id/repository/branches/branch",
      "text": "Delete a branch ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a branch",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches/:branch",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches/branch",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_branch": {
      "provider_intent": "get_get_a_single_branch",
      "provider_alias_intent": "/v3/projects/id/repository/branches/branch",
      "text": "Get a single branch ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single branch",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches/:branch",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches/branch",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_protect_a_single_branch": {
      "provider_intent": "put_protect_a_single_branch",
      "provider_alias_intent": "/v3/projects/id/repository/branches/branch/protect",
      "text": "Protect a single branch ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "developers_can_push": {
          "type": "boolean",
          "text": "Flag if developers can push to that branch",
          "enum": [
            true,
            false
          ]
        },
        "developers_can_merge": {
          "type": "boolean",
          "text": "Flag if developers can merge to that branch",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Protect a single branch",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches/:branch/protect",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches/branch/protect",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_unprotect_a_single_branch": {
      "provider_intent": "put_unprotect_a_single_branch",
      "provider_alias_intent": "/v3/projects/id/repository/branches/branch/unprotect",
      "text": "Unprotect a single branch ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Unprotect a single branch",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches/:branch/unprotect",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches/branch/unprotect",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_repository_branches": {
      "provider_intent": "get_get_a_project_repository_branches",
      "provider_alias_intent": "/v3/projects/id/repository/branches",
      "text": "Get a project repository branches ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project repository branches",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_branch": {
      "provider_intent": "post_create_branch",
      "provider_alias_intent": "/v3/projects/id/repository/branches",
      "text": "Create branch ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "branch_name": {
          "type": "string",
          "text": "The name of the branch"
        },
        "ref": {
          "type": "string",
          "text": "Create branch from commit sha or existing branch"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create branch",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/branches",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/branches",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_commits_comments": {
      "provider_intent": "get_get_a_commits_comments",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/comments",
      "text": "Get a commit's comments ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a commit's comments",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/comments",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_comment_to_commit": {
      "provider_intent": "post_post_comment_to_commit",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/comments",
      "text": "Post comment to commit ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "note": {
          "type": "string",
          "text": "The text of the comment"
        },
        "line": {
          "type": "integer",
          "text": "The line number"
        },
        "line_type": {
          "type": "new",
          "text": "The type of the line (This can only be one of newold)"
        },
        "path": {
          "type": "string",
          "text": "The file path"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Post comment to commit",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/comments",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/comments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_specific_commit_of_a_project": {
      "provider_intent": "get_get_a_specific_commit_of_a_project",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha",
      "text": "Get a specific commit of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a specific commit of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_raw_file_contents": {
      "provider_intent": "get_get_a_raw_file_contents",
      "provider_alias_intent": "/v3/projects/id/repository/blobs/sha",
      "text": "Get a raw file contents ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "filepath": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a raw file contents",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/blobs/:sha",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/blobs/sha",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_builds_for_a_specific_commit_of_a_project": {
      "provider_intent": "get_get_builds_for_a_specific_commit_of_a_project",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/builds",
      "text": "Get builds for a specific commit of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "scope": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get builds for a specific commit of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/builds",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/builds",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_cherry_pick_commit_into_a_branch": {
      "provider_intent": "post_cherry_pick_commit_into_a_branch",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/cherry_pick",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "branch": {
          "type": "string",
          "text": "The name of the branch"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/cherry_pick",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/cherry_pick",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_diff_for_a_specific_commit_of_a_project": {
      "provider_intent": "get_get_the_diff_for_a_specific_commit_of_a_project",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/diff",
      "text": "Get the diff for a specific commit of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the diff for a specific commit of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/diff",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/diff",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_commits_statuses": {
      "provider_intent": "get_get_a_commits_statuses",
      "provider_alias_intent": "/v3/projects/id/repository/commits/sha/statuses",
      "text": "Get a commit's statuses ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "ref": {
          "type": "string"
        },
        "stage": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "all": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a commit's statuses",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits/:sha/statuses",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits/sha/statuses",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_repository_commits": {
      "provider_intent": "get_get_a_project_repository_commits",
      "provider_alias_intent": "/v3/projects/id/repository/commits",
      "text": "Get a project repository commits ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "ref_name": {
          "type": "string"
        },
        "since": {
          "type": "string"
        },
        "until": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project repository commits",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_commit_multiple_file_changes_as_one_commit": {
      "provider_intent": "post_commit_multiple_file_changes_as_one_commit",
      "provider_alias_intent": "/v3/projects/id/repository/commits",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "branch_name": {
          "type": "string",
          "text": "The name of branch"
        },
        "commit_message": {
          "type": "string",
          "text": "Commit message"
        },
        "actions": {
          "type": "[]",
          "text": "Actions to perform in commit"
        },
        "author_email": {
          "type": "string",
          "text": "Author email for commit"
        },
        "author_name": {
          "type": "string",
          "text": "Author name for commit"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/commits",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/commits",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_existing_file_in_repository": {
      "provider_intent": "delete_delete_an_existing_file_in_repository",
      "provider_alias_intent": "/v3/projects/id/repository/files",
      "text": "Delete an existing file in repository ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "file_path": {
          "type": "string"
        },
        "branch_name": {
          "type": "string"
        },
        "commit_message": {
          "type": "string"
        },
        "author_email": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an existing file in repository",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/files",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_file_from_repository": {
      "provider_intent": "get_get_a_file_from_repository",
      "provider_alias_intent": "/v3/projects/id/repository/files",
      "text": "Get a file from repository ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "file_path": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a file from repository",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/files",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_new_file_in_repository": {
      "provider_intent": "post_create_new_file_in_repository",
      "provider_alias_intent": "/v3/projects/id/repository/files",
      "text": "Create new file in repository ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "file_path": {
          "type": "string",
          "text": "The path to new file"
        },
        "branch_name": {
          "type": "string",
          "text": "The name of branch"
        },
        "commit_message": {
          "type": "string",
          "text": "Commit Message"
        },
        "content": {
          "type": "string",
          "text": "File content"
        },
        "author_email": {
          "type": "string",
          "text": "The email of the author"
        },
        "author_name": {
          "type": "string",
          "text": "The name of the author"
        },
        "encoding": {
          "type": "string",
          "text": "File encoding (This can only be one of base64)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create new file in repository",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/files",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_existing_file_in_repository": {
      "provider_intent": "put_update_existing_file_in_repository",
      "provider_alias_intent": "/v3/projects/id/repository/files",
      "text": "Update existing file in repository ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "file_path": {
          "type": "string",
          "text": "The path to new file"
        },
        "branch_name": {
          "type": "string",
          "text": "The name of branch"
        },
        "commit_message": {
          "type": "string",
          "text": "Commit Message"
        },
        "content": {
          "type": "string",
          "text": "File content"
        },
        "author_email": {
          "type": "string",
          "text": "The email of the author"
        },
        "author_name": {
          "type": "string",
          "text": "The name of the author"
        },
        "encoding": {
          "type": "string",
          "text": "File encoding (This can only be one of base64)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update existing file in repository",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/files",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/files",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_a_release_note_to_a_tag": {
      "provider_intent": "post_add_a_release_note_to_a_tag",
      "provider_alias_intent": "/v3/projects/id/repository/tags/tag_name/release",
      "text": "Add a release note to a tag ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Release notes with markdown support"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add a release note to a tag",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags/:tag_name/release",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags/tag_name/release",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_a_tags_release_note": {
      "provider_intent": "put_update_a_tags_release_note",
      "provider_alias_intent": "/v3/projects/id/repository/tags/tag_name/release",
      "text": "Update a tag's release note ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Release notes with markdown support"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update a tag's release note",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags/:tag_name/release",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags/tag_name/release",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_repository_tag": {
      "provider_intent": "delete_delete_a_repository_tag",
      "provider_alias_intent": "/v3/projects/id/repository/tags/tag_name",
      "text": "Delete a repository tag ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a repository tag",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags/:tag_name",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags/tag_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_repository_tag": {
      "provider_intent": "get_get_a_single_repository_tag",
      "provider_alias_intent": "/v3/projects/id/repository/tags/tag_name",
      "text": "Get a single repository tag ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single repository tag",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags/:tag_name",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags/tag_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_repository_tags": {
      "provider_intent": "get_get_a_project_repository_tags",
      "provider_alias_intent": "/v3/projects/id/repository/tags",
      "text": "Get a project repository tags ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project repository tags",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_repository_tag": {
      "provider_intent": "post_create_a_new_repository_tag",
      "provider_alias_intent": "/v3/projects/id/repository/tags",
      "text": "Create a new repository tag ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tag_name": {
          "type": "string",
          "text": "The name of the tag"
        },
        "ref": {
          "type": "string",
          "text": "The commit sha or branch name"
        },
        "message": {
          "type": "string",
          "text": "Specifying a message creates an annotated tag"
        },
        "release_description": {
          "type": "string",
          "text": "Specifying release notes stored in the GitLab database"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new repository tag",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tags",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_an_archive_of_the_repository": {
      "provider_intent": "get_get_an_archive_of_the_repository",
      "provider_alias_intent": "/v3/projects/id/repository/archive",
      "text": "Get an archive of the repository ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "sha": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get an archive of the repository",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/archive",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/archive",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_compare_two_branches_tags_or_commits": {
      "provider_intent": "get_compare_two_branches_tags_or_commits",
      "provider_alias_intent": "/v3/projects/id/repository/compare",
      "text": "Compare two branches tags or commits ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Compare two branches tags or commits",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/compare",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/compare",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_repository_contributors": {
      "provider_intent": "get_get_repository_contributors",
      "provider_alias_intent": "/v3/projects/id/repository/contributors",
      "text": "Get repository contributors ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get repository contributors",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/contributors",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/contributors",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_v3projects_id_repository_merged_branches": {
      "provider_intent": "delete_delete_v3projects_id_repository_merged_branches",
      "provider_alias_intent": "/v3/projects/id/repository/merged_branches",
      "text": "Merged Branches ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Merged Branches ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/merged_branches",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/merged_branches",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_raw_blob_contents_by_blob_sha": {
      "provider_intent": "get_get_a_raw_blob_contents_by_blob_sha",
      "provider_alias_intent": "/v3/projects/id/repository/raw_blobs/sha",
      "text": "Get a raw blob contents by blob sha ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a raw blob contents by blob sha",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/raw_blobs/:sha",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/raw_blobs/sha",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_project_repository_tree": {
      "provider_intent": "get_get_a_project_repository_tree",
      "provider_alias_intent": "/v3/projects/id/repository/tree",
      "text": "Get a project repository tree ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "ref_name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "recursive": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a project repository tree",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/repository/tree",
        "alias_endpoint": "/gitlab/v3/projects/id/repository/tree",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_runners_available_for_project": {
      "provider_intent": "get_get_runners_available_for_project",
      "provider_alias_intent": "/v3/projects/id/runners",
      "text": "Get runners available for project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "scope": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get runners available for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/runners",
        "alias_endpoint": "/gitlab/v3/projects/id/runners",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_enable_a_runner_for_a_project": {
      "provider_intent": "post_enable_a_runner_for_a_project",
      "provider_alias_intent": "/v3/projects/id/runners",
      "text": "Enable a runner for a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "runner_id": {
          "type": "integer",
          "text": "The ID of the runner"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Enable a runner for a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/runners",
        "alias_endpoint": "/gitlab/v3/projects/id/runners",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_disable_projects_runner": {
      "provider_intent": "delete_disable_projects_runner",
      "provider_alias_intent": "/v3/projects/id/runners/runner_id",
      "text": "Disable project's runner ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Disable project's runner",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/runners/:runner_id",
        "alias_endpoint": "/gitlab/v3/projects/id/runners/runner_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_service_for_project": {
      "provider_intent": "delete_delete_a_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/service_slug",
      "text": "Delete a service for project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/:service_slug",
        "alias_endpoint": "/gitlab/v3/projects/id/services/service_slug",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_service_settings_for_project": {
      "provider_intent": "get_get_the_service_settings_for_project",
      "provider_alias_intent": "/v3/projects/id/services/service_slug",
      "text": "Get the service settings for project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the service settings for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/:service_slug",
        "alias_endpoint": "/gitlab/v3/projects/id/services/service_slug",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_asana_service_for_project": {
      "provider_intent": "put_set_asana_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/asana",
      "text": "Set asana service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "api_key": {
          "type": "string",
          "text": "User API token"
        },
        "restrict_to_branch": {
          "type": "string",
          "text": "Comma-separated list of branches which will be automatically inspected"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set asana service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/asana",
        "alias_endpoint": "/gitlab/v3/projects/id/services/asana",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_assembla_service_for_project": {
      "provider_intent": "put_set_assembla_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/assembla",
      "text": "Set assembla service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The authentication token"
        },
        "subdomain": {
          "type": "string",
          "text": "Subdomain setting"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set assembla service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/assembla",
        "alias_endpoint": "/gitlab/v3/projects/id/services/assembla",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_bamboo_service_for_project": {
      "provider_intent": "put_set_bamboo_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/bamboo",
      "text": "Set bamboo service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "bamboo_url": {
          "type": "string",
          "text": "Bamboo root URL like https"
        },
        "build_key": {
          "type": "string",
          "text": "Bamboo build plan key like"
        },
        "username": {
          "type": "string",
          "text": "A user with API access if applicable"
        },
        "password": {
          "type": "string",
          "text": "Passord of the user"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set bamboo service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/bamboo",
        "alias_endpoint": "/gitlab/v3/projects/id/services/bamboo",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_bugzilla_service_for_project": {
      "provider_intent": "put_set_bugzilla_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/bugzilla",
      "text": "Set bugzilla service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "new_issue_url": {
          "type": "string",
          "text": "New issue URL"
        },
        "issues_url": {
          "type": "string",
          "text": "Issues URL"
        },
        "project_url": {
          "type": "string",
          "text": "Project URL"
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "title": {
          "type": "string",
          "text": "Title"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set bugzilla service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/bugzilla",
        "alias_endpoint": "/gitlab/v3/projects/id/services/bugzilla",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_buildkite_service_for_project": {
      "provider_intent": "put_set_buildkite_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/buildkite",
      "text": "Set buildkite service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "Buildkite project GitLab token"
        },
        "project_url": {
          "type": "string",
          "text": "The buildkite project URL"
        },
        "enable_ssl_verification": {
          "type": "boolean",
          "text": "Enable SSL verification for communication",
          "enum": [
            true,
            false
          ]
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set buildkite service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/buildkite",
        "alias_endpoint": "/gitlab/v3/projects/id/services/buildkite",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_buildsemail_service_for_project": {
      "provider_intent": "put_set_buildsemail_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/builds-email",
      "text": "Set builds-email service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "recipients": {
          "type": "string",
          "text": "Comma-separated list of recipient email addresses"
        },
        "add_pusher": {
          "type": "boolean",
          "text": "Add pusher to recipients list",
          "enum": [
            true,
            false
          ]
        },
        "notify_only_broken_builds": {
          "type": "boolean",
          "text": "Notify only broken builds",
          "enum": [
            true,
            false
          ]
        },
        "build_events": {
          "type": "string",
          "text": "Event will be triggered when a build status changes"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set builds-email service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/builds-email",
        "alias_endpoint": "/gitlab/v3/projects/id/services/builds-email",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_campfire_service_for_project": {
      "provider_intent": "put_set_campfire_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/campfire",
      "text": "Set campfire service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "Campfire token"
        },
        "subdomain": {
          "type": "string",
          "text": "Campfire subdomain"
        },
        "room": {
          "type": "string",
          "text": "Campfire room"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set campfire service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/campfire",
        "alias_endpoint": "/gitlab/v3/projects/id/services/campfire",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_customissue-tracker_service_for_project": {
      "provider_intent": "put_set_customissue-tracker_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/custom-issue-tracker",
      "text": "Set custom-issue-tracker service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "new_issue_url": {
          "type": "string",
          "text": "New issue URL"
        },
        "issues_url": {
          "type": "string",
          "text": "Issues URL"
        },
        "project_url": {
          "type": "string",
          "text": "Project URL"
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "title": {
          "type": "string",
          "text": "Title"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set custom-issue-tracker service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/custom-issue-tracker",
        "alias_endpoint": "/gitlab/v3/projects/id/services/custom-issue-tracker",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_droneci_service_for_project": {
      "provider_intent": "put_set_droneci_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/drone-ci",
      "text": "Set drone-ci service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "Drone CI token"
        },
        "drone_url": {
          "type": "string",
          "text": "Drone CI URL"
        },
        "enable_ssl_verification": {
          "type": "boolean",
          "text": "Enable SSL verification for communication",
          "enum": [
            true,
            false
          ]
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        },
        "merge_request_events": {
          "type": "string",
          "text": "Event will be triggered when a merge request is created/updated/merged"
        },
        "tag_push_events": {
          "type": "string",
          "text": "Event will be triggered when a new tag is pushed to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set drone-ci service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/drone-ci",
        "alias_endpoint": "/gitlab/v3/projects/id/services/drone-ci",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_emailson-push_service_for_project": {
      "provider_intent": "put_set_emailson-push_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/emails-on-push",
      "text": "Set emails-on-push service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "recipients": {
          "type": "string",
          "text": "Comma-separated list of recipient email addresses"
        },
        "disable_diffs": {
          "type": "boolean",
          "text": "Disable code diffs",
          "enum": [
            true,
            false
          ]
        },
        "send_from_committer_email": {
          "type": "boolean",
          "text": "Send from committer",
          "enum": [
            true,
            false
          ]
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        },
        "tag_push_events": {
          "type": "string",
          "text": "Event will be triggered when a new tag is pushed to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set emails-on-push service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/emails-on-push",
        "alias_endpoint": "/gitlab/v3/projects/id/services/emails-on-push",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_externalwiki_service_for_project": {
      "provider_intent": "put_set_externalwiki_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/external-wiki",
      "text": "Set external-wiki service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "external_wiki_url": {
          "type": "string",
          "text": "The URL of the external Wiki"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set external-wiki service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/external-wiki",
        "alias_endpoint": "/gitlab/v3/projects/id/services/external-wiki",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_flowdock_service_for_project": {
      "provider_intent": "put_set_flowdock_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/flowdock",
      "text": "Set flowdock service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "Flowdock token"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set flowdock service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/flowdock",
        "alias_endpoint": "/gitlab/v3/projects/id/services/flowdock",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_gemnasium_service_for_project": {
      "provider_intent": "put_set_gemnasium_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/gemnasium",
      "text": "Set gemnasium service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "api_key": {
          "type": "string",
          "text": "Your personal API key on gemnasium"
        },
        "token": {
          "type": "string",
          "text": "The project's slug on gemnasium"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set gemnasium service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/gemnasium",
        "alias_endpoint": "/gitlab/v3/projects/id/services/gemnasium",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_hipchat_service_for_project": {
      "provider_intent": "put_set_hipchat_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/hipchat",
      "text": "Set hipchat service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The room token"
        },
        "room": {
          "type": "string",
          "text": "The room name or ID"
        },
        "color": {
          "type": "string",
          "text": "The room color"
        },
        "notify": {
          "type": "boolean",
          "text": "Enable notifications",
          "enum": [
            true,
            false
          ]
        },
        "api_version": {
          "type": "string",
          "text": "Leave blank for default (v2)"
        },
        "server": {
          "type": "string",
          "text": "Leave blank for default"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        },
        "issue_events": {
          "type": "string",
          "text": "Event will be triggered when an issue is created/updated/closed"
        },
        "confidential_issue_events": {
          "type": "string",
          "text": "Event will be triggered when a confidential issue is created/updated/closed"
        },
        "merge_request_events": {
          "type": "string",
          "text": "Event will be triggered when a merge request is created/updated/merged"
        },
        "note_events": {
          "type": "string",
          "text": "Event will be triggered when someone adds a comment"
        },
        "tag_push_events": {
          "type": "string",
          "text": "Event will be triggered when a new tag is pushed to the repository"
        },
        "build_events": {
          "type": "string",
          "text": "Event will be triggered when a build status changes"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set hipchat service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/hipchat",
        "alias_endpoint": "/gitlab/v3/projects/id/services/hipchat",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_irker_service_for_project": {
      "provider_intent": "put_set_irker_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/irker",
      "text": "Set irker service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "recipients": {
          "type": "string",
          "text": "Recipients/channels separated by whitespaces"
        },
        "default_irc_uri": {
          "type": "string",
          "text": "Default"
        },
        "server_host": {
          "type": "string",
          "text": "Server host"
        },
        "server_port": {
          "type": "integer",
          "text": "Server port"
        },
        "colorize_messages": {
          "type": "boolean",
          "text": "Colorize messages",
          "enum": [
            true,
            false
          ]
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set irker service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/irker",
        "alias_endpoint": "/gitlab/v3/projects/id/services/irker",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_jira_service_for_project": {
      "provider_intent": "put_set_jira_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/jira",
      "text": "Set jira service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "url": {
          "type": "string",
          "text": "The URL to the JIRA project which is being linked to this GitLab project e"
        },
        "project_key": {
          "type": "string",
          "text": "The short identifier for your JIRA project all uppercase e"
        },
        "username": {
          "type": "string",
          "text": "The username of the user created to be used with GitLab/JIRA"
        },
        "password": {
          "type": "string",
          "text": "The password of the user created to be used with GitLab/JIRA"
        },
        "jira_issue_transition_id": {
          "type": "integer",
          "text": "The ID of a transition that moves issues to a closed state"
        },
        "commit_events": {
          "type": "string",
          "text": "Event will be triggered when a commit is created/updated"
        },
        "merge_request_events": {
          "type": "string",
          "text": "Event will be triggered when a merge request is created/updated/merged"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set jira service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/jira",
        "alias_endpoint": "/gitlab/v3/projects/id/services/jira",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_kubernetes_service_for_project": {
      "provider_intent": "put_set_kubernetes_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/kubernetes",
      "text": "Set kubernetes service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "namespace": {
          "type": "string",
          "text": "The Kubernetes namespace to use"
        },
        "api_url": {
          "type": "string",
          "text": "The URL to the Kubernetes cluster API e"
        },
        "token": {
          "type": "string",
          "text": "The service token to authenticate against the Kubernetes cluster with"
        },
        "ca_pem": {
          "type": "string",
          "text": "A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set kubernetes service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/kubernetes",
        "alias_endpoint": "/gitlab/v3/projects/id/services/kubernetes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_mattermost_service_for_project": {
      "provider_intent": "put_set_mattermost_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/mattermost",
      "text": "Set mattermost service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "webhook": {
          "type": "string",
          "text": "The Mattermost webhook"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        },
        "issue_events": {
          "type": "string",
          "text": "Event will be triggered when an issue is created/updated/closed"
        },
        "confidential_issue_events": {
          "type": "string",
          "text": "Event will be triggered when a confidential issue is created/updated/closed"
        },
        "merge_request_events": {
          "type": "string",
          "text": "Event will be triggered when a merge request is created/updated/merged"
        },
        "note_events": {
          "type": "string",
          "text": "Event will be triggered when someone adds a comment"
        },
        "tag_push_events": {
          "type": "string",
          "text": "Event will be triggered when a new tag is pushed to the repository"
        },
        "build_events": {
          "type": "string",
          "text": "Event will be triggered when a build status changes"
        },
        "pipeline_events": {
          "type": "string"
        },
        "wiki_page_events": {
          "type": "string",
          "text": "Event will be triggered when a wiki page is created/updated"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set mattermost service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/mattermost",
        "alias_endpoint": "/gitlab/v3/projects/id/services/mattermost",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_mattermostslash-commands_service_for_project": {
      "provider_intent": "put_set_mattermostslash-commands_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/mattermost-slash-commands",
      "text": "Set mattermost-slash-commands service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The Mattermost token"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set mattermost-slash-commands service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/mattermost-slash-commands",
        "alias_endpoint": "/gitlab/v3/projects/id/services/mattermost-slash-commands",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_trigger_a_slash_command_for_mattermostslash-commands": {
      "provider_intent": "post_trigger_a_slash_command_for_mattermostslash-commands",
      "provider_alias_intent": "/v3/projects/id/services/mattermost_slash_commands/trigger",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The Mattermost token"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Added in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/mattermost_slash_commands/trigger",
        "alias_endpoint": "/gitlab/v3/projects/id/services/mattermost_slash_commands/trigger",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_pipelinesemail_service_for_project": {
      "provider_intent": "put_set_pipelinesemail_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/pipelines-email",
      "text": "Set pipelines-email service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "recipients": {
          "type": "string",
          "text": "Comma-separated list of recipient email addresses"
        },
        "notify_only_broken_builds": {
          "type": "boolean",
          "text": "Notify only broken builds",
          "enum": [
            true,
            false
          ]
        },
        "pipeline_events": {
          "type": "string"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set pipelines-email service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/pipelines-email",
        "alias_endpoint": "/gitlab/v3/projects/id/services/pipelines-email",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_pivotaltracker_service_for_project": {
      "provider_intent": "put_set_pivotaltracker_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/pivotaltracker",
      "text": "Set pivotaltracker service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The Pivotaltracker token"
        },
        "restrict_to_branch": {
          "type": "string",
          "text": "Comma-separated list of branches which will be automatically inspected"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set pivotaltracker service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/pivotaltracker",
        "alias_endpoint": "/gitlab/v3/projects/id/services/pivotaltracker",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_pushover_service_for_project": {
      "provider_intent": "put_set_pushover_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/pushover",
      "text": "Set pushover service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "api_key": {
          "type": "string",
          "text": "The application key"
        },
        "user_key": {
          "type": "string",
          "text": "The user key"
        },
        "priority": {
          "type": "string",
          "text": "The priority"
        },
        "device": {
          "type": "string",
          "text": "Leave blank for all active devices"
        },
        "sound": {
          "type": "string",
          "text": "The sound of the notification"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set pushover service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/pushover",
        "alias_endpoint": "/gitlab/v3/projects/id/services/pushover",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_redmine_service_for_project": {
      "provider_intent": "put_set_redmine_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/redmine",
      "text": "Set redmine service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "new_issue_url": {
          "type": "string",
          "text": "The new issue URL"
        },
        "project_url": {
          "type": "string",
          "text": "The project URL"
        },
        "issues_url": {
          "type": "string",
          "text": "The issues URL"
        },
        "description": {
          "type": "string",
          "text": "The description of the tracker"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set redmine service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/redmine",
        "alias_endpoint": "/gitlab/v3/projects/id/services/redmine",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_slack_service_for_project": {
      "provider_intent": "put_set_slack_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/slack",
      "text": "Set slack service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "webhook": {
          "type": "string",
          "text": "The Slack webhook"
        },
        "new_issue_url": {
          "type": "string",
          "text": "The user name"
        },
        "channel": {
          "type": "string",
          "text": "The channel name"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        },
        "issue_events": {
          "type": "string",
          "text": "Event will be triggered when an issue is created/updated/closed"
        },
        "confidential_issue_events": {
          "type": "string",
          "text": "Event will be triggered when a confidential issue is created/updated/closed"
        },
        "merge_request_events": {
          "type": "string",
          "text": "Event will be triggered when a merge request is created/updated/merged"
        },
        "note_events": {
          "type": "string",
          "text": "Event will be triggered when someone adds a comment"
        },
        "tag_push_events": {
          "type": "string",
          "text": "Event will be triggered when a new tag is pushed to the repository"
        },
        "build_events": {
          "type": "string",
          "text": "Event will be triggered when a build status changes"
        },
        "pipeline_events": {
          "type": "string"
        },
        "wiki_page_events": {
          "type": "string",
          "text": "Event will be triggered when a wiki page is created/updated"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set slack service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/slack",
        "alias_endpoint": "/gitlab/v3/projects/id/services/slack",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_slackslash-commands_service_for_project": {
      "provider_intent": "put_set_slackslash-commands_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/slack-slash-commands",
      "text": "Set slack-slash-commands service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The Slack token"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set slack-slash-commands service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/slack-slash-commands",
        "alias_endpoint": "/gitlab/v3/projects/id/services/slack-slash-commands",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_trigger_a_slash_command_for_slackslash-commands": {
      "provider_intent": "post_trigger_a_slash_command_for_slackslash-commands",
      "provider_alias_intent": "/v3/projects/id/services/slack_slash_commands/trigger",
      "text": "Projects ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "token": {
          "type": "string",
          "text": "The Slack token"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Added in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/slack_slash_commands/trigger",
        "alias_endpoint": "/gitlab/v3/projects/id/services/slack_slash_commands/trigger",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_set_teamcity_service_for_project": {
      "provider_intent": "put_set_teamcity_service_for_project",
      "provider_alias_intent": "/v3/projects/id/services/teamcity",
      "text": "Set teamcity service for project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "teamcity_url": {
          "type": "string",
          "text": "TeamCity root URL like https"
        },
        "build_type": {
          "type": "string",
          "text": "Build configuration ID"
        },
        "username": {
          "type": "string",
          "text": "A user with permissions to trigger a manual build"
        },
        "password": {
          "type": "string",
          "text": "The password of the user"
        },
        "push_events": {
          "type": "string",
          "text": "Event will be triggered by a push to the repository"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Set teamcity service for project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/services/teamcity",
        "alias_endpoint": "/gitlab/v3/projects/id/services/teamcity",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_share_the_project_with_a_group": {
      "provider_intent": "post_share_the_project_with_a_group",
      "provider_alias_intent": "/v3/projects/id/share",
      "text": "Share the project with a group ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "group_id": {
          "type": "integer",
          "text": "The ID of a group"
        },
        "group_access": {
          "type": "integer",
          "text": "The group access level (This can only be one of 10203040)"
        },
        "expires_at": {
          "type": "date",
          "text": "Share expiration date"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Share the project with a group",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/share",
        "alias_endpoint": "/gitlab/v3/projects/id/share",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_v3projects_id_share_group_id": {
      "provider_intent": "delete_delete_v3projects_id_share_group_id",
      "provider_alias_intent": "/v3/projects/id/share/group_id",
      "text": "Delete ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete ðŸš§",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/share/:group_id",
        "alias_endpoint": "/gitlab/v3/projects/id/share/group_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_project_snippet": {
      "provider_intent": "delete_delete_a_project_snippet",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id",
      "text": "Delete a project snippet ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a project snippet",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_project_snippet": {
      "provider_intent": "get_get_a_single_project_snippet",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id",
      "text": "Get a single project snippet ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single project snippet",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_project_snippet": {
      "provider_intent": "put_update_an_existing_project_snippet",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id",
      "text": "Update an existing project snippet ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the snippet"
        },
        "file_name": {
          "type": "string",
          "text": "The file name of the snippet"
        },
        "code": {
          "type": "string",
          "text": "The content of the snippet"
        },
        "visibility_level": {
          "type": "integer",
          "text": "The visibility level of the snippet (This can only be one of 01020)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing project snippet",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_raw_project_snippet": {
      "provider_intent": "get_get_a_raw_project_snippet",
      "provider_alias_intent": "/v3/projects/id/snippets/snippet_id/raw",
      "text": "Get a raw project snippet ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a raw project snippet",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets/:snippet_id/raw",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets/snippet_id/raw",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_project_snippets": {
      "provider_intent": "get_get_all_project_snippets",
      "provider_alias_intent": "/v3/projects/id/snippets",
      "text": "Get all project snippets ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get all project snippets",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_project_snippet": {
      "provider_intent": "post_create_a_new_project_snippet",
      "provider_alias_intent": "/v3/projects/id/snippets",
      "text": "Create a new project snippet ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of the snippet"
        },
        "file_name": {
          "type": "string",
          "text": "The file name of the snippet"
        },
        "code": {
          "type": "string",
          "text": "The content of the snippet"
        },
        "visibility_level": {
          "type": "integer",
          "text": "The visibility level of the snippet (This can only be one of 01020)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new project snippet",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/snippets",
        "alias_endpoint": "/gitlab/v3/projects/id/snippets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_unstar_a_project": {
      "provider_intent": "delete_unstar_a_project",
      "provider_alias_intent": "/v3/projects/id/star",
      "text": "Unstar a project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Unstar a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/star",
        "alias_endpoint": "/gitlab/v3/projects/id/star",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_star_a_project": {
      "provider_intent": "post_star_a_project",
      "provider_alias_intent": "/v3/projects/id/star",
      "text": "Star a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Star a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/star",
        "alias_endpoint": "/gitlab/v3/projects/id/star",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_trigger": {
      "provider_intent": "delete_delete_a_trigger",
      "provider_alias_intent": "/v3/projects/id/triggers/token",
      "text": "Delete a trigger ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a trigger",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/triggers/:token",
        "alias_endpoint": "/gitlab/v3/projects/id/triggers/token",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_specific_trigger_of_a_project": {
      "provider_intent": "get_get_specific_trigger_of_a_project",
      "provider_alias_intent": "/v3/projects/id/triggers/token",
      "text": "Get specific trigger of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get specific trigger of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/triggers/:token",
        "alias_endpoint": "/gitlab/v3/projects/id/triggers/token",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_triggers_list": {
      "provider_intent": "get_get_triggers_list",
      "provider_alias_intent": "/v3/projects/id/triggers",
      "text": "Get triggers list ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get triggers list",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/triggers",
        "alias_endpoint": "/gitlab/v3/projects/id/triggers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_trigger": {
      "provider_intent": "post_create_a_trigger",
      "provider_alias_intent": "/v3/projects/id/triggers",
      "text": "Create a trigger ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a trigger",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/triggers",
        "alias_endpoint": "/gitlab/v3/projects/id/triggers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_existing_variable_from_a_project": {
      "provider_intent": "delete_delete_an_existing_variable_from_a_project",
      "provider_alias_intent": "/v3/projects/id/variables/key",
      "text": "Delete an existing variable from a project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an existing variable from a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/variables/:key",
        "alias_endpoint": "/gitlab/v3/projects/id/variables/key",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_specific_variable_from_a_project": {
      "provider_intent": "get_get_a_specific_variable_from_a_project",
      "provider_alias_intent": "/v3/projects/id/variables/key",
      "text": "Get a specific variable from a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a specific variable from a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/variables/:key",
        "alias_endpoint": "/gitlab/v3/projects/id/variables/key",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_variable_from_a_project": {
      "provider_intent": "put_update_an_existing_variable_from_a_project",
      "provider_alias_intent": "/v3/projects/id/variables/key",
      "text": "Update an existing variable from a project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The value of the variable"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing variable from a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/variables/:key",
        "alias_endpoint": "/gitlab/v3/projects/id/variables/key",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_project_variables": {
      "provider_intent": "get_get_project_variables",
      "provider_alias_intent": "/v3/projects/id/variables",
      "text": "Get project variables ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get project variables",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/variables",
        "alias_endpoint": "/gitlab/v3/projects/id/variables",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_variable_in_a_project": {
      "provider_intent": "post_create_a_new_variable_in_a_project",
      "provider_alias_intent": "/v3/projects/id/variables",
      "text": "Create a new variable in a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "key": {
          "type": "string",
          "text": "The key of the variable"
        },
        "value": {
          "type": "string",
          "text": "The value of the variable"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a new variable in a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/variables",
        "alias_endpoint": "/gitlab/v3/projects/id/variables",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_remove_a_project": {
      "provider_intent": "delete_remove_a_project",
      "provider_alias_intent": "/v3/projects/id",
      "text": "Remove a project ðŸš§",
      "category": "projects",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Remove a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id",
        "alias_endpoint": "/gitlab/v3/projects/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_project": {
      "provider_intent": "get_get_a_single_project",
      "provider_alias_intent": "/v3/projects/id",
      "text": "Get a single project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id",
        "alias_endpoint": "/gitlab/v3/projects/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_project": {
      "provider_intent": "put_update_an_existing_project",
      "provider_alias_intent": "/v3/projects/id",
      "text": "Update an existing project ðŸš§",
      "category": "projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the project"
        },
        "default_branch": {
          "type": "string",
          "text": "The default branch of the project"
        },
        "path": {
          "type": "string",
          "text": "The path of the repository"
        },
        "description": {
          "type": "string",
          "text": "The description of the project"
        },
        "issues_enabled": {
          "type": "boolean",
          "text": "Flag indication if the issue tracker is enabled",
          "enum": [
            true,
            false
          ]
        },
        "merge_requests_enabled": {
          "type": "boolean",
          "text": "Flag indication if merge requests are enabled",
          "enum": [
            true,
            false
          ]
        },
        "wiki_enabled": {
          "type": "boolean",
          "text": "Flag indication if the wiki is enabled",
          "enum": [
            true,
            false
          ]
        },
        "builds_enabled": {
          "type": "boolean",
          "text": "Flag indication if builds are enabled",
          "enum": [
            true,
            false
          ]
        },
        "snippets_enabled": {
          "type": "boolean",
          "text": "Flag indication if snippets are enabled",
          "enum": [
            true,
            false
          ]
        },
        "shared_runners_enabled": {
          "type": "boolean",
          "text": "Flag indication if shared runners are enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "container_registry_enabled": {
          "type": "boolean",
          "text": "Flag indication if the container registry is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "lfs_enabled": {
          "type": "boolean",
          "text": "Flag indication if Git LFS is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "public": {
          "type": "boolean",
          "text": "Create a public project",
          "enum": [
            true,
            false
          ]
        },
        "visibility_level": {
          "type": "integer",
          "text": "Create a public project"
        },
        "public_builds": {
          "type": "boolean",
          "text": "Perform public builds",
          "enum": [
            true,
            false
          ]
        },
        "request_access_enabled": {
          "type": "boolean",
          "text": "Allow users to request member access",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_build_succeeds": {
          "type": "boolean",
          "text": "Only allow to merge if builds succeed",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_all_discussions_are_resolved": {
          "type": "boolean",
          "text": "Only allow to merge if all discussions are resolved",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update an existing project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id",
        "alias_endpoint": "/gitlab/v3/projects/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_archive_a_project": {
      "provider_intent": "post_archive_a_project",
      "provider_alias_intent": "/v3/projects/id/archive",
      "text": "Archive a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Archive a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/archive",
        "alias_endpoint": "/gitlab/v3/projects/id/archive",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_events_for_a_single_project": {
      "provider_intent": "get_get_events_for_a_single_project",
      "provider_alias_intent": "/v3/projects/id/events",
      "text": "Get events for a single project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get events for a single project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/events",
        "alias_endpoint": "/gitlab/v3/projects/id/events",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_new_pipeline": {
      "provider_intent": "post_create_a_new_pipeline",
      "provider_alias_intent": "/v3/projects/id/pipeline",
      "text": "This feature was introduced in GitLab 8 ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "ref": {
          "type": "string",
          "text": "Reference"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/pipeline",
        "alias_endpoint": "/gitlab/v3/projects/id/pipeline",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_post_status_to_a_commit": {
      "provider_intent": "post_post_status_to_a_commit",
      "provider_alias_intent": "/v3/projects/id/statuses/sha",
      "text": "Post status to a commit ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "state": {
          "type": "string",
          "text": "The state of the status (This can only be one of pendingrunningsuccessfailedcanceled)"
        },
        "ref": {
          "type": "string",
          "text": "The ref"
        },
        "target_url": {
          "type": "string",
          "text": "The target URL to associate with this status"
        },
        "description": {
          "type": "string",
          "text": "A short description of the status"
        },
        "name": {
          "type": "string",
          "text": "A string label to differentiate this status from the status of other systems"
        },
        "context": {
          "type": "string",
          "text": "A string label to differentiate this status from the status of other systems"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Post status to a commit",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/statuses/:sha",
        "alias_endpoint": "/gitlab/v3/projects/id/statuses/sha",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_unarchive_a_project": {
      "provider_intent": "post_unarchive_a_project",
      "provider_alias_intent": "/v3/projects/id/unarchive",
      "text": "Unarchive a project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Unarchive a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/unarchive",
        "alias_endpoint": "/gitlab/v3/projects/id/unarchive",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_upload_a_file": {
      "provider_intent": "post_upload_a_file",
      "provider_alias_intent": "/v3/projects/id/uploads",
      "text": "Upload a file ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Upload a file",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/uploads",
        "alias_endpoint": "/gitlab/v3/projects/id/uploads",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_users_list_of_a_project": {
      "provider_intent": "get_get_the_users_list_of_a_project",
      "provider_alias_intent": "/v3/projects/id/users",
      "text": "Get the users list of a project ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the users list of a project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/id/users",
        "alias_endpoint": "/gitlab/v3/projects/id/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_projects_list_for_authenticated_user": {
      "provider_intent": "get_get_a_projects_list_for_authenticated_user",
      "provider_alias_intent": "/v3/projects",
      "text": "Get a projects list for authenticated user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a projects list for authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects",
        "alias_endpoint": "/gitlab/v3/projects",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_new_project": {
      "provider_intent": "post_create_new_project",
      "provider_alias_intent": "/v3/projects",
      "text": "Create new project ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the project"
        },
        "path": {
          "type": "string",
          "text": "The path of the repository"
        },
        "description": {
          "type": "string",
          "text": "The description of the project"
        },
        "issues_enabled": {
          "type": "boolean",
          "text": "Flag indication if the issue tracker is enabled",
          "enum": [
            true,
            false
          ]
        },
        "merge_requests_enabled": {
          "type": "boolean",
          "text": "Flag indication if merge requests are enabled",
          "enum": [
            true,
            false
          ]
        },
        "wiki_enabled": {
          "type": "boolean",
          "text": "Flag indication if the wiki is enabled",
          "enum": [
            true,
            false
          ]
        },
        "builds_enabled": {
          "type": "boolean",
          "text": "Flag indication if builds are enabled",
          "enum": [
            true,
            false
          ]
        },
        "snippets_enabled": {
          "type": "boolean",
          "text": "Flag indication if snippets are enabled",
          "enum": [
            true,
            false
          ]
        },
        "shared_runners_enabled": {
          "type": "boolean",
          "text": "Flag indication if shared runners are enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "container_registry_enabled": {
          "type": "boolean",
          "text": "Flag indication if the container registry is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "lfs_enabled": {
          "type": "boolean",
          "text": "Flag indication if Git LFS is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "public": {
          "type": "boolean",
          "text": "Create a public project",
          "enum": [
            true,
            false
          ]
        },
        "visibility_level": {
          "type": "integer",
          "text": "Create a public project"
        },
        "public_builds": {
          "type": "boolean",
          "text": "Perform public builds",
          "enum": [
            true,
            false
          ]
        },
        "request_access_enabled": {
          "type": "boolean",
          "text": "Allow users to request member access",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_build_succeeds": {
          "type": "boolean",
          "text": "Only allow to merge if builds succeed",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_all_discussions_are_resolved": {
          "type": "boolean",
          "text": "Only allow to merge if all discussions are resolved",
          "enum": [
            true,
            false
          ]
        },
        "namespace_id": {
          "type": "integer",
          "text": "Namespace ID for the new project"
        },
        "import_url": {
          "type": "string",
          "text": "URL from which the project is imported"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create new project",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects",
        "alias_endpoint": "/gitlab/v3/projects",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_projects_for_admin_user": {
      "provider_intent": "get_get_all_projects_for_admin_user",
      "provider_alias_intent": "/v3/projects/all",
      "text": "Get all projects for admin user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        },
        "statistics": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get all projects for admin user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/all",
        "alias_endpoint": "/gitlab/v3/projects/all",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_fork_new_project_for_the_current_user_or_provided_namespace": {
      "provider_intent": "post_fork_new_project_for_the_current_user_or_provided_namespace",
      "provider_alias_intent": "/v3/projects/fork/id",
      "text": "Fork new project for the current user or provided namespace ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "namespace": {
          "type": "string",
          "text": "The ID or name of the namespace that the project will be forked into"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Fork new project for the current user or provided namespace",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/fork/id",
        "alias_endpoint": "/gitlab/v3/projects/fork/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_an_owned_projects_list_for_authenticated_user": {
      "provider_intent": "get_get_an_owned_projects_list_for_authenticated_user",
      "provider_alias_intent": "/v3/projects/owned",
      "text": "Get an owned projects list for authenticated user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        },
        "statistics": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get an owned projects list for authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/owned",
        "alias_endpoint": "/gitlab/v3/projects/owned",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_search_for_projects_the_current_user_has_access_to": {
      "provider_intent": "get_search_for_projects_the_current_user_has_access_to",
      "provider_alias_intent": "/v3/projects/search/query",
      "text": "Search for projects the current user has access to ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Search for projects the current user has access to",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/search/query",
        "alias_endpoint": "/gitlab/v3/projects/search/query",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_gets_starred_project_for_the_authenticated_user": {
      "provider_intent": "get_gets_starred_project_for_the_authenticated_user",
      "provider_alias_intent": "/v3/projects/starred",
      "text": "Gets starred project for the authenticated user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Gets starred project for the authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/starred",
        "alias_endpoint": "/gitlab/v3/projects/starred",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_new_project_for_a_specified_user_only_available_to_admin_users": {
      "provider_intent": "post_create_new_project_for_a_specified_user_only_available_to_admin_users",
      "provider_alias_intent": "/v3/projects/user/user_id",
      "text": "Create new project for a specified user ðŸš§",
      "category": "projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the project"
        },
        "default_branch": {
          "type": "string",
          "text": "The default branch of the project"
        },
        "description": {
          "type": "string",
          "text": "The description of the project"
        },
        "issues_enabled": {
          "type": "boolean",
          "text": "Flag indication if the issue tracker is enabled",
          "enum": [
            true,
            false
          ]
        },
        "merge_requests_enabled": {
          "type": "boolean",
          "text": "Flag indication if merge requests are enabled",
          "enum": [
            true,
            false
          ]
        },
        "wiki_enabled": {
          "type": "boolean",
          "text": "Flag indication if the wiki is enabled",
          "enum": [
            true,
            false
          ]
        },
        "builds_enabled": {
          "type": "boolean",
          "text": "Flag indication if builds are enabled",
          "enum": [
            true,
            false
          ]
        },
        "snippets_enabled": {
          "type": "boolean",
          "text": "Flag indication if snippets are enabled",
          "enum": [
            true,
            false
          ]
        },
        "shared_runners_enabled": {
          "type": "boolean",
          "text": "Flag indication if shared runners are enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "container_registry_enabled": {
          "type": "boolean",
          "text": "Flag indication if the container registry is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "lfs_enabled": {
          "type": "boolean",
          "text": "Flag indication if Git LFS is enabled for that project",
          "enum": [
            true,
            false
          ]
        },
        "public": {
          "type": "boolean",
          "text": "Create a public project",
          "enum": [
            true,
            false
          ]
        },
        "visibility_level": {
          "type": "integer",
          "text": "Create a public project"
        },
        "public_builds": {
          "type": "boolean",
          "text": "Perform public builds",
          "enum": [
            true,
            false
          ]
        },
        "request_access_enabled": {
          "type": "boolean",
          "text": "Allow users to request member access",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_build_succeeds": {
          "type": "boolean",
          "text": "Only allow to merge if builds succeed",
          "enum": [
            true,
            false
          ]
        },
        "only_allow_merge_if_all_discussions_are_resolved": {
          "type": "boolean",
          "text": "Only allow to merge if all discussions are resolved",
          "enum": [
            true,
            false
          ]
        },
        "namespace_id": {
          "type": "integer",
          "text": "Namespace ID for the new project"
        },
        "import_url": {
          "type": "string",
          "text": "URL from which the project is imported"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create new project for a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/user/user_id",
        "alias_endpoint": "/gitlab/v3/projects/user/user_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_list_of_visible_projects_for_authenticated_user": {
      "provider_intent": "get_get_a_list_of_visible_projects_for_authenticated_user",
      "provider_alias_intent": "/v3/projects/visible",
      "text": "Get a list of visible projects for authenticated user ðŸš§",
      "category": "projects",
      "method": "GET",
      "type": "API",
      "params": {
        "order_by": {
          "type": "string"
        },
        "sort": {
          "type": "string"
        },
        "archived": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        },
        "simple": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a list of visible projects for authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/projects/visible",
        "alias_endpoint": "/gitlab/v3/projects/visible",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_remove_a_runner": {
      "provider_intent": "delete_remove_a_runner",
      "provider_alias_intent": "/v3/runners/id",
      "text": "Remove a runner ðŸš§",
      "category": "runners",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Remove a runner",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/runners/id",
        "alias_endpoint": "/gitlab/v3/runners/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_runners_details": {
      "provider_intent": "get_get_runners_details",
      "provider_alias_intent": "/v3/runners/id",
      "text": "Get runner's details ðŸš§",
      "category": "runners",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get runner's details",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/runners/id",
        "alias_endpoint": "/gitlab/v3/runners/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_runners_details": {
      "provider_intent": "put_update_runners_details",
      "provider_alias_intent": "/v3/runners/id",
      "text": "Update runner's details ðŸš§",
      "category": "runners",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description of the runner"
        },
        "active": {
          "type": "boolean",
          "text": "The state of a runner",
          "enum": [
            true,
            false
          ]
        },
        "tag_list": {
          "type": "[\"string\""
        },
        "\"<string>\"]": {
          "type": ""
        },
        "run_untagged": {
          "type": "boolean",
          "text": "Flag indicating the runner can execute untagged jobs",
          "enum": [
            true,
            false
          ]
        },
        "locked": {
          "type": "boolean",
          "text": "Flag indicating the runner is locked",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update runner's details",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/runners/id",
        "alias_endpoint": "/gitlab/v3/runners/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_runners_available_for_user": {
      "provider_intent": "get_get_runners_available_for_user",
      "provider_alias_intent": "/v3/runners",
      "text": "Get runners available for user ðŸš§",
      "category": "runners",
      "method": "GET",
      "type": "API",
      "params": {
        "scope": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get runners available for user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/runners",
        "alias_endpoint": "/gitlab/v3/runners",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_all_runners_shared_and_specific": {
      "provider_intent": "get_get_all_runners_shared_and_specific",
      "provider_alias_intent": "/v3/runners/all",
      "text": "Get all runners - shared and specific ðŸš§",
      "category": "runners",
      "method": "GET",
      "type": "API",
      "params": {
        "scope": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get all runners - shared and specific",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/runners/all",
        "alias_endpoint": "/gitlab/v3/runners/all",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_sidekiq_compound_metrics_includes_queue_process_and_job_statistics": {
      "provider_intent": "get_get_the_sidekiq_compound_metrics_includes_queue_process_and_job_statistics",
      "provider_alias_intent": "/v3/sidekiq/compound_metrics",
      "text": "Get the Sidekiq Compound metrics ðŸš§",
      "category": "sidekiq",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the Sidekiq Compound metrics",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/sidekiq/compound_metrics",
        "alias_endpoint": "/gitlab/v3/sidekiq/compound_metrics",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_sidekiq_job_statistics": {
      "provider_intent": "get_get_the_sidekiq_job_statistics",
      "provider_alias_intent": "/v3/sidekiq/job_stats",
      "text": "Get the Sidekiq job statistics ðŸš§",
      "category": "sidekiq",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the Sidekiq job statistics",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/sidekiq/job_stats",
        "alias_endpoint": "/gitlab/v3/sidekiq/job_stats",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_sidekiq_process_metrics": {
      "provider_intent": "get_get_the_sidekiq_process_metrics",
      "provider_alias_intent": "/v3/sidekiq/process_metrics",
      "text": "Get the Sidekiq process metrics ðŸš§",
      "category": "sidekiq",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the Sidekiq process metrics",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/sidekiq/process_metrics",
        "alias_endpoint": "/gitlab/v3/sidekiq/process_metrics",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_sidekiq_queue_metrics": {
      "provider_intent": "get_get_the_sidekiq_queue_metrics",
      "provider_alias_intent": "/v3/sidekiq/queue_metrics",
      "text": "Get the Sidekiq queue metrics ðŸš§",
      "category": "sidekiq",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the Sidekiq queue metrics",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/sidekiq/queue_metrics",
        "alias_endpoint": "/gitlab/v3/sidekiq/queue_metrics",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_remove_snippet": {
      "provider_intent": "delete_remove_snippet",
      "provider_alias_intent": "/v3/snippets/id",
      "text": "Delete Snippet ðŸš§",
      "category": "snippets",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets/id",
        "alias_endpoint": "/gitlab/v3/snippets/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_snippet": {
      "provider_intent": "get_get_a_single_snippet",
      "provider_alias_intent": "/v3/snippets/id",
      "text": "Get Snippet ðŸš§",
      "category": "snippets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets/id",
        "alias_endpoint": "/gitlab/v3/snippets/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_an_existing_snippet": {
      "provider_intent": "put_update_an_existing_snippet",
      "provider_alias_intent": "/v3/snippets/id",
      "text": "Update Snippet ðŸš§",
      "category": "snippets",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of a snippet"
        },
        "file_name": {
          "type": "string",
          "text": "The name of a snippet file"
        },
        "content": {
          "type": "string",
          "text": "The content of a snippet"
        },
        "visibility_level": {
          "type": "integer",
          "text": "The visibility level of the snippet (This can only be one of 01020)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets/id",
        "alias_endpoint": "/gitlab/v3/snippets/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_raw_snippet": {
      "provider_intent": "get_get_a_raw_snippet",
      "provider_alias_intent": "/v3/snippets/id/raw",
      "text": "Get Raw Snippet ðŸš§",
      "category": "snippets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets/id/raw",
        "alias_endpoint": "/gitlab/v3/snippets/id/raw",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_snippets_list_for_authenticated_user": {
      "provider_intent": "get_get_a_snippets_list_for_authenticated_user",
      "provider_alias_intent": "/v3/snippets",
      "text": "List Snippets ðŸš§",
      "category": "snippets",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets",
        "alias_endpoint": "/gitlab/v3/snippets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_new_snippet": {
      "provider_intent": "post_create_new_snippet",
      "provider_alias_intent": "/v3/snippets",
      "text": "Create Snippet ðŸš§",
      "category": "snippets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "title": {
          "type": "string",
          "text": "The title of a snippet"
        },
        "file_name": {
          "type": "string",
          "text": "The name of a snippet file"
        },
        "content": {
          "type": "string",
          "text": "The content of a snippet"
        },
        "visibility_level": {
          "type": "10",
          "text": "The visibility level of the snippet (This can only be one of 01020)"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets",
        "alias_endpoint": "/gitlab/v3/snippets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_list_all_public_snippets_current_user_has_access_to": {
      "provider_intent": "get_list_all_public_snippets_current_user_has_access_to",
      "provider_alias_intent": "/v3/snippets/public",
      "text": "Get Public Snippet ðŸš§",
      "category": "snippets",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/snippets/public",
        "alias_endpoint": "/gitlab/v3/snippets/public",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_mark_all_todos_as_done": {
      "provider_intent": "delete_mark_all_todos_as_done",
      "provider_alias_intent": "/v3/todos",
      "text": "Mark all todos as done ðŸš§",
      "category": "todos",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Mark all todos as done",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/todos",
        "alias_endpoint": "/gitlab/v3/todos",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_todo_list": {
      "provider_intent": "get_get_a_todo_list",
      "provider_alias_intent": "/v3/todos",
      "text": "Get a todo list ðŸš§",
      "category": "todos",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a todo list",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/todos",
        "alias_endpoint": "/gitlab/v3/todos",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_mark_a_todo_as_done": {
      "provider_intent": "delete_mark_a_todo_as_done",
      "provider_alias_intent": "/v3/todos/id",
      "text": "Mark a todo as done ðŸš§",
      "category": "todos",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Mark a todo as done",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/todos/id",
        "alias_endpoint": "/gitlab/v3/todos/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_email_address_from_the_currently_authenticated_user": {
      "provider_intent": "delete_delete_an_email_address_from_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/emails/email_id",
      "text": "Delete an email address from the currently authenticated user ðŸš§",
      "category": "user",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an email address from the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/emails/email_id",
        "alias_endpoint": "/gitlab/v3/user/emails/email_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_email_address_owned_by_the_currently_authenticated_user": {
      "provider_intent": "get_get_a_single_email_address_owned_by_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/emails/email_id",
      "text": "Get a single email address owned by the currently authenticated user ðŸš§",
      "category": "user",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single email address owned by the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/emails/email_id",
        "alias_endpoint": "/gitlab/v3/user/emails/email_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_currently_authenticated_users_email_addresses": {
      "provider_intent": "get_get_the_currently_authenticated_users_email_addresses",
      "provider_alias_intent": "/v3/user/emails",
      "text": "Get the currently authenticated user's email addresses ðŸš§",
      "category": "user",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the currently authenticated user's email addresses",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/emails",
        "alias_endpoint": "/gitlab/v3/user/emails",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_new_email_address_to_the_currently_authenticated_user": {
      "provider_intent": "post_add_new_email_address_to_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/emails",
      "text": "Add new email address to the currently authenticated user ðŸš§",
      "category": "user",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The new email"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add new email address to the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/emails",
        "alias_endpoint": "/gitlab/v3/user/emails",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_ssh_key_from_the_currently_authenticated_user": {
      "provider_intent": "delete_delete_an_ssh_key_from_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/keys/key_id",
      "text": "Delete an SSH key from the currently authenticated user ðŸš§",
      "category": "user",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an SSH key from the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/keys/key_id",
        "alias_endpoint": "/gitlab/v3/user/keys/key_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_key_owned_by_currently_authenticated_user": {
      "provider_intent": "get_get_a_single_key_owned_by_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/keys/key_id",
      "text": "Get a single key owned by currently authenticated user ðŸš§",
      "category": "user",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single key owned by currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/keys/key_id",
        "alias_endpoint": "/gitlab/v3/user/keys/key_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_currently_authenticated_users_ssh_keys": {
      "provider_intent": "get_get_the_currently_authenticated_users_ssh_keys",
      "provider_alias_intent": "/v3/user/keys",
      "text": "Get the currently authenticated user's SSH keys ðŸš§",
      "category": "user",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the currently authenticated user's SSH keys",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/keys",
        "alias_endpoint": "/gitlab/v3/user/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_a_new_ssh_key_to_the_currently_authenticated_user": {
      "provider_intent": "post_add_a_new_ssh_key_to_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user/keys",
      "text": "Add a new SSH key to the currently authenticated user ðŸš§",
      "category": "user",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "key": {
          "type": "string",
          "text": "The new SSH key"
        },
        "title": {
          "type": "string",
          "text": "The title of the new SSH key"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add a new SSH key to the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user/keys",
        "alias_endpoint": "/gitlab/v3/user/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_currently_authenticated_user": {
      "provider_intent": "get_get_the_currently_authenticated_user",
      "provider_alias_intent": "/v3/user",
      "text": "Get the currently authenticated user ðŸš§",
      "category": "user",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the currently authenticated user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/user",
        "alias_endpoint": "/gitlab/v3/user",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_emails_addresses_of_a_specified_user_available_only_for_admins": {
      "provider_intent": "get_get_the_emails_addresses_of_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/emails",
      "text": "Get the emails addresses of a specified user ðŸš§",
      "category": "users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the emails addresses of a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/emails",
        "alias_endpoint": "/gitlab/v3/users/id/emails",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_an_email_address_to_a_specified_user_available_only_for_admins": {
      "provider_intent": "post_add_an_email_address_to_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/emails",
      "text": "Add an email address to a specified user ðŸš§",
      "category": "users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The email of the user"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add an email address to a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/emails",
        "alias_endpoint": "/gitlab/v3/users/id/emails",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_email_address_of_a_specified_user_available_only_for_admins": {
      "provider_intent": "delete_delete_an_email_address_of_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/emails/email_id",
      "text": "Delete an email address of a specified user ðŸš§",
      "category": "users",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an email address of a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/emails/:email_id",
        "alias_endpoint": "/gitlab/v3/users/id/emails/email_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_ssh_keys_of_a_specified_user_available_only_for_admins": {
      "provider_intent": "get_get_the_ssh_keys_of_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/keys",
      "text": "Get the SSH keys of a specified user ðŸš§",
      "category": "users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the SSH keys of a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/keys",
        "alias_endpoint": "/gitlab/v3/users/id/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_add_an_ssh_key_to_a_specified_user_available_only_for_admins": {
      "provider_intent": "post_add_an_ssh_key_to_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/keys",
      "text": "Add an SSH key to a specified user ðŸš§",
      "category": "users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "key": {
          "type": "string",
          "text": "The new SSH key"
        },
        "title": {
          "type": "string",
          "text": "The title of the new SSH key"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Add an SSH key to a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/keys",
        "alias_endpoint": "/gitlab/v3/users/id/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_an_existing_ssh_key_from_a_specified_user_available_only_for_admins": {
      "provider_intent": "delete_delete_an_existing_ssh_key_from_a_specified_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/keys/key_id",
      "text": "Delete an existing SSH key from a specified user ðŸš§",
      "category": "users",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete an existing SSH key from a specified user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/keys/:key_id",
        "alias_endpoint": "/gitlab/v3/users/id/keys/key_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "delete_delete_a_user_available_only_for_admins": {
      "provider_intent": "delete_delete_a_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id",
      "text": "Delete a user ðŸš§",
      "category": "users",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Delete a user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id",
        "alias_endpoint": "/gitlab/v3/users/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_a_single_user": {
      "provider_intent": "get_get_a_single_user",
      "provider_alias_intent": "/v3/users/id",
      "text": "Get a single user ðŸš§",
      "category": "users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get a single user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id",
        "alias_endpoint": "/gitlab/v3/users/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_update_a_user_available_only_for_admins": {
      "provider_intent": "put_update_a_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id",
      "text": "Update a user ðŸš§",
      "category": "users",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The email of the user"
        },
        "password": {
          "type": "string",
          "text": "The password of the new user"
        },
        "name": {
          "type": "string",
          "text": "The name of the user"
        },
        "username": {
          "type": "string",
          "text": "The username of the user"
        },
        "skype": {
          "type": "string",
          "text": "The Skype username"
        },
        "linkedin": {
          "type": "string",
          "text": "The LinkedIn username"
        },
        "twitter": {
          "type": "string",
          "text": "The Twitter username"
        },
        "website_url": {
          "type": "string",
          "text": "The website of the user"
        },
        "organization": {
          "type": "string",
          "text": "The organization of the user"
        },
        "projects_limit": {
          "type": "integer",
          "text": "The number of projects a user can create"
        },
        "extern_uid": {
          "type": "string",
          "text": "The external authentication provider UID"
        },
        "provider": {
          "type": "string",
          "text": "The external provider"
        },
        "bio": {
          "type": "string",
          "text": "The biography of the user"
        },
        "location": {
          "type": "string",
          "text": "The location of the user"
        },
        "admin": {
          "type": "boolean",
          "text": "Flag indicating the user is an administrator",
          "enum": [
            true,
            false
          ]
        },
        "can_create_group": {
          "type": "boolean",
          "text": "Flag indicating the user can create groups",
          "enum": [
            true,
            false
          ]
        },
        "confirm": {
          "type": "boolean",
          "text": "Flag indicating the account needs to be confirmed",
          "enum": [
            true,
            false
          ]
        },
        "external": {
          "type": "boolean",
          "text": "Flag indicating the user is an external user",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Update a user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id",
        "alias_endpoint": "/gitlab/v3/users/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_block_a_user_available_only_for_admins": {
      "provider_intent": "put_block_a_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/block",
      "text": "Block a user ðŸš§",
      "category": "users",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Block a user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/block",
        "alias_endpoint": "/gitlab/v3/users/id/block",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_contribution_events_of_a_specified_user": {
      "provider_intent": "get_get_the_contribution_events_of_a_specified_user",
      "provider_alias_intent": "/v3/users/id/events",
      "text": "This feature was introduced in GitLab 8 ðŸš§",
      "category": "users",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "This feature was introduced in GitLab 8",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/events",
        "alias_endpoint": "/gitlab/v3/users/id/events",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "put_unblock_a_user_available_only_for_admins": {
      "provider_intent": "put_unblock_a_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users/id/unblock",
      "text": "Unblock a user ðŸš§",
      "category": "users",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Unblock a user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users/id/unblock",
        "alias_endpoint": "/gitlab/v3/users/id/unblock",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "get_get_the_list_of_users": {
      "provider_intent": "get_get_the_list_of_users",
      "provider_alias_intent": "/v3/users",
      "text": "Get the list of users ðŸš§",
      "category": "users",
      "method": "GET",
      "type": "API",
      "params": {
        "username": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "active": {
          "type": "string"
        },
        "external": {
          "type": "string"
        },
        "blocked": {
          "type": "string"
        },
        "page": {
          "type": "string"
        },
        "per_page": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Get the list of users",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users",
        "alias_endpoint": "/gitlab/v3/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    },
    "post_create_a_user_available_only_for_admins": {
      "provider_intent": "post_create_a_user_available_only_for_admins",
      "provider_alias_intent": "/v3/users",
      "text": "Create a user ðŸš§",
      "category": "users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The email of the user"
        },
        "password": {
          "type": "string",
          "text": "The password of the new user"
        },
        "name": {
          "type": "string",
          "text": "The name of the user"
        },
        "username": {
          "type": "string",
          "text": "The username of the user"
        },
        "skype": {
          "type": "string",
          "text": "The Skype username"
        },
        "linkedin": {
          "type": "string",
          "text": "The LinkedIn username"
        },
        "twitter": {
          "type": "string",
          "text": "The Twitter username"
        },
        "website_url": {
          "type": "string",
          "text": "The website of the user"
        },
        "organization": {
          "type": "string",
          "text": "The organization of the user"
        },
        "projects_limit": {
          "type": "integer",
          "text": "The number of projects a user can create"
        },
        "extern_uid": {
          "type": "string",
          "text": "The external authentication provider UID"
        },
        "provider": {
          "type": "string",
          "text": "The external provider"
        },
        "bio": {
          "type": "string",
          "text": "The biography of the user"
        },
        "location": {
          "type": "string",
          "text": "The location of the user"
        },
        "admin": {
          "type": "boolean",
          "text": "Flag indicating the user is an administrator",
          "enum": [
            true,
            false
          ]
        },
        "can_create_group": {
          "type": "boolean",
          "text": "Flag indicating the user can create groups",
          "enum": [
            true,
            false
          ]
        },
        "confirm": {
          "type": "boolean",
          "text": "Flag indicating the account needs to be confirmed",
          "enum": [
            true,
            false
          ]
        },
        "external": {
          "type": "boolean",
          "text": "Flag indicating the user is an external user",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "-",
        "auth": [],
        "description": "Create a user",
        "rate_limit": [],
        "api_endpoint": "https://gitlab.com/api/v3/users",
        "alias_endpoint": "/gitlab/v3/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "subdomain": {},
      "payload_type": ""
    }
  }
}