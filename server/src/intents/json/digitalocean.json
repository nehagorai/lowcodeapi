{
  "app": {
    "title": "DigitalOcean API",
    "description": "",
    "api_base": "/digitalocean",
    "copyright": "",
    "copyright_year": "",
    "contact_email": ""
  },
  "category": {
    "All": ""
  },
  "routes": {
    "oneclicks_list": {
      "provider_intent": "oneclicks_list",
      "provider_alias_intent": "/v2/1-clicks",
      "text": "List 1-Click Applications",
      "category": "1-Click Applications",
      "method": "GET",
      "type": "API",
      "params": {
        "type": {
          "type": "string",
          "text": "Restrict results to a certain type of 1-Click"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all available 1-Click applications send a GET request to `/v2/1-clicks`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/1-clicks",
        "alias_endpoint": "/digitalocean/v2/1-clicks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "oneclicks_install_kubernetes": {
      "provider_intent": "oneclicks_install_kubernetes",
      "provider_alias_intent": "/v2/1-clicks/kubernetes",
      "text": "Install Kubernetes 1-Click Applications",
      "category": "1-Click Applications",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "addon_slugs": {
          "type": "array",
          "text": "An array of 1-Click Application slugs to be installed to the Kubernetes cluster",
          "required": true
        },
        "cluster_uuid": {
          "type": "string",
          "text": "A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To install a Kubernetes 1-Click application on a cluster send a POST request to `/v2/1-clicks/kubernetes`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/1-clicks/kubernetes",
        "alias_endpoint": "/digitalocean/v2/1-clicks/kubernetes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "account_get": {
      "provider_intent": "account_get",
      "provider_alias_intent": "/v2/account",
      "text": "Get User Information",
      "category": "Account",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about the current user account send a GET request to `/v2/account`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account",
        "alias_endpoint": "/digitalocean/v2/account",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "actions_list": {
      "provider_intent": "actions_list",
      "provider_alias_intent": "/v2/actions",
      "text": "List All Actions",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "This will be the entire list of actions taken on your account so it will be quite large.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/actions",
        "alias_endpoint": "/digitalocean/v2/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "actions_get": {
      "provider_intent": "actions_get",
      "provider_alias_intent": "/v2/actions/action_id",
      "text": "Retrieve an Existing Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a specific action object send a GET request to `/v2/actions/$ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list": {
      "provider_intent": "apps_list",
      "provider_alias_intent": "/v2/apps",
      "text": "List All Apps",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "with_projects": {
          "type": "boolean",
          "text": "Whether the project_id of listed apps should be fetched and included",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List all apps on your account.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps",
        "alias_endpoint": "/digitalocean/v2/apps",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_create": {
      "provider_intent": "apps_create",
      "provider_alias_intent": "/v2/apps",
      "text": "Create a New App",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "spec": {
          "type": "object",
          "text": "The desired configuration of an application",
          "required": true
        },
        "project_id": {
          "type": "string",
          "text": "The ID of the project the app should be assigned to"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Create a new app by submitting an app specification.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps",
        "alias_endpoint": "/digitalocean/v2/apps",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_delete": {
      "provider_intent": "apps_delete",
      "provider_alias_intent": "/v2/apps/id",
      "text": "Delete an App",
      "category": "Apps",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Delete an existing app.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{id}",
        "alias_endpoint": "/digitalocean/v2/apps/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get": {
      "provider_intent": "apps_get",
      "provider_alias_intent": "/v2/apps/id",
      "text": "Retrieve an Existing App",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The name of the app to retrieve"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve details about an existing app by either its ID or name.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{id}",
        "alias_endpoint": "/digitalocean/v2/apps/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_update": {
      "provider_intent": "apps_update",
      "provider_alias_intent": "/v2/apps/id",
      "text": "Update an App",
      "category": "Apps",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "spec": {
          "type": "object",
          "text": "The desired configuration of an application",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the app",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Update an existing app by submitting a new app specification.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{id}",
        "alias_endpoint": "/digitalocean/v2/apps/id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_logs_active_deployment": {
      "provider_intent": "apps_get_logs_active_deployment",
      "provider_alias_intent": "/v2/apps/app_id/components/component_name/logs",
      "text": "Retrieve Active Deployment Logs",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "component_name": {
          "type": "string",
          "text": "An optional component name",
          "required": true
        },
        "follow": {
          "type": "boolean",
          "text": "Whether the logs should follow live updates",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "The type of logs to retrieve",
          "required": true
        },
        "pod_connection_timeout": {
          "type": "string",
          "text": "An optional time duration to wait if the underlying component instance is not immediately available"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "component_name": {
          "type": "string",
          "text": "An optional component name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve the logs of the active deployment if one exists.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/components/{component_name}/logs",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/components/component_name/logs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_deployments": {
      "provider_intent": "apps_list_deployments",
      "provider_alias_intent": "/v2/apps/app_id/deployments",
      "text": "List App Deployments",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List all deployments of an app.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_create_deployment": {
      "provider_intent": "apps_create_deployment",
      "provider_alias_intent": "/v2/apps/app_id/deployments",
      "text": "Create an App Deployment",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "force_build": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Creating an app deployment will pull the latest changes from your repository and schedule a new deployment for your app.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_deployment": {
      "provider_intent": "apps_get_deployment",
      "provider_alias_intent": "/v2/apps/app_id/deployments/deployment_id",
      "text": "Retrieve an App Deployment",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve information about an app deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments/{deployment_id}",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments/deployment_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_cancel_deployment": {
      "provider_intent": "apps_cancel_deployment",
      "provider_alias_intent": "/v2/apps/app_id/deployments/deployment_id/cancel",
      "text": "Cancel a Deployment",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Immediately cancel an in-progress deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments/{deployment_id}/cancel",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments/deployment_id/cancel",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_logs": {
      "provider_intent": "apps_get_logs",
      "provider_alias_intent": "/v2/apps/app_id/deployments/deployment_id/components/component_name/logs",
      "text": "Retrieve Deployment Logs",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        },
        "component_name": {
          "type": "string",
          "text": "An optional component name",
          "required": true
        },
        "follow": {
          "type": "boolean",
          "text": "Whether the logs should follow live updates",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "The type of logs to retrieve",
          "required": true
        },
        "pod_connection_timeout": {
          "type": "string",
          "text": "An optional time duration to wait if the underlying component instance is not immediately available"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        },
        "component_name": {
          "type": "string",
          "text": "An optional component name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve the logs of a past in-progress or active deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments/{deployment_id}/components/{component_name}/logs",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments/deployment_id/components/component_name/logs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_logs_aggregate": {
      "provider_intent": "apps_get_logs_aggregate",
      "provider_alias_intent": "/v2/apps/app_id/deployments/deployment_id/logs",
      "text": "Retrieve Aggregate Deployment Logs",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        },
        "follow": {
          "type": "boolean",
          "text": "Whether the logs should follow live updates",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "The type of logs to retrieve",
          "required": true
        },
        "pod_connection_timeout": {
          "type": "string",
          "text": "An optional time duration to wait if the underlying component instance is not immediately available"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "deployment_id": {
          "type": "string",
          "text": "The deployment ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve the logs of a past in-progress or active deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/deployments/{deployment_id}/logs",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/deployments/deployment_id/logs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_logs_active_deployment_aggregate": {
      "provider_intent": "apps_get_logs_active_deployment_aggregate",
      "provider_alias_intent": "/v2/apps/app_id/logs",
      "text": "Retrieve Active Deployment Aggregate Logs",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "follow": {
          "type": "boolean",
          "text": "Whether the logs should follow live updates",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "The type of logs to retrieve",
          "required": true
        },
        "pod_connection_timeout": {
          "type": "string",
          "text": "An optional time duration to wait if the underlying component instance is not immediately available"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve the logs of the active deployment if one exists.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/logs",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/logs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_tiers": {
      "provider_intent": "apps_list_tiers",
      "provider_alias_intent": "/v2/apps/tiers",
      "text": "List App Tiers",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List all app tiers.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/tiers",
        "alias_endpoint": "/digitalocean/v2/apps/tiers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_tier": {
      "provider_intent": "apps_get_tier",
      "provider_alias_intent": "/v2/apps/tiers/slug",
      "text": "Retrieve an App Tier",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "slug": {
          "type": "string",
          "text": "The slug of the tier",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "slug": {
          "type": "string",
          "text": "The slug of the tier",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve information about a specific app tier.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/tiers/{slug}",
        "alias_endpoint": "/digitalocean/v2/apps/tiers/slug",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_instancesizes": {
      "provider_intent": "apps_list_instancesizes",
      "provider_alias_intent": "/v2/apps/tiers/instance_sizes",
      "text": "List Instance Sizes",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List all instance sizes for `service` `worker` and `job` components.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/tiers/instance_sizes",
        "alias_endpoint": "/digitalocean/v2/apps/tiers/instance_sizes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_instancesize": {
      "provider_intent": "apps_get_instancesize",
      "provider_alias_intent": "/v2/apps/tiers/instance_sizes/slug",
      "text": "Retrieve an Instance Size",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "slug": {
          "type": "string",
          "text": "The slug of the instance size",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "slug": {
          "type": "string",
          "text": "The slug of the instance size",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve information about a specific instance size for `service` `worker` and `job` components.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/tiers/instance_sizes/{slug}",
        "alias_endpoint": "/digitalocean/v2/apps/tiers/instance_sizes/slug",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_regions": {
      "provider_intent": "apps_list_regions",
      "provider_alias_intent": "/v2/apps/regions",
      "text": "List App Regions",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List all regions supported by App Platform.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/regions",
        "alias_endpoint": "/digitalocean/v2/apps/regions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_validate_appspec": {
      "provider_intent": "apps_validate_appspec",
      "provider_alias_intent": "/v2/apps/propose",
      "text": "Propose an App Spec",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "spec": {
          "type": "object",
          "text": "The desired configuration of an application",
          "required": true
        },
        "app_id": {
          "type": "string",
          "text": "An optional ID of an existing app"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To propose and validate a spec for a new or existing app send a POST request to the `/v2/apps/propose` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/propose",
        "alias_endpoint": "/digitalocean/v2/apps/propose",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_alerts": {
      "provider_intent": "apps_list_alerts",
      "provider_alias_intent": "/v2/apps/app_id/alerts",
      "text": "List all app alerts",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "List alerts associated to the app and any components.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/alerts",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/alerts",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_assign_alertdestinations": {
      "provider_intent": "apps_assign_alertdestinations",
      "provider_alias_intent": "/v2/apps/app_id/alerts/alert_id/destinations",
      "text": "Update destinations for alerts",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "The alert ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "emails": {
          "type": "array"
        },
        "slack_webhooks": {
          "type": "array"
        }
      },
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "The alert ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Updates the emails and slack webhook destinations for app alerts.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/alerts/{alert_id}/destinations",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/alerts/alert_id/destinations",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_create_rollback": {
      "provider_intent": "apps_create_rollback",
      "provider_alias_intent": "/v2/apps/app_id/rollback",
      "text": "Rollback App",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "deployment_id": {
          "type": "string",
          "text": "The ID of the deployment to rollback to"
        },
        "skip_pin": {
          "type": "boolean",
          "text": "Whether to skip pinning the rollback deployment",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Rollback an app to a previous deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/rollback",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/rollback",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_validate_rollback": {
      "provider_intent": "apps_validate_rollback",
      "provider_alias_intent": "/v2/apps/app_id/rollback/validate",
      "text": "Validate App Rollback",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "deployment_id": {
          "type": "string",
          "text": "The ID of the deployment to rollback to"
        },
        "skip_pin": {
          "type": "boolean",
          "text": "Whether to skip pinning the rollback deployment",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Check whether an app can be rolled back to a specific deployment.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/rollback/validate",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/rollback/validate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_commit_rollback": {
      "provider_intent": "apps_commit_rollback",
      "provider_alias_intent": "/v2/apps/app_id/rollback/commit",
      "text": "Commit App Rollback",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Commit an app rollback.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/rollback/commit",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/rollback/commit",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_revert_rollback": {
      "provider_intent": "apps_revert_rollback",
      "provider_alias_intent": "/v2/apps/app_id/rollback/revert",
      "text": "Revert App Rollback",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Revert an app rollback.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/rollback/revert",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/rollback/revert",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_get_metrics_bandwidth_daily": {
      "provider_intent": "apps_get_metrics_bandwidth_daily",
      "provider_alias_intent": "/v2/apps/app_id/metrics/bandwidth_daily",
      "text": "Retrieve App Daily Bandwidth Metrics",
      "category": "Apps",
      "method": "GET",
      "type": "API",
      "params": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Optional day to query"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "app_id": {
          "type": "string",
          "text": "The app ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve daily bandwidth usage metrics for a single app.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/{app_id}/metrics/bandwidth_daily",
        "alias_endpoint": "/digitalocean/v2/apps/app_id/metrics/bandwidth_daily",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "apps_list_metrics_bandwidth_daily": {
      "provider_intent": "apps_list_metrics_bandwidth_daily",
      "provider_alias_intent": "/v2/apps/metrics/bandwidth_daily",
      "text": "Retrieve Multiple Apps' Daily Bandwidth Metrics",
      "category": "Apps",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "app_ids": {
          "type": "array",
          "text": "A list of app IDs to query bandwidth metrics for",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Optional day to query"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Retrieve daily bandwidth usage metrics for multiple apps.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/apps/metrics/bandwidth_daily",
        "alias_endpoint": "/digitalocean/v2/apps/metrics/bandwidth_daily",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "balance_get": {
      "provider_intent": "balance_get",
      "provider_alias_intent": "/v2/customers/my/balance",
      "text": "Get Customer Balance",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the balances on a customer's account send a GET request to `/v2/customers/my/balance`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/balance",
        "alias_endpoint": "/digitalocean/v2/customers/my/balance",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "billinghistory_list": {
      "provider_intent": "billinghistory_list",
      "provider_alias_intent": "/v2/customers/my/billing_history",
      "text": "List Billing History",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all billing history entries send a GET request to `/v2/customers/my/billing_history`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/billing_history",
        "alias_endpoint": "/digitalocean/v2/customers/my/billing_history",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "invoices_list": {
      "provider_intent": "invoices_list",
      "provider_alias_intent": "/v2/customers/my/invoices",
      "text": "List All Invoices",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all invoices send a GET request to `/v2/customers/my/invoices`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/invoices",
        "alias_endpoint": "/digitalocean/v2/customers/my/invoices",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "invoices_get_byuuid": {
      "provider_intent": "invoices_get_byuuid",
      "provider_alias_intent": "/v2/customers/my/invoices/invoice_uuid",
      "text": "Retrieve an Invoice by UUID",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the invoice items for an invoice send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/invoices/{invoice_uuid}",
        "alias_endpoint": "/digitalocean/v2/customers/my/invoices/invoice_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "invoices_get_csvbyuuid": {
      "provider_intent": "invoices_get_csvbyuuid",
      "provider_alias_intent": "/v2/customers/my/invoices/invoice_uuid/csv",
      "text": "Retrieve an Invoice CSV by UUID",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a CSV for an invoice send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/csv`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/invoices/{invoice_uuid}/csv",
        "alias_endpoint": "/digitalocean/v2/customers/my/invoices/invoice_uuid/csv",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "invoices_get_pdfbyuuid": {
      "provider_intent": "invoices_get_pdfbyuuid",
      "provider_alias_intent": "/v2/customers/my/invoices/invoice_uuid/pdf",
      "text": "Retrieve an Invoice PDF by UUID",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a PDF for an invoice send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/pdf`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/invoices/{invoice_uuid}/pdf",
        "alias_endpoint": "/digitalocean/v2/customers/my/invoices/invoice_uuid/pdf",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "invoices_get_summarybyuuid": {
      "provider_intent": "invoices_get_summarybyuuid",
      "provider_alias_intent": "/v2/customers/my/invoices/invoice_uuid/summary",
      "text": "Retrieve an Invoice Summary by UUID",
      "category": "Billing",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_uuid": {
          "type": "string",
          "text": "UUID of the invoice",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a summary for an invoice send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/summary`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/customers/my/invoices/{invoice_uuid}/summary",
        "alias_endpoint": "/digitalocean/v2/customers/my/invoices/invoice_uuid/summary",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumes_list": {
      "provider_intent": "volumes_list",
      "provider_alias_intent": "/v2/volumes",
      "text": "List All Block Storage Volumes",
      "category": "Block Storage",
      "method": "GET",
      "type": "API",
      "params": {
        "name": {
          "type": "string",
          "text": "The block storage volume's name"
        },
        "region": {
          "type": "string",
          "text": "The slug identifier for the region where the resource is available"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the block storage volumes available on your account send a GET request to `/v2/volumes`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes",
        "alias_endpoint": "/digitalocean/v2/volumes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumes_create": {
      "provider_intent": "volumes_create",
      "provider_alias_intent": "/v2/volumes",
      "text": "Create a New Block Storage Volume",
      "category": "Block Storage",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new volume send a POST request to `/v2/volumes`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes",
        "alias_endpoint": "/digitalocean/v2/volumes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumes_delete_byname": {
      "provider_intent": "volumes_delete_byname",
      "provider_alias_intent": "/v2/volumes",
      "text": "Delete a Block Storage Volume by Name",
      "category": "Block Storage",
      "method": "DELETE",
      "type": "API",
      "params": {
        "name": {
          "type": "string",
          "text": "The block storage volume's name"
        },
        "region": {
          "type": "string",
          "text": "The slug identifier for the region where the resource is available"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Block storage volumes may also be deleted by name by sending a DELETE request with the volume's **name** and the **region slug** for the region it is located in as query parameters to `/v2/volumes?name=$VOLUME_NAME&region=nyc1`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes",
        "alias_endpoint": "/digitalocean/v2/volumes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumesnapshots_get_byid": {
      "provider_intent": "volumesnapshots_get_byid",
      "provider_alias_intent": "/v2/volumes/snapshots/snapshot_id",
      "text": "Retrieve an Existing Volume Snapshot",
      "category": "Block Storage",
      "method": "GET",
      "type": "API",
      "params": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the details of a snapshot that has been created from a volume send a GET request to `/v2/volumes/snapshots/$SNAPSHOT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/snapshots/{snapshot_id}",
        "alias_endpoint": "/digitalocean/v2/volumes/snapshots/snapshot_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumesnapshots_delete_byid": {
      "provider_intent": "volumesnapshots_delete_byid",
      "provider_alias_intent": "/v2/volumes/snapshots/snapshot_id",
      "text": "Delete a Volume Snapshot",
      "category": "Block Storage",
      "method": "DELETE",
      "type": "API",
      "params": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a volume snapshot send a DELETE request to\n`/v2/snapshots/$SNAPSHOT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/snapshots/{snapshot_id}",
        "alias_endpoint": "/digitalocean/v2/volumes/snapshots/snapshot_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumes_get": {
      "provider_intent": "volumes_get",
      "provider_alias_intent": "/v2/volumes/volume_id",
      "text": "Retrieve an Existing Block Storage Volume",
      "category": "Block Storage",
      "method": "GET",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about a block storage volume send a GET request to `/v2/volumes/$VOLUME_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumes_delete": {
      "provider_intent": "volumes_delete",
      "provider_alias_intent": "/v2/volumes/volume_id",
      "text": "Delete a Block Storage Volume",
      "category": "Block Storage",
      "method": "DELETE",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a block storage volume destroying all data and removing it from your account send a DELETE request to `/v2/volumes/$VOLUME_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumesnapshots_list": {
      "provider_intent": "volumesnapshots_list",
      "provider_alias_intent": "/v2/volumes/volume_id/snapshots",
      "text": "List Snapshots for a Volume",
      "category": "Block Storage",
      "method": "GET",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the snapshots that have been created from a volume send a GET request to `/v2/volumes/$VOLUME_ID/snapshots`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}/snapshots",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id/snapshots",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumesnapshots_create": {
      "provider_intent": "volumesnapshots_create",
      "provider_alias_intent": "/v2/volumes/volume_id/snapshots",
      "text": "Create Snapshot from a Volume",
      "category": "Block Storage",
      "method": "POST",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A human-readable name for the volume snapshot",
          "required": true
        },
        "tags": {
          "type": "array",
          "text": "A flat array of tag names as strings to be applied to the resource"
        }
      },
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a snapshot from a volume sent a POST request to `/v2/volumes/$VOLUME_ID/snapshots`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}/snapshots",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id/snapshots",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumeactions_post": {
      "provider_intent": "volumeactions_post",
      "provider_alias_intent": "/v2/volumes/actions",
      "text": "Initiate A Block Storage Action By Volume Name",
      "category": "Block Storage Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To initiate an action on a block storage volume by Name send a POST request to\n`~/v2/volumes/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/actions",
        "alias_endpoint": "/digitalocean/v2/volumes/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumeactions_list": {
      "provider_intent": "volumeactions_list",
      "provider_alias_intent": "/v2/volumes/volume_id/actions",
      "text": "List All Actions for a Volume",
      "category": "Block Storage Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve all actions that have been executed on a volume send a GET request to `/v2/volumes/$VOLUME_ID/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}/actions",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumeactions_post_byid": {
      "provider_intent": "volumeactions_post_byid",
      "provider_alias_intent": "/v2/volumes/volume_id/actions",
      "text": "Initiate A Block Storage Action By Volume Id",
      "category": "Block Storage Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To initiate an action on a block storage volume by Id send a POST request to\n`~/v2/volumes/$VOLUME_ID/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}/actions",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "volumeactions_get": {
      "provider_intent": "volumeactions_get",
      "provider_alias_intent": "/v2/volumes/volume_id/actions/action_id",
      "text": "Retrieve an Existing Volume Action",
      "category": "Block Storage Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "volume_id": {
          "type": "string",
          "text": "The ID of the block storage volume",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the status of a volume action send a GET request to `/v2/volumes/$VOLUME_ID/actions/$ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/volumes/{volume_id}/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/volumes/volume_id/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_list_endpoints": {
      "provider_intent": "cdn_list_endpoints",
      "provider_alias_intent": "/v2/cdn/endpoints",
      "text": "List All CDN Endpoints",
      "category": "CDN Endpoints",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the CDN endpoints available on your account send a GET request to `/v2/cdn/endpoints`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_create_endpoint": {
      "provider_intent": "cdn_create_endpoint",
      "provider_alias_intent": "/v2/cdn/endpoints",
      "text": "Create a New CDN Endpoint",
      "category": "CDN Endpoints",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a CDN endpoint"
        },
        "origin": {
          "type": "string",
          "text": "The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN",
          "required": true
        },
        "endpoint": {
          "type": "string",
          "text": "The fully qualified domain name (FQDN) from which the CDN-backed content is served"
        },
        "ttl": {
          "type": "integer",
          "text": "The amount of time the content is cached by the CDN's edge servers in seconds"
        },
        "certificate_id": {
          "type": "string",
          "text": "The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided"
        },
        "custom_domain": {
          "type": "string",
          "text": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint"
        },
        "created_at": {
          "type": "string",
          "text": "A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new CDN endpoint send a POST request to `/v2/cdn/endpoints`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_get_endpoint": {
      "provider_intent": "cdn_get_endpoint",
      "provider_alias_intent": "/v2/cdn/endpoints/cdn_id",
      "text": "Retrieve an Existing CDN Endpoint",
      "category": "CDN Endpoints",
      "method": "GET",
      "type": "API",
      "params": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing CDN endpoint send a GET request to `/v2/cdn/endpoints/$ENDPOINT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints/{cdn_id}",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints/cdn_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_update_endpoints": {
      "provider_intent": "cdn_update_endpoints",
      "provider_alias_intent": "/v2/cdn/endpoints/cdn_id",
      "text": "Update a CDN Endpoint",
      "category": "CDN Endpoints",
      "method": "PUT",
      "type": "API",
      "params": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "ttl": {
          "type": "integer",
          "text": "The amount of time the content is cached by the CDN's edge servers in seconds"
        },
        "certificate_id": {
          "type": "string",
          "text": "The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided"
        },
        "custom_domain": {
          "type": "string",
          "text": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint"
        }
      },
      "path": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the TTL certificate ID or the FQDN of the custom subdomain for an existing CDN endpoint send a PUT request to `/v2/cdn/endpoints/$ENDPOINT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints/{cdn_id}",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints/cdn_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_delete_endpoint": {
      "provider_intent": "cdn_delete_endpoint",
      "provider_alias_intent": "/v2/cdn/endpoints/cdn_id",
      "text": "Delete a CDN Endpoint",
      "category": "CDN Endpoints",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a specific CDN endpoint send a DELETE request to\n`/v2/cdn/endpoints/$ENDPOINT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints/{cdn_id}",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints/cdn_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "cdn_purge_cache": {
      "provider_intent": "cdn_purge_cache",
      "provider_alias_intent": "/v2/cdn/endpoints/cdn_id/cache",
      "text": "Purge the Cache for an Existing CDN Endpoint",
      "category": "CDN Endpoints",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "files": {
          "type": "array",
          "text": "An array of strings containing the path to the content to be purged from the CDN cache",
          "required": true
        }
      },
      "path": {
        "cdn_id": {
          "type": "string",
          "text": "A unique identifier for a CDN endpoint",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To purge cached content from a CDN endpoint send a DELETE request to\n`/v2/cdn/endpoints/$ENDPOINT_ID/cache`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/cdn/endpoints/{cdn_id}/cache",
        "alias_endpoint": "/digitalocean/v2/cdn/endpoints/cdn_id/cache",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "certificates_list": {
      "provider_intent": "certificates_list",
      "provider_alias_intent": "/v2/certificates",
      "text": "List All Certificates",
      "category": "Certificates",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the certificates available on your account send a GET request to `/v2/certificates`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/certificates",
        "alias_endpoint": "/digitalocean/v2/certificates",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "certificates_create": {
      "provider_intent": "certificates_create",
      "provider_alias_intent": "/v2/certificates",
      "text": "Create a New Certificate",
      "category": "Certificates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To upload new SSL certificate which you have previously generated send a POST\nrequest to `/v2/certificates`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/certificates",
        "alias_endpoint": "/digitalocean/v2/certificates",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "certificates_get": {
      "provider_intent": "certificates_get",
      "provider_alias_intent": "/v2/certificates/certificate_id",
      "text": "Retrieve an Existing Certificate",
      "category": "Certificates",
      "method": "GET",
      "type": "API",
      "params": {
        "certificate_id": {
          "type": "string",
          "text": "A unique identifier for a certificate",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "certificate_id": {
          "type": "string",
          "text": "A unique identifier for a certificate",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing certificate send a GET request to `/v2/certificates/$CERTIFICATE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/certificates/{certificate_id}",
        "alias_endpoint": "/digitalocean/v2/certificates/certificate_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "certificates_delete": {
      "provider_intent": "certificates_delete",
      "provider_alias_intent": "/v2/certificates/certificate_id",
      "text": "Delete a Certificate",
      "category": "Certificates",
      "method": "DELETE",
      "type": "API",
      "params": {
        "certificate_id": {
          "type": "string",
          "text": "A unique identifier for a certificate",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "certificate_id": {
          "type": "string",
          "text": "A unique identifier for a certificate",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a specific certificate send a DELETE request to\n`/v2/certificates/$CERTIFICATE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/certificates/{certificate_id}",
        "alias_endpoint": "/digitalocean/v2/certificates/certificate_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_get": {
      "provider_intent": "registry_get",
      "provider_alias_intent": "/v2/registry",
      "text": "Get Container Registry Information",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get information about your container registry send a GET request to `/v2/registry`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry",
        "alias_endpoint": "/digitalocean/v2/registry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_create": {
      "provider_intent": "registry_create",
      "provider_alias_intent": "/v2/registry",
      "text": "Create Container Registry",
      "category": "Container Registry",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A globally unique name for the container registry",
          "required": true
        },
        "subscription_tier_slug": {
          "type": "string",
          "text": "The slug of the subscription tier to sign up for",
          "required": true
        },
        "region": {
          "type": "string",
          "text": "Slug of the region where registry data is stored"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create your container registry send a POST request to `/v2/registry`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry",
        "alias_endpoint": "/digitalocean/v2/registry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_delete": {
      "provider_intent": "registry_delete",
      "provider_alias_intent": "/v2/registry",
      "text": "Delete Container Registry",
      "category": "Container Registry",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete your container registry destroying all container image data stored in it send a DELETE request to `/v2/registry`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry",
        "alias_endpoint": "/digitalocean/v2/registry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_get_subscription": {
      "provider_intent": "registry_get_subscription",
      "provider_alias_intent": "/v2/registry/subscription",
      "text": "Get Subscription Information",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "A subscription is automatically created when you configure your container registry.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/subscription",
        "alias_endpoint": "/digitalocean/v2/registry/subscription",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_update_subscription": {
      "provider_intent": "registry_update_subscription",
      "provider_alias_intent": "/v2/registry/subscription",
      "text": "Update Subscription Tier",
      "category": "Container Registry",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tier_slug": {
          "type": "string",
          "text": "The slug of the subscription tier to sign up for"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "After creating your registry you can switch to a different subscription tier to better suit your needs.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/subscription",
        "alias_endpoint": "/digitalocean/v2/registry/subscription",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_get_dockercredentials": {
      "provider_intent": "registry_get_dockercredentials",
      "provider_alias_intent": "/v2/registry/docker-credentials",
      "text": "Get Docker Credentials for Container Registry",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "expiry_seconds": {
          "type": "integer",
          "text": "The duration in seconds that the returned registry credentials will be valid"
        },
        "read_write": {
          "type": "boolean",
          "text": "By default the registry credentials allow for read-only access",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "In order to access your container registry with the Docker client or from a\nKubernetes cluster you will need to configure authentication.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/docker-credentials",
        "alias_endpoint": "/digitalocean/v2/registry/docker-credentials",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_validate_name": {
      "provider_intent": "registry_validate_name",
      "provider_alias_intent": "/v2/registry/validate-name",
      "text": "Validate a Container Registry Name",
      "category": "Container Registry",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A globally unique name for the container registry",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To validate that a container registry name is available for use send a POST\nrequest to `/v2/registry/validate-name`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/validate-name",
        "alias_endpoint": "/digitalocean/v2/registry/validate-name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_list_repositories": {
      "provider_intent": "registry_list_repositories",
      "provider_alias_intent": "/v2/registry/registry_name/repositories",
      "text": "List All Container Registry Repositories",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "This endpoint has been deprecated in favor of the _List All Container Registry Repositories [V2]_ endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/repositories",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repositories",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_list_repositoriesv2": {
      "provider_intent": "registry_list_repositoriesv2",
      "provider_alias_intent": "/v2/registry/registry_name/repositoriesv2",
      "text": "List All Container Registry Repositories (V2)",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        },
        "page_token": {
          "type": "string",
          "text": "Token to retrieve of the next or previous set of results more quickly than using 'page'"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all repositories in your container registry send a GET request to `/v2/registry/$REGISTRY_NAME/repositoriesV2`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/repositoriesV2",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repositoriesv2",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_list_repositorytags": {
      "provider_intent": "registry_list_repositorytags",
      "provider_alias_intent": "/v2/registry/registry_name/repository_name/tags",
      "text": "List All Container Registry Repository Tags",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all tags in your container registry repository send a GET\nrequest to `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/{repository_name}/tags",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repository_name/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_delete_repositorytag": {
      "provider_intent": "registry_delete_repositorytag",
      "provider_alias_intent": "/v2/registry/registry_name/repository_name/tags/repository_tag",
      "text": "Delete Container Registry Repository Tag",
      "category": "Container Registry",
      "method": "DELETE",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "repository_tag": {
          "type": "string",
          "text": "The name of a container registry repository tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "repository_tag": {
          "type": "string",
          "text": "The name of a container registry repository tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a container repository tag send a DELETE request to\n`/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags/$TAG`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/{repository_name}/tags/{repository_tag}",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repository_name/tags/repository_tag",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_list_repositorymanifests": {
      "provider_intent": "registry_list_repositorymanifests",
      "provider_alias_intent": "/v2/registry/registry_name/repository_name/digests",
      "text": "List All Container Registry Repository Manifests",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all manifests in your container registry repository send a GET\nrequest to `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/digests`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/{repository_name}/digests",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repository_name/digests",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_delete_repositorymanifest": {
      "provider_intent": "registry_delete_repositorymanifest",
      "provider_alias_intent": "/v2/registry/registry_name/repository_name/digests/manifest_digest",
      "text": "Delete Container Registry Repository Manifest",
      "category": "Container Registry",
      "method": "DELETE",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "manifest_digest": {
          "type": "string",
          "text": "The manifest digest of a container registry repository tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "repository_name": {
          "type": "string",
          "text": "The name of a container registry repository",
          "required": true
        },
        "manifest_digest": {
          "type": "string",
          "text": "The manifest digest of a container registry repository tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a container repository manifest by digest send a DELETE request to\n`/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/digests/$MANIFEST_DIGEST`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/{repository_name}/digests/{manifest_digest}",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/repository_name/digests/manifest_digest",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_run_garbagecollection": {
      "provider_intent": "registry_run_garbagecollection",
      "provider_alias_intent": "/v2/registry/registry_name/garbage-collection",
      "text": "Start Garbage Collection",
      "category": "Container Registry",
      "method": "POST",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Garbage collection enables users to clear out unreferenced blobs (layer &\nmanifest data) after deleting one or more manifests from a repository.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/garbage-collection",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/garbage-collection",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_get_garbagecollection": {
      "provider_intent": "registry_get_garbagecollection",
      "provider_alias_intent": "/v2/registry/registry_name/garbage-collection",
      "text": "Get Active Garbage Collection",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get information about the currently-active garbage collection for a registry send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collection`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/garbage-collection",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/garbage-collection",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_list_garbagecollections": {
      "provider_intent": "registry_list_garbagecollections",
      "provider_alias_intent": "/v2/registry/registry_name/garbage-collections",
      "text": "List Garbage Collections",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get information about past garbage collections for a registry send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collections`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/garbage-collections",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/garbage-collections",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_update_garbagecollection": {
      "provider_intent": "registry_update_garbagecollection",
      "provider_alias_intent": "/v2/registry/registry_name/garbage-collection/garbage_collection_uuid",
      "text": "Update Garbage Collection",
      "category": "Container Registry",
      "method": "PUT",
      "type": "API",
      "params": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "garbage_collection_uuid": {
          "type": "string",
          "text": "The UUID of a garbage collection run",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "cancel": {
          "type": "boolean",
          "text": "A boolean value indicating that the garbage collection should be cancelled",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "registry_name": {
          "type": "string",
          "text": "The name of a container registry",
          "required": true
        },
        "garbage_collection_uuid": {
          "type": "string",
          "text": "The UUID of a garbage collection run",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To cancel the currently-active garbage collection for a registry send a PUT request to `/v2/registry/$REGISTRY_NAME/garbage-collection/$GC_UUID` and specify one or more of the attributes below.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/{registry_name}/garbage-collection/{garbage_collection_uuid}",
        "alias_endpoint": "/digitalocean/v2/registry/registry_name/garbage-collection/garbage_collection_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "registry_get_options": {
      "provider_intent": "registry_get_options",
      "provider_alias_intent": "/v2/registry/options",
      "text": "List Registry Options (Subscription Tiers and Available Regions)",
      "category": "Container Registry",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "This endpoint serves to provide additional information as to which option values are available when creating a container registry.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/registry/options",
        "alias_endpoint": "/digitalocean/v2/registry/options",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_options": {
      "provider_intent": "databases_list_options",
      "provider_alias_intent": "/v2/databases/options",
      "text": "List Database Options",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the options available for the offered database engines send a GET request to `/v2/databases/options`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/options",
        "alias_endpoint": "/digitalocean/v2/databases/options",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_clusters": {
      "provider_intent": "databases_list_clusters",
      "provider_alias_intent": "/v2/databases",
      "text": "List All Database Clusters",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "tag_name": {
          "type": "string",
          "text": "Limits the results to database clusters with a specific tag"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the database clusters available on your account send a GET request to `/v2/databases`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases",
        "alias_endpoint": "/digitalocean/v2/databases",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_create_cluster": {
      "provider_intent": "databases_create_cluster",
      "provider_alias_intent": "/v2/databases",
      "text": "Create a New Database Cluster",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a database cluster send a POST request to `/v2/databases`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases",
        "alias_endpoint": "/digitalocean/v2/databases",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_cluster": {
      "provider_intent": "databases_get_cluster",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid",
      "text": "Retrieve an Existing Database Cluster",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing database cluster send a GET request to `/v2/databases/$DATABASE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_destroy_cluster": {
      "provider_intent": "databases_destroy_cluster",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid",
      "text": "Destroy a Database Cluster",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To destroy a specific database send a DELETE request to `/v2/databases/$DATABASE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_config": {
      "provider_intent": "databases_get_config",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/config",
      "text": "Retrieve an Existing Database Cluster Configuration",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Shows configuration parameters for an existing database cluster by sending a GET request to\n`/v2/databases/$DATABASE_ID/config`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/config",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/config",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_patch_config": {
      "provider_intent": "databases_patch_config",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/config",
      "text": "Update the Database Configuration for an Existing Database",
      "category": "Databases",
      "method": "PATCH",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "config": {
          "type": ""
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the configuration for an existing database cluster send a PATCH request to\n`/v2/databases/$DATABASE_ID/config`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/config",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/config",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_ca": {
      "provider_intent": "databases_get_ca",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/ca",
      "text": "Retrieve the Public Certificate",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the public certificate used to secure the connection to the database cluster send a GET request to\n`/v2/databases/$DATABASE_ID/ca`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/ca",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/ca",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_migrationstatus": {
      "provider_intent": "databases_get_migrationstatus",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/online-migration",
      "text": "Retrieve the Status of an Online Migration",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the status of the most recent online migration send a GET request to `/v2/databases/$DATABASE_ID/online-migration`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/online-migration",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/online-migration",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_onlinemigration": {
      "provider_intent": "databases_update_onlinemigration",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/online-migration",
      "text": "Start an Online Migration",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "source": {
          "type": "object"
        },
        "disable_ssl": {
          "type": "boolean",
          "text": "Enables SSL encryption when connecting to the source database",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To start an online migration send a PUT request to `/v2/databases/$DATABASE_ID/online-migration` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/online-migration",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/online-migration",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_delete_onlinemigration": {
      "provider_intent": "databases_delete_onlinemigration",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/online-migration/migration_id",
      "text": "Stop an Online Migration",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "migration_id": {
          "type": "string",
          "text": "A unique identifier assigned to the online migration",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "migration_id": {
          "type": "string",
          "text": "A unique identifier assigned to the online migration",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To stop an online migration send a DELETE request to `/v2/databases/$DATABASE_ID/online-migration/$MIGRATION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/online-migration/{migration_id}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/online-migration/migration_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_region": {
      "provider_intent": "databases_update_region",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/migrate",
      "text": "Migrate a Database Cluster to a New Region",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "region": {
          "type": "string",
          "text": "A slug identifier for the region to which the database cluster will be migrated",
          "required": true
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To migrate a database cluster to a new region send a `PUT` request to\n`/v2/databases/$DATABASE_ID/migrate`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/migrate",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/migrate",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_clustersize": {
      "provider_intent": "databases_update_clustersize",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/resize",
      "text": "Resize a Database Cluster",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "size": {
          "type": "string",
          "text": "A slug identifier representing desired the size of the nodes in the database cluster",
          "required": true
        },
        "num_nodes": {
          "type": "integer",
          "text": "The number of nodes in the database cluster",
          "required": true
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To resize a database cluster send a PUT request to `/v2/databases/$DATABASE_ID/resize`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/resize",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/resize",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_firewall_rules": {
      "provider_intent": "databases_list_firewall_rules",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/firewall",
      "text": "List Firewall Rules (Trusted Sources) for a Database Cluster",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of a database cluster's firewall rules (known as \"trusted sources\" in the control panel) send a GET request to `/v2/databases/$DATABASE_ID/firewall`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/firewall",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/firewall",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_firewall_rules": {
      "provider_intent": "databases_update_firewall_rules",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/firewall",
      "text": "Update Firewall Rules (Trusted Sources) for a Database",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "rules": {
          "type": "array"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a database cluster's firewall rules (known as \"trusted sources\" in the control panel) send a PUT request to `/v2/databases/$DATABASE_ID/firewall` specifying which resources should be able to open connections to the database.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/firewall",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/firewall",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_maintenancewindow": {
      "provider_intent": "databases_update_maintenancewindow",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/maintenance",
      "text": "Configure a Database Cluster's Maintenance Window",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "day": {
          "type": "string",
          "text": "The day of the week on which to apply maintenance updates",
          "required": true
        },
        "hour": {
          "type": "string",
          "text": "The hour in UTC at which maintenance updates will be applied in 24 hour format",
          "required": true
        },
        "pending": {
          "type": "boolean",
          "text": "A boolean value indicating whether any maintenance is scheduled to be performed in the next window",
          "enum": [
            true,
            false
          ]
        },
        "description": {
          "type": "array",
          "text": "A list of strings each containing information about a pending maintenance update"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To configure the window when automatic maintenance should be performed for a database cluster send a PUT request to `/v2/databases/$DATABASE_ID/maintenance`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/maintenance",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/maintenance",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_backups": {
      "provider_intent": "databases_list_backups",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/backups",
      "text": "List Backups for a Database Cluster",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the available backups of a PostgreSQL or MySQL database cluster send a GET request to `/v2/databases/$DATABASE_ID/backups`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/backups",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/backups",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_replicas": {
      "provider_intent": "databases_list_replicas",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/replicas",
      "text": "List All Read-only Replicas",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the read-only replicas associated with a database cluster send a GET request to `/v2/databases/$DATABASE_ID/replicas`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/replicas",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/replicas",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_create_replica": {
      "provider_intent": "databases_create_replica",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/replicas",
      "text": "Create a Read-only Replica",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a read-only replica for a PostgreSQL or MySQL database cluster send a POST request to `/v2/databases/$DATABASE_ID/replicas` specifying the name it should be given the size of the node to be used and the region where it will be located.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/replicas",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/replicas",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_replica": {
      "provider_intent": "databases_get_replica",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/replicas/replica_name",
      "text": "Retrieve an Existing Read-only Replica",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing database replica send a GET request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/replicas/{replica_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/replicas/replica_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_destroy_replica": {
      "provider_intent": "databases_destroy_replica",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/replicas/replica_name",
      "text": "Destroy a Read-only Replica",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To destroy a specific read-only replica send a DELETE request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/replicas/{replica_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/replicas/replica_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_promote_replica": {
      "provider_intent": "databases_promote_replica",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/replicas/replica_name/promote",
      "text": "Promote a Read-only Replica to become a Primary Cluster",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "replica_name": {
          "type": "string",
          "text": "The name of the database replica",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To promote a specific read-only replica send a PUT request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME/promote`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/replicas/{replica_name}/promote",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/replicas/replica_name/promote",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_users": {
      "provider_intent": "databases_list_users",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/users",
      "text": "List all Database Users",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the users for your database cluster send a GET request to\n`/v2/databases/$DATABASE_ID/users`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/users",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_add_user": {
      "provider_intent": "databases_add_user",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/users",
      "text": "Add a Database User",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of a database user",
          "required": true
        },
        "role": {
          "type": "string",
          "text": "A string representing the database user's role"
        },
        "password": {
          "type": "string",
          "text": "A randomly generated password for the database user"
        },
        "mysql_settings": {
          "type": "object"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add a new database user send a POST request to `/v2/databases/$DATABASE_ID/users`\nwith the desired username.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/users",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/users",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_user": {
      "provider_intent": "databases_get_user",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/users/username",
      "text": "Retrieve an Existing Database User",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing database user send a GET request to\n`/v2/databases/$DATABASE_ID/users/$USERNAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/users/{username}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/users/username",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_delete_user": {
      "provider_intent": "databases_delete_user",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/users/username",
      "text": "Remove a Database User",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove a specific database user send a DELETE request to\n`/v2/databases/$DATABASE_ID/users/$USERNAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/users/{username}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/users/username",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_reset_auth": {
      "provider_intent": "databases_reset_auth",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/users/username/reset_auth",
      "text": "Reset a Database User's Password or Authentication Method",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "mysql_settings": {
          "type": "object"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "username": {
          "type": "string",
          "text": "The name of the database user",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To reset the password for a database user send a POST request to\n`/v2/databases/$DATABASE_ID/users/$USERNAME/reset_auth`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/users/{username}/reset_auth",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/users/username/reset_auth",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list": {
      "provider_intent": "databases_list",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/dbs",
      "text": "List All Databases",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the databases in a clusters send a GET request to\n`/v2/databases/$DATABASE_ID/dbs`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/dbs",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/dbs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_add": {
      "provider_intent": "databases_add",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/dbs",
      "text": "Add a New Database",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the database",
          "required": true
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add a new database to an existing cluster send a POST request to\n`/v2/databases/$DATABASE_ID/dbs`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/dbs",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/dbs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get": {
      "provider_intent": "databases_get",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/dbs/database_name",
      "text": "Retrieve an Existing Database",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "database_name": {
          "type": "string",
          "text": "The name of the database",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "database_name": {
          "type": "string",
          "text": "The name of the database",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing database cluster send a GET request to\n`/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/dbs/{database_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/dbs/database_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_delete": {
      "provider_intent": "databases_delete",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/dbs/database_name",
      "text": "Delete a Database",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "database_name": {
          "type": "string",
          "text": "The name of the database",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "database_name": {
          "type": "string",
          "text": "The name of the database",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a specific database send a DELETE request to\n`/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/dbs/{database_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/dbs/database_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_list_connectionpools": {
      "provider_intent": "databases_list_connectionpools",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/pools",
      "text": "List Connection Pools (PostgreSQL)",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the connection pools available to a PostgreSQL database cluster send a GET request to `/v2/databases/$DATABASE_ID/pools`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/pools",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/pools",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_add_connectionpool": {
      "provider_intent": "databases_add_connectionpool",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/pools",
      "text": "Add a New Connection Pool (PostgreSQL)",
      "category": "Databases",
      "method": "POST",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A unique name for the connection pool",
          "required": true
        },
        "mode": {
          "type": "string",
          "text": "The PGBouncer transaction mode for the connection pool",
          "required": true
        },
        "size": {
          "type": "integer",
          "text": "The desired size of the PGBouncer connection pool",
          "required": true
        },
        "db": {
          "type": "string",
          "text": "The database for use with the connection pool",
          "required": true
        },
        "user": {
          "type": "string",
          "text": "The name of the user for use with the connection pool"
        },
        "connection": {
          "type": ""
        },
        "private_connection": {
          "type": ""
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "For PostgreSQL database clusters connection pools can be used to allow a\ndatabase to share its idle connections.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/pools",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/pools",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_connectionpool": {
      "provider_intent": "databases_get_connectionpool",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/pools/pool_name",
      "text": "Retrieve Existing Connection Pool (PostgreSQL)",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing connection pool for a PostgreSQL database cluster send a GET request to `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/pools/{pool_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/pools/pool_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_connectionpool": {
      "provider_intent": "databases_update_connectionpool",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/pools/pool_name",
      "text": "Update Connection Pools (PostgreSQL)",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "mode": {
          "type": "string",
          "text": "The PGBouncer transaction mode for the connection pool",
          "required": true
        },
        "size": {
          "type": "integer",
          "text": "The desired size of the PGBouncer connection pool",
          "required": true
        },
        "db": {
          "type": "string",
          "text": "The database for use with the connection pool",
          "required": true
        },
        "user": {
          "type": "string",
          "text": "The name of the user for use with the connection pool"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a connection pool for a PostgreSQL database cluster send a PUT request to  `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/pools/{pool_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/pools/pool_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_delete_connectionpool": {
      "provider_intent": "databases_delete_connectionpool",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/pools/pool_name",
      "text": "Delete a Connection Pool (PostgreSQL)",
      "category": "Databases",
      "method": "DELETE",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        },
        "pool_name": {
          "type": "string",
          "text": "The name used to identify the connection pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a specific connection pool for a PostgreSQL database cluster send\na DELETE request to `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/pools/{pool_name}",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/pools/pool_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_evictionpolicy": {
      "provider_intent": "databases_get_evictionpolicy",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/eviction_policy",
      "text": "Retrieve the Eviction Policy for a Redis Cluster",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the configured eviction policy for an existing Redis cluster send a GET request to `/v2/databases/$DATABASE_ID/eviction_policy`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/eviction_policy",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/eviction_policy",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_evictionpolicy": {
      "provider_intent": "databases_update_evictionpolicy",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/eviction_policy",
      "text": "Configure the Eviction Policy for a Redis Cluster",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "eviction_policy": {
          "type": "string",
          "text": "A string specifying the desired eviction policy for the Redis cluster",
          "required": true
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To configure an eviction policy for an existing Redis cluster send a PUT request to `/v2/databases/$DATABASE_ID/eviction_policy` specifying the desired policy.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/eviction_policy",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/eviction_policy",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_get_sql_mode": {
      "provider_intent": "databases_get_sql_mode",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/sql_mode",
      "text": "Retrieve the SQL Modes for a MySQL Cluster",
      "category": "Databases",
      "method": "GET",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the configured SQL modes for an existing MySQL cluster send a GET request to `/v2/databases/$DATABASE_ID/sql_mode`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/sql_mode",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/sql_mode",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_sql_mode": {
      "provider_intent": "databases_update_sql_mode",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/sql_mode",
      "text": "Update SQL Mode for a Cluster",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "sql_mode": {
          "type": "string",
          "text": "A string specifying the configured SQL modes for the MySQL cluster",
          "required": true
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To configure the SQL modes for an existing MySQL cluster send a PUT request to `/v2/databases/$DATABASE_ID/sql_mode` specifying the desired modes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/sql_mode",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/sql_mode",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "databases_update_major_version": {
      "provider_intent": "databases_update_major_version",
      "provider_alias_intent": "/v2/databases/database_cluster_uuid/upgrade",
      "text": "Upgrade Major Version for a Database",
      "category": "Databases",
      "method": "PUT",
      "type": "API",
      "params": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "version": {
          "type": "string",
          "text": "A string representing the version of the database engine in use for the cluster"
        }
      },
      "path": {
        "database_cluster_uuid": {
          "type": "string",
          "text": "A unique identifier for a database cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To upgrade the major version of a database send a PUT request to `/v2/databases/$DATABASE_ID/upgrade` specifying the target version.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/databases/{database_cluster_uuid}/upgrade",
        "alias_endpoint": "/digitalocean/v2/databases/database_cluster_uuid/upgrade",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_list_records": {
      "provider_intent": "domains_list_records",
      "provider_alias_intent": "/v2/domains/domain_name/records",
      "text": "List All Domain Records",
      "category": "Domain Records",
      "method": "GET",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "A fully qualified record name"
        },
        "type": {
          "type": "string",
          "text": "The type of the DNS record"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get a listing of all records configured for a domain send a GET request to `/v2/domains/$DOMAIN_NAME/records`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_create_record": {
      "provider_intent": "domains_create_record",
      "provider_alias_intent": "/v2/domains/domain_name/records",
      "text": "Create a New Domain Record",
      "category": "Domain Records",
      "method": "POST",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new record to a domain send a POST request to\n`/v2/domains/$DOMAIN_NAME/records`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_get_record": {
      "provider_intent": "domains_get_record",
      "provider_alias_intent": "/v2/domains/domain_name/records/domain_record_id",
      "text": "Retrieve an Existing Domain Record",
      "category": "Domain Records",
      "method": "GET",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a specific domain record send a GET request to `/v2/domains/$DOMAIN_NAME/records/$RECORD_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records/{domain_record_id}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records/domain_record_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_patch_record": {
      "provider_intent": "domains_patch_record",
      "provider_alias_intent": "/v2/domains/domain_name/records/domain_record_id",
      "text": "Update a Domain Record",
      "category": "Domain Records",
      "method": "PATCH",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "id": {
          "type": "integer",
          "text": "A unique identifier for each domain record"
        },
        "type": {
          "type": "string",
          "text": "The type of the DNS record",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The host name alias or service being defined by the record"
        },
        "data": {
          "type": "string",
          "text": "Variable data depending on record type"
        },
        "priority": {
          "type": "integer",
          "text": "The priority for SRV and MX records"
        },
        "port": {
          "type": "integer",
          "text": "The port for SRV records"
        },
        "ttl": {
          "type": "integer",
          "text": "This value is the time to live for the record in seconds"
        },
        "weight": {
          "type": "integer",
          "text": "The weight for SRV records"
        },
        "flags": {
          "type": "integer",
          "text": "An unsigned integer between 0-255 used for CAA records"
        },
        "tag": {
          "type": "string",
          "text": "The parameter tag for CAA records"
        }
      },
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update an existing record send a PATCH request to\n`/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records/{domain_record_id}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records/domain_record_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_update_record": {
      "provider_intent": "domains_update_record",
      "provider_alias_intent": "/v2/domains/domain_name/records/domain_record_id",
      "text": "Update a Domain Record",
      "category": "Domain Records",
      "method": "PUT",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "id": {
          "type": "integer",
          "text": "A unique identifier for each domain record"
        },
        "type": {
          "type": "string",
          "text": "The type of the DNS record",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The host name alias or service being defined by the record"
        },
        "data": {
          "type": "string",
          "text": "Variable data depending on record type"
        },
        "priority": {
          "type": "integer",
          "text": "The priority for SRV and MX records"
        },
        "port": {
          "type": "integer",
          "text": "The port for SRV records"
        },
        "ttl": {
          "type": "integer",
          "text": "This value is the time to live for the record in seconds"
        },
        "weight": {
          "type": "integer",
          "text": "The weight for SRV records"
        },
        "flags": {
          "type": "integer",
          "text": "An unsigned integer between 0-255 used for CAA records"
        },
        "tag": {
          "type": "string",
          "text": "The parameter tag for CAA records"
        }
      },
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update an existing record send a PUT request to\n`/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records/{domain_record_id}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records/domain_record_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_delete_record": {
      "provider_intent": "domains_delete_record",
      "provider_alias_intent": "/v2/domains/domain_name/records/domain_record_id",
      "text": "Delete a Domain Record",
      "category": "Domain Records",
      "method": "DELETE",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        },
        "domain_record_id": {
          "type": "integer",
          "text": "The unique identifier of the domain record",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a record for a domain send a DELETE request to\n`/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}/records/{domain_record_id}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name/records/domain_record_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_list": {
      "provider_intent": "domains_list",
      "provider_alias_intent": "/v2/domains",
      "text": "List All Domains",
      "category": "Domains",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all of the domains in your account send a GET request to `/v2/domains`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains",
        "alias_endpoint": "/digitalocean/v2/domains",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_create": {
      "provider_intent": "domains_create",
      "provider_alias_intent": "/v2/domains",
      "text": "Create a New Domain",
      "category": "Domains",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the domain itself"
        },
        "ip_address": {
          "type": "string",
          "text": "This optional attribute may contain an IP address"
        },
        "ttl": {
          "type": "integer",
          "text": "This value is the time to live for the records on this domain in seconds"
        },
        "zone_file": {
          "type": "string",
          "text": "This attribute contains the complete contents of the zone file for the selected domain"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new domain send a POST request to `/v2/domains`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains",
        "alias_endpoint": "/digitalocean/v2/domains",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_get": {
      "provider_intent": "domains_get",
      "provider_alias_intent": "/v2/domains/domain_name",
      "text": "Retrieve an Existing Domain",
      "category": "Domains",
      "method": "GET",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get details about a specific domain send a GET request to `/v2/domains/$DOMAIN_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "domains_delete": {
      "provider_intent": "domains_delete",
      "provider_alias_intent": "/v2/domains/domain_name",
      "text": "Delete a Domain",
      "category": "Domains",
      "method": "DELETE",
      "type": "API",
      "params": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "domain_name": {
          "type": "string",
          "text": "The name of the domain itself",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a domain send a DELETE request to `/v2/domains/$DOMAIN_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/domains/{domain_name}",
        "alias_endpoint": "/digitalocean/v2/domains/domain_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "dropletactions_list": {
      "provider_intent": "dropletactions_list",
      "provider_alias_intent": "/v2/droplets/droplet_id/actions",
      "text": "List Actions for a Droplet",
      "category": "Droplet Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all actions that have been executed for a Droplet send\na GET request to `/v2/droplets/$DROPLET_ID/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/actions",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "dropletactions_post": {
      "provider_intent": "dropletactions_post",
      "provider_alias_intent": "/v2/droplets/droplet_id/actions",
      "text": "Initiate a Droplet Action",
      "category": "Droplet Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To initiate an action on a Droplet send a POST request to\n`/v2/droplets/$DROPLET_ID/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/actions",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "dropletactions_post_bytag": {
      "provider_intent": "dropletactions_post_bytag",
      "provider_alias_intent": "/v2/droplets/actions",
      "text": "Acting on Tagged Droplets",
      "category": "Droplet Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "tag_name": {
          "type": "string",
          "text": "Used to filter Droplets by a specific tag"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Some actions can be performed in bulk on tagged Droplets.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/actions",
        "alias_endpoint": "/digitalocean/v2/droplets/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "dropletactions_get": {
      "provider_intent": "dropletactions_get",
      "provider_alias_intent": "/v2/droplets/droplet_id/actions/action_id",
      "text": "Retrieve a Droplet Action",
      "category": "Droplet Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a Droplet action send a GET request to\n`/v2/droplets/$DROPLET_ID/actions/$ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list": {
      "provider_intent": "droplets_list",
      "provider_alias_intent": "/v2/droplets",
      "text": "List All Droplets",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        },
        "tag_name": {
          "type": "string",
          "text": "Used to filter Droplets by a specific tag"
        },
        "name": {
          "type": "string",
          "text": "Used to filter list response by Droplet name returning only exact matches"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all Droplets in your account send a GET request to `/v2/droplets`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets",
        "alias_endpoint": "/digitalocean/v2/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_create": {
      "provider_intent": "droplets_create",
      "provider_alias_intent": "/v2/droplets",
      "text": "Create a New Droplet",
      "category": "Droplets",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new Droplet send a POST request to `/v2/droplets` setting the\nrequired attributes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets",
        "alias_endpoint": "/digitalocean/v2/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_destroy_bytag": {
      "provider_intent": "droplets_destroy_bytag",
      "provider_alias_intent": "/v2/droplets",
      "text": "Deleting Droplets by Tag",
      "category": "Droplets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tag_name": {
          "type": "string",
          "text": "Specifies Droplets to be deleted by tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete **all** Droplets assigned to a specific tag include the `tag_name`\nquery parameter set to the name of the tag in your DELETE request.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets",
        "alias_endpoint": "/digitalocean/v2/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_get": {
      "provider_intent": "droplets_get",
      "provider_alias_intent": "/v2/droplets/droplet_id",
      "text": "Retrieve an Existing Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an individual Droplet send a GET request to\n`/v2/droplets/$DROPLET_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_destroy": {
      "provider_intent": "droplets_destroy",
      "provider_alias_intent": "/v2/droplets/droplet_id",
      "text": "Delete an Existing Droplet",
      "category": "Droplets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a Droplet send a DELETE request to `/v2/droplets/$DROPLET_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_backups": {
      "provider_intent": "droplets_list_backups",
      "provider_alias_intent": "/v2/droplets/droplet_id/backups",
      "text": "List Backups for a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve any backups associated with a Droplet send a GET request to\n`/v2/droplets/$DROPLET_ID/backups`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/backups",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/backups",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_snapshots": {
      "provider_intent": "droplets_list_snapshots",
      "provider_alias_intent": "/v2/droplets/droplet_id/snapshots",
      "text": "List Snapshots for a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the snapshots that have been created from a Droplet send a GET\nrequest to `/v2/droplets/$DROPLET_ID/snapshots`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/snapshots",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/snapshots",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_kernels": {
      "provider_intent": "droplets_list_kernels",
      "provider_alias_intent": "/v2/droplets/droplet_id/kernels",
      "text": "List All Available Kernels for a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all kernels available to a Droplet send a GET request\nto `/v2/droplets/$DROPLET_ID/kernels`\n\nThe response will be a JSON object that has a key called `kernels`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/kernels",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/kernels",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_firewalls": {
      "provider_intent": "droplets_list_firewalls",
      "provider_alias_intent": "/v2/droplets/droplet_id/firewalls",
      "text": "List all Firewalls Applied to a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all firewalls available to a Droplet send a GET request\nto `/v2/droplets/$DROPLET_ID/firewalls`\n\nThe response will be a JSON object that has a key called `firewalls`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/firewalls",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/firewalls",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_neighbors": {
      "provider_intent": "droplets_list_neighbors",
      "provider_alias_intent": "/v2/droplets/droplet_id/neighbors",
      "text": "List Neighbors for a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of any \"neighbors\" (i.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/neighbors",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/neighbors",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_associatedresources": {
      "provider_intent": "droplets_list_associatedresources",
      "provider_alias_intent": "/v2/droplets/droplet_id/destroy_with_associated_resources",
      "text": "List Associated Resources for a Droplet",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list the associated billable resources that can be destroyed along with a\nDroplet send a GET request to the\n`/v2/droplets/$DROPLET_ID/destroy_with_associated_resources` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/destroy_with_associated_resources",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/destroy_with_associated_resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_destroy_withassociatedresourcesselective": {
      "provider_intent": "droplets_destroy_withassociatedresourcesselective",
      "provider_alias_intent": "/v2/droplets/droplet_id/destroy_with_associated_resources/selective",
      "text": "Selectively Destroy a Droplet and its Associated Resources",
      "category": "Droplets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "floating_ips": {
          "type": "array",
          "text": "An array of unique identifiers for the floating IPs to be scheduled for deletion"
        },
        "reserved_ips": {
          "type": "array",
          "text": "An array of unique identifiers for the reserved IPs to be scheduled for deletion"
        },
        "snapshots": {
          "type": "array",
          "text": "An array of unique identifiers for the snapshots to be scheduled for deletion"
        },
        "volumes": {
          "type": "array",
          "text": "An array of unique identifiers for the volumes to be scheduled for deletion"
        },
        "volume_snapshots": {
          "type": "array",
          "text": "An array of unique identifiers for the volume snapshots to be scheduled for deletion"
        }
      },
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To destroy a Droplet along with a sub-set of its associated resources send a\nDELETE request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/selective`\nendpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/destroy_with_associated_resources/selective",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/destroy_with_associated_resources/selective",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_destroy_withassociatedresourcesdangerous": {
      "provider_intent": "droplets_destroy_withassociatedresourcesdangerous",
      "provider_alias_intent": "/v2/droplets/droplet_id/destroy_with_associated_resources/dangerous",
      "text": "Destroy a Droplet and All of its Associated Resources (Dangerous)",
      "category": "Droplets",
      "method": "DELETE",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To destroy a Droplet along with all of its associated resources send a DELETE\nrequest to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/dangerous`\nendpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/destroy_with_associated_resources/dangerous",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/destroy_with_associated_resources/dangerous",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_get_destroyassociatedresourcesstatus": {
      "provider_intent": "droplets_get_destroyassociatedresourcesstatus",
      "provider_alias_intent": "/v2/droplets/droplet_id/destroy_with_associated_resources/status",
      "text": "Check Status of a Droplet Destroy with Associated Resources Request",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To check on the status of a request to destroy a Droplet with its associated\nresources send a GET request to the\n`/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/status` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/destroy_with_associated_resources/status",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/destroy_with_associated_resources/status",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_destroy_retrywithassociatedresources": {
      "provider_intent": "droplets_destroy_retrywithassociatedresources",
      "provider_alias_intent": "/v2/droplets/droplet_id/destroy_with_associated_resources/retry",
      "text": "Retry a Droplet Destroy with Associated Resources Request",
      "category": "Droplets",
      "method": "POST",
      "type": "API",
      "params": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "droplet_id": {
          "type": "integer",
          "text": "A unique identifier for a Droplet instance",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "If the status of a request to destroy a Droplet with its associated resources\nreported any errors it can be retried by sending a POST request to the\n`/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/retry` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/droplets/{droplet_id}/destroy_with_associated_resources/retry",
        "alias_endpoint": "/digitalocean/v2/droplets/droplet_id/destroy_with_associated_resources/retry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "droplets_list_neighborsids": {
      "provider_intent": "droplets_list_neighborsids",
      "provider_alias_intent": "/v2/reports/droplet_neighbors_ids",
      "text": "List All Droplet Neighbors",
      "category": "Droplets",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a list of all Droplets that are co-located on the same physical\nhardware send a GET request to `/v2/reports/droplet_neighbors_ids`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reports/droplet_neighbors_ids",
        "alias_endpoint": "/digitalocean/v2/reports/droplet_neighbors_ids",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_list": {
      "provider_intent": "firewalls_list",
      "provider_alias_intent": "/v2/firewalls",
      "text": "List All Firewalls",
      "category": "Firewalls",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the firewalls available on your account send a GET request to `/v2/firewalls`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls",
        "alias_endpoint": "/digitalocean/v2/firewalls",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_create": {
      "provider_intent": "firewalls_create",
      "provider_alias_intent": "/v2/firewalls",
      "text": "Create a New Firewall",
      "category": "Firewalls",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new firewall send a POST request to `/v2/firewalls`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls",
        "alias_endpoint": "/digitalocean/v2/firewalls",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_get": {
      "provider_intent": "firewalls_get",
      "provider_alias_intent": "/v2/firewalls/firewall_id",
      "text": "Retrieve an Existing Firewall",
      "category": "Firewalls",
      "method": "GET",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing firewall send a GET request to `/v2/firewalls/$FIREWALL_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_update": {
      "provider_intent": "firewalls_update",
      "provider_alias_intent": "/v2/firewalls/firewall_id",
      "text": "Update a Firewall",
      "category": "Firewalls",
      "method": "PUT",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the configuration of an existing firewall send a PUT request to\n`/v2/firewalls/$FIREWALL_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_delete": {
      "provider_intent": "firewalls_delete",
      "provider_alias_intent": "/v2/firewalls/firewall_id",
      "text": "Delete a Firewall",
      "category": "Firewalls",
      "method": "DELETE",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a firewall send a DELETE request to `/v2/firewalls/$FIREWALL_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_assign_droplets": {
      "provider_intent": "firewalls_assign_droplets",
      "provider_alias_intent": "/v2/firewalls/firewall_id/droplets",
      "text": "Add Droplets to a Firewall",
      "category": "Firewalls",
      "method": "POST",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "droplet_ids": {
          "type": "array",
          "text": "An array containing the IDs of the Droplets to be assigned to the firewall",
          "required": true
        }
      },
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To assign a Droplet to a firewall send a POST request to\n`/v2/firewalls/$FIREWALL_ID/droplets`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/droplets",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_delete_droplets": {
      "provider_intent": "firewalls_delete_droplets",
      "provider_alias_intent": "/v2/firewalls/firewall_id/droplets",
      "text": "Remove Droplets from a Firewall",
      "category": "Firewalls",
      "method": "DELETE",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "droplet_ids": {
          "type": "array",
          "text": "An array containing the IDs of the Droplets to be removed from the firewall",
          "required": true
        }
      },
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove a Droplet from a firewall send a DELETE request to\n`/v2/firewalls/$FIREWALL_ID/droplets`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/droplets",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_add_tags": {
      "provider_intent": "firewalls_add_tags",
      "provider_alias_intent": "/v2/firewalls/firewall_id/tags",
      "text": "Add Tags to a Firewall",
      "category": "Firewalls",
      "method": "POST",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "",
          "required": true
        }
      },
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To assign a tag representing a group of Droplets to a firewall send a POST\nrequest to `/v2/firewalls/$FIREWALL_ID/tags`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/tags",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_delete_tags": {
      "provider_intent": "firewalls_delete_tags",
      "provider_alias_intent": "/v2/firewalls/firewall_id/tags",
      "text": "Remove Tags from a Firewall",
      "category": "Firewalls",
      "method": "DELETE",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "tags": {
          "type": "",
          "required": true
        }
      },
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove a tag representing a group of Droplets from a firewall send a\nDELETE request to `/v2/firewalls/$FIREWALL_ID/tags`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/tags",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_add_rules": {
      "provider_intent": "firewalls_add_rules",
      "provider_alias_intent": "/v2/firewalls/firewall_id/rules",
      "text": "Add Rules to a Firewall",
      "category": "Firewalls",
      "method": "POST",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add additional access rules to a firewall send a POST request to\n`/v2/firewalls/$FIREWALL_ID/rules`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/rules",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/rules",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "firewalls_delete_rules": {
      "provider_intent": "firewalls_delete_rules",
      "provider_alias_intent": "/v2/firewalls/firewall_id/rules",
      "text": "Remove Rules from a Firewall",
      "category": "Firewalls",
      "method": "DELETE",
      "type": "API",
      "params": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "firewall_id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a firewall",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove access rules from a firewall send a DELETE request to\n`/v2/firewalls/$FIREWALL_ID/rules`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/firewalls/{firewall_id}/rules",
        "alias_endpoint": "/digitalocean/v2/firewalls/firewall_id/rules",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingipsaction_list": {
      "provider_intent": "floatingipsaction_list",
      "provider_alias_intent": "/v2/floating_ips/floating_ip/actions",
      "text": "List All Actions for a Floating IP",
      "category": "Floating IP Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve all actions that have been executed on a floating IP send a GET request to `/v2/floating_ips/$FLOATING_IP/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips/{floating_ip}/actions",
        "alias_endpoint": "/digitalocean/v2/floating_ips/floating_ip/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingipsaction_post": {
      "provider_intent": "floatingipsaction_post",
      "provider_alias_intent": "/v2/floating_ips/floating_ip/actions",
      "text": "Initiate a Floating IP Action",
      "category": "Floating IP Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To initiate an action on a floating IP send a POST request to\n`/v2/floating_ips/$FLOATING_IP/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips/{floating_ip}/actions",
        "alias_endpoint": "/digitalocean/v2/floating_ips/floating_ip/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingipsaction_get": {
      "provider_intent": "floatingipsaction_get",
      "provider_alias_intent": "/v2/floating_ips/floating_ip/actions/action_id",
      "text": "Retrieve an Existing Floating IP Action",
      "category": "Floating IP Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the status of a floating IP action send a GET request to `/v2/floating_ips/$FLOATING_IP/actions/$ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips/{floating_ip}/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/floating_ips/floating_ip/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingips_list": {
      "provider_intent": "floatingips_list",
      "provider_alias_intent": "/v2/floating_ips",
      "text": "List All Floating IPs",
      "category": "Floating IPs",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the floating IPs available on your account send a GET request to `/v2/floating_ips`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips",
        "alias_endpoint": "/digitalocean/v2/floating_ips",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingips_create": {
      "provider_intent": "floatingips_create",
      "provider_alias_intent": "/v2/floating_ips",
      "text": "Create a New Floating IP",
      "category": "Floating IPs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "On creation a floating IP must be either assigned to a Droplet or reserved to a region.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips",
        "alias_endpoint": "/digitalocean/v2/floating_ips",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingips_get": {
      "provider_intent": "floatingips_get",
      "provider_alias_intent": "/v2/floating_ips/floating_ip",
      "text": "Retrieve an Existing Floating IP",
      "category": "Floating IPs",
      "method": "GET",
      "type": "API",
      "params": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about a floating IP send a GET request to `/v2/floating_ips/$FLOATING_IP_ADDR`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips/{floating_ip}",
        "alias_endpoint": "/digitalocean/v2/floating_ips/floating_ip",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "floatingips_delete": {
      "provider_intent": "floatingips_delete",
      "provider_alias_intent": "/v2/floating_ips/floating_ip",
      "text": "Delete a Floating IP",
      "category": "Floating IPs",
      "method": "DELETE",
      "type": "API",
      "params": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "floating_ip": {
          "type": "string",
          "text": "A floating IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a floating IP and remove it from your account send a DELETE request\nto `/v2/floating_ips/$FLOATING_IP_ADDR`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/floating_ips/{floating_ip}",
        "alias_endpoint": "/digitalocean/v2/floating_ips/floating_ip",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_list_namespaces": {
      "provider_intent": "functions_list_namespaces",
      "provider_alias_intent": "/v2/functions/namespaces",
      "text": "List Namespaces",
      "category": "Functions",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Returns a list of namespaces associated with the current user.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_create_namespace": {
      "provider_intent": "functions_create_namespace",
      "provider_alias_intent": "/v2/functions/namespaces",
      "text": "Create Namespace",
      "category": "Functions",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "region": {
          "type": "string",
          "text": "The [datacenter region](https//docs",
          "required": true
        },
        "label": {
          "type": "string",
          "text": "The namespace's unique name",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Creates a new serverless functions namespace in the desired region and associates it with the provided label.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_get_namespace": {
      "provider_intent": "functions_get_namespace",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id",
      "text": "Get Namespace",
      "category": "Functions",
      "method": "GET",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Gets the namespace details for the given namespace UUID.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_delete_namespace": {
      "provider_intent": "functions_delete_namespace",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id",
      "text": "Delete Namespace",
      "category": "Functions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Deletes the given namespace.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_list_triggers": {
      "provider_intent": "functions_list_triggers",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id/triggers",
      "text": "List Triggers",
      "category": "Functions",
      "method": "GET",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Returns a list of triggers associated with the current user and namespace.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}/triggers",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id/triggers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_create_trigger": {
      "provider_intent": "functions_create_trigger",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id/triggers",
      "text": "Create Trigger",
      "category": "Functions",
      "method": "POST",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The trigger's unique name within the namespace",
          "required": true
        },
        "function": {
          "type": "string",
          "text": "Name of function(action) that exists in the given namespace",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "One of different type of triggers",
          "required": true
        },
        "is_enabled": {
          "type": "boolean",
          "text": "Indicates weather the trigger is paused or unpaused",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "scheduled_details": {
          "type": "object",
          "text": "Trigger details for SCHEDULED type where body is optional",
          "required": true
        }
      },
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Creates a new trigger for a given function in a namespace.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}/triggers",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id/triggers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_get_trigger": {
      "provider_intent": "functions_get_trigger",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id/triggers/trigger_name",
      "text": "Get Trigger",
      "category": "Functions",
      "method": "GET",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Gets the trigger details.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id/triggers/trigger_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_update_trigger": {
      "provider_intent": "functions_update_trigger",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id/triggers/trigger_name",
      "text": "Update Trigger",
      "category": "Functions",
      "method": "PUT",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "is_enabled": {
          "type": "boolean",
          "text": "Indicates weather the trigger is paused or unpaused",
          "enum": [
            true,
            false
          ]
        },
        "scheduled_details": {
          "type": "object",
          "text": "Trigger details for SCHEDULED type where body is optional"
        }
      },
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Updates the details of the given trigger.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id/triggers/trigger_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "functions_delete_trigger": {
      "provider_intent": "functions_delete_trigger",
      "provider_alias_intent": "/v2/functions/namespaces/namespace_id/triggers/trigger_name",
      "text": "Delete Trigger",
      "category": "Functions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "namespace_id": {
          "type": "string",
          "text": "The ID of the namespace to be managed",
          "required": true
        },
        "trigger_name": {
          "type": "string",
          "text": "The name of the trigger to be managed",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Deletes the given trigger.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}",
        "alias_endpoint": "/digitalocean/v2/functions/namespaces/namespace_id/triggers/trigger_name",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "imageactions_list": {
      "provider_intent": "imageactions_list",
      "provider_alias_intent": "/v2/images/image_id/actions",
      "text": "List All Actions for an Image",
      "category": "Image Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve all actions that have been executed on an image send a GET request to `/v2/images/$IMAGE_ID/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}/actions",
        "alias_endpoint": "/digitalocean/v2/images/image_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "imageactions_post": {
      "provider_intent": "imageactions_post",
      "provider_alias_intent": "/v2/images/image_id/actions",
      "text": "Initiate an Image Action",
      "category": "Image Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "The following actions are available on an Image.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}/actions",
        "alias_endpoint": "/digitalocean/v2/images/image_id/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "imageactions_get": {
      "provider_intent": "imageactions_get",
      "provider_alias_intent": "/v2/images/image_id/actions/action_id",
      "text": "Retrieve an Existing Action",
      "category": "Image Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the status of an image action send a GET request to `/v2/images/$IMAGE_ID/actions/$IMAGE_ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/images/image_id/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "images_list": {
      "provider_intent": "images_list",
      "provider_alias_intent": "/v2/images",
      "text": "List All Images",
      "category": "Images",
      "method": "GET",
      "type": "API",
      "params": {
        "type": {
          "type": "string",
          "text": "Filters results based on image type which can be either `application` or `distribution`"
        },
        "private": {
          "type": "boolean",
          "text": "Used to filter only user images",
          "enum": [
            true,
            false
          ]
        },
        "tag_name": {
          "type": "string",
          "text": "Used to filter images by a specific tag"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the images available on your account send a GET request to /v2/images.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images",
        "alias_endpoint": "/digitalocean/v2/images",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "images_create_custom": {
      "provider_intent": "images_create_custom",
      "provider_alias_intent": "/v2/images",
      "text": "Create a Custom Image",
      "category": "Images",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new custom image send a POST request to /v2/images.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images",
        "alias_endpoint": "/digitalocean/v2/images",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "images_get": {
      "provider_intent": "images_get",
      "provider_alias_intent": "/v2/images/image_id",
      "text": "Retrieve an Existing Image",
      "category": "Images",
      "method": "GET",
      "type": "API",
      "params": {
        "image_id": {
          "type": "",
          "text": "A unique number (id) or string (slug) used to identify and reference a",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "image_id": {
          "type": "",
          "text": "A unique number (id) or string (slug) used to identify and reference a",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve information about an image send a `GET` request to\n`/v2/images/$IDENTIFIER`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}",
        "alias_endpoint": "/digitalocean/v2/images/image_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "images_update": {
      "provider_intent": "images_update",
      "provider_alias_intent": "/v2/images/image_id",
      "text": "Update an Image",
      "category": "Images",
      "method": "PUT",
      "type": "API",
      "params": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The display name that has been given to an image"
        },
        "distribution": {
          "type": "string",
          "text": "The name of a custom image's distribution"
        },
        "description": {
          "type": "string",
          "text": "An optional free-form text field to describe an image"
        }
      },
      "path": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update an image send a `PUT` request to `/v2/images/$IMAGE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}",
        "alias_endpoint": "/digitalocean/v2/images/image_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "images_delete": {
      "provider_intent": "images_delete",
      "provider_alias_intent": "/v2/images/image_id",
      "text": "Delete an Image",
      "category": "Images",
      "method": "DELETE",
      "type": "API",
      "params": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "image_id": {
          "type": "integer",
          "text": "A unique number that can be used to identify and reference a specific image",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a snapshot or custom image send a `DELETE` request to `/v2/images/$IMAGE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/images/{image_id}",
        "alias_endpoint": "/digitalocean/v2/images/image_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_list_clusters": {
      "provider_intent": "kubernetes_list_clusters",
      "provider_alias_intent": "/v2/kubernetes/clusters",
      "text": "List All Kubernetes Clusters",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the Kubernetes clusters on your account send a GET request\nto `/v2/kubernetes/clusters`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_create_cluster": {
      "provider_intent": "kubernetes_create_cluster",
      "provider_alias_intent": "/v2/kubernetes/clusters",
      "text": "Create a New Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "id": {
          "type": "string",
          "text": "A unique ID that can be used to identify and reference a Kubernetes cluster"
        },
        "name": {
          "type": "string",
          "text": "A human-readable name for a Kubernetes cluster",
          "required": true
        },
        "region": {
          "type": "string",
          "text": "The slug identifier for the region where the Kubernetes cluster is located",
          "required": true
        },
        "version": {
          "type": "string",
          "text": "The slug identifier for the version of Kubernetes used for the cluster",
          "required": true
        },
        "cluster_subnet": {
          "type": "string",
          "text": "The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation"
        },
        "service_subnet": {
          "type": "string",
          "text": "The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation"
        },
        "vpc_uuid": {
          "type": "string",
          "text": "A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned"
        },
        "ipv4": {
          "type": "string",
          "text": "The public IPv4 address of the Kubernetes master node"
        },
        "endpoint": {
          "type": "string",
          "text": "The base URL of the API server on the Kubernetes master node"
        },
        "tags": {
          "type": "array",
          "text": "An array of tags applied to the Kubernetes cluster"
        },
        "node_pools": {
          "type": "array",
          "text": "An object specifying the details of the worker nodes available to the Kubernetes cluster",
          "required": true
        },
        "maintenance_policy": {
          "type": "object",
          "text": "An object specifying the maintenance window policy for the Kubernetes cluster"
        },
        "auto_upgrade": {
          "type": "boolean",
          "text": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window",
          "enum": [
            true,
            false
          ]
        },
        "status": {
          "type": "object",
          "text": "An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster"
        },
        "created_at": {
          "type": "string",
          "text": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created"
        },
        "updated_at": {
          "type": "string",
          "text": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated"
        },
        "surge_upgrade": {
          "type": "boolean",
          "text": "A boolean value indicating whether surge upgrade is enabled/disabled for the cluster",
          "enum": [
            true,
            false
          ]
        },
        "ha": {
          "type": "boolean",
          "text": "A boolean value indicating whether the control plane is run in a highly available configuration in the cluster",
          "enum": [
            true,
            false
          ]
        },
        "registry_enabled": {
          "type": "boolean",
          "text": "A read-only boolean value indicating if a container registry is integrated with the cluster",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new Kubernetes cluster send a POST request to\n`/v2/kubernetes/clusters`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_cluster": {
      "provider_intent": "kubernetes_get_cluster",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id",
      "text": "Retrieve an Existing Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing Kubernetes cluster send a GET request\nto `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_update_cluster": {
      "provider_intent": "kubernetes_update_cluster",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id",
      "text": "Update a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "PUT",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A human-readable name for a Kubernetes cluster",
          "required": true
        },
        "tags": {
          "type": "array",
          "text": "An array of tags applied to the Kubernetes cluster"
        },
        "maintenance_policy": {
          "type": "object",
          "text": "An object specifying the maintenance window policy for the Kubernetes cluster"
        },
        "auto_upgrade": {
          "type": "boolean",
          "text": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window",
          "enum": [
            true,
            false
          ]
        },
        "surge_upgrade": {
          "type": "boolean",
          "text": "A boolean value indicating whether surge upgrade is enabled/disabled for the cluster",
          "enum": [
            true,
            false
          ]
        },
        "ha": {
          "type": "boolean",
          "text": "A boolean value indicating whether the control plane is run in a highly available configuration in the cluster",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a Kubernetes cluster send a PUT request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID` and specify one or more of the\nattributes below.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_delete_cluster": {
      "provider_intent": "kubernetes_delete_cluster",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id",
      "text": "Delete a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a Kubernetes cluster and all services deployed to it send a DELETE\nrequest to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_list_associatedresources": {
      "provider_intent": "kubernetes_list_associatedresources",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources",
      "text": "List Associated Resources for Cluster Deletion",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list the associated billable resources that can be destroyed along with a cluster send a GET request to the `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources` endpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_destroy_associatedresourcesselective": {
      "provider_intent": "kubernetes_destroy_associatedresourcesselective",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources/selective",
      "text": "Selectively Delete a Cluster and its Associated Resources",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "load_balancers": {
          "type": "array",
          "text": "A list of IDs for associated load balancers to destroy along with the cluster"
        },
        "volumes": {
          "type": "array",
          "text": "A list of IDs for associated volumes to destroy along with the cluster"
        },
        "volume_snapshots": {
          "type": "array",
          "text": "A list of IDs for associated volume snapshots to destroy along with the cluster"
        }
      },
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a Kubernetes cluster along with a subset of its associated resources\nsend a DELETE request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources/selective`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/selective",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources/selective",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_destroy_associatedresourcesdangerous": {
      "provider_intent": "kubernetes_destroy_associatedresourcesdangerous",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources/dangerous",
      "text": "Delete a Cluster and All of its Associated Resources (Dangerous)",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a Kubernetes cluster with all of its associated resources send a\nDELETE request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources/dangerous`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/dangerous",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/destroy_with_associated_resources/dangerous",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_kubeconfig": {
      "provider_intent": "kubernetes_get_kubeconfig",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/kubeconfig",
      "text": "Retrieve the kubeconfig for a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "expiry_seconds": {
          "type": "integer",
          "text": "The duration in seconds that the returned Kubernetes credentials will be valid"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "This endpoint returns a kubeconfig file in YAML format.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/kubeconfig",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/kubeconfig",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_credentials": {
      "provider_intent": "kubernetes_get_credentials",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/credentials",
      "text": "Retrieve Credentials for a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "expiry_seconds": {
          "type": "integer",
          "text": "The duration in seconds that the returned Kubernetes credentials will be valid"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "This endpoint returns a JSON object .",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/credentials",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/credentials",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_availableupgrades": {
      "provider_intent": "kubernetes_get_availableupgrades",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/upgrades",
      "text": "Retrieve Available Upgrades for an Existing Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To determine whether a cluster can be upgraded and the versions to which it\ncan be upgraded send a GET request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrades`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/upgrades",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/upgrades",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_upgrade_cluster": {
      "provider_intent": "kubernetes_upgrade_cluster",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/upgrade",
      "text": "Upgrade a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "version": {
          "type": "string",
          "text": "The slug identifier for the version of Kubernetes that the cluster will be upgraded to"
        }
      },
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To immediately upgrade a Kubernetes cluster to a newer patch release of\nKubernetes send a POST request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrade`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/upgrade",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/upgrade",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_list_nodepools": {
      "provider_intent": "kubernetes_list_nodepools",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools",
      "text": "List All Node Pools in a Kubernetes Clusters",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the node pools in a Kubernetes clusters send a GET request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_add_nodepool": {
      "provider_intent": "kubernetes_add_nodepool",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools",
      "text": "Add a Node Pool to a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add an additional node pool to a Kubernetes clusters send a POST request\nto `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools` with the following\nattributes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_nodepool": {
      "provider_intent": "kubernetes_get_nodepool",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
      "text": "Retrieve a Node Pool for a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about a specific node pool in a Kubernetes cluster send\na GET request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_update_nodepool": {
      "provider_intent": "kubernetes_update_nodepool",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
      "text": "Update a Node Pool in a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "PUT",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the name of a node pool edit the tags applied to it or adjust its\nnumber of nodes send a PUT request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID` with the\nfollowing attributes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_delete_nodepool": {
      "provider_intent": "kubernetes_delete_nodepool",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
      "text": "Delete a Node Pool in a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a node pool send a DELETE request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_delete_node": {
      "provider_intent": "kubernetes_delete_node",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id/nodes/node_id",
      "text": "Delete a Node in a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        },
        "node_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a node in a Kubernetes node pool",
          "required": true
        },
        "skip_drain": {
          "type": "integer",
          "text": "Specifies whether or not to drain workloads from a node before it is deleted"
        },
        "replace": {
          "type": "integer",
          "text": "Specifies whether or not to replace a node after it has been deleted"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        },
        "node_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a node in a Kubernetes node pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a single node in a pool send a DELETE request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID/nodes/$NODE_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/nodes/{node_id}",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id/nodes/node_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_recycle_node_pool": {
      "provider_intent": "kubernetes_recycle_node_pool",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id/recycle",
      "text": "Recycle a Kubernetes Node Pool",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "nodes": {
          "type": "array"
        }
      },
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "node_pool_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes node pool",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "The endpoint has been deprecated.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/node_pools/node_pool_id/recycle",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_clusteruser": {
      "provider_intent": "kubernetes_get_clusteruser",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/user",
      "text": "Retrieve User Information for a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information the user associated with a Kubernetes cluster send a GET\nrequest to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/user`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/user",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/user",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_list_options": {
      "provider_intent": "kubernetes_list_options",
      "provider_alias_intent": "/v2/kubernetes/options",
      "text": "List Available Regions Node Sizes and Versions of Kubernetes",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list the versions of Kubernetes available for use the regions that support Kubernetes and the available node sizes send a GET request to `/v2/kubernetes/options`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/options",
        "alias_endpoint": "/digitalocean/v2/kubernetes/options",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_run_clusterlint": {
      "provider_intent": "kubernetes_run_clusterlint",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/clusterlint",
      "text": "Run Clusterlint Checks on a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "include_groups": {
          "type": "array",
          "text": "An array of check groups that will be run when clusterlint executes checks"
        },
        "include_checks": {
          "type": "array",
          "text": "An array of checks that will be run when clusterlint executes checks"
        },
        "exclude_groups": {
          "type": "array",
          "text": "An array of check groups that will be omitted when clusterlint executes checks"
        },
        "exclude_checks": {
          "type": "array",
          "text": "An array of checks that will be run when clusterlint executes checks"
        }
      },
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Clusterlint helps operators conform to Kubernetes best practices around\nresources security and reliability to avoid common problems while operating\nor upgrading the clusters.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/clusterlint",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/clusterlint",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_get_clusterlintresults": {
      "provider_intent": "kubernetes_get_clusterlintresults",
      "provider_alias_intent": "/v2/kubernetes/clusters/cluster_id/clusterlint",
      "text": "Fetch Clusterlint Diagnostics for a Kubernetes Cluster",
      "category": "Kubernetes",
      "method": "GET",
      "type": "API",
      "params": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        },
        "run_id": {
          "type": "string",
          "text": "Specifies the clusterlint run whose results will be retrieved"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "cluster_id": {
          "type": "string",
          "text": "A unique ID that can be used to reference a Kubernetes cluster",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To request clusterlint diagnostics for your cluster send a GET request to\n`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/clusterlint`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/clusters/{cluster_id}/clusterlint",
        "alias_endpoint": "/digitalocean/v2/kubernetes/clusters/cluster_id/clusterlint",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_add_registry": {
      "provider_intent": "kubernetes_add_registry",
      "provider_alias_intent": "/v2/kubernetes/registry",
      "text": "Add Container Registry to Kubernetes Clusters",
      "category": "Kubernetes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cluster_uuids": {
          "type": "array",
          "text": "An array containing the UUIDs of Kubernetes clusters"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To integrate the container registry with Kubernetes clusters send a POST request to `/v2/kubernetes/registry`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/registry",
        "alias_endpoint": "/digitalocean/v2/kubernetes/registry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "kubernetes_remove_registry": {
      "provider_intent": "kubernetes_remove_registry",
      "provider_alias_intent": "/v2/kubernetes/registry",
      "text": "Remove Container Registry from Kubernetes Clusters",
      "category": "Kubernetes",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "cluster_uuids": {
          "type": "array",
          "text": "An array containing the UUIDs of Kubernetes clusters"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove the container registry from Kubernetes clusters send a DELETE request to `/v2/kubernetes/registry`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/kubernetes/registry",
        "alias_endpoint": "/digitalocean/v2/kubernetes/registry",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_create": {
      "provider_intent": "loadbalancers_create",
      "provider_alias_intent": "/v2/load_balancers",
      "text": "Create a New Load Balancer",
      "category": "Load Balancers",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new load balancer instance send a POST request to\n`/v2/load_balancers`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers",
        "alias_endpoint": "/digitalocean/v2/load_balancers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_list": {
      "provider_intent": "loadbalancers_list",
      "provider_alias_intent": "/v2/load_balancers",
      "text": "List All Load Balancers",
      "category": "Load Balancers",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the load balancer instances on your account send a GET request\nto `/v2/load_balancers`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers",
        "alias_endpoint": "/digitalocean/v2/load_balancers",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_get": {
      "provider_intent": "loadbalancers_get",
      "provider_alias_intent": "/v2/load_balancers/lb_id",
      "text": "Retrieve an Existing Load Balancer",
      "category": "Load Balancers",
      "method": "GET",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about a load balancer instance send a GET request to\n`/v2/load_balancers/$LOAD_BALANCER_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_update": {
      "provider_intent": "loadbalancers_update",
      "provider_alias_intent": "/v2/load_balancers/lb_id",
      "text": "Update a Load Balancer",
      "category": "Load Balancers",
      "method": "PUT",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a load balancer's settings send a PUT request to\n`/v2/load_balancers/$LOAD_BALANCER_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_delete": {
      "provider_intent": "loadbalancers_delete",
      "provider_alias_intent": "/v2/load_balancers/lb_id",
      "text": "Delete a Load Balancer",
      "category": "Load Balancers",
      "method": "DELETE",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a load balancer instance disassociating any Droplets assigned to it\nand removing it from your account send a DELETE request to\n`/v2/load_balancers/$LOAD_BALANCER_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_add_droplets": {
      "provider_intent": "loadbalancers_add_droplets",
      "provider_alias_intent": "/v2/load_balancers/lb_id/droplets",
      "text": "Add Droplets to a Load Balancer",
      "category": "Load Balancers",
      "method": "POST",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "droplet_ids": {
          "type": "array",
          "text": "An array containing the IDs of the Droplets assigned to the load balancer",
          "required": true
        }
      },
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To assign a Droplet to a load balancer instance send a POST request to\n`/v2/load_balancers/$LOAD_BALANCER_ID/droplets`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}/droplets",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_remove_droplets": {
      "provider_intent": "loadbalancers_remove_droplets",
      "provider_alias_intent": "/v2/load_balancers/lb_id/droplets",
      "text": "Remove Droplets from a Load Balancer",
      "category": "Load Balancers",
      "method": "DELETE",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "droplet_ids": {
          "type": "array",
          "text": "An array containing the IDs of the Droplets assigned to the load balancer",
          "required": true
        }
      },
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove a Droplet from a load balancer instance send a DELETE request to\n`/v2/load_balancers/$LOAD_BALANCER_ID/droplets`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}/droplets",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id/droplets",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_add_forwardingrules": {
      "provider_intent": "loadbalancers_add_forwardingrules",
      "provider_alias_intent": "/v2/load_balancers/lb_id/forwarding_rules",
      "text": "Add Forwarding Rules to a Load Balancer",
      "category": "Load Balancers",
      "method": "POST",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "forwarding_rules": {
          "type": "array",
          "required": true
        }
      },
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add an additional forwarding rule to a load balancer instance send a POST\nrequest to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}/forwarding_rules",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id/forwarding_rules",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "loadbalancers_remove_forwardingrules": {
      "provider_intent": "loadbalancers_remove_forwardingrules",
      "provider_alias_intent": "/v2/load_balancers/lb_id/forwarding_rules",
      "text": "Remove Forwarding Rules from a Load Balancer",
      "category": "Load Balancers",
      "method": "DELETE",
      "type": "API",
      "params": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "forwarding_rules": {
          "type": "array",
          "required": true
        }
      },
      "path": {
        "lb_id": {
          "type": "string",
          "text": "A unique identifier for a load balancer",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To remove forwarding rules from a load balancer instance send a DELETE\nrequest to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/load_balancers/{lb_id}/forwarding_rules",
        "alias_endpoint": "/digitalocean/v2/load_balancers/lb_id/forwarding_rules",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_list_alertpolicy": {
      "provider_intent": "monitoring_list_alertpolicy",
      "provider_alias_intent": "/v2/monitoring/alerts",
      "text": "List Alert Policies",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Returns all alert policies that are configured for the given account.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/alerts",
        "alias_endpoint": "/digitalocean/v2/monitoring/alerts",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_create_alertpolicy": {
      "provider_intent": "monitoring_create_alertpolicy",
      "provider_alias_intent": "/v2/monitoring/alerts",
      "text": "Create Alert Policy",
      "category": "Monitoring",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "alerts": {
          "type": "object",
          "required": true
        },
        "compare": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "enabled": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "entities": {
          "type": "array",
          "required": true
        },
        "tags": {
          "type": "array",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "number",
          "required": true
        },
        "window": {
          "type": "string",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a new alert send a POST request to `/v2/monitoring/alerts`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/alerts",
        "alias_endpoint": "/digitalocean/v2/monitoring/alerts",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_alertpolicy": {
      "provider_intent": "monitoring_get_alertpolicy",
      "provider_alias_intent": "/v2/monitoring/alerts/alert_uuid",
      "text": "Retrieve an Existing Alert Policy",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve a given alert policy send a GET request to `/v2/monitoring/alerts/{alert_uuid}`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/alerts/{alert_uuid}",
        "alias_endpoint": "/digitalocean/v2/monitoring/alerts/alert_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_update_alertpolicy": {
      "provider_intent": "monitoring_update_alertpolicy",
      "provider_alias_intent": "/v2/monitoring/alerts/alert_uuid",
      "text": "Update an Alert Policy",
      "category": "Monitoring",
      "method": "PUT",
      "type": "API",
      "params": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "alerts": {
          "type": "object",
          "required": true
        },
        "compare": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "enabled": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "entities": {
          "type": "array",
          "required": true
        },
        "tags": {
          "type": "array",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "number",
          "required": true
        },
        "window": {
          "type": "string",
          "required": true
        }
      },
      "path": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update en existing policy send a PUT request to `v2/monitoring/alerts/{alert_uuid}`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/alerts/{alert_uuid}",
        "alias_endpoint": "/digitalocean/v2/monitoring/alerts/alert_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_delete_alertpolicy": {
      "provider_intent": "monitoring_delete_alertpolicy",
      "provider_alias_intent": "/v2/monitoring/alerts/alert_uuid",
      "text": "Delete an Alert Policy",
      "category": "Monitoring",
      "method": "DELETE",
      "type": "API",
      "params": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "alert_uuid": {
          "type": "string",
          "text": "A unique identifier for an alert policy",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete an alert policy send a DELETE request to `/v2/monitoring/alerts/{alert_uuid}`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/alerts/{alert_uuid}",
        "alias_endpoint": "/digitalocean/v2/monitoring/alerts/alert_uuid",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletbandwidthmetrics": {
      "provider_intent": "monitoring_get_dropletbandwidthmetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/bandwidth",
      "text": "Get Droplet Bandwidth Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "interface": {
          "type": "string",
          "text": "The network interface",
          "required": true
        },
        "direction": {
          "type": "string",
          "text": "The traffic direction",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve bandwidth metrics for a given Droplet send a GET request to `/v2/monitoring/metrics/droplet/bandwidth`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/bandwidth",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/bandwidth",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletcpumetrics": {
      "provider_intent": "monitoring_get_dropletcpumetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/cpu",
      "text": "Get Droplet CPU Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve CPU metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/cpu`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/cpu",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/cpu",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletfilesystemfreemetrics": {
      "provider_intent": "monitoring_get_dropletfilesystemfreemetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/filesystem_free",
      "text": "Get Droplet Filesystem Free Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve filesystem free metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/filesystem_free`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/filesystem_free",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/filesystem_free",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletfilesystemsizemetrics": {
      "provider_intent": "monitoring_get_dropletfilesystemsizemetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/filesystem_size",
      "text": "Get Droplet Filesystem Size Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve filesystem size metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/filesystem_size`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/filesystem_size",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/filesystem_size",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletload1metrics": {
      "provider_intent": "monitoring_get_dropletload1metrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/load_1",
      "text": "Get Droplet Load1 Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve 1 minute load average metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/load_1`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_1",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/load_1",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletload5metrics": {
      "provider_intent": "monitoring_get_dropletload5metrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/load_5",
      "text": "Get Droplet Load5 Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve 5 minute load average metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/load_5`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_5",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/load_5",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletload15metrics": {
      "provider_intent": "monitoring_get_dropletload15metrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/load_15",
      "text": "Get Droplet Load15 Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve 15 minute load average metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/load_15`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/load_15",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/load_15",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletmemorycachedmetrics": {
      "provider_intent": "monitoring_get_dropletmemorycachedmetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/memory_cached",
      "text": "Get Droplet Cached Memory Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve cached memory metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/memory_cached`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_cached",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/memory_cached",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletmemoryfreemetrics": {
      "provider_intent": "monitoring_get_dropletmemoryfreemetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/memory_free",
      "text": "Get Droplet Free Memory Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve free memory metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/memory_free`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_free",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/memory_free",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletmemorytotalmetrics": {
      "provider_intent": "monitoring_get_dropletmemorytotalmetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/memory_total",
      "text": "Get Droplet Total Memory Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve total memory metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/memory_total`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_total",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/memory_total",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "monitoring_get_dropletmemoryavailablemetrics": {
      "provider_intent": "monitoring_get_dropletmemoryavailablemetrics",
      "provider_alias_intent": "/v2/monitoring/metrics/droplet/memory_available",
      "text": "Get Droplet Available Memory Metrics",
      "category": "Monitoring",
      "method": "GET",
      "type": "API",
      "params": {
        "host_id": {
          "type": "string",
          "text": "The droplet ID",
          "required": true
        },
        "start": {
          "type": "string",
          "text": "Timestamp to start metric window",
          "required": true
        },
        "end": {
          "type": "string",
          "text": "Timestamp to end metric window",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve available memory metrics for a given droplet send a GET request to `/v2/monitoring/metrics/droplet/memory_available`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/monitoring/metrics/droplet/memory_available",
        "alias_endpoint": "/digitalocean/v2/monitoring/metrics/droplet/memory_available",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_list_resources": {
      "provider_intent": "projects_list_resources",
      "provider_alias_intent": "/v2/projects/project_id/resources",
      "text": "List Project Resources",
      "category": "Project Resources",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all your resources in a project send a GET request to `/v2/projects/$PROJECT_ID/resources`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}/resources",
        "alias_endpoint": "/digitalocean/v2/projects/project_id/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_assign_resources": {
      "provider_intent": "projects_assign_resources",
      "provider_alias_intent": "/v2/projects/project_id/resources",
      "text": "Assign Resources to a Project",
      "category": "Project Resources",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "resources": {
          "type": "array",
          "text": "A list of uniform resource names (URNs) to be added to a project"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To assign resources to a project send a POST request to `/v2/projects/$PROJECT_ID/resources`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}/resources",
        "alias_endpoint": "/digitalocean/v2/projects/project_id/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_list_resources_default": {
      "provider_intent": "projects_list_resources_default",
      "provider_alias_intent": "/v2/projects/default/resources",
      "text": "List Default Project Resources",
      "category": "Project Resources",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all your resources in your default project send a GET request to `/v2/projects/default/resources`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/default/resources",
        "alias_endpoint": "/digitalocean/v2/projects/default/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_assign_resources_default": {
      "provider_intent": "projects_assign_resources_default",
      "provider_alias_intent": "/v2/projects/default/resources",
      "text": "Assign Resources to Default Project",
      "category": "Project Resources",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "resources": {
          "type": "array",
          "text": "A list of uniform resource names (URNs) to be added to a project"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To assign resources to your default project send a POST request to `/v2/projects/default/resources`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/default/resources",
        "alias_endpoint": "/digitalocean/v2/projects/default/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_list": {
      "provider_intent": "projects_list",
      "provider_alias_intent": "/v2/projects",
      "text": "List All Projects",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all your projects send a GET request to `/v2/projects`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects",
        "alias_endpoint": "/digitalocean/v2/projects",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_create": {
      "provider_intent": "projects_create",
      "provider_alias_intent": "/v2/projects",
      "text": "Create a Project",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a project send a POST request to `/v2/projects`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects",
        "alias_endpoint": "/digitalocean/v2/projects",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_get_default": {
      "provider_intent": "projects_get_default",
      "provider_alias_intent": "/v2/projects/default",
      "text": "Retrieve the Default Project",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get your default project send a GET request to `/v2/projects/default`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/default",
        "alias_endpoint": "/digitalocean/v2/projects/default",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_update_default": {
      "provider_intent": "projects_update_default",
      "provider_alias_intent": "/v2/projects/default",
      "text": "Update the Default Project",
      "category": "Projects",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update you default project send a PUT request to `/v2/projects/default`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/default",
        "alias_endpoint": "/digitalocean/v2/projects/default",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_patch_default": {
      "provider_intent": "projects_patch_default",
      "provider_alias_intent": "/v2/projects/default",
      "text": "Patch the Default Project",
      "category": "Projects",
      "method": "PATCH",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update only specific attributes of your default project send a PATCH request to `/v2/projects/default`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/default",
        "alias_endpoint": "/digitalocean/v2/projects/default",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_get": {
      "provider_intent": "projects_get",
      "provider_alias_intent": "/v2/projects/project_id",
      "text": "Retrieve an Existing Project",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get a project send a GET request to `/v2/projects/$PROJECT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}",
        "alias_endpoint": "/digitalocean/v2/projects/project_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_update": {
      "provider_intent": "projects_update",
      "provider_alias_intent": "/v2/projects/project_id",
      "text": "Update a Project",
      "category": "Projects",
      "method": "PUT",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a project send a PUT request to `/v2/projects/$PROJECT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}",
        "alias_endpoint": "/digitalocean/v2/projects/project_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_patch": {
      "provider_intent": "projects_patch",
      "provider_alias_intent": "/v2/projects/project_id",
      "text": "Patch a Project",
      "category": "Projects",
      "method": "PATCH",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update only specific attributes of a project send a PATCH request to `/v2/projects/$PROJECT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}",
        "alias_endpoint": "/digitalocean/v2/projects/project_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "projects_delete": {
      "provider_intent": "projects_delete",
      "provider_alias_intent": "/v2/projects/project_id",
      "text": "Delete an Existing Project",
      "category": "Projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "A unique identifier for a project",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a project send a DELETE request to `/v2/projects/$PROJECT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/projects/{project_id}",
        "alias_endpoint": "/digitalocean/v2/projects/project_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "regions_list": {
      "provider_intent": "regions_list",
      "provider_alias_intent": "/v2/regions",
      "text": "List All Data Center Regions",
      "category": "Regions",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the regions that are available send a GET request to `/v2/regions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/regions",
        "alias_endpoint": "/digitalocean/v2/regions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedipsactions_list": {
      "provider_intent": "reservedipsactions_list",
      "provider_alias_intent": "/v2/reserved_ips/reserved_ip/actions",
      "text": "List All Actions for a Reserved IP",
      "category": "Reserved IP Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve all actions that have been executed on a reserved IP send a GET request to `/v2/reserved_ips/$RESERVED_IP/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips/{reserved_ip}/actions",
        "alias_endpoint": "/digitalocean/v2/reserved_ips/reserved_ip/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedipsactions_post": {
      "provider_intent": "reservedipsactions_post",
      "provider_alias_intent": "/v2/reserved_ips/reserved_ip/actions",
      "text": "Initiate a Reserved IP Action",
      "category": "Reserved IP Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To initiate an action on a reserved IP send a POST request to\n`/v2/reserved_ips/$RESERVED_IP/actions`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips/{reserved_ip}/actions",
        "alias_endpoint": "/digitalocean/v2/reserved_ips/reserved_ip/actions",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedipsactions_get": {
      "provider_intent": "reservedipsactions_get",
      "provider_alias_intent": "/v2/reserved_ips/reserved_ip/actions/action_id",
      "text": "Retrieve an Existing Reserved IP Action",
      "category": "Reserved IP Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        },
        "action_id": {
          "type": "integer",
          "text": "A unique numeric ID that can be used to identify and reference an action",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve the status of a reserved IP action send a GET request to `/v2/reserved_ips/$RESERVED_IP/actions/$ACTION_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips/{reserved_ip}/actions/{action_id}",
        "alias_endpoint": "/digitalocean/v2/reserved_ips/reserved_ip/actions/action_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedips_list": {
      "provider_intent": "reservedips_list",
      "provider_alias_intent": "/v2/reserved_ips",
      "text": "List All Reserved IPs",
      "category": "Reserved IPs",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the reserved IPs available on your account send a GET request to `/v2/reserved_ips`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips",
        "alias_endpoint": "/digitalocean/v2/reserved_ips",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedips_create": {
      "provider_intent": "reservedips_create",
      "provider_alias_intent": "/v2/reserved_ips",
      "text": "Create a New Reserved IP",
      "category": "Reserved IPs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "On creation a reserved IP must be either assigned to a Droplet or reserved to a region.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips",
        "alias_endpoint": "/digitalocean/v2/reserved_ips",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedips_get": {
      "provider_intent": "reservedips_get",
      "provider_alias_intent": "/v2/reserved_ips/reserved_ip",
      "text": "Retrieve an Existing Reserved IP",
      "category": "Reserved IPs",
      "method": "GET",
      "type": "API",
      "params": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about a reserved IP send a GET request to `/v2/reserved_ips/$RESERVED_IP_ADDR`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips/{reserved_ip}",
        "alias_endpoint": "/digitalocean/v2/reserved_ips/reserved_ip",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "reservedips_delete": {
      "provider_intent": "reservedips_delete",
      "provider_alias_intent": "/v2/reserved_ips/reserved_ip",
      "text": "Delete a Reserved IP",
      "category": "Reserved IPs",
      "method": "DELETE",
      "type": "API",
      "params": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "reserved_ip": {
          "type": "string",
          "text": "A reserved IP address",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a reserved IP and remove it from your account send a DELETE request\nto `/v2/reserved_ips/$RESERVED_IP_ADDR`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/reserved_ips/{reserved_ip}",
        "alias_endpoint": "/digitalocean/v2/reserved_ips/reserved_ip",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sshkeys_list": {
      "provider_intent": "sshkeys_list",
      "provider_alias_intent": "/v2/account/keys",
      "text": "List All SSH Keys",
      "category": "SSH Keys",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the keys in your account send a GET request to `/v2/account/keys`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account/keys",
        "alias_endpoint": "/digitalocean/v2/account/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sshkeys_create": {
      "provider_intent": "sshkeys_create",
      "provider_alias_intent": "/v2/account/keys",
      "text": "Create a New SSH Key",
      "category": "SSH Keys",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "id": {
          "type": "integer",
          "text": "A unique identification number for this key"
        },
        "fingerprint": {
          "type": "string",
          "text": "A unique identifier that differentiates this key from other keys using  a format that SSH recognizes"
        },
        "public_key": {
          "type": "string",
          "text": "The entire public key string that was uploaded",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "A human-readable display name for this key used to easily identify the SSH keys when they are displayed",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To add a new SSH public key to your DigitalOcean account send a POST request to `/v2/account/keys`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account/keys",
        "alias_endpoint": "/digitalocean/v2/account/keys",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sshkeys_get": {
      "provider_intent": "sshkeys_get",
      "provider_alias_intent": "/v2/account/keys/ssh_key_identifier",
      "text": "Retrieve an Existing SSH Key",
      "category": "SSH Keys",
      "method": "GET",
      "type": "API",
      "params": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To get information about a key send a GET request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account/keys/{ssh_key_identifier}",
        "alias_endpoint": "/digitalocean/v2/account/keys/ssh_key_identifier",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sshkeys_update": {
      "provider_intent": "sshkeys_update",
      "provider_alias_intent": "/v2/account/keys/ssh_key_identifier",
      "text": "Update an SSH Key's Name",
      "category": "SSH Keys",
      "method": "PUT",
      "type": "API",
      "params": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A human-readable display name for this key used to easily identify the SSH keys when they are displayed"
        }
      },
      "path": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the name of an SSH key send a PUT request to either `/v2/account/keys/$SSH_KEY_ID` or `/v2/account/keys/$SSH_KEY_FINGERPRINT`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account/keys/{ssh_key_identifier}",
        "alias_endpoint": "/digitalocean/v2/account/keys/ssh_key_identifier",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sshkeys_delete": {
      "provider_intent": "sshkeys_delete",
      "provider_alias_intent": "/v2/account/keys/ssh_key_identifier",
      "text": "Delete an SSH Key",
      "category": "SSH Keys",
      "method": "DELETE",
      "type": "API",
      "params": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ssh_key_identifier": {
          "type": "",
          "text": "Either the ID or the fingerprint of an existing SSH key",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To destroy a public SSH key that you have in your account send a DELETE request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/account/keys/{ssh_key_identifier}",
        "alias_endpoint": "/digitalocean/v2/account/keys/ssh_key_identifier",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "sizes_list": {
      "provider_intent": "sizes_list",
      "provider_alias_intent": "/v2/sizes",
      "text": "List All Droplet Sizes",
      "category": "Sizes",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of available Droplet sizes send a GET request to `/v2/sizes`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/sizes",
        "alias_endpoint": "/digitalocean/v2/sizes",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "snapshots_list": {
      "provider_intent": "snapshots_list",
      "provider_alias_intent": "/v2/snapshots",
      "text": "List All Snapshots",
      "category": "Snapshots",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        },
        "resource_type": {
          "type": "string",
          "text": "Used to filter snapshots by a resource type"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the snapshots available on your account send a GET request to\n`/v2/snapshots`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/snapshots",
        "alias_endpoint": "/digitalocean/v2/snapshots",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "snapshots_get": {
      "provider_intent": "snapshots_get",
      "provider_alias_intent": "/v2/snapshots/snapshot_id",
      "text": "Retrieve an Existing Snapshot",
      "category": "Snapshots",
      "method": "GET",
      "type": "API",
      "params": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve information about a snapshot send a GET request to\n`/v2/snapshots/$SNAPSHOT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/snapshots/{snapshot_id}",
        "alias_endpoint": "/digitalocean/v2/snapshots/snapshot_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "snapshots_delete": {
      "provider_intent": "snapshots_delete",
      "provider_alias_intent": "/v2/snapshots/snapshot_id",
      "text": "Delete a Snapshot",
      "category": "Snapshots",
      "method": "DELETE",
      "type": "API",
      "params": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "snapshot_id": {
          "type": "",
          "text": "Either the ID of an existing snapshot",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Both Droplet and volume snapshots are managed through the `/v2/snapshots/`\nendpoint.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/snapshots/{snapshot_id}",
        "alias_endpoint": "/digitalocean/v2/snapshots/snapshot_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_list": {
      "provider_intent": "tags_list",
      "provider_alias_intent": "/v2/tags",
      "text": "List All Tags",
      "category": "Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of your tags you can send a GET request to `/v2/tags`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags",
        "alias_endpoint": "/digitalocean/v2/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_create": {
      "provider_intent": "tags_create",
      "provider_alias_intent": "/v2/tags",
      "text": "Create a New Tag",
      "category": "Tags",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the tag"
        },
        "resources": {
          "type": "object",
          "text": "An embedded object containing key value pairs of resource type and resource statistics"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a tag you can send a POST request to `/v2/tags` with a `name` attribute.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags",
        "alias_endpoint": "/digitalocean/v2/tags",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_get": {
      "provider_intent": "tags_get",
      "provider_alias_intent": "/v2/tags/tag_id",
      "text": "Retrieve a Tag",
      "category": "Tags",
      "method": "GET",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To retrieve an individual tag you can send a `GET` request to `/v2/tags/$TAG_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags/{tag_id}",
        "alias_endpoint": "/digitalocean/v2/tags/tag_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_delete": {
      "provider_intent": "tags_delete",
      "provider_alias_intent": "/v2/tags/tag_id",
      "text": "Delete a Tag",
      "category": "Tags",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "A tag can be deleted by sending a `DELETE` request to `/v2/tags/$TAG_NAME`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags/{tag_id}",
        "alias_endpoint": "/digitalocean/v2/tags/tag_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_assign_resources": {
      "provider_intent": "tags_assign_resources",
      "provider_alias_intent": "/v2/tags/tag_id/resources",
      "text": "Tag a Resource",
      "category": "Tags",
      "method": "POST",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "resources": {
          "type": "array",
          "text": "An array of objects containing resource_id and resource_type  attributes",
          "required": true
        }
      },
      "path": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Resources can be tagged by sending a POST request to `/v2/tags/$TAG_NAME/resources` with an array of json objects containing `resource_id` and `resource_type` attributes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags/{tag_id}/resources",
        "alias_endpoint": "/digitalocean/v2/tags/tag_id/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "tags_unassign_resources": {
      "provider_intent": "tags_unassign_resources",
      "provider_alias_intent": "/v2/tags/tag_id/resources",
      "text": "Untag a Resource",
      "category": "Tags",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "resources": {
          "type": "array",
          "text": "An array of objects containing resource_id and resource_type  attributes",
          "required": true
        }
      },
      "path": {
        "tag_id": {
          "type": "string",
          "text": "The name of the tag",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "Resources can be untagged by sending a DELETE request to `/v2/tags/$TAG_NAME/resources` with an array of json objects containing `resource_id` and `resource_type` attributes.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/tags/{tag_id}/resources",
        "alias_endpoint": "/digitalocean/v2/tags/tag_id/resources",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_checks_list": {
      "provider_intent": "uptime_checks_list",
      "provider_alias_intent": "/v2/uptime/checks",
      "text": "List All Checks",
      "category": "Uptime",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the Uptime checks on your account send a GET request to `/v2/uptime/checks`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks",
        "alias_endpoint": "/digitalocean/v2/uptime/checks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_create": {
      "provider_intent": "uptime_check_create",
      "provider_alias_intent": "/v2/uptime/checks",
      "text": "Create a New Check",
      "category": "Uptime",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create an Uptime check send a POST request to `/v2/uptime/checks` specifying the attributes\nin the table below in the JSON body.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks",
        "alias_endpoint": "/digitalocean/v2/uptime/checks",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_get": {
      "provider_intent": "uptime_check_get",
      "provider_alias_intent": "/v2/uptime/checks/check_id",
      "text": "Retrieve an Existing Check",
      "category": "Uptime",
      "method": "GET",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing check send a GET request to `/v2/uptime/checks/$CHECK_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_update": {
      "provider_intent": "uptime_check_update",
      "provider_alias_intent": "/v2/uptime/checks/check_id",
      "text": "Update a Check",
      "category": "Uptime",
      "method": "PUT",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the settings of an Uptime check send a PUT request to `/v2/uptime/checks/$CHECK_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_delete": {
      "provider_intent": "uptime_check_delete",
      "provider_alias_intent": "/v2/uptime/checks/check_id",
      "text": "Delete a Check",
      "category": "Uptime",
      "method": "DELETE",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete an Uptime check send a DELETE request to `/v2/uptime/checks/$CHECK_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_state_get": {
      "provider_intent": "uptime_check_state_get",
      "provider_alias_intent": "/v2/uptime/checks/check_id/state",
      "text": "Retrieve Check State",
      "category": "Uptime",
      "method": "GET",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing check's state send a GET request to `/v2/uptime/checks/$CHECK_ID/state`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/state",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/state",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_check_alerts_list": {
      "provider_intent": "uptime_check_alerts_list",
      "provider_alias_intent": "/v2/uptime/checks/check_id/alerts",
      "text": "List All Alerts",
      "category": "Uptime",
      "method": "GET",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the alerts for an Uptime check send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/alerts",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_alert_create": {
      "provider_intent": "uptime_alert_create",
      "provider_alias_intent": "/v2/uptime/checks/check_id/alerts",
      "text": "Create a New Alert",
      "category": "Uptime",
      "method": "POST",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create an Uptime alert send a POST request to `/v2/uptime/checks/$CHECK_ID/alerts` specifying the attributes\nin the table below in the JSON body.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/alerts",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_alert_get": {
      "provider_intent": "uptime_alert_get",
      "provider_alias_intent": "/v2/uptime/checks/check_id/alerts/alert_id",
      "text": "Retrieve an Existing Alert",
      "category": "Uptime",
      "method": "GET",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing alert send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/alerts/alert_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_alert_update": {
      "provider_intent": "uptime_alert_update",
      "provider_alias_intent": "/v2/uptime/checks/check_id/alerts/alert_id",
      "text": "Update an Alert",
      "category": "Uptime",
      "method": "PUT",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update the settings of an Uptime alert send a PUT request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/alerts/alert_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "uptime_alert_delete": {
      "provider_intent": "uptime_alert_delete",
      "provider_alias_intent": "/v2/uptime/checks/check_id/alerts/alert_id",
      "text": "Delete an Alert",
      "category": "Uptime",
      "method": "DELETE",
      "type": "API",
      "params": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "check_id": {
          "type": "string",
          "text": "A unique identifier for a check",
          "required": true
        },
        "alert_id": {
          "type": "string",
          "text": "A unique identifier for an alert",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete an Uptime alert send a DELETE request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/uptime/checks/{check_id}/alerts/{alert_id}",
        "alias_endpoint": "/digitalocean/v2/uptime/checks/check_id/alerts/alert_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_list": {
      "provider_intent": "vpcs_list",
      "provider_alias_intent": "/v2/vpcs",
      "text": "List All VPCs",
      "category": "VPCs",
      "method": "GET",
      "type": "API",
      "params": {
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the VPCs on your account send a GET request to `/v2/vpcs`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs",
        "alias_endpoint": "/digitalocean/v2/vpcs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_create": {
      "provider_intent": "vpcs_create",
      "provider_alias_intent": "/v2/vpcs",
      "text": "Create a New VPC",
      "category": "VPCs",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To create a VPC send a POST request to `/v2/vpcs` specifying the attributes\nin the table below in the JSON body.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs",
        "alias_endpoint": "/digitalocean/v2/vpcs",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_get": {
      "provider_intent": "vpcs_get",
      "provider_alias_intent": "/v2/vpcs/vpc_id",
      "text": "Retrieve an Existing VPC",
      "category": "VPCs",
      "method": "GET",
      "type": "API",
      "params": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To show information about an existing VPC send a GET request to `/v2/vpcs/$VPC_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs/{vpc_id}",
        "alias_endpoint": "/digitalocean/v2/vpcs/vpc_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_update": {
      "provider_intent": "vpcs_update",
      "provider_alias_intent": "/v2/vpcs/vpc_id",
      "text": "Update a VPC",
      "category": "VPCs",
      "method": "PUT",
      "type": "API",
      "params": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update information about a VPC send a PUT request to `/v2/vpcs/$VPC_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs/{vpc_id}",
        "alias_endpoint": "/digitalocean/v2/vpcs/vpc_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_patch": {
      "provider_intent": "vpcs_patch",
      "provider_alias_intent": "/v2/vpcs/vpc_id",
      "text": "Partially Update a VPC",
      "category": "VPCs",
      "method": "PATCH",
      "type": "API",
      "params": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To update a subset of information about a VPC send a PATCH request to\n`/v2/vpcs/$VPC_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs/{vpc_id}",
        "alias_endpoint": "/digitalocean/v2/vpcs/vpc_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_delete": {
      "provider_intent": "vpcs_delete",
      "provider_alias_intent": "/v2/vpcs/vpc_id",
      "text": "Delete a VPC",
      "category": "VPCs",
      "method": "DELETE",
      "type": "API",
      "params": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To delete a VPC send a DELETE request to `/v2/vpcs/$VPC_ID`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs/{vpc_id}",
        "alias_endpoint": "/digitalocean/v2/vpcs/vpc_id",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    },
    "vpcs_list_members": {
      "provider_intent": "vpcs_list_members",
      "provider_alias_intent": "/v2/vpcs/vpc_id/members",
      "text": "List the Member Resources of a VPC",
      "category": "VPCs",
      "method": "GET",
      "type": "API",
      "params": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        },
        "resource_type": {
          "type": "string",
          "text": "Used to filter VPC members by a resource type"
        },
        "per_page": {
          "type": "integer",
          "text": "Number of items returned per page"
        },
        "page": {
          "type": "integer",
          "text": "Which 'page' of paginated results to return"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vpc_id": {
          "type": "string",
          "text": "A unique identifier for a VPC",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "2.0",
        "auth": [],
        "description": "To list all of the resources that are members of a VPC send a GET request to\n`/v2/vpcs/$VPC_ID/members`.",
        "rate_limit": [],
        "api_endpoint": "https://api.digitalocean.com/v2/vpcs/{vpc_id}/members",
        "alias_endpoint": "/digitalocean/v2/vpcs/vpc_id/members",
        "api_ref": ""
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "subdomain": {},
      "wip": 0,
      "payload_type": ""
    }
  }
}