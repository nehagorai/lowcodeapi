{
  "routes": {
    "getBoardsMemberships": {
      "provider_intent": "getBoardsMemberships",
      "provider_alias_intent": "/1/boards/id/memberships",
      "text": "Get Memberships of a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "One of admins all none normal"
        },
        "activity": {
          "type": "boolean",
          "text": "Works for premium organizations only",
          "enum": [
            true,
            false
          ]
        },
        "orgMemberType": {
          "type": "boolean",
          "text": "Shows the type of member to the org the user is. For instance an org admin will have a orgMemberType of admin",
          "enum": [
            true,
            false
          ]
        },
        "member": {
          "type": "boolean",
          "text": "Determines whether to include a nested member object",
          "enum": [
            true,
            false
          ]
        },
        "member_fields": {
          "type": "string",
          "text": "Fields to show if member=true.Valid values",
          "enum": [
            "nested member resource fields"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get information about the memberships users have to the board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/memberships",
        "alias_endpoint": "/trello/1/boards/id/memberships",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-memberships-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsMemberships",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoard": {
      "provider_intent": "getBoard",
      "provider_alias_intent": "/1/boards/id",
      "text": "Get a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "actions": {
          "type": "string",
          "text": "This is a nested resource.Read more about actions as nested resources here"
        },
        "boardStars": {
          "type": "string",
          "text": "Valid values are one of",
          "enum": [
            "mine or none"
          ]
        },
        "cards": {
          "type": "string",
          "text": "This is a nested resource.Read more about cards as nested resources here"
        },
        "card_pluginData": {
          "type": "boolean",
          "text": "Use with the cards param to include card pluginData with the response",
          "enum": [
            true,
            false
          ]
        },
        "checklists": {
          "type": "string",
          "text": "This is a nested resource.Read more about checklists as nested resources here"
        },
        "customFields": {
          "type": "boolean",
          "text": "This is a nested resource.Read more about custom fields as nested resources here",
          "enum": [
            true,
            false
          ]
        },
        "fields": {
          "type": "string",
          "text": "The fields of the board to be included in the response.Valid values",
          "enum": [
            "all or a comma-separated list of"
          ]
        },
        "labels": {
          "type": "string",
          "text": "This is a nested resource.Read more about labels as nested resources here"
        },
        "lists": {
          "type": "string",
          "text": "This is a nested resource.Read more about lists as nested resources here"
        },
        "members": {
          "type": "string",
          "text": "This is a nested resource.Read more about members as nested resources here"
        },
        "memberships": {
          "type": "string",
          "text": "This is a nested resource.Read more about memberships as nested resources"
        },
        "pluginData": {
          "type": "boolean",
          "text": "Determines whether the pluginData for this board should be returned.Valid values",
          "enum": [
            true,
            false
          ]
        },
        "organization": {
          "type": "boolean",
          "text": "This is a nested resource.Read more about organizations as nested resources here",
          "enum": [
            true,
            false
          ]
        },
        "organization_pluginData": {
          "type": "boolean",
          "text": "Use with the organization param to include organization pluginData with the response",
          "enum": [
            true,
            false
          ]
        },
        "myPrefs": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "tags": {
          "type": "boolean",
          "text": "Also known as collections tags refer to the collection(s) that a Board belongs to",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Request a single board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}",
        "alias_endpoint": "/trello/1/boards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateBoard": {
      "provider_intent": "updateBoard",
      "provider_alias_intent": "/1/boards/id",
      "text": "Update a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The new name for the board.1 to 16384 characters long"
        },
        "desc": {
          "type": "string",
          "text": "A new description for the board 0 to 16384 characters long"
        },
        "closed": {
          "type": "boolean",
          "text": "Whether the board is closed",
          "enum": [
            true,
            false
          ]
        },
        "subscribed": {
          "type": "string",
          "text": "Whether the acting user is subscribed to the board"
        },
        "idOrganization": {
          "type": "string",
          "text": "The id of the Workspace the board should be moved to"
        },
        "prefs/permissionLevel": {
          "type": "string",
          "text": "One of",
          "enum": [
            "org private public"
          ]
        },
        "prefs/selfJoin": {
          "type": "boolean",
          "text": "Whether Workspace members can join the board themselves",
          "enum": [
            true,
            false
          ]
        },
        "prefs/cardCovers": {
          "type": "boolean",
          "text": "Whether card covers should be displayed on this board",
          "enum": [
            true,
            false
          ]
        },
        "prefs/hideVotes": {
          "type": "boolean",
          "text": "Determines whether the Voting Power-Up should hide who voted on cards or not",
          "enum": [
            true,
            false
          ]
        },
        "prefs/invitations": {
          "type": "string",
          "text": "Who can invite people to this board.One of",
          "enum": [
            "admins members"
          ]
        },
        "prefs/voting": {
          "type": "string",
          "text": "Who can vote on this board.One of disabled members observers org public"
        },
        "prefs/comments": {
          "type": "string",
          "text": "Who can comment on cards on this board.One of",
          "enum": [
            "disabled members observers org public"
          ]
        },
        "prefs/background": {
          "type": "string",
          "text": "The id of a custom background or one of",
          "enum": [
            "blue orange green red purple pink lime sky grey"
          ]
        },
        "prefs/cardAging": {
          "type": "string",
          "text": "One of",
          "enum": [
            "pirate regular"
          ]
        },
        "prefs/calendarFeedEnabled": {
          "type": "boolean",
          "text": "Determines whether the calendar feed is enabled or not",
          "enum": [
            true,
            false
          ]
        },
        "labelNames/green": {
          "type": "string",
          "text": "Name for the green label.1 to 16384 characters long"
        },
        "labelNames/yellow": {
          "type": "string",
          "text": "Name for the yellow label.1 to 16384 characters long"
        },
        "labelNames/orange": {
          "type": "string",
          "text": "Name for the orange label.1 to 16384 characters long"
        },
        "labelNames/red": {
          "type": "string",
          "text": "Name for the red label.1 to 16384 characters long"
        },
        "labelNames/purple": {
          "type": "string",
          "text": "Name for the purple label.1 to 16384 characters long"
        },
        "labelNames/blue": {
          "type": "string",
          "text": "Name for the blue label.1 to 16384 characters long"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an existing board by id",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}",
        "alias_endpoint": "/trello/1/boards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteBoard": {
      "provider_intent": "deleteBoard",
      "provider_alias_intent": "/1/boards/id",
      "text": "Delete a Board",
      "category": "Board",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}",
        "alias_endpoint": "/trello/1/boards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsField": {
      "provider_intent": "getBoardsField",
      "provider_alias_intent": "/1/boards/id/field",
      "text": "Get a field on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field you'd like to receive.Valid values",
          "required": true,
          "enum": [
            "closed dateLastActivity dateLastView desc descData idMemberCreator idOrganization invitations invited labelNames memberships name pinned powerUps prefs shortLink shortUrl starred subscribed url"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field you'd like to receive.Valid values",
          "required": true,
          "enum": [
            "closed dateLastActivity dateLastView desc descData idMemberCreator idOrganization invitations invited labelNames memberships name pinned powerUps prefs shortLink shortUrl starred subscribed url"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a single, specific field on a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/{field}",
        "alias_endpoint": "/trello/1/boards/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsActions": {
      "provider_intent": "getBoardsActions",
      "provider_alias_intent": "/1/boards/id/actions",
      "text": "Get Actions of a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "A comma-separated list of action types"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get Actions of a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/actions",
        "alias_endpoint": "/trello/1/boards/id/actions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-boardid-actions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsCard": {
      "provider_intent": "getBoardsCard",
      "provider_alias_intent": "/1/boards/id/cards/idcard",
      "text": "Get a Card on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board",
          "required": true
        },
        "idCard": {
          "type": "string",
          "text": "The id the card to retrieve",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board",
          "required": true
        },
        "idCard": {
          "type": "string",
          "text": "The id the card to retrieve",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a single Card on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/cards/{idCard}",
        "alias_endpoint": "/trello/1/boards/id/cards/idcard",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-cards-idcard-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsStars": {
      "provider_intent": "getBoardsStars",
      "provider_alias_intent": "/1/boards/id/boardstars",
      "text": "Get boardStars on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "boardId": {
          "type": "string",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "Valid values",
          "enum": [
            "mine",
            "none"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "boardId": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get boardStars on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/boardStars",
        "alias_endpoint": "/trello/1/boards/id/boardstars",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-boardid-boardstars-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsStars",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsChecklists": {
      "provider_intent": "getBoardsChecklists",
      "provider_alias_intent": "/1/boards/id/checklists",
      "text": "Get Checklists on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get all of the checklists on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/checklists",
        "alias_endpoint": "/trello/1/boards/id/checklists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-checklists-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsCards": {
      "provider_intent": "getBoardsCards",
      "provider_alias_intent": "/1/boards/id/cards",
      "text": "Get Cards on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get all of the open Cards on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/cards",
        "alias_endpoint": "/trello/1/boards/id/cards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-cards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsCards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsCardsfilter": {
      "provider_intent": "getBoardsCardsfilter",
      "provider_alias_intent": "/1/boards/id/cards/filter",
      "text": "Get filtered Cards on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Board",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "Valid Values",
          "required": true,
          "enum": [
            "all closed none open visible."
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Board",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "Valid Values",
          "required": true,
          "enum": [
            "all closed none open visible."
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Cards on a Board that match a given filter.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/cards/{filter}",
        "alias_endpoint": "/trello/1/boards/id/cards/filter",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-cards-filter-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsCardsfilter",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsCustomFields": {
      "provider_intent": "getBoardsCustomFields",
      "provider_alias_intent": "/1/boards/id/customfields",
      "text": "Get Custom Fields for Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get Custom Fields for Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/customFields",
        "alias_endpoint": "/trello/1/boards/id/customfields",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-customfields-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsCustomFields",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsLabels": {
      "provider_intent": "getBoardsLabels",
      "provider_alias_intent": "/1/boards/id/labels",
      "text": "Get Labels on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "Lable",
          "text": "The fields to be returned for the Labels"
        },
        "limit": {
          "type": "integerThe number of Labels to be returned"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get all of the Labels on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/labels",
        "alias_endpoint": "/trello/1/boards/id/labels",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-labels-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createBoardsLabel": {
      "provider_intent": "createBoardsLabel",
      "provider_alias_intent": "/1/boards/id/labels",
      "text": "Create a Label on a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the label to be created.1 to 16384 characters long",
          "required": true
        },
        "color": {
          "type": "string",
          "text": "Sets the color of the new label.Valid values are a label color or null",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new Label on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/labels",
        "alias_endpoint": "/trello/1/boards/id/labels",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-labels-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createBoardsLabel",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsLists": {
      "provider_intent": "getBoardsLists",
      "provider_alias_intent": "/1/boards/id/lists",
      "text": "Get Lists on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "cards": {
          "type": "string",
          "text": "Filter to apply to Cards"
        },
        "card_fields": {
          "type": "string",
          "text": "all or a comma-separated list of card fields"
        },
        "filter": {
          "type": "string",
          "text": "Filter to apply to Lists"
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of list fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Lists on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/lists",
        "alias_endpoint": "/trello/1/boards/id/lists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-lists-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsLists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createBoardsList": {
      "provider_intent": "createBoardsList",
      "provider_alias_intent": "/1/boards/id/lists",
      "text": "Create a List on a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the list to be created.1 to 16384 characters long",
          "required": true
        },
        "pos": {
          "type": "string",
          "text": "top bottom or a positive number"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new List on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/lists",
        "alias_endpoint": "/trello/1/boards/id/lists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-lists-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createBoardsList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsListsFilter": {
      "provider_intent": "getBoardsListsFilter",
      "provider_alias_intent": "/1/boards/id/lists/filter",
      "text": "Get filtered Lists on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "filter": {
          "type": "string",
          "text": "One of all closed none open",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "filter": {
          "type": "string",
          "text": "One of all closed none open",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get filtered Lists on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/lists/{filter}",
        "alias_endpoint": "/trello/1/boards/id/lists/filter",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-lists-filter-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsListsFilter",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsMembers": {
      "provider_intent": "getBoardsMembers",
      "provider_alias_intent": "/1/boards/id/members",
      "text": "Get the Members of a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Members for a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/members",
        "alias_endpoint": "/trello/1/boards/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-members-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "inviteBoardsMemberByEmail": {
      "provider_intent": "inviteBoardsMemberByEmail",
      "provider_alias_intent": "/1/boards/id/members",
      "text": "Invite Member to Board via email",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "The email address of a user to add as a member of the board"
        },
        "type": {
          "type": "string",
          "text": "Valid values",
          "enum": [
            "admin normal observer.Determines what type of member the user being added should be of the board"
          ]
        },
        "fullName": {
          "type": "string",
          "text": "The full name of the user to as a member of the board.Must have a length of at least 1 and cannot begin nor end with a space"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Invite a Member to a Board via their email address",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/members",
        "alias_endpoint": "/trello/1/boards/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-members-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "inviteBoardsMemberByEmail",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "inviteBoardsMember": {
      "provider_intent": "inviteBoardsMember",
      "provider_alias_intent": "/1/boards/id/members/idmember",
      "text": "Add a Member to a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMember": {
          "type": "string",
          "text": "The id of the member to add to the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "type": {
          "type": "string",
          "text": "One of",
          "required": true,
          "enum": [
            "admin normal observer.Determines the type of member this user will be on the board"
          ]
        },
        "allowBillableGuest": {
          "type": "boolean",
          "text": "Optional param that allows organization admins to add multi-board guests onto a board",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMember": {
          "type": "string",
          "text": "The id of the member to add to the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a member to the board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/members/{idMember}",
        "alias_endpoint": "/trello/1/boards/id/members/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-members-idmember-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "inviteBoardsMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "removeBoardsMember": {
      "provider_intent": "removeBoardsMember",
      "provider_alias_intent": "/1/boards/id/members/idmember",
      "text": "Remove Member from Board",
      "category": "Board",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMember": {
          "type": "string",
          "text": "The id of the member to add to the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMember": {
          "type": "string",
          "text": "The id of the member to add to the board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove Member from Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/members/{idMember}",
        "alias_endpoint": "/trello/1/boards/id/members/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-members-idmember-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "removeBoardsMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateBoardsMembership": {
      "provider_intent": "updateBoardsMembership",
      "provider_alias_intent": "/1/boards/id/memberships/idmembership",
      "text": "Update Membership of Member on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMembership": {
          "type": "string",
          "text": "The id of a membership that should be added to this board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "type": {
          "type": "string",
          "text": "One of",
          "required": true,
          "enum": [
            "admin normal observer.Determines the type of member that this membership will be to this board"
          ]
        },
        "member_fields": {
          "type": "string",
          "text": "Valid values",
          "enum": [
            "all avatarHash bio bioData confirmed fullName idPremOrgsAdmin initials memberType products status url"
          ]
        },
        "username": {
          "type": ""
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idMembership": {
          "type": "string",
          "text": "The id of a membership that should be added to this board.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an existing board by id",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/memberships/{idMembership}",
        "alias_endpoint": "/trello/1/boards/id/memberships/idmembership",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-memberships-idmembership-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateBoardsMembership",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsEmailPosition": {
      "provider_intent": "putBoardsMyPrefsEmailPosition",
      "provider_alias_intent": "/1/boards/id/myprefs/emailposition",
      "text": "Update emailPosition Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "Valid values",
          "required": true,
          "enum": [
            "bottom top.Determines the position of the email address."
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update emailPosition Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/emailPosition",
        "alias_endpoint": "/trello/1/boards/id/myprefs/emailposition",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-emailposition-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsEmailPosition",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsIdEmailList": {
      "provider_intent": "putBoardsMyPrefsIdEmailList",
      "provider_alias_intent": "/1/boards/id/myprefs/idemaillist",
      "text": "Update idEmailList Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The id of an email list.\nPattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Change the default list that email-to-board cards are created in.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/idEmailList",
        "alias_endpoint": "/trello/1/boards/id/myprefs/idemaillist",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-idemaillist-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsIdEmailList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsShowListGuide": {
      "provider_intent": "putBoardsMyPrefsShowListGuide",
      "provider_alias_intent": "/1/boards/id/myprefs/showlistguide",
      "text": "Update showListGuide Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether to show the list guide.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update showListGuide Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/showListGuide",
        "alias_endpoint": "/trello/1/boards/id/myprefs/showlistguide",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-showlistguide-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsShowListGuide",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsShowSidebar": {
      "provider_intent": "putBoardsMyPrefsShowSidebar",
      "provider_alias_intent": "/1/boards/id/myprefs/showsidebar",
      "text": "Update showSidebar Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether to show the side bar",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update showSidebar Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/showSidebar",
        "alias_endpoint": "/trello/1/boards/id/myprefs/showsidebar",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-showsidebar-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsShowSidebar",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsShowSidebarActivity": {
      "provider_intent": "putBoardsMyPrefsShowSidebarActivity",
      "provider_alias_intent": "/1/boards/id/myprefs/showsidebaractivity",
      "text": "Update showSidebarActivity Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether to show sidebar activity.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update showSidebarActivity Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/showSidebarActivity",
        "alias_endpoint": "/trello/1/boards/id/myprefs/showsidebaractivity",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-showsidebaractivity-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsShowSidebarActivity",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsShowSidebarBoardActions": {
      "provider_intent": "putBoardsMyPrefsShowSidebarBoardActions",
      "provider_alias_intent": "/1/boards/id/myprefs/showsidebarboardactions",
      "text": "Update showSidebarBoardActions Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether to show the sidebar board actions.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update showSidebarBoardActions Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/showSidebarBoardActions",
        "alias_endpoint": "/trello/1/boards/id/myprefs/showsidebarboardactions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-showsidebarboardactions-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsShowSidebarBoardActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putBoardsMyPrefsShowSidebarMembers": {
      "provider_intent": "putBoardsMyPrefsShowSidebarMembers",
      "provider_alias_intent": "/1/boards/id/myprefs/showsidebarmembers",
      "text": "Update showSidebarMembers Pref on a Board",
      "category": "Board",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether to show members of the board in the sidebar.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update showSidebarMembers Pref on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/myPrefs/showSidebarMembers",
        "alias_endpoint": "/trello/1/boards/id/myprefs/showsidebarmembers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-myprefs-showsidebarmembers-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putBoardsMyPrefsShowSidebarMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createBoard": {
      "provider_intent": "createBoard",
      "provider_alias_intent": "/1/boards",
      "text": "Create a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The new name for the board.1 to 16384 characters long",
          "required": true
        },
        "defaultLabels": {
          "type": "boolean",
          "text": "Determines whether to use the default set of labels",
          "enum": [
            true,
            false
          ]
        },
        "defaultLists": {
          "type": "boolean",
          "text": "Determines whether to add the default set of lists to a board (To Do Doing Done). It is ignored if idBoardSource is provided",
          "enum": [
            true,
            false
          ]
        },
        "desc": {
          "type": "string",
          "text": "A new description for the board 0 to 16384 characters long"
        },
        "idOrganization": {
          "type": "string",
          "text": "The id or name of the Workspace the board should belong to.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idBoardSource": {
          "type": "string",
          "text": "The id of a board to copy into the new board.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "keepFromSource": {
          "type": "string",
          "text": "To keep cards from the original board pass in the value cards"
        },
        "powerUps": {
          "type": "string",
          "text": "The Power-Ups that should be enabled on the new board.One of",
          "enum": [
            "all calendar cardAging recap voting"
          ]
        },
        "prefs_permissionLevel": {
          "type": "string",
          "text": "The permissions level of the board.One of",
          "enum": [
            "org private public"
          ]
        },
        "prefs_voting": {
          "type": "string",
          "text": "Who can vote on this board.One of disabled members observers org public"
        },
        "prefs_comments": {
          "type": "string",
          "text": "Who can comment on cards on this board.One of",
          "enum": [
            "disabled members observers org public"
          ]
        },
        "prefs_invitations": {
          "type": "string",
          "text": "Determines what types of members can invite users to join.One of",
          "enum": [
            "admins members"
          ]
        },
        "prefs_selfJoin": {
          "type": "boolean",
          "text": "Determines whether users can join the boards themselves or whether they have to be invited",
          "enum": [
            true,
            false
          ]
        },
        "prefs_cardCovers": {
          "type": "boolean",
          "text": "Determines whether card covers are enabled",
          "enum": [
            true,
            false
          ]
        },
        "prefs_background": {
          "type": "string",
          "text": "The id of a custom background or one of",
          "enum": [
            "blue orange green red purple pink lime sky grey"
          ]
        },
        "prefs_cardAging": {
          "type": "string",
          "text": "Determines the type of card aging that should take place on the board if card aging is enabled.One of",
          "enum": [
            "pirate regular"
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards",
        "alias_endpoint": "/trello/1/boards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createCalaendarKeyForBoard": {
      "provider_intent": "createCalaendarKeyForBoard",
      "provider_alias_intent": "/1/boards/id/calendarkey/generate",
      "text": "Create a calendarKey for a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/calendarKey/generate",
        "alias_endpoint": "/trello/1/boards/id/calendarkey/generate",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-calendarkey-generate-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createCalaendarKeyForBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createEmailKeyForBoard": {
      "provider_intent": "createEmailKeyForBoard",
      "provider_alias_intent": "/1/boards/id/emailkey/generate",
      "text": "Create a emailKey for a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a emailKey for a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/emailKey/generate",
        "alias_endpoint": "/trello/1/boards/id/emailkey/generate",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-emailkey-generate-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createEmailKeyForBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createBoardsIdTag": {
      "provider_intent": "createBoardsIdTag",
      "provider_alias_intent": "/1/boards/id/idtags",
      "text": "Create a Tag for a Board",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The id of a tag from the organization to which this board belongs.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a Tag for a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/idTags",
        "alias_endpoint": "/trello/1/boards/id/idtags",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-idtags-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createBoardsIdTag",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postBoardsMarkedAsViewed": {
      "provider_intent": "postBoardsMarkedAsViewed",
      "provider_alias_intent": "/1/boards/id/markedasviewed",
      "text": "Mark Board as viewed",
      "category": "Board",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The id of the board to update. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Mark Board as viewed",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/markedAsViewed",
        "alias_endpoint": "/trello/1/boards/id/markedasviewed",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-markedasviewed-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postBoardsMarkedAsViewed",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBoardsBoardPlugins": {
      "provider_intent": "getBoardsBoardPlugins",
      "provider_alias_intent": "/1/boards/id/boardplugins",
      "text": "Get Enabled Power-Ups on Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the enabled Power-Ups on a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/boardPlugins",
        "alias_endpoint": "/trello/1/boards/id/boardplugins",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-boardplugins-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBoardsBoardPlugins",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "listBoardsBoardPlugins": {
      "provider_intent": "listBoardsBoardPlugins",
      "provider_alias_intent": "/1/boards/id/plugins",
      "text": "Get Power-Ups on a Board",
      "category": "Board",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "One of",
          "enum": [
            "enabled or available"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Board. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the Power-Ups on a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/boards/{id}/plugins",
        "alias_endpoint": "/trello/1/boards/id/plugins",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-boards/#api-boards-id-plugins-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "listBoardsBoardPlugins",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getList": {
      "provider_intent": "getList",
      "provider_alias_intent": "/1/lists/id",
      "text": "Get a List",
      "category": "Lists",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma separated list of List field names",
          "enum": [
            "name",
            "closed",
            "idBoard",
            "pos"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get information about a List",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}",
        "alias_endpoint": "/trello/1/lists/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putList": {
      "provider_intent": "putList",
      "provider_alias_intent": "/1/lists/id",
      "text": "Update a List",
      "category": "Lists",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "New name for the list"
        },
        "closed": {
          "type": "boolean",
          "text": "Whether the list should be closed (archived)",
          "enum": [
            true,
            false
          ]
        },
        "idBoard": {
          "type": "string",
          "text": "ID of a board the list should be moved to .Pattern - ^[0-9a-fA-F]{24}$"
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the checklist on the card. One of",
          "enum": [
            "top or bottom or a positive number."
          ]
        },
        "subscribed": {
          "type": "boolean",
          "text": "Whether the active member is subscribed to this list.",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update the properties of a List",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}",
        "alias_endpoint": "/trello/1/lists/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postList": {
      "provider_intent": "postList",
      "provider_alias_intent": "/1/lists",
      "text": "Create a new List",
      "category": "Lists",
      "method": "POST",
      "type": "API",
      "params": {
        "name": {
          "type": "string",
          "text": "Name for the list",
          "required": true
        },
        "idBoard": {
          "type": "string",
          "text": "The long ID of the board the list should be created on. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idListSource": {
          "type": "string",
          "text": "ID of the List to copy into the new List. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "pos": {
          "type": "number|string",
          "text": "one of top or bottom or a positive floating point number"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new List on a Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists",
        "alias_endpoint": "/trello/1/lists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postListsArchiveAllCards": {
      "provider_intent": "postListsArchiveAllCards",
      "provider_alias_intent": "/1/lists/id/archiveallcards",
      "text": "Archive all Cards in List",
      "category": "Lists",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Archive all cards in a list",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/archiveAllCards",
        "alias_endpoint": "/trello/1/lists/id/archiveallcards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-archiveallcards-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postListsArchiveAllCards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postListsMoveAllCards": {
      "provider_intent": "postListsMoveAllCards",
      "provider_alias_intent": "/1/lists/id/moveallcards",
      "text": "Move all Cards in List",
      "category": "Lists",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "idBoard": {
          "type": "string",
          "text": "The ID of the board the cards should be moved to. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idList": {
          "type": "string",
          "text": "The ID of the list that the cards should be moved to. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Move all Cards in a List",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/moveAllCards",
        "alias_endpoint": "/trello/1/lists/id/moveallcards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-moveallcards-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postListsMoveAllCards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putListsClosed": {
      "provider_intent": "putListsClosed",
      "provider_alias_intent": "/1/lists/id/closed",
      "text": "Archive or unarchive a list",
      "category": "Lists",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "Set to true to close (archive) the list. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Archive or unarchive a list",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/closed",
        "alias_endpoint": "/trello/1/lists/id/closed",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-closed-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putListsClosed",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putListsIdBoard": {
      "provider_intent": "putListsIdBoard",
      "provider_alias_intent": "/1/lists/id/idboard",
      "text": "Move List to Board",
      "category": "Lists",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The ID of the board to move the list to. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Move a List to a different Board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/idBoard",
        "alias_endpoint": "/trello/1/lists/id/idboard",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-idboard-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putListsIdBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putListsField": {
      "provider_intent": "putListsField",
      "provider_alias_intent": "/1/lists/id/field",
      "text": "Update a field on a List",
      "category": "Lists",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field on the List to be updated",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string|number|string|boolean",
          "text": "The new value for the field"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field on the List to be updated",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Rename a list",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/{field}",
        "alias_endpoint": "/trello/1/lists/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-field-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putListsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getListsActions": {
      "provider_intent": "getListsActions",
      "provider_alias_intent": "/1/lists/id/actions",
      "text": "Get Actions for a List",
      "category": "Lists",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "A comma-separated list of action types."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Actions on a List",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/actions",
        "alias_endpoint": "/trello/1/lists/id/actions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-actions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getListsActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getListsBoard": {
      "provider_intent": "getListsBoard",
      "provider_alias_intent": "/1/lists/id/board",
      "text": "Get the Board a List is on",
      "category": "Lists",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields",
          "enum": [
            "all",
            "none"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the board a list is on",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/board",
        "alias_endpoint": "/trello/1/lists/id/board",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-board-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getListsBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsOnList": {
      "provider_intent": "getCardsOnList",
      "provider_alias_intent": "/1/lists/id/cards",
      "text": "Get Cards in a List",
      "category": "Lists",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the list.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the cards in a list",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/lists/{id}/cards",
        "alias_endpoint": "/trello/1/lists/id/cards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-lists/#api-lists-id-cards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsOnList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createCard": {
      "provider_intent": "createCard",
      "provider_alias_intent": "/1/cards",
      "text": "Create a new Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name for the card"
        },
        "desc": {
          "type": "string",
          "text": "The name for the card"
        },
        "pos": {
          "type": "string-number",
          "text": "The position of the new card.top bottom or a positive float"
        },
        "due": {
          "type": "string",
          "text": "A due date for the card"
        },
        "start": {
          "type": "string",
          "text": "The start date of a card or null"
        },
        "dueComplete": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "idList": {
          "type": "string",
          "text": "The ID of the list the card should be created in. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMembers": {
          "type": "array",
          "text": "Comma-separated list of member IDs to add to the card"
        },
        "idLabels": {
          "type": "array",
          "text": "Comma-separated list of label IDs to add to the card"
        },
        "urlSource": {
          "type": "string",
          "text": "http or https URL"
        },
        "fileSource": {
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "text": "The mimeType of the attachment. Max length 256"
        },
        "idCardSource": {
          "type": "string",
          "text": "The ID of a card to copy into the new card. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "keepFromSource": {
          "type": "string",
          "text": "If using idCardSource you can specify which properties to copy over. all or comma-separated list of",
          "enum": [
            "attachments checklists customFields comments due start abels members start stickers"
          ]
        },
        "address": {
          "type": "string",
          "text": "For use with/by the Map View"
        },
        "locationName": {
          "type": "string",
          "text": "For use with/by the Map View"
        },
        "coordinates": {
          "type": "string",
          "text": "For use with/by the Map View.Should take the form latitude longitude"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new Card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards",
        "alias_endpoint": "/trello/1/cards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCard": {
      "provider_intent": "getCard",
      "provider_alias_intent": "/1/cards/id",
      "text": "Get a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of fields.Defaults",
          "enum": [
            "badges checkItemStates closed dateLastActivity desc descData due start email idBoard idChecklists idLabels idList idMembers idShort idAttachmentCover manualCoverAttachment labels name pos shortUrl url"
          ]
        },
        "actions": {
          "type": "string",
          "text": "See the Actions Nested Resource"
        },
        "attachments": {
          "type": "string|boolean",
          "text": "true false or cover",
          "enum": [
            "true",
            "false"
          ]
        },
        "attachment_fields": {
          "type": "string",
          "text": "all or a comma-separated list of attachment fields"
        },
        "members": {
          "type": "boolean",
          "text": "Whether to return member objects for members on the card",
          "enum": [
            true,
            false
          ]
        },
        "member_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields.Defaults",
          "enum": [
            "avatarHash fullName initials username"
          ]
        },
        "membersVoted": {
          "type": "boolean",
          "text": "Whether to return member objects for members who voted on the card",
          "enum": [
            true,
            false
          ]
        },
        "memberVoted_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields Defaults",
          "enum": [
            "avatarHash fullName initials username"
          ]
        },
        "checkItemStates": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "checklists": {
          "type": "string",
          "text": "Whether to return the checklists on the card.all or none"
        },
        "checklist_fields": {
          "type": "string",
          "text": "all or a comma-separated list of idBoard idCard name pos"
        },
        "board": {
          "type": "boolean",
          "text": "Whether to return the board object the card is on",
          "enum": [
            true,
            false
          ]
        },
        "board_fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields.Defaults",
          "enum": [
            "name desc descData closed idOrganization pinned url prefs"
          ]
        },
        "list": {
          "type": "boolean",
          "text": "See the Lists Nested Resource",
          "enum": [
            true,
            false
          ]
        },
        "pluginData": {
          "type": "boolean",
          "text": "Whether to include pluginData on the card with the response",
          "enum": [
            true,
            false
          ]
        },
        "stickers": {
          "type": "booleans",
          "text": "Whether to include sticker models with the response",
          "enum": [
            "true",
            "false"
          ]
        },
        "sticker_fields": {
          "type": "string",
          "text": "all or a comma-separated list of sticker fields"
        },
        "customFieldItems": {
          "type": "boolean",
          "text": "Whether to include the customFieldItems",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a card by its ID",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}",
        "alias_endpoint": "/trello/1/cards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateCard": {
      "provider_intent": "updateCard",
      "provider_alias_intent": "/1/cards/id",
      "text": "Update a Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The new name for the card"
        },
        "desc": {
          "type": "string",
          "text": "The new description for the card"
        },
        "closed": {
          "type": "boolean",
          "text": "Whether the card should be archived (closed",
          "enum": [
            true,
            false
          ]
        },
        "idMembers": {
          "type": "string",
          "text": "Comma-separated list of member IDs.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idAttachmentCover": {
          "type": "string",
          "text": "The ID of the image attachment the card should use as its cover"
        },
        "or null for none.Pattern": {
          "type": "^[0-9a-fA-F]{24}$"
        },
        "idList": {
          "type": "string",
          "text": "The ID of the list the card should be in.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idLabels": {
          "type": "string",
          "text": "Comma-separated list of label IDs.Style",
          "enum": [
            "form Pattern"
          ]
        },
        "idBoard": {
          "type": "string",
          "text": "The ID of the board the card should be on.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the card in its list.top bottom or a positive float"
        },
        "due": {
          "type": "string",
          "text": "The start date of a card or null"
        },
        "dueComplete": {
          "type": "boolean",
          "text": "Whether the due date should be marked complete",
          "enum": [
            true,
            false
          ]
        },
        "subscribed": {
          "type": "boolean",
          "text": "Whether the member is should be subscribed to the card",
          "enum": [
            true,
            false
          ]
        },
        "address": {
          "type": "string",
          "text": "For use with/by the Map View"
        },
        "locationName": {
          "type": "string",
          "text": "For use with/by the Map View"
        },
        "coordinates": {
          "type": "string",
          "text": "For use with/by the Map View.Should be latitude longitude"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}",
        "alias_endpoint": "/trello/1/cards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCard": {
      "provider_intent": "deleteCard",
      "provider_alias_intent": "/1/cards/id",
      "text": "Delete a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a Card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}",
        "alias_endpoint": "/trello/1/cards/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsField": {
      "provider_intent": "getCardsField",
      "provider_alias_intent": "/1/cards/id/field",
      "text": "Get a field on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The desired field.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The desired field.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific property of a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/{field}",
        "alias_endpoint": "/trello/1/cards/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsActions": {
      "provider_intent": "getCardsActions",
      "provider_alias_intent": "/1/cards/id/actions",
      "text": "Get Actions on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "A comma-separated list of action types"
        },
        "page": {
          "type": "number",
          "text": "The page of results for actions.Each page of results has 50 actions."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the Actions on a Card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/actions",
        "alias_endpoint": "/trello/1/cards/id/actions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-actions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsAttachments": {
      "provider_intent": "getCardsAttachments",
      "provider_alias_intent": "/1/cards/id/attachments",
      "text": "Get Attachments on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of attachment fields"
        },
        "filter": {
          "type": "string",
          "text": "Use cover to restrict to just the cover attachment",
          "enum": [
            "true",
            "false"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the attachments on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/attachments",
        "alias_endpoint": "/trello/1/cards/id/attachments",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsAttachments",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createCardsAttachment": {
      "provider_intent": "createCardsAttachment",
      "provider_alias_intent": "/1/cards/id/attachments",
      "text": "Create Attachment On Card 🚧",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the attachment.Max length 256"
        },
        "file": {
          "type": "string",
          "text": "The file to attach as multipart/form-data"
        },
        "mimeType": {
          "type": "string",
          "text": "The mimeType of the attachment.Max length 256"
        },
        "url": {
          "type": "string",
          "text": "A URL to attach.Must start with http",
          "enum": [
            "",
            "",
            " or https"
          ]
        },
        "setCover": {
          "type": "boolean",
          "text": "Determines whether to use the new attachment as a cover for the Card",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create an Attachment to a Card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/attachments",
        "alias_endpoint": "/trello/1/cards/id/attachments",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "createCardsAttachment",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsAttachment": {
      "provider_intent": "getCardsAttachment",
      "provider_alias_intent": "/1/cards/id/attachments/idattachment",
      "text": "Get an Attachment on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAttachment": {
          "type": "string",
          "text": "The ID of the Attachment. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "array",
          "text": "The Attachment fields to be included in the response."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAttachment": {
          "type": "string",
          "text": "The ID of the Attachment. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific Attachment on a Card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/attachments/{idAttachment}",
        "alias_endpoint": "/trello/1/cards/id/attachments/idattachment",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-idattachment-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsAttachment",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCardsAttachment": {
      "provider_intent": "deleteCardsAttachment",
      "provider_alias_intent": "/1/cards/id/attachments/idattachment",
      "text": "Delete an Attachment on a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAttachment": {
          "type": "string",
          "text": "The ID of the Attachment.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAttachment": {
          "type": "string",
          "text": "The ID of the Attachment.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete an Attachment",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/attachments/{idAttachment}",
        "alias_endpoint": "/trello/1/cards/id/attachments/idattachment",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-attachments-idattachment-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCardsAttachment",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsBoard": {
      "provider_intent": "getCardsBoard",
      "provider_alias_intent": "/1/cards/id/board",
      "text": "Get the Board the Card is on",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the board a card is on",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/board",
        "alias_endpoint": "/trello/1/cards/id/board",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-board-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsCheckItemStates": {
      "provider_intent": "getCardsCheckItemStates",
      "provider_alias_intent": "/1/cards/id/checkitemstates",
      "text": "Get checkItems on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of",
          "enum": [
            "idCheckItem state"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the completed checklist items on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checkItemStates",
        "alias_endpoint": "/trello/1/cards/id/checkitemstates",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checkitemstates-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsCheckItemStates",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsChecklists": {
      "provider_intent": "getCardsChecklists",
      "provider_alias_intent": "/1/cards/id/checklists",
      "text": "Get Checklists on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "checkItems": {
          "type": "string",
          "text": "all or none"
        },
        "checkItem_fields": {
          "type": "string",
          "text": "all or a comma-separated list of",
          "enum": [
            "name",
            "nameData",
            "pos",
            "state",
            "type",
            "due",
            "dueReminderidMember"
          ],
          "default": "pos"
        },
        "filter": {
          "type": "string",
          "text": "all or none\nfields",
          "enum": [
            "string"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the checklists on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checklists",
        "alias_endpoint": "/trello/1/cards/id/checklists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checklists-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createCardsChecklist": {
      "provider_intent": "createCardsChecklist",
      "provider_alias_intent": "/1/cards/id/checklists",
      "text": "Create Checklist on a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the checklist"
        },
        "idChecklistSource": {
          "type": "string",
          "text": "The ID of a source checklist to copy into the new one.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "pos": {
          "type": "string",
          "text": "The position of the checklist on the card.One of",
          "enum": [
            "top bottom or a positive number."
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new checklist on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checklists",
        "alias_endpoint": "/trello/1/cards/id/checklists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checklists-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createCardsChecklist",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsCheckItem": {
      "provider_intent": "getCardsCheckItem",
      "provider_alias_intent": "/1/cards/id/checkitem/idcheckitem",
      "text": "Get checkItem on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of name nameData pos state type due dueReminder idMember"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific checkItem on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checkItem/{idCheckItem}",
        "alias_endpoint": "/trello/1/cards/id/checkitem/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checkitem-idcheckitem-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateCardsCheckItem": {
      "provider_intent": "updateCardsCheckItem",
      "provider_alias_intent": "/1/cards/id/checkitem/idcheckitem",
      "text": "Update a checkItem on a Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The new name for the checklist item"
        },
        "state": {
          "type": "string",
          "text": "One of complete or incomplete",
          "enum": [
            "complete",
            "incomplete"
          ]
        },
        "pos": {
          "type": "string|number",
          "text": "top bottom or a positive float"
        },
        "due": {
          "type": "string",
          "text": "A due date for the checkitem"
        },
        "dueReminder": {
          "type": "number",
          "text": "A dueReminder for the due date on the checkitem"
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member to remove from the card. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an item in a checklist on a card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checkItem/{idCheckItem}",
        "alias_endpoint": "/trello/1/cards/id/checkitem/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checkitem-idcheckitem-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateCardsCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCardsCheckItem": {
      "provider_intent": "deleteCardsCheckItem",
      "provider_alias_intent": "/1/cards/id/checkitem/idcheckitem",
      "text": "Delete checkItem on a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checkitem. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a checklist item",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checkItem/{idCheckItem}",
        "alias_endpoint": "/trello/1/cards/id/checkitem/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checkitem-idcheckitem-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCardsCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsList": {
      "provider_intent": "getCardsList",
      "provider_alias_intent": "/1/cards/id/list",
      "text": "Get the List of a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "all or a comma-separated list of list fieldss"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the list a card is in",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/list",
        "alias_endpoint": "/trello/1/cards/id/list",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-list-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsMembers": {
      "provider_intent": "getCardsMembers",
      "provider_alias_intent": "/1/cards/id/members",
      "text": "Get the Members of a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "all or a comma-separated list of members fieldss"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the members on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/members",
        "alias_endpoint": "/trello/1/cards/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-members-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsMembersVoted": {
      "provider_intent": "getCardsMembersVoted",
      "provider_alias_intent": "/1/cards/id/membersvoted",
      "text": "Get Members who have voted on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the members who have voted on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/membersVoted",
        "alias_endpoint": "/trello/1/cards/id/membersvoted",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-membersvoted-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsMembersVoted",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postCardsMembersVoted": {
      "provider_intent": "postCardsMembersVoted",
      "provider_alias_intent": "/1/cards/id/membersvoted",
      "text": "Add Member vote to Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The ID of the member to vote 'yes' on the card.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Vote on the card for a given member.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/membersVoted",
        "alias_endpoint": "/trello/1/cards/id/membersvoted",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-membersvoted-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postCardsMembersVoted",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsPluginData": {
      "provider_intent": "getCardsPluginData",
      "provider_alias_intent": "/1/cards/id/plugindata",
      "text": "Get pluginData on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern",
          "required": true,
          "enum": [
            "- ^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern",
          "required": true,
          "enum": [
            "- ^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get any shared pluginData on a card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/pluginData",
        "alias_endpoint": "/trello/1/cards/id/plugindata",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-plugindata-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsPluginData",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsStickers": {
      "provider_intent": "getCardsStickers",
      "provider_alias_intent": "/1/cards/id/stickers",
      "text": "Get Stickers on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of sticker fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the stickers on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/stickers",
        "alias_endpoint": "/trello/1/cards/id/stickers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-stickers-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsStickers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postCardsStickers": {
      "provider_intent": "postCardsStickers",
      "provider_alias_intent": "/1/cards/id/stickers",
      "text": "Add a Sticker to a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "image": {
          "type": "string",
          "text": "For custom stickers the id of the sticker.For default stickers the string identifier (like 'taco-cool' see below)",
          "required": true
        },
        "top": {
          "type": "number",
          "text": "The top position of the sticker from -60 to 100",
          "required": true
        },
        "left": {
          "type": "number",
          "text": "The left position of the sticker from -60 to 100",
          "required": true
        },
        "zIndex": {
          "type": "integer",
          "text": "The z-index of the sticker",
          "required": true
        },
        "rotate": {
          "type": "number",
          "text": "The rotation of the sticker"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a sticker to a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/stickers",
        "alias_endpoint": "/trello/1/cards/id/stickers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-stickers-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postCardsStickers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsSticker": {
      "provider_intent": "getCardsSticker",
      "provider_alias_intent": "/1/cards/id/stickers/idsticker",
      "text": "Get a Sticker on a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of sticker fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific sticker on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/stickers/{idSticker}",
        "alias_endpoint": "/trello/1/cards/id/stickers/idsticker",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-stickers-idsticker-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsSticker",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateCardsSticker": {
      "provider_intent": "updateCardsSticker",
      "provider_alias_intent": "/1/cards/id/stickers/idsticker",
      "text": "Update a Sticker on a Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "top": {
          "type": "number",
          "text": "The top position of the sticker from -60 to 100",
          "required": true
        },
        "left": {
          "type": "number",
          "text": "The left position of the sticker from -60 to 100",
          "required": true
        },
        "zIndex": {
          "type": "integer",
          "text": "The z-index of the sticker",
          "required": true
        },
        "rotate": {
          "type": "number",
          "text": "The rotation of the sticker"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a sticker on a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/stickers/{idSticker}",
        "alias_endpoint": "/trello/1/cards/id/stickers/idsticker",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-stickers-idsticker-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateCardsSticker",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCardsSticker": {
      "provider_intent": "deleteCardsSticker",
      "provider_alias_intent": "/1/cards/id/stickers/idsticker",
      "text": "Delete a Sticker on a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a sticker from the card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/stickers/{idSticker}",
        "alias_endpoint": "/trello/1/cards/id/stickers/idsticker",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-stickers-idsticker-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCardsSticker",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putCardsActionsComments": {
      "provider_intent": "putCardsActionsComments",
      "provider_alias_intent": "/1/cards/id/actions/idaction/comments",
      "text": "Update Comment Action on a Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern",
          "required": true,
          "enum": [
            "- ^[0-9a-fA-F]{24}$"
          ]
        },
        "idAction": {
          "type": "string",
          "text": "The ID of the comment action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "text": {
          "type": "string",
          "text": "The new text for the comment",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern",
          "required": true,
          "enum": [
            "- ^[0-9a-fA-F]{24}$"
          ]
        },
        "idAction": {
          "type": "string",
          "text": "The ID of the comment action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an existing comment",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/actions/{idAction}/comments",
        "alias_endpoint": "/trello/1/cards/id/actions/idaction/comments",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-actions-idaction-comments-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putCardsActionsComments",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCardsActionsComments": {
      "provider_intent": "deleteCardsActionsComments",
      "provider_alias_intent": "/1/cards/id/actions/idaction/comments",
      "text": "Delete a comment on a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAction": {
          "type": "string",
          "text": "The ID of the comment action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idAction": {
          "type": "string",
          "text": "The ID of the comment action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a comment",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/actions/{idAction}/comments",
        "alias_endpoint": "/trello/1/cards/id/actions/idaction/comments",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-actions-idaction-comments-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCardsActionsComments",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putCardsCustomFieldItem": {
      "provider_intent": "putCardsCustomFieldItem",
      "provider_alias_intent": "/1/cards/idcard/customfield/idcustomfield/item",
      "text": "Update Custom Field item on Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the card that the Custom Field value should be set/updated for. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomField": {
          "type": "string",
          "text": "ID of the Custom Field on the card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the card that the Custom Field value should be set/updated for. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomField": {
          "type": "string",
          "text": "ID of the Custom Field on the card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Setting, updating, and removing the value for a Custom Field on a card. For more details on updating custom fields check out the Getting Started With Custom Fields",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{idCard}/customField/{idCustomField}/item",
        "alias_endpoint": "/trello/1/cards/idcard/customfield/idcustomfield/item",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-idcard-customfield-idcustomfield-item-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putCardsCustomFieldItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCardsCustomFieldItems": {
      "provider_intent": "getCardsCustomFieldItems",
      "provider_alias_intent": "/1/cards/id/customfielditems",
      "text": "Get Custom Field Items for a Card",
      "category": "Card",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the custom field items for a card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/customFieldItems",
        "alias_endpoint": "/trello/1/cards/id/customfielditems",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-customfielditems-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCardsCustomFieldItems",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "AddNewCommentToCard": {
      "provider_intent": "AddNewCommentToCard",
      "provider_alias_intent": "/1/cards/id/actions/comments",
      "text": "Add a new comment to a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "text": {
          "type": "string",
          "text": "The comment",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a new comment to a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/actions/comments",
        "alias_endpoint": "/trello/1/cards/id/actions/comments",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-actions-comments-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "AddNewCommentToCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "AddLabelToCard": {
      "provider_intent": "AddLabelToCard",
      "provider_alias_intent": "/1/cards/id/idlabels",
      "text": "Add a Label to a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The ID of the label to add.Pattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a label to a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/idLabels",
        "alias_endpoint": "/trello/1/cards/id/idlabels",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-idlabels-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "AddLabelToCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "AddMemberToCard": {
      "provider_intent": "AddMemberToCard",
      "provider_alias_intent": "/1/cards/id/idmembers",
      "text": "Add a Member to a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The ID of the Member to add to the card\nPattern",
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a member to a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/idMembers",
        "alias_endpoint": "/trello/1/cards/id/idmembers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-idmembers-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "AddMemberToCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "createCardsLabel": {
      "provider_intent": "createCardsLabel",
      "provider_alias_intent": "/1/cards/id/labels",
      "text": "Create a new Label on a Card",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "color": {
          "type": "string",
          "text": "A valid label color or null.See labels",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "A name for the label"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new label for the board and add it to the given card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/labels",
        "alias_endpoint": "/trello/1/cards/id/labels",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-labels-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "createCardsLabel",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postCardsMarkAssociatedNotificationsRead": {
      "provider_intent": "postCardsMarkAssociatedNotificationsRead",
      "provider_alias_intent": "/1/cards/id/markassociatednotificationsread",
      "text": "Mark a Card's Notifications as read",
      "category": "Card",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Mark notifications about this card as read",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/markAssociatedNotificationsRead",
        "alias_endpoint": "/trello/1/cards/id/markassociatednotificationsread",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-markassociatednotificationsread-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postCardsMarkAssociatedNotificationsRead",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "removeCardsIdLabels": {
      "provider_intent": "removeCardsIdLabels",
      "provider_alias_intent": "/1/cards/id/idlabels/idlabel",
      "text": "Remove a Label from a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idLabel": {
          "type": "string",
          "text": "The ID of the label to remove. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idLabel": {
          "type": "string",
          "text": "The ID of the label to remove. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a label from a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/idLabels/{idLabel}",
        "alias_endpoint": "/trello/1/cards/id/idlabels/idlabel",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-idlabels-idlabel-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "removeCardsIdLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "removeCardsIdMembers": {
      "provider_intent": "removeCardsIdMembers",
      "provider_alias_intent": "/1/cards/id/idmembers/idmember",
      "text": "Remove a Member from a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member to remove from the card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member to remove from the card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a member from a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/idMembers/{idMember}",
        "alias_endpoint": "/trello/1/cards/id/idmembers/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-idmembers-idmember-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "removeCardsIdMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "removeCardsMembersVoted": {
      "provider_intent": "removeCardsMembersVoted",
      "provider_alias_intent": "/1/cards/id/membersvoted/idmember",
      "text": "Remove a Member's Vote on a Car",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member whose vote to remove. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member whose vote to remove. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a member's vote from a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/membersVoted/{idMember}",
        "alias_endpoint": "/trello/1/cards/id/membersvoted/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-membersvoted-idmember-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "removeCardsMembersVoted",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "updateCardsChecklistCheckItem": {
      "provider_intent": "updateCardsChecklistCheckItem",
      "provider_alias_intent": "/1/cards/idcard/checklist/idchecklist/checkitem/idcheckitem",
      "text": "Update Checkitem on Checklist on Card",
      "category": "Card",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checklist item to update. Pattern -^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idChecklist": {
          "type": "string",
          "text": "The ID of the item to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "pos": {
          "type": "string|boolean",
          "text": "top bottom or a positive float"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Card. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "The ID of the checklist item to update. Pattern -^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idChecklist": {
          "type": "string",
          "text": "The ID of the item to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an item in a checklist on a card.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}",
        "alias_endpoint": "/trello/1/cards/idcard/checklist/idchecklist/checkitem/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-idcard-checklist-idchecklist-checkitem-idcheckitem-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "updateCardsChecklistCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCardsChecklists": {
      "provider_intent": "deleteCardsChecklists",
      "provider_alias_intent": "/1/cards/id/checklists/idchecklist",
      "text": "Delete a Checklist on a Card",
      "category": "Card",
      "method": "DELETE",
      "type": "API",
      "params": {
        "idCard": {
          "type": "string",
          "text": "The ID of the Card. Pattern- ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idChecklist": {
          "type": "string",
          "text": "The ID of the checklist to delete. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "idCard": {
          "type": "string",
          "text": "The ID of the Card. Pattern- ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idChecklist": {
          "type": "string",
          "text": "The ID of the checklist to delete. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a checklist from a card",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/cards/{id}/checklists/{idChecklist}",
        "alias_endpoint": "/trello/1/cards/id/checklists/idchecklist",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-cards/#api-cards-id-checklists-idchecklist-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCardsChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postOrganizations": {
      "provider_intent": "postOrganizations",
      "provider_alias_intent": "/1/organizations",
      "text": "Create a new Organization",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "displayName": {
          "type": "string",
          "text": "The name to display for the Organization",
          "required": true
        },
        "desc": {
          "type": "string",
          "text": "The description for the organizations"
        },
        "name": {
          "type": "string",
          "text": "A string with a length of at least 3. Only lowercase letters; underscores; and numbers are allowed. If the name contains invalid characters; they will be removed. If the name conflicts with an existing name; a new name will be substituted. Min length",
          "enum": [
            "3"
          ]
        },
        "website": {
          "type": "string",
          "text": "A URL starting with http or https Format - url"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new Workspace.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations",
        "alias_endpoint": "/trello/1/organizations",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postOrganizations",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganization": {
      "provider_intent": "getOrganization",
      "provider_alias_intent": "/1/organizations/id",
      "text": "Get an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get an Organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}",
        "alias_endpoint": "/trello/1/organizations/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putOrganization": {
      "provider_intent": "putOrganization",
      "provider_alias_intent": "/1/organizations/id",
      "text": "Update an Organization",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "A new name for the organization. At least 3 lowercase letters; underscores; and numbers. Must be unique",
          "required": true
        },
        "displayName": {
          "type": "string",
          "text": "A new displayName for the organization. Must be at least 1 character long and not begin or end with a space.",
          "required": true
        },
        "desc": {
          "type": "string",
          "text": "A new description for the organization"
        },
        "website": {
          "type": "string",
          "text": "A URL starting with http or https or null"
        },
        "prefs/associatedDomain": {
          "type": "string",
          "text": "The Google Apps domain to link this org to."
        },
        "prefs/externalMembersDisabled": {
          "type": "boolean",
          "text": "Whether non-workspace members can be added to boards inside the Workspace",
          "enum": [
            true,
            false
          ]
        },
        "prefs/googleAppsVersion": {
          "type": "integer",
          "text": "1 or 2 Format - int32"
        },
        "prefs/boardVisibilityRestrict/org": {
          "type": "string",
          "text": "Who on the Workspace can make Workspace visible boards. One of admin - none; org"
        },
        "prefs/boardVisibilityRestrict/private": {
          "type": "string",
          "text": "Who can make private boards. One of - admin; none; org"
        },
        "prefs/boardVisibilityRestrict/public": {
          "type": "string",
          "text": "Who on the Workspace can make public boards. One of - admin; none; org"
        },
        "prefs/orgInviteRestrict": {
          "type": "string",
          "text": "An email address with optional wildcard characters. (E.g. subdomain.*.trello.com)"
        },
        "prefs/permissionLevel": {
          "type": "string",
          "text": "Whether the Workspace page is publicly visible. One of - private; public"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}",
        "alias_endpoint": "/trello/1/organizations/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganization": {
      "provider_intent": "deleteOrganization",
      "provider_alias_intent": "/1/organizations/id",
      "text": "Delete an Organization",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete an Organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}",
        "alias_endpoint": "/trello/1/organizations/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsField": {
      "provider_intent": "getOrganizationsField",
      "provider_alias_intent": "/1/organizations/id/field",
      "text": "Get field on Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "An organization field. Valid values - id; name",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "An organization field. Valid values - id; name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get field on Organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/{field}",
        "alias_endpoint": "/trello/1/organizations/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsActions": {
      "provider_intent": "getOrganizationsActions",
      "provider_alias_intent": "/1/organizations/id/actions",
      "text": "Get Actions for Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the actions on a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/actions",
        "alias_endpoint": "/trello/1/organizations/id/actions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-actions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsBoards": {
      "provider_intent": "getOrganizationsBoards",
      "provider_alias_intent": "/1/organizations/id/boards",
      "text": "Get Boards in an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "all or a comma-separated list of - open; closed; members; organization; public. Default - all. Valid values",
          "enum": [
            "all; open; closed; members; organization; public."
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields. Valid values - id; name; desc; descData; closed; idMemberCreator; idOrganization; pinned; url; shortUrl; prefs; labelNames; starred; limits; memberships; enterpriseOwned"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the boards in a Workspace.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/boards",
        "alias_endpoint": "/trello/1/organizations/id/boards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-boards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsBoards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsExports": {
      "provider_intent": "getOrganizationsExports",
      "provider_alias_intent": "/1/organizations/id/exports",
      "text": "Retrieve Organization's Exports",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Workspace. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Workspace. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve the exports that exist for the given organization.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/exports",
        "alias_endpoint": "/trello/1/organizations/id/exports",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-exports-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsExports",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postOrganizationsExports": {
      "provider_intent": "postOrganizationsExports",
      "provider_alias_intent": "/1/organizations/id/exports",
      "text": "Create Export for Organizations",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Workspace. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "attachments": {
          "type": "boolean",
          "text": "Whether the CSV should include attachments or not. Default - true",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Workspace. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Kick off CSV export for an organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/exports",
        "alias_endpoint": "/trello/1/organizations/id/exports",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-exports-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postOrganizationsExports",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsMembers": {
      "provider_intent": "getOrganizationsMembers",
      "provider_alias_intent": "/1/organizations/id/members",
      "text": "Get the Members of an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the members in a Workspace.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members",
        "alias_endpoint": "/trello/1/organizations/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putOrganizationsMembers": {
      "provider_intent": "putOrganizationsMembers",
      "provider_alias_intent": "/1/organizations/id/members",
      "text": "Update an Organization's Members",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "email": {
          "type": "string",
          "text": "An email address. Format - email\nfullName",
          "required": true,
          "enum": [
            "string"
          ]
        },
        "at least 1 character not beginning or ending with a space. Min length": {
          "type": "1\ntype",
          "enum": [
            "One of - admin; normal. Default - normal. Valid values - admin; normal"
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an Organization's Members",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members",
        "alias_endpoint": "/trello/1/organizations/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putOrganizationsMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsMemberships": {
      "provider_intent": "getOrganizationsMemberships",
      "provider_alias_intent": "/1/organizations/id/memberships",
      "text": "Get Memberships of an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "filter": {
          "type": "string",
          "text": "all or a comma-separated list of - active; admin; deactivated; me; normal. Style - form. Default - all. Valid values - all; active; admin; deactivated; me; normal"
        },
        "member": {
          "type": "boolean",
          "text": "Whether to include the Member objects with the Memberships. Default - false",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the memberships of a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/memberships",
        "alias_endpoint": "/trello/1/organizations/id/memberships",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-memberships-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsMemberships",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsMembership": {
      "provider_intent": "getOrganizationsMembership",
      "provider_alias_intent": "/1/organizations/id/memberships/idmembership",
      "text": "Get a Single Membership of an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMembership": {
          "type": "string",
          "text": "The ID of the membership to load. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "member": {
          "type": "boolean",
          "text": "Whether to include the Member objects with the Memberships. Default - false",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMembership": {
          "type": "string",
          "text": "The ID of the membership to load. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a single Membership for an Organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/memberships/{idMembership}",
        "alias_endpoint": "/trello/1/organizations/id/memberships/idmembership",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-memberships-idmembership-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsMembership",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsPluginData": {
      "provider_intent": "getOrganizationsPluginData",
      "provider_alias_intent": "/1/organizations/id/plugindata",
      "text": "Get the pluginData Scoped to Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get organization scoped pluginData on this Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/pluginData",
        "alias_endpoint": "/trello/1/organizations/id/plugindata",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-plugindata-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsPluginData",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsTags": {
      "provider_intent": "getOrganizationsTags",
      "provider_alias_intent": "/1/organizations/id/tags",
      "text": "Get Tags of an Organization",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the organization tags",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/tags",
        "alias_endpoint": "/trello/1/organizations/id/tags",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-tags-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsTags",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postOrganizationsTags": {
      "provider_intent": "postOrganizationsTags",
      "provider_alias_intent": "/1/organizations/id/tags",
      "text": "Create a Tag in Organization",
      "category": "Organizations",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {
        "id": {
          "type": "string",
          "text": "The ID or name of the Organization",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a Tag in Organization",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/tags",
        "alias_endpoint": "/trello/1/organizations/id/tags",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-tags-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postOrganizationsTags",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putOrganizationsMember": {
      "provider_intent": "putOrganizationsMember",
      "provider_alias_intent": "/1/organizations/id/members/idmember",
      "text": "Update a Member of an Organization",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string",
          "text": "The ID or username of the member to update.",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "One of - admin; normal. Valid values - admin; normal",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string",
          "text": "The ID or username of the member to update.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add a member to a Workspace or update their member type.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members/{idMember}",
        "alias_endpoint": "/trello/1/organizations/id/members/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-idmember-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putOrganizationsMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsMember": {
      "provider_intent": "deleteOrganizationsMember",
      "provider_alias_intent": "/1/organizations/id/members/idmember",
      "text": "Remove a Member from an Organization",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a member from a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members/{idMember}",
        "alias_endpoint": "/trello/1/organizations/id/members/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-idmember-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putOrganizationsMembersDeactivated": {
      "provider_intent": "putOrganizationsMembersDeactivated",
      "provider_alias_intent": "/1/organizations/id/members/idmember/deactivated",
      "text": "Deactivate or reactivate a member of an Organization",
      "category": "Organizations",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "idMember": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Deactivate or reactivate a member of a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members/{idMember}/deactivated",
        "alias_endpoint": "/trello/1/organizations/id/members/idmember/deactivated",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-idmember-deactivated-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putOrganizationsMembersDeactivated",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsLogo": {
      "provider_intent": "deleteOrganizationsLogo",
      "provider_alias_intent": "/1/organizations/id/logo",
      "text": "Delete Logo for Organization",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a the logo from a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/logo",
        "alias_endpoint": "/trello/1/organizations/id/logo",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-logo-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsLogo",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsMembersAll": {
      "provider_intent": "deleteOrganizationsMembersAll",
      "provider_alias_intent": "/1/organizations/id/members/idmember/all",
      "text": "Remove a Member from an Organization and all Organization Boards",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member to remove from the Workspace\nPattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the member to remove from the Workspace\nPattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a member from a Workspace and from all Workspace boards",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/members/{idMember}/all",
        "alias_endpoint": "/trello/1/organizations/id/members/idmember/all",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-members-idmember-all-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsMembersAll",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsPrefsAssociatedDomain": {
      "provider_intent": "deleteOrganizationsPrefsAssociatedDomain",
      "provider_alias_intent": "/1/organizations/id/prefs/associateddomain",
      "text": "Remove the associated Google Apps domain from a Workspace",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove the associated Google Apps domain from a Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/prefs/associatedDomain",
        "alias_endpoint": "/trello/1/organizations/id/prefs/associateddomain",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-prefs-associateddomain-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsPrefsAssociatedDomain",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsPrefsOrgInviteRestrict": {
      "provider_intent": "deleteOrganizationsPrefsOrgInviteRestrict",
      "provider_alias_intent": "/1/organizations/id/prefs/orginviterestrict",
      "text": "Delete the email domain restriction on who can be invited to the Workspace",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove the email domain restriction on who can be invited to the Workspace",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/prefs/orgInviteRestrict",
        "alias_endpoint": "/trello/1/organizations/id/prefs/orginviterestrict",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-prefs-orginviterestrict-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsPrefsOrgInviteRestrict",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteOrganizationsTags": {
      "provider_intent": "deleteOrganizationsTags",
      "provider_alias_intent": "/1/organizations/id/tags/idtag",
      "text": "Delete an Organization's Tag",
      "category": "Organizations",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization",
          "required": true
        },
        "idTag": {
          "type": "string",
          "text": "The ID of the tag to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization",
          "required": true
        },
        "idTag": {
          "type": "string",
          "text": "The ID of the tag to delete",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete an organization's tag",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/tags/{idTag}",
        "alias_endpoint": "/trello/1/organizations/id/tags/idtag",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-tags-idtag-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteOrganizationsTags",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getOrganizationsNewBillableGuests": {
      "provider_intent": "getOrganizationsNewBillableGuests",
      "provider_alias_intent": "/1/organizations/id/newbillableguests/idboard",
      "text": "Get Organizations new billable guests",
      "category": "Organizations",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBoard Required": {
          "type": "string",
          "text": "The ID of the board to check for new billable guests. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBoard Required": {
          "type": "string",
          "text": "The ID of the board to check for new billable guests. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Used to check whether the given board has new billable guests on it.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/organizations/{id}/newBillableGuests/{idBoard}",
        "alias_endpoint": "/trello/1/organizations/id/newbillableguests/idboard",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-organizations/#api-organizations-id-newbillableguests-idboard-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getOrganizationsNewBillableGuests",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getLabels": {
      "provider_intent": "getLabels",
      "provider_alias_intent": "/1/labels/id",
      "text": "Get a Label",
      "category": "Labels",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get information about a single Label.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/labels/{id}",
        "alias_endpoint": "/trello/1/labels/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-labels/#api-labels-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putLabels": {
      "provider_intent": "putLabels",
      "provider_alias_intent": "/1/labels/id",
      "text": "Update a Label",
      "category": "Labels",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The new name for the label"
        },
        "color": {
          "type": "string",
          "text": "The new color for the label. See fields for color options",
          "enum": [
            "yellow",
            "purple",
            "blue",
            "red",
            "green",
            "orange",
            "black",
            "sky",
            "pink",
            "lime"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a label by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/labels/{id}",
        "alias_endpoint": "/trello/1/labels/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-labels/#api-labels-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteLabels": {
      "provider_intent": "deleteLabels",
      "provider_alias_intent": "/1/labels/id",
      "text": "Delete a Label",
      "category": "Labels",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a label by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/labels/{id}",
        "alias_endpoint": "/trello/1/labels/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-labels/#api-labels-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putLabelsField": {
      "provider_intent": "putLabelsField",
      "provider_alias_intent": "/1/labels/id/field",
      "text": "Update a field on a label",
      "category": "Labels",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field on the Label to update.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The new value for the field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Label. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The field on the Label to update.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a field on a label.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/labels/{id}/{field}",
        "alias_endpoint": "/trello/1/labels/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-labels/#api-labels-id-field-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putLabelsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postLabels": {
      "provider_intent": "postLabels",
      "provider_alias_intent": "/1/labels",
      "text": "Create a Label",
      "category": "Labels",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "idBoard": {
          "type": "string",
          "text": "The ID of the Board to create the Label on.",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "Name for the label",
          "required": true
        },
        "color": {
          "type": "string",
          "text": "The color for the label. See fields for color options",
          "enum": [
            "yellow",
            "purple",
            "blue",
            "red",
            "green",
            "orange",
            "black",
            "sky",
            "pink",
            "lime"
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new Label on a Board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/labels",
        "alias_endpoint": "/trello/1/labels",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-labels/#api-labels-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postLabels",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getAction": {
      "provider_intent": "getAction",
      "provider_alias_intent": "/1/actions/id",
      "text": "Get an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "display": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "entities": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of action fields"
        },
        "member": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "member_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields"
        },
        "memberCreator": {
          "type": "boolean",
          "text": "Whether to include the member object for the creator of the action",
          "enum": [
            true,
            false
          ]
        },
        "memberCreator_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get an Action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}",
        "alias_endpoint": "/trello/1/actions/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getAction",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putAction": {
      "provider_intent": "putAction",
      "provider_alias_intent": "/1/actions/id",
      "text": "Update an Action",
      "category": "Actions",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "text": {
          "type": "string",
          "text": "The new text for the comment",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a specific Action. Only comment actions can be updated. Used to edit the content of a comment.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}",
        "alias_endpoint": "/trello/1/actions/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putAction",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteAction": {
      "provider_intent": "deleteAction",
      "provider_alias_intent": "/1/actions/id",
      "text": "Delete an Action",
      "category": "Actions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a specific action. Only comment actions can be deleted.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}",
        "alias_endpoint": "/trello/1/actions/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteAction",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionField": {
      "provider_intent": "getActionField",
      "provider_alias_intent": "/1/actions/id/field",
      "text": "Get a specific field on an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "An action field",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "An action field",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific property of an action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/{field}",
        "alias_endpoint": "/trello/1/actions/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionBoard": {
      "provider_intent": "getActionBoard",
      "provider_alias_intent": "/1/actions/id/board",
      "text": "Get the Board for an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Board for an Action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/board",
        "alias_endpoint": "/trello/1/actions/id/board",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-board-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionCard": {
      "provider_intent": "getActionCard",
      "provider_alias_intent": "/1/actions/id/card",
      "text": "Get the Card for an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of card fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the card for an action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/card",
        "alias_endpoint": "/trello/1/actions/id/card",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-card-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionList": {
      "provider_intent": "getActionList",
      "provider_alias_intent": "/1/actions/id/list",
      "text": "Get the List for an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern -  ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of list fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern -  ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the List for an Action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/list",
        "alias_endpoint": "/trello/1/actions/id/list",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-list-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionMember": {
      "provider_intent": "getActionMember",
      "provider_alias_intent": "/1/actions/id/member",
      "text": "Get the Member of an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filelds": {
          "type": "string",
          "text": "all or a comma-separated list of member fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Gets the member of an action (not the creator)",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/member",
        "alias_endpoint": "/trello/1/actions/id/member",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-member-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionMemberCreator": {
      "provider_intent": "getActionMemberCreator",
      "provider_alias_intent": "/1/actions/id/membercreator",
      "text": "Get the Member Creator of an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Member who created the Action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/memberCreator",
        "alias_endpoint": "/trello/1/actions/id/membercreator",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-membercreator-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionMemberCreator",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionOrganization": {
      "provider_intent": "getActionOrganization",
      "provider_alias_intent": "/1/actions/id/organization",
      "text": "Get the Organization of an Action",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Organization of an Action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/organization",
        "alias_endpoint": "/trello/1/actions/id/organization",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-organization-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putActionText": {
      "provider_intent": "putActionText",
      "provider_alias_intent": "/1/actions/id/text",
      "text": "Update a Comment Action",
      "category": "Actions",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The new text for the comment",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the action to update. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a comment action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{id}/text",
        "alias_endpoint": "/trello/1/actions/id/text",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-id-text-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putActionText",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionReactions": {
      "provider_intent": "getActionReactions",
      "provider_alias_intent": "/1/actions/idaction/reactions",
      "text": "Get Action's Reactions",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "member": {
          "type": "boolean",
          "text": "Whether to load the member as a nested resource",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List reactions for an action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{idAction}/reactions",
        "alias_endpoint": "/trello/1/actions/idaction/reactions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-idaction-reactions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionReactions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postActionReactions": {
      "provider_intent": "postActionReactions",
      "provider_alias_intent": "/1/actions/idaction/reactions",
      "text": "Create Reaction for Action",
      "category": "Actions",
      "method": "POST",
      "type": "API",
      "params": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "shortName": {
          "type": "string",
          "text": "The primary shortName of the emoji to add.See /emoji"
        },
        "skinVariation": {
          "type": "tring",
          "text": "The skinVariation of the emoji to add.See /emoji"
        },
        "native": {
          "type": "string",
          "text": "The emoji to add as a native unicode emoji.See /emoji"
        },
        "unified": {
          "type": "string",
          "text": "The unified value of the emoji to add. See /emoji"
        }
      },
      "path": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Adds a new reaction to an action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{idAction}/reactions",
        "alias_endpoint": "/trello/1/actions/idaction/reactions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-idaction-reactions-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postActionReactions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionReaction": {
      "provider_intent": "getActionReaction",
      "provider_alias_intent": "/1/actions/idaction/reactions/id",
      "text": "Get Action's Reactions",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "idAction": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "The ID of the reaction.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "member": {
          "type": "boolean",
          "text": "Whether to load the member as a nested resource.See Members Nested Resource",
          "enum": [
            true,
            false
          ]
        },
        "emoji": {
          "type": "boolean",
          "text": "Whether to load the emoji as a nested resource",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "idAction": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "The ID of the reaction.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get information for a reaction",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{idAction}/reactions/{id}",
        "alias_endpoint": "/trello/1/actions/idaction/reactions/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-idaction-reactions-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionReaction",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteActionsReaction": {
      "provider_intent": "deleteActionsReaction",
      "provider_alias_intent": "/1/actions/idaction/reactions/id",
      "text": "Delete Action's Reaction",
      "category": "Actions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "idAction": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "The ID of the reaction. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "idAction": {
          "type": "string",
          "text": "The ID of the Action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "id": {
          "type": "string",
          "text": "The ID of the reaction. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Deletes a reaction",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{idAction}/reactions/{id}",
        "alias_endpoint": "/trello/1/actions/idaction/reactions/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-idaction-reactions-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteActionsReaction",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getActionsReactionsSummary": {
      "provider_intent": "getActionsReactionsSummary",
      "provider_alias_intent": "/1/actions/idaction/reactionssummary",
      "text": "List Action's summary of Reactions",
      "category": "Actions",
      "method": "GET",
      "type": "API",
      "params": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "idAction": {
          "type": "string",
          "text": "The ID of the action. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List a summary of all reactions for an action",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/actions/{idAction}/reactionsSummary",
        "alias_endpoint": "/trello/1/actions/idaction/reactionssummary",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-actions/#api-actions-idaction-reactionssummary-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getActionsReactionsSummary",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getApplicationsCompliance": {
      "provider_intent": "getApplicationsCompliance",
      "provider_alias_intent": "/1/applications/key/compliance",
      "text": "Get Application's compliance data",
      "category": "Application",
      "method": "GET",
      "type": "API",
      "params": {
        "key": {
          "type": "string",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "key": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get Application's compliance data",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/applications/{key}/compliance",
        "alias_endpoint": "/trello/1/applications/key/compliance",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-applications/#api-applications-key-compliance-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getApplicationsCompliance",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getBatch": {
      "provider_intent": "getBatch",
      "provider_alias_intent": "/1/batch",
      "text": "Batch Requests",
      "category": "Batch",
      "method": "GET",
      "type": "API",
      "params": {
        "urls": {
          "type": "string",
          "text": "A list of API routes.Maximum of 10 routes allowed.The routes should begin with a forward slash and should not include the API version number - e.g.\"urls=/members/trello/cards/[cardId]\"",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "urls": {
          "type": "string",
          "text": "A list of API routes.Maximum of 10 routes allowed.The routes should begin with a forward slash and should not include the API version number - e.g.\"urls=/members/trello/cards/[cardId]\"",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Make up to 10 GET requests in a single, batched API call.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/batch",
        "alias_endpoint": "/trello/1/batch",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-batch/#api-batch-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getBatch",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postChecklists": {
      "provider_intent": "postChecklists",
      "provider_alias_intent": "/1/checklists",
      "text": "Create a Checklist",
      "category": "Checklist",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "idCard": {
          "type": "string",
          "text": "The ID of the Card that the checklist should be added to. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The name of the checklist. Should be a string of length 1 to 16384. Length min = 1 and max = 16384"
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the checklist on the card. One of - top or bottom or a positive number."
        },
        "idChecklistSource": {
          "type": "string",
          "text": "The ID of a checklist to copy into the new checklist. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a Checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists",
        "alias_endpoint": "/trello/1/checklists",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklists": {
      "provider_intent": "getChecklists",
      "provider_alias_intent": "/1/checklists/id",
      "text": "Get a Checklist",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "cards": {
          "type": "string",
          "text": "Valid values",
          "enum": [
            "all; closed; none; open; visible. Cards is a nested resource. The additional query params available are documented at Cards Nested"
          ]
        },
        "checkItems": {
          "type": "string",
          "text": "The check items on the list to return. One of - all; none.",
          "enum": [
            "all",
            "none"
          ]
        },
        "checkItem_fields": {
          "type": "string",
          "text": "The fields on the checkItem to return if checkItems are being returned. all or a comma-separated list of",
          "enum": [
            "name; nameData; pos; state; type; due; dueReminder; idMember"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of checklist fields"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Checklis\n",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}",
        "alias_endpoint": "/trello/1/checklists/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putChecklists": {
      "provider_intent": "putChecklists",
      "provider_alias_intent": "/1/checklists/id",
      "text": "Update a Checklist",
      "category": "Checklist",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the new checklist being created. Should be length of 1 to 16384."
        },
        "pos": {
          "type": "string|number",
          "text": "Determines the position of the checklist on the card. One of - top; bottom; or a positive number."
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an existing checklist.\n",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}",
        "alias_endpoint": "/trello/1/checklists/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteChecklists": {
      "provider_intent": "deleteChecklists",
      "provider_alias_intent": "/1/checklists/id",
      "text": "Delete a Checklist",
      "category": "Checklist",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a checklist\n",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}",
        "alias_endpoint": "/trello/1/checklists/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteChecklists",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklistsField": {
      "provider_intent": "getChecklistsField",
      "provider_alias_intent": "/1/checklists/id/field",
      "text": "Get field on a Checklist",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The fields checklist",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "The fields checklist",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get field on a Checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/{field}",
        "alias_endpoint": "/trello/1/checklists/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklistsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putChecklistsField": {
      "provider_intent": "putChecklistsField",
      "provider_alias_intent": "/1/checklists/id/field",
      "text": "Update field on a Checklist",
      "category": "Checklist",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "Field to update. Valid values",
          "required": true,
          "enum": [
            "name and pos."
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The value to change the checklist name to. Should be a string of length 1 to 16384.",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "Field to update. Valid values",
          "required": true,
          "enum": [
            "name and pos."
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update field on a Checklis.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/{field}",
        "alias_endpoint": "/trello/1/checklists/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-field-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putChecklistsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklistsBoard": {
      "provider_intent": "getChecklistsBoard",
      "provider_alias_intent": "/1/checklists/id/board",
      "text": "Get the Board the Checklist is on",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Board the Checklist is on",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/board",
        "alias_endpoint": "/trello/1/checklists/id/board",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-board-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklistsBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklistsCards": {
      "provider_intent": "getChecklistsCards",
      "provider_alias_intent": "/1/checklists/id/cards",
      "text": "Get the Card a Checklist is on",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Card a Checklist is on",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/cards",
        "alias_endpoint": "/trello/1/checklists/id/cards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-cards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklistsCards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklistsCheckItems": {
      "provider_intent": "getChecklistsCheckItems",
      "provider_alias_intent": "/1/checklists/id/checkitems",
      "text": "Get Checkitems on a Checklist",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "One of - all; none."
        },
        "fields": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get Checkitems on a Checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/checkItems",
        "alias_endpoint": "/trello/1/checklists/id/checkitems",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-checkitems-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklistsCheckItems",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postChecklistsCheckItems": {
      "provider_intent": "postChecklistsCheckItems",
      "provider_alias_intent": "/1/checklists/id/checkitems",
      "text": "Create Checkitem on Checklist",
      "category": "Checklist",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the new check item on the checklist. Should be a string of length 1 to 16384. Length min - 1 and max - 16384"
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the check item in the checklist. One of - top; bottom; or a positive number."
        },
        "checked": {
          "type": "boolean",
          "text": "Determines whether the check item is already checked when created.",
          "enum": [
            true,
            false
          ]
        },
        "due": {
          "type": "string",
          "text": "A due date for the checkitem. Format - date"
        },
        "dueReminder": {
          "type": "number",
          "text": "A dueReminder for the due date on the checkitem"
        },
        "idMember": {
          "type": "string",
          "text": "An ID of a member resource. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create Checkitem on Checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/checkItems",
        "alias_endpoint": "/trello/1/checklists/id/checkitems",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-checkitems-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postChecklistsCheckItems",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getChecklistsCheckItem": {
      "provider_intent": "getChecklistsCheckItem",
      "provider_alias_intent": "/1/checklists/id/checkitems/idcheckitem",
      "text": "Get a Checkitem on a Checklist",
      "category": "Checklist",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "ID of the check item to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "ID of the check item to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Checkitem on a Checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/checkItems/{idCheckItem}",
        "alias_endpoint": "/trello/1/checklists/id/checkitems/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-checkitems-idcheckitem-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getChecklistsCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteChecklistsCheckItem": {
      "provider_intent": "deleteChecklistsCheckItem",
      "provider_alias_intent": "/1/checklists/id/checkitems/idcheckitem",
      "text": "Delete Checkitem from Checklist",
      "category": "Checklist",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "ID of the check item to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of a checklist. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCheckItem": {
          "type": "string",
          "text": "ID of the check item to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove an item from a checklist",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/checklists/{id}/checkItems/{idCheckItem}",
        "alias_endpoint": "/trello/1/checklists/id/checkitems/idcheckitem",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-checklists/#api-checklists-id-checkitems-idcheckitem-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteChecklistsCheckItem",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postCustomFields": {
      "provider_intent": "postCustomFields",
      "provider_alias_intent": "/1/customfields",
      "text": "Create a new Custom Field on a Board",
      "category": "Custom Fields",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "idModel": {
          "type": "string",
          "text": "Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "modelType": {
          "type": "string",
          "text": "The type of model that the Custom Field is being defined on. This should always be board.",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "The name of the Custom Field",
          "required": true
        },
        "type": {
          "type": "string",
          "text": "The type of Custom Field to create. Valid values - checkbox; list; number; text; date",
          "required": true
        },
        "options": {
          "type": "string",
          "text": "If the type is checkbox"
        },
        "pos": {
          "type": "string|number",
          "text": "Position"
        },
        "display_cardFront": {
          "type": "boolean",
          "text": "Whether this Custom Field should be shown on the front of Cards",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new Custom Field on a board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields",
        "alias_endpoint": "/trello/1/customfields",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postCustomFields",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCustomFields": {
      "provider_intent": "getCustomFields",
      "provider_alias_intent": "/1/customfields/id",
      "text": "Get a Custom Field",
      "category": "Custom Fields",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Custom Field",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}",
        "alias_endpoint": "/trello/1/customfields/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCustomFields",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putCustomFields": {
      "provider_intent": "putCustomFields",
      "provider_alias_intent": "/1/customfields/id",
      "text": "Update a Custom Field definition",
      "category": "Custom Fields",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name of the Custom Field"
        },
        "pos": {
          "type": "string|number"
        },
        "display/cardFront": {
          "type": "boolean",
          "text": "Whether to display this custom field on the front of cards",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a Custom Field definition.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}",
        "alias_endpoint": "/trello/1/customfields/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putCustomFields",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCustomFields": {
      "provider_intent": "deleteCustomFields",
      "provider_alias_intent": "/1/customfields/id",
      "text": "Delete a Custom Field definition",
      "category": "Custom Fields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a Custom Field from a board.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}",
        "alias_endpoint": "/trello/1/customfields/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCustomFields",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postCustomFieldsOptions": {
      "provider_intent": "postCustomFieldsOptions",
      "provider_alias_intent": "/1/customfields/id/options",
      "text": "Get Options of Custom Field drop down",
      "category": "Custom Fields",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the options of a drop down Custom Field",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}/options",
        "alias_endpoint": "/trello/1/customfields/id/options",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-options-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postCustomFieldsOptions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCustomFieldsOptions": {
      "provider_intent": "getCustomFieldsOptions",
      "provider_alias_intent": "/1/customfields/id/options",
      "text": "Add Option to Custom Field dropdown",
      "category": "Custom Fields",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Add an option to a dropdown Custom Field.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}/options",
        "alias_endpoint": "/trello/1/customfields/id/options",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-options-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCustomFieldsOptions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getCustomFieldsOption": {
      "provider_intent": "getCustomFieldsOption",
      "provider_alias_intent": "/1/customfields/id/options/idcustomfieldoption",
      "text": "Get Option of Custom Field dropdown",
      "category": "Custom Fields",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomFieldOption": {
          "type": "string",
          "text": "ID of the customfieldoption to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomFieldOption": {
          "type": "string",
          "text": "ID of the customfieldoption to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve a specific, existing Option on a given dropdown-type Custom Field",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}/options/{idCustomFieldOption}",
        "alias_endpoint": "/trello/1/customfields/id/options/idcustomfieldoption",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-options-idcustomfieldoption-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getCustomFieldsOption",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteCustomFieldsOption": {
      "provider_intent": "deleteCustomFieldsOption",
      "provider_alias_intent": "/1/customfields/id/options/idcustomfieldoption",
      "text": "Delete Option of Custom Field dropdown",
      "category": "Custom Fields",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomFieldOption": {
          "type": "string",
          "text": "ID of the customfieldoption to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Custom Field. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idCustomFieldOption": {
          "type": "string",
          "text": "ID of the customfieldoption to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete an option from a Custom Field dropdown.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/customFields/{id}/options/{idCustomFieldOption}",
        "alias_endpoint": "/trello/1/customfields/id/options/idcustomfieldoption",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-customfields/#api-customfields-id-options-idcustomfieldoption-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteCustomFieldsOption",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEmoji": {
      "provider_intent": "getEmoji",
      "provider_alias_intent": "/1/emoji",
      "text": "List available Emoji",
      "category": "Emoji",
      "method": "GET",
      "type": "API",
      "params": {
        "locale": {
          "type": "string",
          "text": "The locale to return emoji descriptions and names in. Defaults to the logged in member's locale."
        },
        "spritesheets": {
          "type": "boolean",
          "text": "true to return spritesheet URLs in the response",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List available Emoji",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/emoji",
        "alias_endpoint": "/trello/1/emoji",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-emoji/#api-emoji-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEmoji",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprises": {
      "provider_intent": "getEnterprises",
      "provider_alias_intent": "/1/enterprises/id",
      "text": "Get an Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "Comma-separated list of - id; name; displayName; prefs; ssoActivationFailed; idAdmins; idMembers; (Note that the members array returned will be paginated if members is 'normal' or 'admins'. Pagination can be controlled with member_startIndex; etc but the API response will not contain the total available result count or pagination status data.Read the SCIM documentation here for more information on filtering) idOrganizations; products; userTypes; idMembers; idOrganizations"
        },
        "members": {
          "type": "string",
          "text": "One of - none; normal; admin;s owners; all"
        },
        "member_fields": {
          "type": "string",
          "text": "One of - avatarHash ;fullName; initials; username"
        },
        "member_filter": {
          "type": "string",
          "text": "Pass a SCIM-style query to filter members. This takes precedence over the all/normal/admins value of members.If any of the member_*args are set the member array will be paginated"
        },
        "member_sort": {
          "type": "string",
          "text": "This parameter expects a SCIM-style sorting value prefixed by a - to sort descending.If no - is prefixed it will be sorted ascending.Note that the members array returned will be paginated if members is 'normal' or 'admins'. Pagination can be controlled with member_startIndex etc but the API response will not contain the total available result count or pagination status data."
        },
        "member_sortBy": {
          "type": "string",
          "text": "Deprecated",
          "enum": [
            "Please use member_sort. This parameter expects a SCIM-style sorting value.Note that the members array returned will be paginated if members is normal or admins. Pagination can be controlled with member_startIndex etc and the API response's header will contain the total count and pagination state."
          ]
        },
        "member_sortOrder": {
          "type": "string",
          "text": "Deprecated",
          "enum": [
            "Please use member_sort. One of - ascending; descending; asc; desc"
          ]
        },
        "member_startIndex": {
          "type": "integer"
        },
        "member_count": {
          "type": "integer",
          "text": "0 to 100"
        },
        "organizations": {
          "type": "string",
          "text": "One of - none; members; public ;all"
        },
        "organization_fields": {
          "type": "string",
          "text": "Any valid value that the nested organization field resource accepts."
        },
        "organization_paid_accounts": {
          "type": "boolean",
          "text": "Whether or not to include paid account information in the returned workspace objects",
          "enum": [
            true,
            false
          ]
        },
        "organization_memberships": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get an enterprise by its ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}",
        "alias_endpoint": "/trello/1/enterprises/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprises",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesAuditlog": {
      "provider_intent": "getEnterprisesAuditlog",
      "provider_alias_intent": "/1/enterprises/id/auditlog",
      "text": "Get auditlog data for an Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Returns an array of Actions related to the Enterprise object",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/auditlog",
        "alias_endpoint": "/trello/1/enterprises/id/auditlog",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-auditlog-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesAuditlog",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesAdmins": {
      "provider_intent": "getEnterprisesAdmins",
      "provider_alias_intent": "/1/enterprises/id/admins",
      "text": "Get Enterprise admin Members",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "Any valid value that the nested member field resource accepts"
        },
        "Default - fullName; userName": {
          "type": ""
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get an enterprise's admin members.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/admins",
        "alias_endpoint": "/trello/1/enterprises/id/admins",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-admins-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesAdmins",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesSignupUrl": {
      "provider_intent": "getEnterprisesSignupUrl",
      "provider_alias_intent": "/1/enterprises/id/signupurl",
      "text": "Get signupUrl for Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "authenticate": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "confirmationAccepted": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "returnUrl": {
          "type": "string",
          "text": "Any valid URL."
        },
        "tosAccepted": {
          "type": "boolean",
          "text": "Designates whether the user has seen/consented to the Trello ToS prior to being redirected to the enterprise signup page/their IdP",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the signup URL for an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/signupUrl",
        "alias_endpoint": "/trello/1/enterprises/id/signupurl",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-signupurl-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesSignupUrl",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesMembers": {
      "provider_intent": "getEnterprisesMembers",
      "provider_alias_intent": "/1/enterprises/id/members",
      "text": "Get Members of Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A comma-seperated list of valid member fields"
        },
        "filter": {
          "type": "string",
          "text": "Pass a SCIM-style query to filter members.This takes precedence over the all/normal/admins value of members.if any of the below member_*args are set the member array will be paginated"
        },
        "sort": {
          "type": "string",
          "text": "This parameter expects a SCIM-style sorting value prefixed by a - to sort descending.If no-is prefixed it will be sorted ascending.Note that the members array returned will be paginated if members is 'normal' or 'admins'.Pagination can be controlled with member_startIndex etc but the API response will not contain the total available result count or pagination status data"
        },
        "sortBy": {
          "type": "string",
          "text": "Deprecated",
          "enum": [
            "Please use sort instead.One of"
          ]
        },
        "startIndex": {
          "type": "string",
          "text": "Any integer between 0 and 9999"
        },
        "count": {
          "type": "string"
        },
        "organization_fields": {
          "type": "string",
          "text": "Any valid value that the nested organization field resource accepts."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the members of an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/members",
        "alias_endpoint": "/trello/1/enterprises/id/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-members-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesMember": {
      "provider_intent": "getEnterprisesMember",
      "provider_alias_intent": "/1/enterprises/id/members/idmember",
      "text": "Get a Member of Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string"
        },
        "field": {
          "type": "string",
          "text": "A comma separated list of any valid values that the nested member field resource accepts. Default - avatarHash; fullName; initials; username"
        },
        "organization_fields": {
          "type": "string",
          "text": "Any valid value that the nested organization field resource accepts. Default- displayName"
        },
        "board_fields": {
          "type": "string",
          "text": "Any valid value that the nested board resource accepts. Default - name."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve.Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific member of an enterprise by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/members/{idMember}",
        "alias_endpoint": "/trello/1/enterprises/id/members/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-members-idmember-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesTransferrableOrganization": {
      "provider_intent": "getEnterprisesTransferrableOrganization",
      "provider_alias_intent": "/1/enterprises/id/transferrable/organization/idorganization",
      "text": "Get whether an organization can be transferred to an enterprise.",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idOrganizations": {
          "type": "string",
          "text": "An IDs of an Organization resource.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idOrganizations": {
          "type": "string",
          "text": "An IDs of an Organization resource.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get whether an organization can be transferred to an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/transferrable/organization/{idOrganization}",
        "alias_endpoint": "/trello/1/enterprises/id/transferrable/organization/idorganization",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-transferrable-organization-idorganization-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesTransferrableOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesClaimableOrganizations": {
      "provider_intent": "getEnterprisesClaimableOrganizations",
      "provider_alias_intent": "/1/enterprises/id/claimableorganizations",
      "text": "Get ClaimableOrganizations of an Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "limit": {
          "type": "integer",
          "text": "Limits the number of workspaces to be sorted"
        },
        "cursor": {
          "type": "string",
          "text": "Specifies the sort order to return matching documents"
        },
        "name": {
          "type": "string",
          "text": "Name of the enterprise to retrieve workspaces for"
        },
        "activeSince": {
          "type": "string",
          "text": "Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace"
        },
        "inactiveSince": {
          "type": "string",
          "text": "Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Workspaces that are claimable by the enterprise by ID. Can optionally query for workspaces based on activeness/ inactiveness.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/claimableOrganizations",
        "alias_endpoint": "/trello/1/enterprises/id/claimableorganizations",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-claimableorganizations-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesClaimableOrganizations",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getEnterprisesPendingOrganizations": {
      "provider_intent": "getEnterprisesPendingOrganizations",
      "provider_alias_intent": "/1/enterprises/id/pendingorganizations",
      "text": "Get PendingOrganizations of an Enterprise",
      "category": "Enterprise",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "activeSince": {
          "type": "string",
          "text": "Date in YYYY-MM-DD format indicating the date to search up to for activeness of workspace"
        },
        "inactiveSince": {
          "type": "string",
          "text": "Date in YYYY-MM-DD format indicating the date to search up to for inactiveness of workspace"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the Workspaces that are pending for the enterprise by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/pendingOrganizations",
        "alias_endpoint": "/trello/1/enterprises/id/pendingorganizations",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-pendingorganizations-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getEnterprisesPendingOrganizations",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postEnterprisesTokens": {
      "provider_intent": "postEnterprisesTokens",
      "provider_alias_intent": "/1/enterprises/id/tokens",
      "text": "Create an auth Token for an Enterprise.",
      "category": "Enterprise",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "expiration": {
          "type": "string"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create an auth Token for an Enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/tokens",
        "alias_endpoint": "/trello/1/enterprises/id/tokens",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-tokens-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postEnterprisesTokens",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putEnterprisesOrganizations": {
      "provider_intent": "putEnterprisesOrganizations",
      "provider_alias_intent": "/1/enterprises/id/organizations",
      "text": "Transfer an Organization to an Enterprise",
      "category": "Enterprise",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idOrganization": {
          "type": "string",
          "text": "ID of Organization to be transferred to Enterprise.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Transfer an organization to an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/organizations",
        "alias_endpoint": "/trello/1/enterprises/id/organizations",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-organizations-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putEnterprisesOrganizations",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putEnterprisesMembersLicensed": {
      "provider_intent": "putEnterprisesMembersLicensed",
      "provider_alias_intent": "/1/enterprises/id/members/idmember/licensed",
      "text": "Update a Member's licensed status",
      "category": "Enterprise",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the Enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the Member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the Enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "The ID of the Member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "This endpoint is used to update whether the provided Member should use one of the Enterprise's available licenses or not. Revoking a license will deactivate a Member of an Enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/members/{idMember}/licensed",
        "alias_endpoint": "/trello/1/enterprises/id/members/idmember/licensed",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-members-idmember-licensed-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putEnterprisesMembersLicensed",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putEnterprisesMembersDeactivated": {
      "provider_intent": "putEnterprisesMembersDeactivated",
      "provider_alias_intent": "/1/enterprises/id/members/idmember/deactivated",
      "text": "Deactivate a Member of an Enterprise.",
      "category": "Enterprise",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of the Member to deactive. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "boolean",
          "text": "Determines whether the user is deactivated or not.",
          "enum": [
            true,
            false
          ]
        },
        "fields": {
          "type": "string",
          "text": "A comma separated list of any valid values that the nested member field resource accepts. style - form. Valid values - id"
        },
        "organization_fields": {
          "type": "string",
          "text": "Any valid value that the nested organization resource accepts. Style - form. Valid values",
          "enum": [
            "id; name"
          ]
        },
        "board_fields": {
          "type": "string",
          "text": "Any valid value that the nested board resource accepts. Valid values - id; name; desc; descData; closed; idMemberCreator; idOrganization; pinned; url; shortUrl (Show more)"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of the Member to deactive. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Deactivate a Member of an Enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/members/{idMember}/deactivated",
        "alias_endpoint": "/trello/1/enterprises/id/members/idmember/deactivated",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-members-idmember-deactivated-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putEnterprisesMembersDeactivated",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putEnterprisesAdmins": {
      "provider_intent": "putEnterprisesAdmins",
      "provider_alias_intent": "/1/enterprises/id/admins/idmember",
      "text": "Update Member to be admin of Enterprise",
      "category": "Enterprise",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of  member to be made an admin of enterprise. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of  member to be made an admin of enterprise. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Make Member an admin of Enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/admins/{idMember}",
        "alias_endpoint": "/trello/1/enterprises/id/admins/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-admins-idmember-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putEnterprisesAdmins",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteEnterprisesAdmins": {
      "provider_intent": "deleteEnterprisesAdmins",
      "provider_alias_intent": "/1/enterprises/id/admins/idmember",
      "text": "Remove a Member as admin from Enterprise.",
      "category": "Enterprise",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of the member to be removed as an admin from enterprise. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idMember": {
          "type": "string",
          "text": "ID of the member to be removed as an admin from enterprise. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove a member as admin from an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/admins/{idMember}",
        "alias_endpoint": "/trello/1/enterprises/id/admins/idmember",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-admins-idmember-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteEnterprisesAdmins",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteEnterprisesOrganization": {
      "provider_intent": "deleteEnterprisesOrganization",
      "provider_alias_intent": "/1/enterprises/id/organizations/idorg",
      "text": "Delete an Organization from an Enterprise.",
      "category": "Enterprise",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the enterprise to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Remove an organization from an enterprise.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/enterprises/{id}/organizations/{idOrg}",
        "alias_endpoint": "/trello/1/enterprises/id/organizations/idorg",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-enterprises/#api-enterprises-id-organizations-idorg-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteEnterprisesOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getPlugin": {
      "provider_intent": "getPlugin",
      "provider_alias_intent": "/1/plugins/id/",
      "text": "Get a Plugin 🚧",
      "category": "Plugins",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get plugins",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/plugins/{id}/",
        "alias_endpoint": "/trello/1/plugins/id/",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-plugins/#api-plugins-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getPlugin",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putPlugin": {
      "provider_intent": "putPlugin",
      "provider_alias_intent": "/1/plugins/id/",
      "text": "Update a Plugin 🚧",
      "category": "Plugins",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or name of the organization.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a Plugin",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/plugins/{id}/",
        "alias_endpoint": "/trello/1/plugins/id/",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-plugins/#api-plugins-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "putPlugin",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postPluginsListing": {
      "provider_intent": "postPluginsListing",
      "provider_alias_intent": "/1/plugins/idplugin/listing",
      "text": "Create a Listing for Plugin",
      "category": "Plugins",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up for which you are creating a new listing.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description to show for the given"
        },
        "locale": {
          "type": "string",
          "text": "The locale that this listing should be displayed for."
        },
        "overview": {
          "type": "string",
          "text": "The overview to show for the given locale."
        },
        "name": {
          "type": "string",
          "text": "The name to use for the given locale."
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up for which you are creating a new listing.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a Listing for Plugin",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/plugins/{idPlugin}/listing",
        "alias_endpoint": "/trello/1/plugins/idplugin/listing",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-plugins/#api-plugins-idplugin-listing-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postPluginsListing",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getPluginsComplianceMemberPrivacy": {
      "provider_intent": "getPluginsComplianceMemberPrivacy",
      "provider_alias_intent": "/1/plugins/id/compliance/memberprivacy",
      "text": "Get Plugin's Member privacy compliance 🚧",
      "category": "Plugins",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get Plugin's Member privacy compliance",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/plugins/{id}/compliance/memberPrivacy",
        "alias_endpoint": "/trello/1/plugins/id/compliance/memberprivacy",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-plugins/#api-plugins-id-compliance-memberprivacy-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getPluginsComplianceMemberPrivacy",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putPluginsListing": {
      "provider_intent": "putPluginsListing",
      "provider_alias_intent": "/1/plugins/idplugin/listings/idlisting",
      "text": "Updating Plugin's Listing 🚧",
      "category": "Plugins",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up whose listing is being updated.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idListing": {
          "type": "string",
          "text": "The ID of the existing listing for the Power-Up that is being updated.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description to show for the given locale"
        },
        "locale": {
          "type": "string",
          "text": "The locale that this listing should be displayed for."
        },
        "overview": {
          "type": "string",
          "text": "The overview to show for the given locale."
        },
        "name": {
          "type": "string",
          "text": "The name to use for the given locale."
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the Power-Up whose listing is being updated.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        },
        "idListing": {
          "type": "string",
          "text": "The ID of the existing listing for the Power-Up that is being updated.Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update an existing listing for your Power-Up.\n",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/plugins/{idPlugin}/listings/{idListing}",
        "alias_endpoint": "/trello/1/plugins/idplugin/listings/idlisting",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-plugins/#api-plugins-idplugin-listings-idlisting-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "putPluginsListing",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getSearch": {
      "provider_intent": "getSearch",
      "provider_alias_intent": "/1/search",
      "text": "Search Trello 🚧",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Find what you're looking for in Trello",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/search",
        "alias_endpoint": "/trello/1/search",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-search/#api-search-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getSearch",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getSearchMembers": {
      "provider_intent": "getSearchMembers",
      "provider_alias_intent": "/1/search/members",
      "text": "Search for Members 🚧",
      "category": "Search",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Search for Trello members.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/search/members",
        "alias_endpoint": "/trello/1/search/members",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-search/#api-search-members-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getSearchMembers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getToken": {
      "provider_intent": "getToken",
      "provider_alias_intent": "/1/tokens/token",
      "text": "Get a Token 🚧",
      "category": "Tokens",
      "method": "GET",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of dateCreated dateExpires idMember identifier permissions.Valid values - identifier idMember dateCreated dateExpires permissions"
        },
        "webhooks": {
          "type": "boolean",
          "text": "Determines whether to include webhooks. Default",
          "enum": [
            true,
            false
          ]
        },
        "display": {
          "type": "boolean",
          "text": "Display",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve information about a token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}",
        "alias_endpoint": "/trello/1/tokens/token",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getToken",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getTokensMember": {
      "provider_intent": "getTokensMember",
      "provider_alias_intent": "/1/tokens/token/member",
      "text": "Get Token's Member 🚧",
      "category": "Tokens",
      "method": "GET",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of valid fields for Member Object. Valid values - id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve information about a token's owner by token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/member",
        "alias_endpoint": "/trello/1/tokens/token/member",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-member-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getTokensMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getTokensWebhooks": {
      "provider_intent": "getTokensWebhooks",
      "provider_alias_intent": "/1/tokens/token/webhooks",
      "text": "Get Webhooks for Token 🚧",
      "category": "Tokens",
      "method": "GET",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve all webhooks created with a Token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/webhooks",
        "alias_endpoint": "/trello/1/tokens/token/webhooks",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-webhooks-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getTokensWebhooks",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postTokensWebhook": {
      "provider_intent": "postTokensWebhook",
      "provider_alias_intent": "/1/tokens/token/webhooks",
      "text": "Create Webhooks for Token 🚧",
      "category": "Tokens",
      "method": "POST",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "A description to be displayed when retrieving information about the webhook."
        },
        "callbackURL": {
          "type": "string",
          "text": "The URL that the webhook should POST information to. Format",
          "required": true,
          "enum": [
            "url"
          ]
        },
        "idModel": {
          "type": "string",
          "text": "ID of the object to create a webhook on. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "path": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new webhook for a Token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/webhooks",
        "alias_endpoint": "/trello/1/tokens/token/webhooks",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-webhooks-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "postTokensWebhook",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getTokensWebhook": {
      "provider_intent": "getTokensWebhook",
      "provider_alias_intent": "/1/tokens/token/webhooks/idwebhook",
      "text": "Get a Webhook belonging to a Token 🚧",
      "category": "Tokens",
      "method": "GET",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Retrieve a webhook created with a Token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/webhooks/{idWebhook}",
        "alias_endpoint": "/trello/1/tokens/token/webhooks/idwebhook",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-webhooks-idwebhook-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getTokensWebhook",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteTokensWebhook": {
      "provider_intent": "deleteTokensWebhook",
      "provider_alias_intent": "/1/tokens/token/webhooks/idwebhook",
      "text": "Update a Webhook created by Token 🚧",
      "category": "Tokens",
      "method": "PUT",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "A description to be displayed when retrieving information about the webhook."
        },
        "callbackURL": {
          "type": "string",
          "text": "The URL that the webhook should POST information to. Format - url"
        },
        "idModel": {
          "type": "string",
          "text": "ID of the object that the webhook is on. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "path": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a Webhook created by Token",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/webhooks/{idWebhook}",
        "alias_endpoint": "/trello/1/tokens/token/webhooks/idwebhook",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-webhooks-idwebhook-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "deleteTokensWebhook",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putTokensWebhook": {
      "provider_intent": "putTokensWebhook",
      "provider_alias_intent": "/1/tokens/token/webhooks/idwebhook",
      "text": "Delete a Webhook created by Token 🚧",
      "category": "Tokens",
      "method": "DELETE",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "d": {
          "type": ""
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        },
        "idWebhook": {
          "type": "string",
          "text": "ID of the Webhooks to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a webhook created with given token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/webhooks/{idWebhook}",
        "alias_endpoint": "/trello/1/tokens/token/webhooks/idwebhook",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-webhooks-idwebhook-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "putTokensWebhook",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteToken": {
      "provider_intent": "deleteToken",
      "provider_alias_intent": "/1/tokens/token/",
      "text": "Delete a Token 🚧",
      "category": "Tokens",
      "method": "DELETE",
      "type": "API",
      "params": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "token": {
          "type": "string",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a token.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/tokens/{token}/",
        "alias_endpoint": "/trello/1/tokens/token/",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-tokens/#api-tokens-token-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "deleteToken",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postWebhook": {
      "provider_intent": "postWebhook",
      "provider_alias_intent": "/1/webhooks",
      "text": "Create a Webhook 🚧",
      "category": "Webhooks",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "A string with a length from 0 to 16384. Min length - 0; Max length - 16384."
        },
        "callbackURL": {
          "type": "string",
          "text": "A valid URL that is reachable with a HEAD and POST request. Format",
          "required": true,
          "enum": [
            "url"
          ]
        },
        "idModel": {
          "type": "string",
          "text": "ID of the model to be monitored. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$."
          ]
        },
        "active": {
          "type": "boolean",
          "text": "Determines whether the webhook is active and sending POST requests.",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new webhook.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/webhooks",
        "alias_endpoint": "/trello/1/webhooks",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-webhooks/#api-webhooks-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "postWebhook",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getWebhooks": {
      "provider_intent": "getWebhooks",
      "provider_alias_intent": "/1/webhooks/id",
      "text": "Get a Webhook 🚧",
      "category": "Webhooks",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a webhook by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/webhooks/{id}",
        "alias_endpoint": "/trello/1/webhooks/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-webhooks/#api-webhooks-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getWebhooks",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putWebhooks": {
      "provider_intent": "putWebhooks",
      "provider_alias_intent": "/1/webhooks/id",
      "text": "Update a Webhook 🚧",
      "category": "Webhooks",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "A string with a length from 0 to 16384. Min length - 0; Max length - 16384."
        },
        "callbackURL": {
          "type": "string",
          "text": "A valid URL that is reachable with a HEAD and POST request. Format",
          "required": true,
          "enum": [
            "url"
          ]
        },
        "idModel": {
          "type": "string",
          "text": "ID of the model to be monitored. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$."
          ]
        },
        "active": {
          "type": "boolean",
          "text": "Determines whether the webhook is active and sending POST requests.",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a webhook by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/webhooks/{id}",
        "alias_endpoint": "/trello/1/webhooks/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-webhooks/#api-webhooks-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "putWebhooks",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteWebhooks": {
      "provider_intent": "deleteWebhooks",
      "provider_alias_intent": "/1/webhooks/id",
      "text": "Delete a Webhook 🚧",
      "category": "Webhooks",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a webhook by ID.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/webhooks/{id}",
        "alias_endpoint": "/trello/1/webhooks/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-webhooks/#api-webhooks-id-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "deleteWebhooks",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getWebhooksField": {
      "provider_intent": "getWebhooksField",
      "provider_alias_intent": "/1/webhooks/id/field",
      "text": "Get a field on a Webhook 🚧",
      "category": "Webhooks",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "field": {
          "type": "string",
          "text": "Field to retrieve. One of - active; callbackURL; description; idModel; Valid values - active; callbackURL; description; idModel; consecutiveFailures; firstConsecutiveFailDate"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "ID of the webhook to retrieve. Pattern - ^[0-9a-fA-F]{24}$"
        },
        "field": {
          "type": "string",
          "text": "Field to retrieve. One of - active; callbackURL; description; idModel; Valid values - active; callbackURL; description; idModel; consecutiveFailures; firstConsecutiveFailDate"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a field on a Webhook.",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/webhooks/{id}/{field}",
        "alias_endpoint": "/trello/1/webhooks/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-webhooks/#api-webhooks-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 1,
      "intent": "getWebhooksField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMember": {
      "provider_intent": "getMember",
      "provider_alias_intent": "/1/members/id",
      "text": "Get a Member",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "actions": {
          "type": "string",
          "text": "See the Actions Nested Resource"
        },
        "boards": {
          "type": "string",
          "text": "See the Boards Nested Resource"
        },
        "boardBackgrounds": {
          "type": "string",
          "enum": [
            "all",
            "custom",
            "default",
            "none",
            "premium"
          ]
        },
        "boardsInvited": {
          "type": "string",
          "text": "all or a comma-separated list of",
          "enum": [
            "closed",
            "members",
            "open",
            "organization",
            "pinned",
            "public",
            "starred",
            "unpinned"
          ]
        },
        "boardsInvited_fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields. Valid values - id/name/desc/descData/closed/idMemberCreator/idOrganization/pinned/url/shortUrl/prefs/labelNames/starred/limits/memberships/enterpriseOwned"
        },
        "boardStars": {
          "type": "boolean",
          "text": "Whether to return the boardStars or not",
          "enum": [
            true,
            false
          ]
        },
        "cards": {
          "type": "string",
          "text": "See the Cards Nested Resource for additional options",
          "enum": [
            "all",
            "none"
          ]
        },
        "customBoardBackgrounds": {
          "type": "string",
          "enum": [
            "all",
            "none"
          ]
        },
        "customEmoji": {
          "type": "string",
          "enum": [
            "all",
            "none"
          ]
        },
        "customStickers": {
          "type": "string",
          "enum": [
            "all",
            "none"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields. Valid values - id"
        },
        "notifications": {
          "type": "string",
          "text": "See the Notifications Nested Resource"
        },
        "organizations": {
          "type": "string",
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ]
        },
        "organization_fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        },
        "organization_paid_account": {
          "type": "boolean",
          "text": "Whether or not to include paid account information in the returned workspace object",
          "enum": [
            true,
            false
          ]
        },
        "organizationsInvited": {
          "type": "string",
          "enum": [
            "all",
            "members",
            "none",
            "public"
          ]
        },
        "organizationsInvited_fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        },
        "paid_account": {
          "type": "boolean",
          "text": "Whether or not to include paid account information in the returned member object",
          "enum": [
            true,
            false
          ]
        },
        "savedSearches": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "tokens": {
          "type": "string",
          "enum": [
            "all",
            "none"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}",
        "alias_endpoint": "/trello/1/members/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putMember": {
      "provider_intent": "putMember",
      "provider_alias_intent": "/1/members/id",
      "text": "Update a Member",
      "category": "Members",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "fullName": {
          "type": "string",
          "text": "New name for the member. Cannot begin or end with a space."
        },
        "initials": {
          "type": "string",
          "text": "New initials for the member. 1-4 characters long. Min length - 1 . Max length - 4"
        },
        "username": {
          "type": "string",
          "text": "New username for the member. At least 3 characters long only lowercase letters; underscores; and numbers. Must be unique."
        },
        "bio": {
          "type": "string"
        },
        "avatarSource": {
          "type": "string",
          "enum": [
            "gravatar",
            "none",
            "upload"
          ]
        },
        "prefs/colorBlind": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "prefs/locale": {
          "type": "string"
        },
        "prefs/minutesBetweenSummaries": {
          "type": "integer",
          "text": "-1 for disabled . 1 or 60. Format - int32"
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a Member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}",
        "alias_endpoint": "/trello/1/members/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersField": {
      "provider_intent": "getMembersField",
      "provider_alias_intent": "/1/members/id/field",
      "text": "Get a field on a Member",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member .Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "One of the member fields. Valid values - id",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member .Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "field": {
          "type": "string",
          "text": "One of the member fields. Valid values - id",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a particular property of a member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/{field}",
        "alias_endpoint": "/trello/1/members/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersActions": {
      "provider_intent": "getMembersActions",
      "provider_alias_intent": "/1/members/id/actions",
      "text": "Get a Member's Actions",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "A comma-separated list of action types."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the actions for a member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/actions",
        "alias_endpoint": "/trello/1/members/id/actions",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-actions-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersActions",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoardBackgrounds": {
      "provider_intent": "getMembersBoardBackgrounds",
      "provider_alias_intent": "/1/members/id/boardbackgrounds",
      "text": "Get Member's custom Board backgrounds",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "enum": [
            "all",
            "custom",
            "default",
            "none",
            "premium"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's custom board backgrounds",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardBackgrounds",
        "alias_endpoint": "/trello/1/members/id/boardbackgrounds",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardbackgrounds-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoardBackgrounds",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersBoardBackgrounds": {
      "provider_intent": "postMembersBoardBackgrounds",
      "provider_alias_intent": "/1/members/id/boardbackgrounds",
      "text": "Upload new boardBackground for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "string",
          "text": "Format-binary",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Upload a new boardBackground",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardBackgrounds",
        "alias_endpoint": "/trello/1/members/id/boardbackgrounds",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardbackgrounds-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersBoardBackgrounds",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoardBackground": {
      "provider_intent": "getMembersBoardBackground",
      "provider_alias_intent": "/1/members/id/boardbackgrounds/idbackground",
      "text": "Get a boardBackground of a Member",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of",
          "enum": [
            "brightness",
            "fullSizeUrl",
            "scaled",
            "tile",
            "all"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/boardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardbackgrounds-idbackground-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putMembersBoardBackground": {
      "provider_intent": "putMembersBoardBackground",
      "provider_alias_intent": "/1/members/id/boardbackgrounds/idbackground",
      "text": "Update a Member's custom Board background",
      "category": "Members",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "brightness": {
          "type": "string",
          "text": "dark/light/unknown"
        },
        "tile": {
          "type": "boolean",
          "text": "Whether the background should be tiled",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/boardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardbackgrounds-idbackground-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putMembersBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteMembersBoardBackground": {
      "provider_intent": "deleteMembersBoardBackground",
      "provider_alias_intent": "/1/members/id/boardbackgrounds/idbackground",
      "text": "Delete a Member's custom Board background",
      "category": "Members",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the board background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/boardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardbackgrounds-idbackground-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteMembersBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoardStars": {
      "provider_intent": "getMembersBoardStars",
      "provider_alias_intent": "/1/members/id/boardstars",
      "text": "Get a Member's boardStars",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List a member's board stars",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardStars",
        "alias_endpoint": "/trello/1/members/id/boardstars",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardstars-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoardStars",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersBoardStars": {
      "provider_intent": "postMembersBoardStars",
      "provider_alias_intent": "/1/members/id/boardstars",
      "text": "Create Star for Board",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "idBoard": {
          "type": "string",
          "text": "The ID of the board to star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the newly starred board. One of top or bottom or a positive float.",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Star a new board on behalf of a Member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardStars",
        "alias_endpoint": "/trello/1/members/id/boardstars",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardstars-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersBoardStars",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoardStar": {
      "provider_intent": "getMembersBoardStar",
      "provider_alias_intent": "/1/members/id/boardstars/idstar",
      "text": "Get a boardStar of Member",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific boardStar",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardStars/{idStar}",
        "alias_endpoint": "/trello/1/members/id/boardstars/idstar",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardstars-idstar-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoardStar",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putMembersBoardStar": {
      "provider_intent": "putMembersBoardStar",
      "provider_alias_intent": "/1/members/id/boardstars/idstar",
      "text": "Update the position of a boardStar of Member",
      "category": "Members",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "pos": {
          "type": "string|number",
          "text": "New position for the starred board. one of top or bottom or a positive float.",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update the position of a starred board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardStars/{idStar}",
        "alias_endpoint": "/trello/1/members/id/boardstars/idstar",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardstars-idstar-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putMembersBoardStar",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteMembersBoardStar": {
      "provider_intent": "deleteMembersBoardStar",
      "provider_alias_intent": "/1/members/id/boardstars/idstar",
      "text": "Delete Star for Board",
      "category": "Members",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idStar": {
          "type": "string",
          "text": "The ID of the board star. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Unstar a board",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardStars/{idStar}",
        "alias_endpoint": "/trello/1/members/id/boardstars/idstar",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardstars-idstar-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteMembersBoardStar",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoards": {
      "provider_intent": "getMembersBoards",
      "provider_alias_intent": "/1/members/id/boards",
      "text": "Get Boards that Member belongs to",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "all or a comma-separated list of - closed/members/open/organization/public/starred/all",
          "enum": [
            "all"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields. Valid values - id/name/desc/descData/closed/idMemberCreator/idOrganization/pinned/url/shortUrl/prefs/labelNames/starred/limits/memberships/enterpriseOwned"
        },
        "lists": {
          "type": "string",
          "text": "Which lists to include with the boards",
          "enum": [
            "all",
            "closed",
            "none",
            "open"
          ]
        },
        "organization": {
          "type": "boolean",
          "text": "Whether to include the Organization object with the Boards",
          "enum": [
            true,
            false
          ]
        },
        "organization_fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Lists the boards that the user is a member of",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boards",
        "alias_endpoint": "/trello/1/members/id/boards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersBoardsInvited": {
      "provider_intent": "getMembersBoardsInvited",
      "provider_alias_intent": "/1/members/id/boardsinvited",
      "text": "Get Boards the Member has been invited to",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields. Valid values - id/name/desc/descData/closed/idMemberCreator/idOrganization/pinned/url/shortUrl/prefs/labelNames/starred/limits/memberships/enterpriseOwned"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the boards the member has been invited to",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/boardsInvited",
        "alias_endpoint": "/trello/1/members/id/boardsinvited",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-boardsinvited-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersBoardsInvited",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCards": {
      "provider_intent": "getMembersCards",
      "provider_alias_intent": "/1/members/id/cards",
      "text": "Get Cards the Member is on",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "enum": [
            "all",
            "closed",
            "open",
            "visible"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Gets the cards a member is on",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/cards",
        "alias_endpoint": "/trello/1/members/id/cards",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-cards-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCards",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomBoardBackgrounds": {
      "provider_intent": "getMembersCustomBoardBackgrounds",
      "provider_alias_intent": "/1/members/id/customboardbackgrounds",
      "text": "Get a Member's custom Board Backgrounds",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's custom board backgrounds",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customBoardBackgrounds",
        "alias_endpoint": "/trello/1/members/id/customboardbackgrounds",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customboardbackgrounds-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomBoardBackgrounds",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersCustomBoardBackgrounds": {
      "provider_intent": "postMembersCustomBoardBackgrounds",
      "provider_alias_intent": "/1/members/id/customboardbackgrounds",
      "text": "Create a new custom Board Background",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "string",
          "text": "Format-binary",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Upload a new custom board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customBoardBackgrounds",
        "alias_endpoint": "/trello/1/members/id/customboardbackgrounds",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customboardbackgrounds-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersCustomBoardBackgrounds",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomBoardBackground": {
      "provider_intent": "getMembersCustomBoardBackground",
      "provider_alias_intent": "/1/members/id/customboardbackgrounds/idbackground",
      "text": "Get custom Board Background of Member",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific custom board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customBoardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/customboardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customboardbackgrounds-idbackground-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putMembersCustomBoardBackground": {
      "provider_intent": "putMembersCustomBoardBackground",
      "provider_alias_intent": "/1/members/id/customboardbackgrounds/idbackground",
      "text": "Update custom Board Background of Member",
      "category": "Members",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "brightness": {
          "type": "string",
          "enum": [
            "dark",
            "light",
            "unknown"
          ]
        },
        "tile": {
          "type": "boolean",
          "text": "Whether to tile the background",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a specific custom board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customBoardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/customboardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customboardbackgrounds-idbackground-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putMembersCustomBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteMembersCustomBoardBackground": {
      "provider_intent": "deleteMembersCustomBoardBackground",
      "provider_alias_intent": "/1/members/id/customboardbackgrounds/idbackground",
      "text": "Delete custom Board Background of Member",
      "category": "Members",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idBackground": {
          "type": "string",
          "text": "The ID of the custom background. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a specific custom board background",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customBoardBackgrounds/{idBackground}",
        "alias_endpoint": "/trello/1/members/id/customboardbackgrounds/idbackground",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customboardbackgrounds-idbackground-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteMembersCustomBoardBackground",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomEmojis": {
      "provider_intent": "getMembersCustomEmojis",
      "provider_alias_intent": "/1/members/id/customemoji",
      "text": "Get a Member's customEmojis",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Member's uploaded custom Emojis",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customEmoji",
        "alias_endpoint": "/trello/1/members/id/customemoji",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customemoji-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomEmojis",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersCustomEmojis": {
      "provider_intent": "postMembersCustomEmojis",
      "provider_alias_intent": "/1/members/id/customemoji",
      "text": "Create custom Emoji for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "string",
          "text": "Format-binary",
          "required": true
        },
        "name": {
          "type": "string",
          "text": "Name for the emoji. 2 - 64 characters .Min length - 2 . Max length - 64",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new custom Emoji",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customEmoji",
        "alias_endpoint": "/trello/1/members/id/customemoji",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customemoji-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersCustomEmojis",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomEmoji": {
      "provider_intent": "getMembersCustomEmoji",
      "provider_alias_intent": "/1/members/id/customemoji/idemoji",
      "text": "Get a Member's custom Emoji",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idEmoji": {
          "type": "string",
          "text": "The ID of the custom emoji. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of name/url/all",
          "enum": [
            "all"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idEmoji": {
          "type": "string",
          "text": "The ID of the custom emoji. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Member's custom Emoji",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customEmoji/{idEmoji}",
        "alias_endpoint": "/trello/1/members/id/customemoji/idemoji",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customemoji-idemoji-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomEmoji",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomStickers": {
      "provider_intent": "getMembersCustomStickers",
      "provider_alias_intent": "/1/members/id/customstickers",
      "text": "Get Member's custom Stickers",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern",
          "required": true,
          "enum": [
            "^[0-9a-fA-F]{24}$"
          ]
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Member's uploaded stickers",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customStickers",
        "alias_endpoint": "/trello/1/members/id/customstickers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customstickers-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomStickers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersCustomStickers": {
      "provider_intent": "postMembersCustomStickers",
      "provider_alias_intent": "/1/members/id/customstickers",
      "text": "Create custom Sticker for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "file": {
          "type": "string",
          "text": "Format-binary",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Upload a new custom sticker",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customStickers",
        "alias_endpoint": "/trello/1/members/id/customstickers",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customstickers-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersCustomStickers",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersCustomSticker": {
      "provider_intent": "getMembersCustomSticker",
      "provider_alias_intent": "/1/members/id/customstickers/idsticker",
      "text": "Get a Member's custom Sticker",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the uploaded sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of scaled/url/all",
          "enum": [
            "all"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the uploaded sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Member's custom Sticker",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customStickers/{idSticker}",
        "alias_endpoint": "/trello/1/members/id/customstickers/idsticker",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customstickers-idsticker-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersCustomSticker",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteMembersCustomSticker": {
      "provider_intent": "deleteMembersCustomSticker",
      "provider_alias_intent": "/1/members/id/customstickers/idsticker",
      "text": "Delete a Member's custom Sticker",
      "category": "Members",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the uploaded sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "idSticker": {
          "type": "string",
          "text": "The ID of the uploaded sticker. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a Member's custom Sticker",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/customStickers/{idSticker}",
        "alias_endpoint": "/trello/1/members/id/customstickers/idsticker",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-customstickers-idsticker-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteMembersCustomSticker",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersNotifications": {
      "provider_intent": "getMembersNotifications",
      "provider_alias_intent": "/1/members/id/notifications",
      "text": "Get Member's Notifications",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "entities": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "display": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "filter": {
          "type": "string",
          "enum": [
            "all",
            "none"
          ]
        },
        "read_filter": {
          "type": "string",
          "enum": [
            "all",
            "read",
            "unread"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of notification fields",
          "enum": [
            "all",
            "none"
          ]
        },
        "limit": {
          "type": "integer",
          "text": "Max 1000. 50. Format -  int32"
        },
        "page": {
          "type": "integer",
          "text": "Max 100. 0. Format - int32"
        },
        "before": {
          "type": "string",
          "text": "A notification ID"
        },
        "since": {
          "type": "string",
          "text": "A notification ID"
        },
        "memberCreator": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "memberCreator_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields",
          "enum": [
            "avatarHash",
            "fullName",
            "initials",
            "username"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's notifications",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/notifications",
        "alias_endpoint": "/trello/1/members/id/notifications",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-notifications-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersNotifications",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersOrganizations": {
      "provider_intent": "getMembersOrganizations",
      "provider_alias_intent": "/1/members/id/organizations",
      "text": "Get Member's Organizations",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "filter": {
          "type": "string",
          "text": "one of all/members/none/public(Note - members filters to only private Workspaces)",
          "enum": [
            "all"
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        },
        "paid_account": {
          "type": "boolean",
          "text": "Whether or not to include paid account information in the returned workspace object",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's Workspaces",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/organizations",
        "alias_endpoint": "/trello/1/members/id/organizations",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-organizations-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersOrganizations",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersOrganizationsInvited": {
      "provider_intent": "getMembersOrganizationsInvited",
      "provider_alias_intent": "/1/members/id/organizationsinvited",
      "text": "Get Organizations a Member has been invited to",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a member's Workspaces they have been invited to",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/organizationsInvited",
        "alias_endpoint": "/trello/1/members/id/organizationsinvited",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-organizationsinvited-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersOrganizationsInvited",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersSavedSearches": {
      "provider_intent": "getMembersSavedSearches",
      "provider_alias_intent": "/1/members/id/savedsearches",
      "text": "Get Member's saved searched",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List the saved searches of a Member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/savedSearches",
        "alias_endpoint": "/trello/1/members/id/savedsearches",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-savedsearches-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersSavedSearches",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersSavedSearches": {
      "provider_intent": "postMembersSavedSearches",
      "provider_alias_intent": "/1/members/id/savedsearches",
      "text": "Create saved Search for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name for the saved search",
          "required": true
        },
        "query": {
          "type": "string",
          "text": "The search query",
          "required": true
        },
        "pos": {
          "type": "string|number",
          "text": "The position of the saved search one of top or bottom or a positive float.",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a saved search",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/savedSearches",
        "alias_endpoint": "/trello/1/members/id/savedsearches",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-savedsearches-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersSavedSearches",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersSavedSearche": {
      "provider_intent": "getMembersSavedSearche",
      "provider_alias_intent": "/1/members/id/savedsearches/idsearch",
      "text": "Get a saved search",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a saved search",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/savedSearches/{idSearch}",
        "alias_endpoint": "/trello/1/members/id/savedsearches/idsearch",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-savedsearches-idsearch-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersSavedSearche",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putMembersSavedSearche": {
      "provider_intent": "putMembersSavedSearche",
      "provider_alias_intent": "/1/members/id/savedsearches/idsearch",
      "text": "Update a saved search",
      "category": "Members",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "The name for the saved search"
        },
        "query": {
          "type": "string",
          "text": "The new search query"
        },
        "pos": {
          "type": "string",
          "text": "new position for saved search one of top or bottom or a positive float."
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update a saved search",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/savedSearches/{idSearch}",
        "alias_endpoint": "/trello/1/members/id/savedsearches/idsearch",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-savedsearches-idsearch-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putMembersSavedSearche",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "deleteMembersSavedSearche": {
      "provider_intent": "deleteMembersSavedSearche",
      "provider_alias_intent": "/1/members/id/savedsearches/idsearch",
      "text": "Delete a saved search",
      "category": "Members",
      "method": "DELETE",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        },
        "idSearch": {
          "type": "string",
          "text": "The ID of the saved search to delete",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Delete a saved search",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/savedSearches/{idSearch}",
        "alias_endpoint": "/trello/1/members/id/savedsearches/idsearch",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-savedsearches-idsearch-delete"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "deleteMembersSavedSearche",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getMembersTokens": {
      "provider_intent": "getMembersTokens",
      "provider_alias_intent": "/1/members/id/tokens",
      "text": "Get Member's Tokens",
      "category": "Members",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "webhooks": {
          "type": "boolean",
          "text": "Whether to include webhooks",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "List a members app tokens",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/tokens",
        "alias_endpoint": "/trello/1/members/id/tokens",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-tokens-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getMembersTokens",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersAvatar": {
      "provider_intent": "postMembersAvatar",
      "provider_alias_intent": "/1/members/id/avatar",
      "text": "Create Avatar for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "file": {
          "type": "string",
          "text": "Format-binary",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Create a new avatar for a member",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/avatar",
        "alias_endpoint": "/trello/1/members/id/avatar",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-avatar-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersAvatar",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postMembersOneTimeMessagesDismissed": {
      "provider_intent": "postMembersOneTimeMessagesDismissed",
      "provider_alias_intent": "/1/members/id/onetimemessagesdismissed",
      "text": "Dismiss a message for Member",
      "category": "Members",
      "method": "POST",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "value": {
          "type": "string",
          "text": "The message to dismiss. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID or username of the member. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Dismiss a message",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/members/{id}/oneTimeMessagesDismissed",
        "alias_endpoint": "/trello/1/members/id/onetimemessagesdismissed",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-members/#api-members-id-onetimemessagesdismissed-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postMembersOneTimeMessagesDismissed",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotifications": {
      "provider_intent": "getNotifications",
      "provider_alias_intent": "/1/notifications/id",
      "text": "Get a Notification",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "board": {
          "type": "boolean",
          "text": "Whether to include the board object",
          "enum": [
            true,
            false
          ]
        },
        "board_fields": {
          "type": "string",
          "text": "all or a comma-separated list of board fields. Valid values - id/name/desc/descData/closed/idMemberCreator/idOrganization/pinned/\nurl/shortUrl/prefs/labelNames/starred/limits/memberships/enterpriseOwned"
        },
        "card": {
          "type": "boolean",
          "text": "Whether to include the card object",
          "enum": [
            true,
            false
          ]
        },
        "card_fields": {
          "type": "string",
          "text": "all or a comma-separated list of card fields. Valid values - id/address/badges/checkItemStates/closed/coordinates/creationMethod/dueComplete/dateLastActivity/desc/descData/ due/dueReminder/email/idBoard/idChecklists/idLabels/dList/idMembers/idMembersVoted/idShort/idAttachmentCover/labels/limits/locationName/manualCoverAttachment/name/pos/shortLink/ shortUrl/subscribed/url/cover/isTemplate"
        },
        "display": {
          "type": "boolean",
          "text": "Whether to include the display object with the results",
          "enum": [
            true,
            false
          ]
        },
        "entities": {
          "type": "boolean",
          "text": "Whether to include the entities object with the results",
          "enum": [
            true,
            false
          ]
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of notification fields. Valid values - id/unread/type/date/dateRead/data/card/board/idMemberCreator/idAction/reactions"
        },
        "list": {
          "type": "boolean",
          "text": "Whether to include the list object",
          "enum": [
            true,
            false
          ]
        },
        "member": {
          "type": "boolean",
          "text": "Whether to include the member object",
          "enum": [
            true,
            false
          ]
        },
        "member_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields. Valid values - id"
        },
        "memberCreator": {
          "type": "boolean",
          "text": "Whether to include the member object of the creator",
          "enum": [
            true,
            false
          ]
        },
        "memberCreator_fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields. Valid values - id"
        },
        "organization": {
          "type": "boolean",
          "text": "Whether to include the organization object",
          "enum": [
            true,
            false
          ]
        },
        "organization_fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id/name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a Notification",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}",
        "alias_endpoint": "/trello/1/notifications/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotifications",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putNotifications": {
      "provider_intent": "putNotifications",
      "provider_alias_intent": "/1/notifications/id",
      "text": "Update a Notification's read status",
      "category": "Notification",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "unread": {
          "type": "boolean",
          "text": "Whether the notification should be marked as read or not",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update the read status of a notification",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}",
        "alias_endpoint": "/trello/1/notifications/id",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putNotifications",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsField": {
      "provider_intent": "getNotificationsField",
      "provider_alias_intent": "/1/notifications/id/field",
      "text": "Get a field of a Notification",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A notification field. Valid values - id/unread/type/date/dateRead/data/card/board/idMemberCreator/idAction/reactions",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "A notification field. Valid values - id/unread/type/date/dateRead/data/card/board/idMemberCreator/idAction/reactions",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get a specific property of a notification",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/{field}",
        "alias_endpoint": "/trello/1/notifications/id/field",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-field-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsField",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "postNotificationsAllRead": {
      "provider_intent": "postNotificationsAllRead",
      "provider_alias_intent": "/1/notifications/all/read",
      "text": "Mark all Notifications as read",
      "category": "Notification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "read": {
          "type": "boolean",
          "text": "Boolean to specify whether to mark as read or unread (defaults to true",
          "enum": [
            true,
            false
          ]
        },
        "marking as read)": {
          "type": "true/false"
        },
        "ids": {
          "type": "Array",
          "text": "A comma-seperated list of IDs. Allows specifying an array of notification IDs to change the read state for. This will become useful as we add grouping of notifications to the UI with a single button to mark all notifications in the group as read/unread."
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Mark all notifications as read",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/all/read",
        "alias_endpoint": "/trello/1/notifications/all/read",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-all-read-post"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "postNotificationsAllRead",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "putNotificationsUnread": {
      "provider_intent": "putNotificationsUnread",
      "provider_alias_intent": "/1/notifications/id/unread",
      "text": "Update Notification's read status",
      "category": "Notification",
      "method": "PUT",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "value": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Update Notification's read status",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/unread",
        "alias_endpoint": "/trello/1/notifications/id/unread",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-unread-put"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "putNotificationsUnread",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsBoard": {
      "provider_intent": "getNotificationsBoard",
      "provider_alias_intent": "/1/notifications/id/board",
      "text": "Get the Board a Notification is on",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of boardfields. Valid values - id/name/desc/descData/closed/idMemberCreator/idOrganization/pinned/url/shortUrl/prefs/labelNames/starred/limits/memberships/enterpriseOwned",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the board a notification is associated with",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/board",
        "alias_endpoint": "/trello/1/notifications/id/board",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-board-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsBoard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsCard": {
      "provider_intent": "getNotificationsCard",
      "provider_alias_intent": "/1/notifications/id/card",
      "text": "Get the Card a Notification is on",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of card fields. Valid values -id/address/badges/checkItemStates/closed/coordinates/creationMethod/dueComplete/dateLastActivity/desc/descData/due/dueReminder/email/idBoard/idChecklists/idLabels/idList/idMembers/idMembersVoted/idShort/idAttachmentCover/labels/limits/locationName/manualCoverAttachment/name/pos/shortLink/shortUrl/subscribed/url/cover/isTemplate",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the card a notification is associated with",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/card",
        "alias_endpoint": "/trello/1/notifications/id/card",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-card-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsCard",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsList": {
      "provider_intent": "getNotificationsList",
      "provider_alias_intent": "/1/notifications/id/list",
      "text": "Get the List a Notification is on",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of list fields. Valid values - id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the list a notification is associated with",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/list",
        "alias_endpoint": "/trello/1/notifications/id/list",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-list-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsList",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsMember": {
      "provider_intent": "getNotificationsMember",
      "provider_alias_intent": "/1/notifications/id/member",
      "text": "Get the Member a Notification is about (not the creator)",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields. Valid values - id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the member (not the creator) a notification is about",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/member",
        "alias_endpoint": "/trello/1/notifications/id/member",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-member-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsMember",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsMemberCreator": {
      "provider_intent": "getNotificationsMemberCreator",
      "provider_alias_intent": "/1/notifications/id/membercreator",
      "text": "Get the Member who created the Notification",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of member fields. Valid values - id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the member who created the notification",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/memberCreator",
        "alias_endpoint": "/trello/1/notifications/id/membercreator",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-membercreator-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsMemberCreator",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "getNotificationsOrganization": {
      "provider_intent": "getNotificationsOrganization",
      "provider_alias_intent": "/1/notifications/id/organization",
      "text": "Get a Notification's associated Organization",
      "category": "Notification",
      "method": "GET",
      "type": "API",
      "params": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        },
        "fields": {
          "type": "string",
          "text": "all or a comma-separated list of organization fields. Valid values - id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "id": {
          "type": "string",
          "text": "The ID of the notification. Pattern - ^[0-9a-fA-F]{24}$",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "1",
        "auth": [],
        "description": "Get the organization a notification is associated with",
        "rate_limit": [],
        "api_endpoint": "https://api.trello.com/1/notifications/{id}/organization",
        "alias_endpoint": "/trello/1/notifications/id/organization",
        "api_ref": "https://developer.atlassian.com/cloud/trello/rest/api-group-notifications/#api-notifications-id-organization-get"
      },
      "auth": {
        "query": [
          "key",
          "token"
        ]
      },
      "response_type": "",
      "wip": 0,
      "intent": "getNotificationsOrganization",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}