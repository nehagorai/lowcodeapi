{
  "routes": {
    "wordpress__rest__v1.3__batch___get": {
      "provider_intent": "wordpress__rest__v1.3__batch___get",
      "provider_alias_intent": "/rest/v1.3/batch",
      "text": "Get data from multiple endpoints",
      "category": "Batch",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "urls": {
          "type": "array",
          "text": "Array of endpoints to call.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.3",
        "auth": [],
        "description": "Run several GET endpoints and return them as an array. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.3/batch",
        "alias_endpoint": "/wordpress/rest/v1.3/batch",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/batch/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id",
      "text": "Get a single comment",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comments/%24comment_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id",
      "text": "Edit a comment",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/comments/%24comment_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments",
      "text": "Get a list of recent comments",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of comments to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of comments",
          "required": true
        },
        "order": {
          "type": "string"
        },
        "hierarchical": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "after": {
          "type": "string",
          "text": "Return comments dated on or after the specified datetime",
          "required": true
        },
        "before": {
          "type": "string",
          "text": "Return comments dated on or before the specified datetime",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "text": ".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of recent comments.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comments/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__replies___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__replies___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/replies",
      "text": "Get a list of recent comments on a post",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of comments to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of comments",
          "required": true
        },
        "order": {
          "type": "string"
        },
        "hierarchical": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "after": {
          "type": "string",
          "text": "Return comments dated on or after the specified datetime",
          "required": true
        },
        "before": {
          "type": "string",
          "text": "Return comments dated on or before the specified datetime",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "text": ".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of recent comments on a post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/replies",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/replies",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post_ID/replies/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__replies__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__replies__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/replies/new",
      "text": "Create a comment on a post",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a comment on a post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/replies/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/replies/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/replies/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__replies__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__replies__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/replies/new",
      "text": "Reply to a comment with another comment",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a comment as a reply to another comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/replies/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/replies/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/comments/%24comment_ID/replies/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/delete",
      "text": "Delete a comment",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/comments/%24comment_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comment-counts___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comment-counts___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comment-counts",
      "text": "Get comment counts for all statuses",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "post_id": {
          "type": "number",
          "text": "post ID for filtering the comment counts by post.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get comment counts for each available status",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comment-counts",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comment-counts",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comment-counts/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comment-history__comment_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comment-history__comment_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comment-history/comment_id",
      "text": "Get comment's audit history",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the audit history for given comment",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comment-history/$comment_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comment-history/comment_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comment-history/%24comment_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__likes___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__likes___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/likes",
      "text": "Get the likes for a comment",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the likes for a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/likes",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/likes",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comments/%24comment_ID/likes/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/likes/new",
      "text": "Like a comment.",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Like a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/likes/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/likes/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/comments/%24comment_ID/likes/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/likes/mine/delete",
      "text": "Remove your like from a comment",
      "category": "Comment",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Remove your like from a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/likes/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/likes/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/comments/%24comment_ID/likes/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__mine__deletee___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__comments__comment_id__likes__mine__deletee___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/comments/comment_id/likes/mine/deletee",
      "text": "Get your like status for a comment",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "comment_ID": {
          "type": "number",
          "text": "The comment ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get your like status for a comment.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/comments/$comment_ID/likes/mine/deletee",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/comments/comment_id/likes/mine/deletee",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/comments/%24comment_ID/likes/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__kill-switch__comment-likes___get": {
      "provider_intent": "wordpress__rest__v1.1__kill-switch__comment-likes___get",
      "provider_alias_intent": "/rest/v1.1/kill-switch/comment-likes",
      "text": "Kill comment likes",
      "category": "Comment",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Kill comment likes",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/kill-switch/comment-likes",
        "alias_endpoint": "/wordpress/rest/v1.1/kill-switch/comment-likes",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/kill-switch/comment-likes/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__follows___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__follows___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/follows",
      "text": "Get followers in reverse order for site",
      "category": "Follow",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "page": {
          "type": "number",
          "text": "page number Default",
          "required": true,
          "enum": [
            "1"
          ]
        },
        "number": {
          "type": "number",
          "text": "number of followers to return Default",
          "required": true,
          "enum": [
            "20."
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "List a site's followers in reverse chronological order.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/follows",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/follows",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/follows/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__follows__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__follows__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/follows/new",
      "text": "Follow a blog",
      "category": "Follow",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "source": {
          "type": "string",
          "text": "The source of the follow",
          "required": true
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Follow a blog.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/follows/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/follows/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/follows/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__follows__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__follows__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/follows/mine/delete",
      "text": "Unfollow a blog",
      "category": "Follow",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unfollow a blog.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/follows/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/follows/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/follows/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__follows__mine__delete___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__follows__mine__delete___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/follows/mine/delete",
      "text": "Get user's blog follow status",
      "category": "Follow",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get blog following status for the current user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/follows/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/follows/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/follows/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__freshly-pressed_____get": {
      "provider_intent": "wordpress__rest__v1.1__freshly-pressed_____get",
      "provider_alias_intent": "/rest/v1.1/freshly-pressed/",
      "text": "Get a list of Freshly Pressed posts",
      "category": "Freshly Pressed",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of posts to return"
        },
        "after": {
          "type": "string",
          "text": "Return posts picked on or after the specified datetime"
        },
        "before": {
          "type": "string",
          "text": "Return posts picked on or before the specified datetime"
        },
        "content_width": {
          "type": "number",
          "text": "When in context=display images/embeds in post content will be set to the desired maximum width"
        },
        "thumb_width": {
          "type": "number",
          "text": "Desired width of thumbnail images in pixels"
        },
        "thumb_height": {
          "type": "number",
          "text": "Desired height of thumbnail images in pixels."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of Freshly Pressed posts",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/freshly-pressed/",
        "alias_endpoint": "/wordpress/rest/v1.1/freshly-pressed/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/freshly-pressed/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__insights___get": {
      "provider_intent": "wordpress__rest__v1.1__insights___get",
      "provider_alias_intent": "/rest/v1.1/insights",
      "text": "Get accessible user stats metrics insights",
      "category": "Insights",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of stats metrics insights that the current user has access to.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/insights",
        "alias_endpoint": "/wordpress/rest/v1.1/insights",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/insights/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__insights__slug___get": {
      "provider_intent": "wordpress__rest__v1.1__insights__slug___get",
      "provider_alias_intent": "/rest/v1.1/insights/slug",
      "text": "Get raw data for a particular graph",
      "category": "Insights",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Report slug",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "unit": {
          "type": "string",
          "text": "By default weekly stats are provided in the data array"
        },
        "after": {
          "type": "number",
          "text": "Return data only since the specified UNIX time"
        },
        "before": {
          "type": "number",
          "text": "Return data collected on or before the specified UNIX time."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Report slug",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get raw data for a particular graph.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/insights/$slug",
        "alias_endpoint": "/wordpress/rest/v1.1/insights/slug",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/insights/%24slug/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__media__media_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__media__media_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/media/media_id/delete",
      "text": "Delete a piece of media",
      "category": "Media",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a piece of media.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/media/$media_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/media/media_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/media/%24media_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__media__media_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__media__media_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/media/media_id",
      "text": "Get a single media item (by ID)",
      "category": "Media",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single media item (by ID).",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/media/$media_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/media/media_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/media/%24media_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__media__media_id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__media__media_id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/media/media_id",
      "text": "Edit basic information about a media item",
      "category": "Media",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The media ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit basic information about a media item.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/media/$media_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/media/media_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/media/%24media_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__media_____get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__media_____get",
      "provider_alias_intent": "/rest/v1.1/sites/site/media/",
      "text": "Get a list of items in the media library",
      "category": "Media",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of media items to return"
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset"
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of posts"
        },
        "page_handle": {
          "type": "string",
          "text": "A page handle returned from a previous API call as a meta.next_page property"
        },
        "order": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "search": {
          "type": "string",
          "text": "Search query"
        },
        "post_ID": {
          "type": "number",
          "text": "Default is showing all items. The post where the media item is attached"
        },
        "mime_type": {
          "type": "string",
          "text": "Default is empty"
        },
        "after": {
          "type": "string",
          "text": "Return media items uploaded after the specified datetime"
        },
        "before": {
          "type": "string",
          "text": "Return media items uploaded before the specified datetime."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of items in the media library.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/media/",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/media/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/media/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__media__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__media__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/media/new",
      "text": "Upload a new piece of media",
      "category": "Media",
      "method": "POST",
      "type": "Upload",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "media": {
          "type": "file"
        },
        "media_urls": {
          "type": "array"
        },
        "attrs": {
          "type": "array",
          "text": "."
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Upload a new piece of media.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/media/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/media/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/media/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site__media__media_id__edit___post": {
      "provider_intent": "wordpress__rest__v1.2__sites__site__media__media_id__edit___post",
      "provider_alias_intent": "/rest/v1.2/sites/site/media/media_id/edit",
      "text": "Edit a media item",
      "category": "Media",
      "method": "POST",
      "type": "Upload",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The ID of the media item.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "parent_id": {
          "type": "number",
          "text": "ID of the post this media is attached to",
          "required": true
        },
        "title": {
          "type": "string",
          "text": "The file name"
        },
        "caption": {
          "type": "string",
          "text": "File caption"
        },
        "description": {
          "type": "string",
          "text": "Description of the file"
        },
        "alt": {
          "type": "string",
          "text": "Alternative text for image files"
        },
        "artist": {
          "type": "string",
          "text": "Artist metadata for the audio track"
        },
        "media": {
          "type": "file"
        },
        "album": {
          "type": "string",
          "text": "Album metadata for the audio track"
        },
        "attrs": {
          "type": "object",
          "text": "An Object of attributes are supported to assign to the media uploaded via the `media` or `media_url`"
        },
        "media_url": {
          "type": "string",
          "text": "An URL of the image to attach to a post."
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "media_ID": {
          "type": "number",
          "text": "The ID of the media item.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Edit a media item.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site/media/$media_ID/edit",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site/media/media_id/edit",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/media/%24media_ID/edit/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__menus__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__menus__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/menus/new",
      "text": "Create a new navigation menu",
      "category": "Menu",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a new navigation menu.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/menus/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/menus/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/menus/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__menus__menu_id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__menus__menu_id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/menus/menu_id",
      "text": "Update a navigation menu",
      "category": "Menu",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update a navigation menu.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/menus/$menu_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/menus/menu_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/menus/%24menu_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__menus__menu_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__menus__menu_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/menus/menu_id",
      "text": "Get a single navigation menu",
      "category": "Menu",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single navigation menu.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/menus/$menu_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/menus/menu_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/menus/%24menu_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__menus___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__menus___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/menus",
      "text": "Get a list of all navigation menus",
      "category": "Menu",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of all navigation menus.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/menus",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/menus",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/menus/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__menus__menu_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__menus__menu_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/menus/menu_id/delete",
      "text": "Delete a navigation menu",
      "category": "Menu",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "menu_id": {
          "type": "number",
          "text": "Menu ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a navigation menu",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/menus/$menu_id/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/menus/menu_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/menus/%24menu_id/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__notifications__seen___post": {
      "provider_intent": "wordpress__rest__v1.1__notifications__seen___post",
      "provider_alias_intent": "/rest/v1.1/notifications/seen",
      "text": "Update latest notification timestamp",
      "category": "Notification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Set the timestamp of the most recently seen notification.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/notifications/seen",
        "alias_endpoint": "/wordpress/rest/v1.1/notifications/seen",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/notifications/seen/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__notifications__read___post": {
      "provider_intent": "wordpress__rest__v1.1__notifications__read___post",
      "provider_alias_intent": "/rest/v1.1/notifications/read",
      "text": "Mark a set of notifications as read",
      "category": "Notification",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Mark a set of notifications as read.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/notifications/read",
        "alias_endpoint": "/wordpress/rest/v1.1/notifications/read",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/notifications/read/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id",
      "text": "Get a single post (by ID)",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number"
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single post (by ID).",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site__posts__post_id___post": {
      "provider_intent": "wordpress__rest__v1.2__sites__site__posts__post_id___post",
      "provider_alias_intent": "/rest/v1.2/sites/site/posts/post_id",
      "text": "Edit a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number"
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "autosave": {
          "type": "boolean",
          "text": "True if the post was saved automatically",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Edit a post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site/posts/$post_ID",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site/posts/post_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.2/post/sites/%24site/posts/%24post_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__slug-post_slug___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__slug-post_slug___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/slug-post_slug",
      "text": "Get a single post (by slug)",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_slug": {
          "type": "string",
          "text": "The post slug.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_slug": {
          "type": "string",
          "text": "The post slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single post (by slug).",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/slug:$post_slug",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/slug-post_slug",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/slug:%24post_slug/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts_____get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts_____get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/",
      "text": "Get a list of matching posts",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of posts to return"
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset"
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of posts"
        },
        "page_handle": {
          "type": "string",
          "text": "A page handle returned from a previous API call as a meta",
          "required": true
        },
        "order": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "after": {
          "type": "string",
          "text": "Return posts dated after the specified datetime",
          "required": true
        },
        "before": {
          "type": "string",
          "text": "Return posts dated before the specified datetime",
          "required": true
        },
        "modified_after": {
          "type": "string",
          "text": "Return posts modified after the specified datetime",
          "required": true
        },
        "modified_before": {
          "type": "string",
          "text": "Return posts modified before the specified datetime",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "Specify the tag name or slug"
        },
        "category": {
          "type": "string",
          "text": "Specify the category name or slug."
        },
        "term": {
          "type": "object",
          "text": "Specify comma-separated term slugs to search within indexed by taxonomy slug"
        },
        "type": {
          "type": "string",
          "text": "Specify the post type"
        },
        "parent_id": {
          "type": "number"
        },
        "include": {
          "type": "array",
          "text": "Includes the specified post ID(s) in the response",
          "required": true
        },
        "exclude": {
          "type": "array",
          "text": "Excludes the specified post ID(s) from the response",
          "required": true
        },
        "exclude_tree": {
          "type": "number",
          "text": "Excludes the specified post and all of its descendants from the response",
          "required": true
        },
        "status": {
          "type": "string"
        },
        "sticky": {
          "type": "string"
        },
        "author": {
          "type": "number",
          "text": "Author's user ID",
          "required": true
        },
        "search": {
          "type": "string",
          "text": "Search query",
          "required": true
        },
        "meta_key": {
          "type": "string",
          "text": "Metadata key that the post should contain",
          "required": true
        },
        "meta_value": {
          "type": "string",
          "text": "Metadata value that the post should contain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of matching posts. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site__posts__new___post": {
      "provider_intent": "wordpress__rest__v1.2__sites__site__posts__new___post",
      "provider_alias_intent": "/rest/v1.2/sites/site/posts/new",
      "text": "Create a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "autosave": {
          "type": "boolean",
          "text": "True if the post was saved automatically.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Create a post. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site/posts/new",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site/posts/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.2/post/sites/%24site/posts/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/delete",
      "text": "Delete a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a post",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__restore___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__restore___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/restore",
      "text": "Recover trashed content to its previous state",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Restore a post or page from the trash to its previous status. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/restore",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/restore",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/restore/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/delete",
      "text": "Delete multiple posts",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete multiple posts",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__restore___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__restore___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/restore",
      "text": "Restore multiple posts",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Restore multiple posts",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/restore",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/restore",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/restore/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__posts___get": {
      "provider_intent": "wordpress__rest__v1.1__me__posts___get",
      "provider_alias_intent": "/rest/v1.1/me/posts",
      "text": "Get a list of posts across all the user's sites",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "author": {
          "type": "number",
          "text": "The ID of the author or empty for `all authors`\nnumber",
          "required": true,
          "enum": [
            "number"
          ]
        },
        "offset": {
          "type": "number",
          "text": "The index to start counting from",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of posts",
          "required": true
        },
        "page_handle": {
          "type": "string",
          "text": "A page handle returned from a previous API call as a meta.next_page property",
          "required": true
        },
        "order": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "after": {
          "type": "string",
          "text": "Return posts dated after the specified datetime"
        },
        "before": {
          "type": "string",
          "text": "Return posts dated before the specified datetime"
        },
        "modified_after": {
          "type": "string",
          "text": "Return posts modified after the specified datetime"
        },
        "modified_before": {
          "type": "string",
          "text": "Return posts modified before the specified datetime"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        },
        "sites": {
          "type": "string",
          "text": "comma-separated list of specific site IDs to further limit results"
        },
        "site_visibility": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of posts across all the user's sites. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/posts",
        "alias_endpoint": "/wordpress/rest/v1.1/me/posts",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/posts/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__likes___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__likes___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/likes",
      "text": "Get a list of the likes for a post",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the likes for a post",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/likes",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/likes",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post_ID/likes/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__likes__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__likes__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/likes/new",
      "text": "Like a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Like a post. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/likes/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/likes/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/likes/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__likes__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__likes__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/likes/mine/delete",
      "text": "Unlike a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unlike a post. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/likes/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/likes/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/likes/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__likes__mine__delete___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__likes__mine__delete___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/likes/mine/delete",
      "text": "Get the current user's like status for a post",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the current user's like status for a post. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/likes/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/likes/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post_ID/likes/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__subscribers___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__subscribers___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/subscribers",
      "text": "Get post subscribers list",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the specified post's subscribers. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/subscribers",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/subscribers",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post/subscribers/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/subscribers/mine",
      "text": "Get user's subscription status for specified post",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get subscription status of the specified post for the current user. ",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/subscribers/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/subscribers/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post/subscribers/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__subscribers__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__subscribers__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/subscribers/new",
      "text": "Subscribe user for post comment notifications",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Subscribe current user to be notified of the specified post's comments.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/subscribers/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/subscribers/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post/subscribers/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine__update___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine__update___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/subscribers/mine/update",
      "text": "Subscribe user for post comment notifications",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Subscribe current user to be notified of the specified post's comments.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/subscribers/mine/update",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/subscribers/mine/update",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post/subscribers/mine/update/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__subscribers__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/subscribers/mine/delete",
      "text": "Unsubscribe user from specified post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "Post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unsubscribe the current user from the specified post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/subscribers/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/subscribers/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post/subscribers/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__reblogs__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__reblogs__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/reblogs/new",
      "text": "Reblog a post",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Reblog a post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/reblogs/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/reblogs/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post_ID/reblogs/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post_id__reblogs__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post_id__reblogs__mine___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post_id/reblogs/mine",
      "text": "Get reblog status for a post",
      "category": "Post",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get reblog status for a post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post_ID/reblogs/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post_id/reblogs/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/posts/%24post_ID/reblogs/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__posts__post__related___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__posts__post__related___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/posts/post/related",
      "text": "Search within a site for related posts",
      "category": "Post",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "The post ID .",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post": {
          "type": "number",
          "text": "The post ID .",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Search within a site for related posts.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/posts/$post/related",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/posts/post/related",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/posts/%24post/related/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__menu_____get": {
      "provider_intent": "wordpress__rest__v1.1__read__menu_____get",
      "provider_alias_intent": "/rest/v1.1/read/menu/",
      "text": "Get default reader menu",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get default reader menu.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/menu/",
        "alias_endpoint": "/wordpress/rest/v1.1/read/menu/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/menu/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__feed__feed_url_or_id___get": {
      "provider_intent": "wordpress__rest__v1.1__read__feed__feed_url_or_id___get",
      "provider_alias_intent": "/rest/v1.1/read/feed/feed_url_or_id",
      "text": "Get details about a feed",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "feed_url_or_id": {
          "type": "",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "feed_url_or_id": {
          "type": "",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get details about a feed.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/feed/$feed_url_or_id",
        "alias_endpoint": "/wordpress/rest/v1.1/read/feed/feed_url_or_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/feed/%24feed_url_or_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__read__sites__site__posts__post_id___get": {
      "provider_intent": "wordpress__rest__v1.2__read__sites__site__posts__post_id___get",
      "provider_alias_intent": "/rest/v1.2/read/sites/site/posts/post_id",
      "text": "Get a single post (by ID)",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_ID": {
          "type": "number",
          "text": "The post ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Get a single post (by ID).",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/read/sites/$site/posts/$post_ID",
        "alias_endpoint": "/wordpress/rest/v1.2/read/sites/site/posts/post_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/sites/%24site/posts/%24post_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__following_____get": {
      "provider_intent": "wordpress__rest__v1.1__read__following_____get",
      "provider_alias_intent": "/rest/v1.1/read/following/",
      "text": "Get posts from user's followed blogs",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of posts to return"
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of posts.\norder",
          "enum": [
            "string"
          ]
        },
        "after": {
          "type": "string",
          "text": "Return posts dated after the specified datetime"
        },
        "before": {
          "type": "string",
          "text": "Return posts dated before the specified datetime."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of posts from the blogs a user follows.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/following/",
        "alias_endpoint": "/wordpress/rest/v1.1/read/following/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/following/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__liked_____get": {
      "provider_intent": "wordpress__rest__v1.1__read__liked_____get",
      "provider_alias_intent": "/rest/v1.1/read/liked/",
      "text": "Get posts from user's followed likes",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of posts to return"
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of posts.\norder",
          "enum": [
            "string"
          ]
        },
        "after": {
          "type": "string",
          "text": "Return posts dated after the specified datetime"
        },
        "before": {
          "type": "string",
          "text": "Return posts dated before the specified datetime."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of posts from the blogs a user likes.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/liked/",
        "alias_endpoint": "/wordpress/rest/v1.1/read/liked/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/liked/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__tags__tag__posts___get": {
      "provider_intent": "wordpress__rest__v1.1__read__tags__tag__posts___get",
      "provider_alias_intent": "/rest/v1.1/read/tags/tag/posts",
      "text": "Get details about a specified tag.",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "The tag name",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag": {
          "type": "string",
          "text": "The tag name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get details about a specified tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/tags/$tag/posts",
        "alias_endpoint": "/wordpress/rest/v1.1/read/tags/tag/posts",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/tags/%24tag/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__read__tags___get": {
      "provider_intent": "wordpress__rest__v1.2__read__tags___get",
      "provider_alias_intent": "/rest/v1.2/read/tags",
      "text": "Get user's subscribed tag list",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Get a list of tags subscribed to by the user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/read/tags",
        "alias_endpoint": "/wordpress/rest/v1.2/read/tags",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/tags/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__read__trending__tags___get": {
      "provider_intent": "wordpress__rest__v1.2__read__trending__tags___get",
      "provider_alias_intent": "/rest/v1.2/read/trending/tags",
      "text": "Get trending tags in a list",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "lang": {
          "type": "string",
          "text": "The language code for the tags"
        },
        "count": {
          "type": "number",
          "text": "The number of topics to fetch."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Get a list of trending tags.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/read/trending/tags",
        "alias_endpoint": "/wordpress/rest/v1.2/read/trending/tags",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/trending/tags/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__tags__tag__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__read__tags__tag__mine___get",
      "provider_alias_intent": "/rest/v1.1/read/tags/tag/mine",
      "text": "Get user's subscription status for a specific tag",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "The tag name",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tag": {
          "type": "string",
          "text": "The tag name",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the subscribed status of the user to a given tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/tags/$tag/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/read/tags/tag/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/tags/%24tag/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__tags__tag__mine__new___post": {
      "provider_intent": "wordpress__rest__v1.1__read__tags__tag__mine__new___post",
      "provider_alias_intent": "/rest/v1.1/read/tags/tag/mine/new",
      "text": "Subscribe to a new tag",
      "category": "Reader",
      "method": "POST",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "The name of the tag to subscribe to",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "tag": {
          "type": "string",
          "text": "The name of the tag to subscribe to",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Subscribe to a new tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/tags/$tag/mine/new",
        "alias_endpoint": "/wordpress/rest/v1.1/read/tags/tag/mine/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/read/tags/%24tag/mine/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__tags__tag__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__read__tags__tag__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/read/tags/tag/mine/delete",
      "text": "Unsubscribe from a tag",
      "category": "Reader",
      "method": "POST",
      "type": "API",
      "params": {
        "tag": {
          "type": "string",
          "text": "The name of the tag to unsubscribe from",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "tag": {
          "type": "string",
          "text": "The name of the tag to unsubscribe from",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unsubscribe from a tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/tags/$tag/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/read/tags/tag/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/read/tags/%24tag/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__following__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__read__following__mine___get",
      "provider_alias_intent": "/rest/v1.1/read/following/mine",
      "text": "Get a list of the feeds the user is following",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the feeds the user is following.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/following/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/read/following/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/following/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__following__mine__new___post": {
      "provider_intent": "wordpress__rest__v1.1__read__following__mine__new___post",
      "provider_alias_intent": "/rest/v1.1/read/following/mine/new",
      "text": "Follow the specified blog",
      "category": "Reader",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "url": {
          "type": "string",
          "text": "The URL of the blog to follow",
          "required": true
        },
        "source": {
          "type": "string",
          "text": "The source of the follow",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Follow the specified blog.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/following/mine/new",
        "alias_endpoint": "/wordpress/rest/v1.1/read/following/mine/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/read/following/mine/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__following__mine__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__read__following__mine__delete___post",
      "provider_alias_intent": "/rest/v1.1/read/following/mine/delete",
      "text": "Unfollow the specified blog",
      "category": "Reader",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "url": {
          "type": "string",
          "text": "The URL of the blog to follow",
          "required": true
        },
        "source": {
          "type": "string",
          "text": "The source of the follow",
          "required": true
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unfollow the specified blog.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/following/mine/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/read/following/mine/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/read/following/mine/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__feed_____get": {
      "provider_intent": "wordpress__rest__v1.1__read__feed_____get",
      "provider_alias_intent": "/rest/v1.1/read/feed/",
      "text": "Get IDs and subscribe URLs for matching feeds",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "url": {
          "type": "string",
          "text": "The domain or URL of the site you would like to retrieve the feed(s) ID for",
          "required": true
        },
        "q": {
          "type": "string",
          "text": "Query text"
        },
        "offset": {
          "type": "number",
          "text": "offset to page results to",
          "required": true
        },
        "number": {
          "type": "number",
          "text": "number of results to return"
        },
        "exclude_followed": {
          "type": "boolean",
          "text": "Exclude already followed sites in search results",
          "enum": [
            true,
            false
          ]
        },
        "sort": {
          "type": "string",
          "text": "relevance or last_updated"
        },
        "page_handle": {
          "type": "string",
          "text": "A handle for getting the next page of results when sorting by last_updated"
        },
        "algorithm": {
          "type": "string",
          "text": "Specify a particular algorithm to use to choose posts (optional)"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the ID and subscribe URL of one or more matching feeds by domain or URL.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/feed/",
        "alias_endpoint": "/wordpress/rest/v1.1/read/feed/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/feed/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__read__recommendations__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__read__recommendations__mine___get",
      "provider_alias_intent": "/rest/v1.1/read/recommendations/mine",
      "text": "Getblog suggestions for the user",
      "category": "Reader",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "exclude": {
          "type": "string",
          "text": "Array of blog_ids to exclude"
        },
        "number": {
          "type": "number",
          "text": "Number of blogs to return"
        },
        "lang": {
          "type": "string",
          "text": "Language code for localized reason strings",
          "required": true
        },
        "source": {
          "type": "string",
          "text": "The source this request comes from",
          "required": true,
          "enum": [
            "[\"mobile\" \"reader_sidebar\" \"reader_inline\" \"recap_2013\"]"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of blog recommendations for the current user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/read/recommendations/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/read/recommendations/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/read/recommendations/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__sharing-buttons___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__sharing-buttons___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/sharing-buttons",
      "text": "site's sharing buttons list",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "enabled_only": {
          "type": "boolean",
          "text": "If true only enabled sharing buttons are included in the response",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "visibility": {
          "type": "string",
          "text": "The type of enabled sharing buttons to filter by either \"visible\" or \"hidden\".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of a site's sharing buttons.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/sharing-buttons",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/sharing-buttons",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/sharing-buttons/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__sharing-buttons___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__sharing-buttons___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/sharing-buttons",
      "text": "Modify site's sharing buttons",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit all sharing buttons for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/sharing-buttons",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/sharing-buttons",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/sharing-buttons/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__meta__external-services___get": {
      "provider_intent": "wordpress__rest__v1.1__meta__external-services___get",
      "provider_alias_intent": "/rest/v1.1/meta/external-services",
      "text": "List third-party integrations available for WordPress.com and Jetpack sites via Keyring",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "type": {
          "type": "string",
          "text": "Only return services for the given type."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of third-party services that WordPress.com or Jetpack sites can integrate with via keyring.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/meta/external-services",
        "alias_endpoint": "/wordpress/rest/v1.1/meta/external-services",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/meta/external-services/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__meta__external-services__service___get": {
      "provider_intent": "wordpress__rest__v1.1__meta__external-services__service___get",
      "provider_alias_intent": "/rest/v1.1/meta/external-services/service",
      "text": "Get service info for WordPress.com or Jetpack integration",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "service": {
          "type": "string",
          "text": "Which service you want information about",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "service": {
          "type": "string",
          "text": "Which service you want information about",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get information about a single external service that WordPress.com or Jetpack sites can integrate with via keyring.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/meta/external-services/$service",
        "alias_endpoint": "/wordpress/rest/v1.1/meta/external-services/service",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/meta/external-services/%24service/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__publicize-connections_____get": {
      "provider_intent": "wordpress__rest__v1.1__me__publicize-connections_____get",
      "provider_alias_intent": "/rest/v1.1/me/publicize-connections/",
      "text": "Get user's publicize connection list",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "service": {
          "type": "string",
          "text": "Only return connections for the given services"
        },
        "keyring_connection_ID": {
          "type": "number",
          "text": "Only return connections for the given keyring connection ID"
        },
        "site": {
          "type": "string",
          "text": "Only return connections for the given site that the user can publicize to."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of publicize connections that the current user has set up.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/publicize-connections/",
        "alias_endpoint": "/wordpress/rest/v1.1/me/publicize-connections/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/publicize-connections/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_id___get": {
      "provider_intent": "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_id___get",
      "provider_alias_intent": "/rest/v1.1/me/publicize-connections/publicize_connection_id",
      "text": "Get user's active publicize connection",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single publicize connection that the current user has set up.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/publicize-connections/$publicize_connection_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/me/publicize-connections/publicize_connection_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/publicize-connections/%24publicize_connection_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_idd___post": {
      "provider_intent": "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_idd___post",
      "provider_alias_intent": "/rest/v1.1/me/publicize-connections/publicize_connection_idd",
      "text": "Update user's publicize connection",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to take action on",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "shared": {
          "type": "boolean",
          "text": "True to make the connection global for all users of the site",
          "enum": [
            true,
            false
          ]
        },
        "external_user_ID": {
          "type": "string",
          "text": "Use to associate a non-default external user (from the keyring connection) with this publicize connection."
        }
      },
      "path": {
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to take action on",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update a single publicize connection belonging to the current user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/publicize-connections/$publicize_connection_IDD",
        "alias_endpoint": "/wordpress/rest/v1.1/me/publicize-connections/publicize_connection_idd",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/publicize-connections/%24publicize_connection_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__me__publicize-connections__publicize_connection_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/me/publicize-connections/publicize_connection_id/delete",
      "text": "Delete a publicize connection",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to take action on",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to take action on",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete the specified publicize connection.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/publicize-connections/$publicize_connection_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/me/publicize-connections/publicize_connection_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/publicize-connections/%24publicize_connection_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__publicize-connections_____get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__publicize-connections_____get",
      "provider_alias_intent": "/rest/v1.1/sites/site/publicize-connections/",
      "text": "Get publicize connections for a specific site",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "service": {
          "type": "string",
          "text": "Only return connections for the given services"
        },
        "user_id": {
          "type": "string",
          "text": "Only return connections associated to the given user ID"
        },
        "keyring_connection_ID": {
          "type": "number",
          "text": "Only return connections for the given Keyring connection ID."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of publicize connections that are associated with the specified site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/publicize-connections/",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/publicize-connections/",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/publicize-connections/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/publicize-connections/publicize_connection_id",
      "text": "Get publicize connection for specific site",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a single publicize connection that is associated with the specified site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/publicize-connections/$publicize_connection_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/publicize-connections/publicize_connection_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/publicize-connections/%24publicize_connection_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/publicize-connections/publicize_connection_id",
      "text": "Update site's publicize connection",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update a single publicize connection belonging to the specified site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/publicize-connections/$publicize_connection_ID",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/publicize-connections/publicize_connection_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/publicize-connections/%24publicize_connection_ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__publicize-connections__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__publicize-connections__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/publicize-connections/new",
      "text": "Create publicize connection for specified site",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a new publicize connection that is associated with the specified site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/publicize-connections/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/publicize-connections/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/publicize-connections/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__publicize-connections__publicize_connection_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/publicize-connections/publicize_connection_id/delete",
      "text": "Delete the specified publicize connection",
      "category": "Sharing",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "publicize_connection_ID": {
          "type": "number",
          "text": "The publicize connection ID to fetch.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete the specified publicize connection.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/publicize-connections/$publicize_connection_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/publicize-connections/publicize_connection_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/publicize-connections/%24publicize_connection_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__meta__sharing-buttons___get": {
      "provider_intent": "wordpress__rest__v1.1__meta__sharing-buttons___get",
      "provider_alias_intent": "/rest/v1.1/meta/sharing-buttons",
      "text": "Get supported sharing button services list",
      "category": "Sharing",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of external services for which sharing buttons are supported.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/meta/sharing-buttons",
        "alias_endpoint": "/wordpress/rest/v1.1/meta/sharing-buttons",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/meta/sharing-buttons/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__shortcodes__render___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__shortcodes__render___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/shortcodes/render",
      "text": "Get site's rendered shortcode",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "shortcode": {
          "type": "string",
          "text": "The query-string encoded shortcode string to render.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a rendered shortcode for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/shortcodes/render",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/shortcodes/render",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/shortcodes/render/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__shortcodes___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__shortcodes___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/shortcodes",
      "text": "Get site's available shortcodes",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of shortcodes available on a site",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/shortcodes",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/shortcodes",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/shortcodes/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__embeds__render___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__embeds__render___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/embeds/render",
      "text": "Get site's rendered embed",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "embed_url": {
          "type": "string",
          "text": "The query-string encoded embed URL to render.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a rendered embed for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/embeds/render",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/embeds/render",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/embeds/render/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__embeds___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__embeds___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/embeds",
      "text": "Get site's available embeds in a list",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of embeds available on a site",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/embeds",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/embeds",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/embeds/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site___get": {
      "provider_intent": "wordpress__rest__v1.2__sites__site___get",
      "provider_alias_intent": "/rest/v1.2/sites/site",
      "text": "Get site details and information",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "filters": {
          "type": "string",
          "text": "Returns sites that satisfy the given filters only"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Get information about a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site",
        "api_ref": "https://developer.wordpress.com/docs/api/1.2/get/sites/%24site/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__page-templates___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__page-templates___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/page-templates",
      "text": "Get supported site page templates",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of page templates supported by a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/page-templates",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/page-templates",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/page-templates/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__post-types___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__post-types___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/post-types",
      "text": "Get site's available post types list",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "api_queryable": {
          "type": "boolean",
          "text": "If true only queryable post types are returned.",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of post types available for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/post-types",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/post-types",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/post-types/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site__post-counts__post_type___get": {
      "provider_intent": "wordpress__rest__v1.2__sites__site__post-counts__post_type___get",
      "provider_alias_intent": "/rest/v1.2/sites/site/post-counts/post_type",
      "text": "Count posts by status in post type groups",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_type": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "author": {
          "type": "number",
          "text": "author ID."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_type": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Get number of posts in the post type groups by post status",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site/post-counts/$post_type",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site/post-counts/post_type",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/post-counts/%24post_type/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__widgets___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__widgets___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/widgets",
      "text": "Get active and inactive site widgets",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Retrieve the active and inactive widgets for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/widgets",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/widgets",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/widgets/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__widgets__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__widgets__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/widgets/new",
      "text": "Activate a widget on a site.",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Activate a widget on a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/widgets/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/widgets/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/widgets/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__settings___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__settings___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/settings",
      "text": "Get WordAds site settings information in detail",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get detailed WordAds settings information about a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/settings",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/settings",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/wordads/settings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__settings___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__settings___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/settings",
      "text": "Update WordAds settings for a site",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update WordAds settings for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/settings",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/settings",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/wordads/settings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__earnings___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__earnings___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/earnings",
      "text": "Get site's WordAds earnings details",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get detailed WordAds earnings information about a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/earnings",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/earnings",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/wordads/earnings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__tos___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__tos___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/tos",
      "text": "Get site's WordAds TOS information",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get WordAds TOS information about a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/tos",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/tos",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/wordads/tos/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__tos___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__tos___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/tos",
      "text": "Update site's WordAds TOS setting",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update WordAds TOS setting for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/tos",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/tos",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/wordads/tos/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__approve___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__approve___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/approve",
      "text": "Simplify joining WordAds program approval request",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Request streamlined approval to join the WordAds program.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/approve",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/approve",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/wordads/approve/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__wordads__stats___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__wordads__stats___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/wordads/stats",
      "text": "Get site's WordAds statistics",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "unit": {
          "type": "string",
          "text": "One of",
          "required": true,
          "enum": [
            "day week or month Default"
          ]
        },
        "quantity": {
          "type": "number",
          "text": "number of units to return"
        },
        "date": {
          "type": "string",
          "text": "limit the chart data to visits earlier than requested date."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get WordAds stats for a site",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/wordads/stats",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/wordads/stats",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/wordads/stats/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__sites___get": {
      "provider_intent": "wordpress__rest__v1.1__me__sites___get",
      "provider_alias_intent": "/rest/v1.1/me/sites",
      "text": "Get user's site list in list",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "site_visibility": {
          "type": "string",
          "required": true
        },
        "options": {
          "type": "string",
          "text": "Returns specified options only"
        },
        "include_domain_only": {
          "type": "boolean",
          "text": "Whether to include domain-only sites",
          "enum": [
            true,
            false
          ]
        },
        "site_activity": {
          "type": "string",
          "text": "."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the current user's sites.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/sites",
        "alias_endpoint": "/wordpress/rest/v1.1/me/sites",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/sites/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__sites__plugins___get": {
      "provider_intent": "wordpress__rest__v1.1__me__sites__plugins___get",
      "provider_alias_intent": "/rest/v1.1/me/sites/plugins",
      "text": "Get plugins for user's sites",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the current user's sites plugins",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/sites/plugins",
        "alias_endpoint": "/wordpress/rest/v1.1/me/sites/plugins",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/sites/plugins/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.2__sites__site__search___post": {
      "provider_intent": "wordpress__rest__v1.2__sites__site__search___post",
      "provider_alias_intent": "/rest/v1.2/sites/site/search",
      "text": "Site Search with Elasticsearch Query API",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.2",
        "auth": [],
        "description": "Search within a site using an Elasticsearch Query API.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.2/sites/$site/search",
        "alias_endpoint": "/wordpress/rest/v1.2/sites/site/search",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/search/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__widgets__widget-id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__widgets__widget-id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/widgets/widget-id",
      "text": "Retrieve a widget on a site by its ID",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Retrieve a widget on a site by its ID.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/widgets/widget:$id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/widgets/widget-id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/widgets/widget:%24id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__widgets__widget-id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__widgets__widget-id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/widgets/widget-id",
      "text": "Update a widget on a site by its ID",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update a widget on a site by its ID.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/widgets/widget:$id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/widgets/widget-id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/widgets/widget:%24id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__widgets__widget-id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__widgets__widget-id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/widgets/widget-id/delete",
      "text": "Deactivate widget by ID, delete if already deactivated",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "id": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Deactivate a widget on a site by its ID. Will delete if already deactivated.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/widgets/widget:$id/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/widgets/widget-id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/widgets/widget:%24id/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__headers__theme_slug___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__headers__theme_slug___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/headers/theme_slug",
      "text": "Get custom header options for specific theme",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "theme_slug": {
          "type": "string"
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "theme_slug": {
          "type": "string"
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the custom header options for a site with a particular theme.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/headers/$theme_slug",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/headers/theme_slug",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/headers/%24theme_slug/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__headers__mine___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__headers__mine___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/headers/mine",
      "text": "Get site's custom header options",
      "category": "Site",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the custom header options for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/headers/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/headers/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/headers/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__headers__mine___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__headers__mine___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/headers/mine",
      "text": "Customize site header options",
      "category": "Site",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Set the custom header options for a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/headers/mine",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/headers/mine",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/headers/mine/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats",
      "text": "Get a site's stats",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a site's stats",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__summary___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__summary___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/summary",
      "text": "Summarize site's views, visitors, likes, and comments",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The date that determines the most recent period for which results are returned",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "The offset in hours from GMT for which to fetch results."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "view a site's summarized views, visitors, likes and comments",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/summary",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/summary",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/summary/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__top-posts___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__top-posts___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/top-posts",
      "text": "View a site's top posts and pages by views",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The most recent day to include in results",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "The offset in hours from GMT for which to fetch results"
        },
        "summarize": {
          "type": "boolean",
          "text": "Return summary data instead of detailed period data",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's top posts and pages by views",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/top-posts",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/top-posts",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/top-posts/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__video__post_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__video__post_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/video/post_id",
      "text": "View the details of a single video",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "post_id": {
          "type": "number",
          "text": "The video's id.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "statType": {
          "type": "string",
          "text": "Type of video stat to return"
        },
        "period": {
          "type": "string",
          "text": "The time range.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "post_id": {
          "type": "number",
          "text": "The video's id.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View the details of a single video",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/video/$post_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/video/post_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/video/%24post_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__referrers___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__referrers___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/referrers",
      "text": "View a site's referrers",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The most recent day to include in results"
        },
        "max": {
          "type": "number",
          "text": "The maximum number of results to return Default",
          "enum": [
            "10"
          ]
        },
        "offset": {
          "type": "number",
          "text": "The offset"
        },
        "in hours from GMT for which to fetch results": {
          "type": ""
        },
        "summarize": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's referrers",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/referrers",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/referrers",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/referrers/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__clicks___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__clicks___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/clicks",
      "text": "View a site's outbound clicks",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The most recent day to include in results"
        },
        "max": {
          "type": "number",
          "text": "The maximum number of results to return Default",
          "enum": [
            "10"
          ]
        },
        "offset": {
          "type": "number",
          "text": "The offset"
        },
        "in hours from GMT for which to fetch results": {
          "type": ""
        },
        "summarize": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's outbound clicks",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/clicks",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/clicks",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/clicks/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__tags___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__tags___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/tags",
      "text": "View a site's views by tags and categories",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "max": {
          "type": "number",
          "text": "the maximum number of tags to include in result Default",
          "enum": [
            "10"
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's views by tags and categories",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/tags",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/tags",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/tags/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__top-authors___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__top-authors___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/top-authors",
      "text": "View a site's top authors",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The most recent day to include in results"
        },
        "max": {
          "type": "number",
          "text": "The maximum number of results to return Default",
          "enum": [
            "10"
          ]
        },
        "offset": {
          "type": "number",
          "text": "The offset"
        },
        "in hours from GMT for which to fetch results": {
          "type": ""
        },
        "summarize": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's top authors",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/top-authors",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/top-authors",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/top-authors/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__comments___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__comments___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/comments",
      "text": "View a site's top comment authors and most-commented posts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's top comment authors and most-commented posts",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/comments",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/comments",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/comments/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__video-plays___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__video-plays___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/video-plays",
      "text": "View a site's video plays",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "number of periods to include in the query Default",
          "enum": [
            "1"
          ]
        },
        "date": {
          "type": "string",
          "text": "the most recent day to include in results",
          "required": true
        },
        "max": {
          "type": "number",
          "text": "the maximum number of videos to include for each group of results Default",
          "required": true,
          "enum": [
            "10."
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's video plays",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/video-plays",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/video-plays",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/video-plays/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__file-downloads___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__file-downloads___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/file-downloads",
      "text": "View a site's file downloads",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "number of periods to include in the query Default",
          "enum": [
            "1"
          ]
        },
        "date": {
          "type": "string",
          "text": "the most recent day to include in results",
          "required": true
        },
        "max": {
          "type": "number",
          "text": "the maximum number of videos to include for each group of results Default",
          "required": true,
          "enum": [
            "10"
          ]
        },
        "period": {
          "type": "string",
          "required": true
        },
        "offset": {
          "type": "number",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's file downloads",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/file-downloads",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/file-downloads",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/file-downloads/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__post__post_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__post__post_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/post/post_id",
      "text": "View a post's views",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "post_id": {
          "type": "number",
          "text": "The post's id.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "post_id": {
          "type": "number",
          "text": "The post's id.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a post's views",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/post/$post_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/post/post_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/post/%24post_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__country-views___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__country-views___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/country-views",
      "text": "View a site's views by country",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "number of periods to include in the query Default",
          "enum": [
            "1"
          ]
        },
        "period": {
          "type": "string",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "the most recent day to include in results",
          "required": true
        },
        "max": {
          "type": "number",
          "text": "the maximum number of videos to include for each group of results Default",
          "required": true,
          "enum": [
            "10"
          ]
        },
        "offset": {
          "type": "number",
          "required": true
        },
        "summarize": {
          "type": "boolean",
          "text": "Return summary data instead of detailed period data.",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's views by country",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/country-views",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/country-views",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/country-views/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__followers___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__followers___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/followers",
      "text": "View a site's followers",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "type": {
          "type": "string",
          "text": "One of 'wpcom' or 'email'",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "The page of results to return"
        },
        "max": {
          "type": "number",
          "text": "The number of results to return per page"
        },
        "search": {
          "type": "string",
          "text": "Returns followers with matching email addresses."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's followers",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/followers",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/followers",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/followers/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__comment-followers___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__comment-followers___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/comment-followers",
      "text": "View a site's comment followers",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "page": {
          "type": "number",
          "text": "The page of results to return",
          "required": true
        },
        "max": {
          "type": "number",
          "text": "The number of results to return per page.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's comment followers",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/comment-followers",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/comment-followers",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/comment-followers/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__referrers__spam__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__referrers__spam__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/referrers/spam/new",
      "text": "Report a referrer as spam",
      "category": "Stats",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "domain": {
          "type": "string",
          "text": "The domain of the site being reported as spam.",
          "required": true
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Report a referrer as spam",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/referrers/spam/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/referrers/spam/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/stats/referrers/spam/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__referrers__spam__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__referrers__spam__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/referrers/spam/delete",
      "text": "Unreport a referrer as spam",
      "category": "Stats",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "domain": {
          "type": "string",
          "text": "The domain of the site being unreported as spam.",
          "required": true
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Unreport a referrer as spam",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/referrers/spam/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/referrers/spam/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/stats/referrers/spam/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__publicize___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__publicize___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/publicize",
      "text": "View a site's publicize follower counts",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View a site's publicize follower counts",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/publicize",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/publicize",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/publicize/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__search-terms___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__search-terms___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/search-terms",
      "text": "View search terms used to find the site",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "num": {
          "type": "number",
          "text": "Number of periods to include in the results"
        },
        "period": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "text": "The most recent day to include in results"
        },
        "max": {
          "type": "number",
          "text": "The maximum number of results to return Default",
          "required": true,
          "enum": [
            "10"
          ]
        },
        "offset": {
          "type": "number",
          "text": "The offset in hours from GMT for which to fetch results",
          "required": true
        },
        "summarize": {
          "type": "boolean",
          "text": "Return summary data instead of detailed period data.",
          "required": true,
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View search terms used to find the site",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/search-terms",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/search-terms",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/search-terms/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__views__posts___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__views__posts___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/views/posts",
      "text": "View the total number of views for each post 🚧",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "View the total number of views for each post.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/views/posts",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/views/posts",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/views/posts/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 1,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__stats__streak___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__stats__streak___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/stats/streak",
      "text": "Get stats for Calendar Heatmap",
      "category": "Stats",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "startDate": {
          "type": "string",
          "text": "start date for query",
          "required": true
        },
        "endDate": {
          "type": "string",
          "text": "end date for query",
          "required": true
        },
        "max": {
          "type": "number",
          "text": "maximum number of posts to return.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "The site's id or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get stats for Calendar Heatmap. Returns data with each post timestamp.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/stats/streak",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/stats/streak",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/stats/streak/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__categories___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__categories___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/categories",
      "text": "Get a list of a site's categories",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of categories to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of categories",
          "required": true
        },
        "search": {
          "type": "string",
          "text": "Limit response to include only categories whose names or slugs match the provided search query",
          "required": true
        },
        "order": {
          "type": "string",
          "required": true
        },
        "order_by": {
          "type": "string",
          "text": ".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of a site's categories.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/categories",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/categories",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/categories/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__tags___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__tags___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/tags",
      "text": "Get a list of a site's tags",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of tags to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of tags",
          "required": true
        },
        "search": {
          "type": "string",
          "text": "Limit response to include only tags whose names or slugs match the provided search query",
          "required": true
        },
        "order": {
          "type": "string",
          "required": true
        },
        "order_by": {
          "type": "string",
          "text": ".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of a site's tags.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/tags",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/tags",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/tags/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__categories__slug-category___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__categories__slug-category___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/categories/slug-category",
      "text": "Get information about a single category",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get information about a single category.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/categories/slug:$category",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/categories/slug-category",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/categories/slug:%24category/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__categories__slug-category___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__categories__slug-category___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/categories/slug-category",
      "text": "Edit a category",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit a category.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/categories/slug:$category",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/categories/slug-category",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/categories/slug:%24category/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__tags__slug-tag___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__tags__slug-tag___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/tags/slug-tag",
      "text": "Get details for single tag",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get information about a single tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/tags/slug:$tag",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/tags/slug-tag",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/tags/slug:%24tag/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__tags__slug-tag___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__tags__slug-tag___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/tags/slug-tag",
      "text": "Edit a tag",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit a tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/tags/slug:$tag",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/tags/slug-tag",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/tags/slug:%24tag/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug",
      "text": "Get details for a specific term",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "Term slug",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "Term slug",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get information about a single term",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/taxonomies/$taxonomy/terms/slug:$slug",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/taxonomies/%24taxonomy/terms/slug:%24slug/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug",
      "text": "Edit a term",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "he term slug",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "he term slug",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Edit a term.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/taxonomies/$taxonomy/terms/slug:$slug",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/taxonomies/%24taxonomy/terms/slug:%24slug/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__post-types__post_type__taxonomies___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__post-types__post_type__taxonomies___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/post-types/post_type/taxonomies",
      "text": "Get post type's associated taxonomies",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_type": {
          "type": "string",
          "text": "Post type",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "post_type": {
          "type": "string",
          "text": "Post type",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of taxonomies associated with a post type.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/post-types/$post_type/taxonomies",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/post-types/post_type/taxonomies",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/post-types/%24post_type/taxonomies/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/taxonomies/taxonomy/terms",
      "text": "Get a list of a site's terms by taxonomy",
      "category": "Taxonomy",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of tags to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "0-indexed offset",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of tags",
          "required": true
        },
        "search": {
          "type": "string",
          "text": "Limit response to include only tags whose names or slugs match the provided search query",
          "required": true
        },
        "order": {
          "type": "string",
          "required": true
        },
        "order_by": {
          "type": "string",
          "text": ".",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of a site's terms by taxonomy",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/taxonomies/$taxonomy/terms",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/taxonomies/taxonomy/terms",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/taxonomies/%24taxonomy/terms/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__categories__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__categories__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/categories/new",
      "text": "Create a new category",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a new category.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/categories/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/categories/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/categories/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__tags__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__tags__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/tags/new",
      "text": "Create a new tag",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a new tag",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/tags/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/tags/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/tags/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__categories__slug-category__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__categories__slug-category__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/categories/slug-category/delete",
      "text": "Delete a category",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "category": {
          "type": "string",
          "text": "The category slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a category.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/categories/slug:$category/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/categories/slug-category/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/categories/slug:%24category/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__tags__slug-tag__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__tags__slug-tag__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/tags/slug-tag/delete",
      "text": "Delete a tag",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "tag": {
          "type": "string",
          "text": "The tag slug.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a tag.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/tags/slug:$tag/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/tags/slug-tag/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/tags/slug:%24tag/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__new___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__new___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/taxonomies/taxonomy/terms/new",
      "text": "Create a new term",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Create a new term.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/taxonomies/$taxonomy/terms/new",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/taxonomies/taxonomy/terms/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/taxonomies/%24taxonomy/terms/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__taxonomies__taxonomy__terms__slug-slug__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug/delete",
      "text": "Delete a term",
      "category": "Taxonomy",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "The term slug",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "taxonomy": {
          "type": "string",
          "text": "Taxonomy",
          "required": true
        },
        "slug": {
          "type": "string",
          "text": "The term slug",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a term.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/taxonomies/$taxonomy/terms/slug:$slug/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/taxonomies/taxonomy/terms/slug-slug/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/taxonomies/%24taxonomy/terms/slug:%24slug/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__users___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__users___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/users",
      "text": "Get site user's list",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "context": {
          "type": "string"
        },
        "http_envelope": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "Limit the total number of authors returned"
        },
        "offset": {
          "type": "number",
          "text": "The first n authors to be skipped in the returned array"
        },
        "order": {
          "type": "string"
        },
        "order_by": {
          "type": "string"
        },
        "authors_only": {
          "type": "boolean",
          "text": "Set to true to fetch authors only",
          "enum": [
            true,
            false
          ]
        },
        "include_viewers": {
          "type": "boolean",
          "text": "Set to true to include viewers for Simple sites",
          "enum": [
            true,
            false
          ]
        },
        "type": {
          "type": "string",
          "text": "Specify the post type to query authors for"
        },
        "search": {
          "type": "string",
          "text": "Find matching users"
        },
        "search_columns": {
          "type": "array",
          "text": "Specify which columns to check for matching users"
        },
        "role": {
          "type": "string"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "List the users of a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/users",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/users",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/users/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__users__user_id___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__users__user_id___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/users/user_id",
      "text": "Update user's details on a site",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update details of a user of a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/users/$user_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/users/user_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/users/%24user_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__users__login-user_id___get": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__users__login-user_id___get",
      "provider_alias_intent": "/rest/v1.1/sites/site/users/login-user_id",
      "text": "Get site user's information using their login",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's login",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "site": {
          "type": "string",
          "text": "Site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's login",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get details of a user of a site by login.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/users/login:$user_id",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/users/login-user_id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/sites/%24site/users/login:%24user_id/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__sites__site__users__user_id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__sites__site__users__user_id__delete___post",
      "provider_alias_intent": "/rest/v1.1/sites/site/users/user_id/delete",
      "text": "Delete or removes user's from site",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "site": {
          "type": "string",
          "text": "The site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's ID",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function."
        }
      },
      "path": {
        "site": {
          "type": "string",
          "text": "The site ID or domain",
          "required": true
        },
        "user_id": {
          "type": "number",
          "text": "The user's ID",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Deletes or removes a user of a site.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/sites/$site/users/$user_ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/sites/site/users/user_id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/sites/%24site/users/%24user_ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__users__suggest___get": {
      "provider_intent": "wordpress__rest__v1.1__users__suggest___get",
      "provider_alias_intent": "/rest/v1.1/users/suggest",
      "text": "Fetch suggested user's list for mentions",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "site_id": {
          "type": "number",
          "text": "The site ID to look for matching users on",
          "required": true
        },
        "site": {
          "type": "string",
          "text": "The domain to look for matching users on"
        },
        "filter": {
          "type": "string",
          "text": "A string to filter possible users against"
        },
        "image_size": {
          "type": "number",
          "text": "The size of the image to return in pixels"
        },
        "client": {
          "type": "string",
          "text": "A string identifying the consumer of the data."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of possible users to suggest for mentions",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/users/suggest",
        "alias_endpoint": "/wordpress/rest/v1.1/users/suggest",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/users/suggest/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me___get": {
      "provider_intent": "wordpress__rest__v1.1__me___get",
      "provider_alias_intent": "/rest/v1.1/me",
      "text": "Get metadata about the current user's",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "abtests": {
          "type": "string",
          "text": "Comma separated names of A/B tests the user may have an assigned variation.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get metadata about the current user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me",
        "alias_endpoint": "/wordpress/rest/v1.1/me",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__billing-history___get": {
      "provider_intent": "wordpress__rest__v1.1__me__billing-history___get",
      "provider_alias_intent": "/rest/v1.1/me/billing-history",
      "text": "Get user's billing history and upcoming charges",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get list of current user's billing history and upcoming charges.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/billing-history",
        "alias_endpoint": "/wordpress/rest/v1.1/me/billing-history",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/billing-history/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings___get": {
      "provider_intent": "wordpress__rest__v1.1__me__settings___get",
      "provider_alias_intent": "/rest/v1.1/me/settings",
      "text": "Get user's settings",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the current user's settings.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/settings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings___post": {
      "provider_intent": "wordpress__rest__v1.1__me__settings___post",
      "provider_alias_intent": "/rest/v1.1/me/settings",
      "text": "Update user's settings",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update the current user's settings.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/settings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__preferences___get": {
      "provider_intent": "wordpress__rest__v1.1__me__preferences___get",
      "provider_alias_intent": "/rest/v1.1/me/preferences",
      "text": "Get user's settings",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the current user's settings.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/preferences",
        "alias_endpoint": "/wordpress/rest/v1.1/me/preferences",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/settings/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__preferences___post": {
      "provider_intent": "wordpress__rest__v1.1__me__preferences___post",
      "provider_alias_intent": "/rest/v1.1/me/preferences",
      "text": "Update user's preferences",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Update the current user's preferences.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/preferences",
        "alias_endpoint": "/wordpress/rest/v1.1/me/preferences",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/preferences/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings__password__validate___post": {
      "provider_intent": "wordpress__rest__v1.1__me__settings__password__validate___post",
      "provider_alias_intent": "/rest/v1.1/me/settings/password/validate",
      "text": "Check user's new password strength",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Verify strength of a user's new password.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings/password/validate",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings/password/validate",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/settings/password/validate/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings__profile-links___get": {
      "provider_intent": "wordpress__rest__v1.1__me__settings__profile-links___get",
      "provider_alias_intent": "/rest/v1.1/me/settings/profile-links",
      "text": "Get user's profile links",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get current user's profile links.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings/profile-links",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings/profile-links",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/preferences/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings__profile-links__new___post": {
      "provider_intent": "wordpress__rest__v1.1__me__settings__profile-links__new___post",
      "provider_alias_intent": "/rest/v1.1/me/settings/profile-links/new",
      "text": "Add a link to user's profile",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Add a link to current user's profile.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings/profile-links/new",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings/profile-links/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/settings/profile-links/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__settings__profile-links__slug__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__me__settings__profile-links__slug__delete___post",
      "provider_alias_intent": "/rest/v1.1/me/settings/profile-links/slug/delete",
      "text": "Delete user profile link",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "slug": {
          "type": "string",
          "text": "The URL of the profile link.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "slug": {
          "type": "string",
          "text": "The URL of the profile link.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete a link from current user's profile.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/settings/profile-links/$slug/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/me/settings/profile-links/slug/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/settings/profile-links/%24slug/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__connected-applications___get": {
      "provider_intent": "wordpress__rest__v1.1__me__connected-applications___get",
      "provider_alias_intent": "/rest/v1.1/me/connected-applications",
      "text": "Get user's linked applications",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get current user's connected applications.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/connected-applications",
        "alias_endpoint": "/wordpress/rest/v1.1/me/connected-applications",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/connected-applications/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__connected-applications__id___get": {
      "provider_intent": "wordpress__rest__v1.1__me__connected-applications__id___get",
      "provider_alias_intent": "/rest/v1.1/me/connected-applications/id",
      "text": "Get one of current user's connected applications",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "ID": {
          "type": "number",
          "text": "The ID of the connected application's connection.",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "ID": {
          "type": "number",
          "text": "The ID of the connected application's connection.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get one of current user's connected applications.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/connected-applications/$ID",
        "alias_endpoint": "/wordpress/rest/v1.1/me/connected-applications/id",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/connected-applications/%24ID/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__connected-applications__id__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__me__connected-applications__id__delete___post",
      "provider_alias_intent": "/rest/v1.1/me/connected-applications/id/delete",
      "text": "Delete one of current user's connected application access tokens",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "ID": {
          "type": "number",
          "text": "The ID of the connected application's connection.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "ID": {
          "type": "number",
          "text": "The ID of the connected application's connection.",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete one of current user's connected application access tokens.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/connected-applications/$ID/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/me/connected-applications/id/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/connected-applications/%24ID/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__two-step___get": {
      "provider_intent": "wordpress__rest__v1.1__me__two-step___get",
      "provider_alias_intent": "/rest/v1.1/me/two-step",
      "text": "Get user's two-factor authentication details",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get information about current user's two factor configuration.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/two-step",
        "alias_endpoint": "/wordpress/rest/v1.1/me/two-step",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/two-step/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__two-step__sms__new___post": {
      "provider_intent": "wordpress__rest__v1.1__me__two-step__sms__new___post",
      "provider_alias_intent": "/rest/v1.1/me/two-step/sms/new",
      "text": "Sends SMS verification code to user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Sends a two-step code via SMS to the current user.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/two-step/sms/new",
        "alias_endpoint": "/wordpress/rest/v1.1/me/two-step/sms/new",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/me/two-step/sms/new/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__me__likes___get": {
      "provider_intent": "wordpress__rest__v1.1__me__likes___get",
      "provider_alias_intent": "/rest/v1.1/me/likes",
      "text": "Get current user's liked items list",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "number": {
          "type": "number",
          "text": "The number of likes to return",
          "required": true
        },
        "offset": {
          "type": "number",
          "text": "The index to start counting from",
          "required": true
        },
        "page": {
          "type": "number",
          "text": "Return the Nth 1-indexed page of likes",
          "required": true
        },
        "order": {
          "type": "string"
        },
        "after": {
          "type": "string",
          "text": "Return likes dated on or after the specified datetime",
          "required": true
        },
        "before": {
          "type": "string",
          "text": "Return likes dated on or before the specified datetime.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get a list of the current user's likes.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/me/likes",
        "alias_endpoint": "/wordpress/rest/v1.1/me/likes",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/me/likes/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid___get": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid___get",
      "provider_alias_intent": "/rest/v1.1/videos/guid",
      "text": "Get the metadata for a specified VideoPress video",
      "category": "Videos",
      "method": "GET",
      "type": "API",
      "params": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "birth_month": {
          "type": "number",
          "text": "The month the visitor was born"
        },
        "birth_day": {
          "type": "number",
          "text": "The day of the month the visitor was born"
        },
        "birth_year": {
          "type": "number",
          "text": "The year the visitor was born"
        },
        "metadata_token": {
          "type": "string",
          "text": "Permissions token."
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the metadata for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/videos/%24guid/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid__poster___get": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid__poster___get",
      "provider_alias_intent": "/rest/v1.1/videos/guid/poster",
      "text": "Get the poster for a specified VideoPress video",
      "category": "Videos",
      "method": "GET",
      "type": "API",
      "params": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only."
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the poster for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid/poster",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid/poster",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/videos/%24guid/poster/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid__posterr___post": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid__posterr___post",
      "provider_alias_intent": "/rest/v1.1/videos/guid/posterr",
      "text": "Upload and set a poster for a specified VideoPress video",
      "category": "Videos",
      "method": "POST",
      "type": "API",
      "params": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Upload and set a poster for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid/posterr",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid/posterr",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/videos/%24guid/poster/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid__playlist__format___get": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid__playlist__format___get",
      "provider_alias_intent": "/rest/v1.1/videos/guid/playlist/format",
      "text": "Get the poster for a specified VideoPress video",
      "category": "Videos",
      "method": "GET",
      "type": "API",
      "params": {
        "{}guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        },
        "format": {
          "type": "string",
          "text": "The playlist format",
          "required": true
        },
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        },
        "metadata_token": {
          "type": "string",
          "text": "Auth token"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "{}guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        },
        "format": {
          "type": "string",
          "text": "The playlist format",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Get the poster for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid/playlist/$format",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid/playlist/format",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/get/videos/%24guid/playlist/%24format/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid__tracks___post": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid__tracks___post",
      "provider_alias_intent": "/rest/v1.1/videos/guid/tracks",
      "text": "Add subtitles to a VideoPress video",
      "category": "Videos",
      "method": "POST",
      "type": "API",
      "params": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Upload a subtitle/caption track for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid/tracks",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid/tracks",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/videos/%24guid/tracks/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "wordpress__rest__v1.1__videos__guid__tracks__delete___post": {
      "provider_intent": "wordpress__rest__v1.1__videos__guid__tracks__delete___post",
      "provider_alias_intent": "/rest/v1.1/videos/guid/tracks/delete",
      "text": "Delete subtitle track for VideoPress video",
      "category": "Videos",
      "method": "POST",
      "type": "API",
      "params": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "context": {
          "type": "string",
          "required": true
        },
        "http_envelope": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "pretty": {
          "type": "boolean",
          "required": true,
          "enum": [
            true,
            false
          ]
        },
        "meta": {
          "type": "string",
          "text": "Loads data from the endpoints found in the 'meta' part of the response"
        },
        "fields": {
          "type": "string",
          "text": "Returns specified fields only"
        },
        "callback": {
          "type": "string",
          "text": "An optional JSONP callback function"
        }
      },
      "path": {
        "guid": {
          "type": "string",
          "text": "The guid of the video",
          "required": true
        }
      },
      "domain_params": {},
      "meta": {
        "version": "v1.1",
        "auth": [],
        "description": "Delete an existing subtitle/caption track for a specified VideoPress video.",
        "rate_limit": [],
        "api_endpoint": "https://public-api.wordpress.com/rest/v1.1/videos/$guid/tracks/delete",
        "alias_endpoint": "/wordpress/rest/v1.1/videos/guid/tracks/delete",
        "api_ref": "https://developer.wordpress.com/docs/api/1.1/post/videos/%24guid/tracks/delete/"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Bearer",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}