{
  "routes": {
    "zohobooks__books__v3__bankaccounts___post": {
      "provider_intent": "zohobooks__books__v3__bankaccounts___post",
      "provider_alias_intent": "/books/v3/bankaccounts",
      "text": "Create a bank account",
      "category": "Bank Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "account_name": {
          "type": "string",
          "text": "Name of the account",
          "required": true
        },
        "account_type": {
          "type": "string",
          "text": "Type of the account",
          "required": true
        },
        "account_number": {
          "type": "string",
          "text": "Number associated with the Bank Account"
        },
        "account_code": {
          "type": "string",
          "text": "Code of the Account"
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency associated with the Account"
        },
        "currency_code": {
          "type": "string",
          "text": "Code of the currency associated with the Bank Account"
        },
        "description": {
          "type": "string",
          "text": "Description of the Account"
        },
        "bank_name": {
          "type": "string",
          "text": "Name of the Bank"
        },
        "routing_number": {
          "type": "string",
          "text": "Routing Number of the Account"
        },
        "is_primary_account": {
          "type": "boolean",
          "text": "Check if the Account is Primary Account in Zoho Books",
          "enum": [
            true,
            false
          ]
        },
        "is_paypal_account": {
          "type": "boolean",
          "text": "Check if the Account is Paypal Account",
          "enum": [
            true,
            false
          ]
        },
        "paypal_type": {
          "type": "string",
          "text": "The type of Payment for the Paypal Account"
        },
        "paypal_email_address": {
          "type": "string",
          "text": "Email Address of the Paypal account"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a bank account or a credit card account for your organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#create-a-bank-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts___get": {
      "provider_intent": "zohobooks__books__v3__bankaccounts___get",
      "provider_alias_intent": "/books/v3/bankaccounts",
      "text": "List view of accounts",
      "category": "Bank Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_by": {
          "type": "string",
          "text": "Filter the account by their status"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort the values based on the allowed values"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all bank and credit card accounts for your organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#list-view-of-accounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id___put": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id___put",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id",
      "text": "Update bank account",
      "category": "Bank Accounts",
      "method": "PUT",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_name": {
          "type": "string",
          "text": "Name of the account",
          "required": true
        },
        "account_type": {
          "type": "string",
          "text": "Type of the account",
          "required": true
        },
        "account_number": {
          "type": "string",
          "text": "Number associated with the Bank Account"
        },
        "account_code": {
          "type": "string",
          "text": "Code of the Account"
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency associated with the Account"
        },
        "currency_code": {
          "type": "string",
          "text": "Code of the currency associated with the Bank Account"
        },
        "description": {
          "type": "string",
          "text": "Description of the Account"
        },
        "bank_name": {
          "type": "string",
          "text": "Name of the Bank"
        },
        "routing_number": {
          "type": "string",
          "text": "Routing Number of the Account"
        },
        "is_primary_account": {
          "type": "boolean",
          "text": "Check if the Account is Primary Account in Zoho Books",
          "enum": [
            true,
            false
          ]
        },
        "is_paypal_account": {
          "type": "boolean",
          "text": "Check if the Account is Paypal Account",
          "enum": [
            true,
            false
          ]
        },
        "paypal_type": {
          "type": "string",
          "text": "The type of Payment for the Paypal Account"
        },
        "paypal_email_address": {
          "type": "string",
          "text": "Email Address of the Paypal account"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Modify the account that was created",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#update-bank-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id___get": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id___get",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id",
      "text": "Get account details",
      "category": "Bank Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get a detailed look of the account specified",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#get-account-details"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id___delete": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id___delete",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id",
      "text": "Delete an account",
      "category": "Bank Accounts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a bank account from your organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#delete-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id__inactive___post",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id/inactive",
      "text": "Deactivate account",
      "category": "Bank Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Make an account inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#deactivate-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id__active___post": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id__active___post",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id/active",
      "text": "Activate account",
      "category": "Bank Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Make an account active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#activate-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankstatements___post": {
      "provider_intent": "zohobooks__books__v3__bankstatements___post",
      "provider_alias_intent": "/books/v3/bankstatements",
      "text": "Import a Bank/Credit Card Statement",
      "category": "Bank Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "ID of the Bank/Credit Card account",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "Least date in the transaction set"
        },
        "end_date": {
          "type": "string",
          "text": "Greatest date in the transaction set"
        },
        "transactions": {
          "type": "array",
          "text": "Transactions",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Import your bank/credit card feeds into your account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankstatements",
        "alias_endpoint": "/zohobooks/books/v3/bankstatements",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#import-a-bankcredit-card-statement"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id__statement__lastimported___get": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id__statement__lastimported___get",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id/statement/lastimported",
      "text": "Get last imported statement",
      "category": "Bank Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of previously imported statement for the account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}/statement/lastimported",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id/statement/lastimported",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#get-last-imported-statement"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__account_id__statement__statement_id___delete": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__account_id__statement__statement_id___delete",
      "provider_alias_intent": "/books/v3/bankaccounts/account_id/statement/statement_id",
      "text": "Delete last imported statement",
      "category": "Bank Accounts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        },
        "statement_id": {
          "type": "string",
          "text": "Statement Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        },
        "statement_id": {
          "type": "string",
          "text": "Statement Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the statement that was previously imported",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/{account_id}/statement/{statement_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/account_id/statement/statement_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-accounts/#delete-last-imported-statement"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__rules___post": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__rules___post",
      "provider_alias_intent": "/books/v3/bankaccounts/rules",
      "text": "Create a rule",
      "category": "Bank Rules",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "rule_name": {
          "type": "string",
          "text": "Name of the Rule",
          "required": true
        },
        "target_account_id": {
          "type": "number",
          "text": "The account on which the rule has to be applied",
          "required": true
        },
        "apply_to": {
          "type": "string",
          "text": "Rule applies to either deposits or withdrawals",
          "required": true
        },
        "criteria_type": {
          "type": "string",
          "text": "Specifies whether all the criteria have to be satisfied or not",
          "required": true
        },
        "criterion": {
          "type": "array",
          "text": "Critertio",
          "required": true
        },
        "record_as": {
          "type": "string",
          "text": "Record transaction based on value specified in apply_to node",
          "required": true
        },
        "account_id": {
          "type": "number",
          "text": "Account which is involved in the rule with the target account"
        },
        "customer_id": {
          "type": "number",
          "text": "ID of the customer"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax ID involved in the transaction"
        },
        "reference_number": {
          "type": "string",
          "text": "Specifies if Reference number is manual or generated from the statement"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bank rules"
        },
        "product_type": {
          "type": "string",
          "text": "Product Type associated with the Rule"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the Tax Authority Associated with the Rule"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the Tax Exemption Associated with the Rule"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a rule and apply it on deposit/withdrawal for bank accounts and on refund/charges for credit card accounts",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/rules",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/rules",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-rules/#create-a-rule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__rules___get": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__rules___get",
      "provider_alias_intent": "/books/v3/bankaccounts/rules",
      "text": "Get Rules List",
      "category": "Bank Rules",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "ID of the Bank Account",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Fetch all the rules created for a specified bank or credit card account ID",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/rules",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/rules",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-rules/#get-rules-list"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__rules__rule_id___put": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__rules__rule_id___put",
      "provider_alias_intent": "/books/v3/bankaccounts/rules/rule_id",
      "text": "Update a rule",
      "category": "Bank Rules",
      "method": "PUT",
      "type": "API",
      "params": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "custom_headers": {},
      "body": {
        "rule_name": {
          "type": "string",
          "text": "Name of the Rule",
          "required": true
        },
        "target_account_id": {
          "type": "number",
          "text": "The account on which the rule has to be applied",
          "required": true
        },
        "apply_to": {
          "type": "string",
          "text": "Rule applies to either deposits or withdrawals",
          "required": true
        },
        "criteria_type": {
          "type": "string",
          "text": "Specifies whether all the criteria have to be satisfied or not",
          "required": true
        },
        "criterion": {
          "type": "array",
          "text": "Critertio",
          "required": true
        },
        "record_as": {
          "type": "string",
          "text": "Record transaction based on value specified in apply_to node",
          "required": true
        },
        "account_id": {
          "type": "number",
          "text": "Account which is involved in the rule with the target account"
        },
        "customer_id": {
          "type": "number",
          "text": "ID of the customer"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax ID involved in the transaction"
        },
        "reference_number": {
          "type": "string",
          "text": "Specifies if Reference number is manual or generated from the statement"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bank rules"
        },
        "product_type": {
          "type": "string",
          "text": "Product Type associated with the Rule"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the Tax Authority Associated with the Rule"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the Tax Exemption Associated with the Rule"
        }
      },
      "path": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Make changes to the rule, add or modify it and update",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/rules/{rule_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/rules/rule_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-rules/#update-a-rule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__rules__rule_id___get": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__rules__rule_id___get",
      "provider_alias_intent": "/books/v3/bankaccounts/rules/rule_id",
      "text": "Get a rule",
      "category": "Bank Rules",
      "method": "GET",
      "type": "API",
      "params": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get details of a specific rule",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/rules/{rule_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/rules/rule_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-rules/#get-a-rule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bankaccounts__rules__rule_id___delete": {
      "provider_intent": "zohobooks__books__v3__bankaccounts__rules__rule_id___delete",
      "provider_alias_intent": "/books/v3/bankaccounts/rules/rule_id",
      "text": "Delete a rule",
      "category": "Bank Rules",
      "method": "DELETE",
      "type": "API",
      "params": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "rule_id": {
          "type": "string",
          "text": "Rule Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a rule from your account and make it no longer applicable on the transactions",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bankaccounts/rules/{rule_id}",
        "alias_endpoint": "/zohobooks/books/v3/bankaccounts/rules/rule_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-rules/#get-a-rule"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions___post",
      "provider_alias_intent": "/books/v3/banktransactions",
      "text": "Create a transaction for an account",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "from_account_id": {
          "type": "string",
          "text": "The account ID from which money will be transferred"
        },
        "to_account_id": {
          "type": "string",
          "text": "ID of the account to which the money gets transferred"
        },
        "transaction_type": {
          "type": "string",
          "text": "Type of the transaction"
        },
        "amount": {
          "type": "number",
          "text": "Amount of the transaction"
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode of payment for the transaction"
        },
        "exchange_rate": {
          "type": "number",
          "text": "The foreign currency exchange rate value"
        },
        "date": {
          "type": "string",
          "text": "Transaction date"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer or vendor"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the transaction"
        },
        "description": {
          "type": "string",
          "text": "A brief description about the transaction"
        },
        "currency_id": {
          "type": "string",
          "text": "The currency ID involved in the transaction"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group applied"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Check if transaction is tax Inclusive",
          "enum": [
            true,
            false
          ]
        },
        "tags": {
          "type": "array",
          "text": "Tags"
        },
        "from_account_tags": {
          "type": "array",
          "text": "From account tags"
        },
        "to_account_tag": {
          "type": "arrayc",
          "text": "To account tag"
        },
        "documents": {
          "type": "array",
          "text": "List of files to be attached to a particular transaction"
        },
        "bank_charges": {
          "type": "number",
          "text": "Bank Charges applied to the transaction"
        },
        "user_id": {
          "type": "number",
          "text": "ID of the User involved in the Transaction"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the Tax Authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the Tax Exemption"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a bank transaction based on the allowed transaction types",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#create-a-transaction-for-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions___get": {
      "provider_intent": "zohobooks__books__v3__banktransactions___get",
      "provider_alias_intent": "/books/v3/banktransactions",
      "text": "Get transactions list",
      "category": "Bank Transactions",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account id"
        },
        "transaction_type": {
          "type": "string",
          "text": "Transaction type"
        },
        "date": {
          "type": "string",
          "text": "Start and end date, to provide a range within which the transaction date exist"
        },
        "amount": {
          "type": "string",
          "text": "Start and end amount, to provide a range within which the transaction amount exist"
        },
        "status": {
          "type": "string",
          "text": "Transaction status wise list view"
        },
        "reference_number": {
          "type": "string",
          "text": "Search using Reference Number of the transaction"
        },
        "filter_by": {
          "type": "string",
          "text": "Filters the transactions based on the allowed types"
        },
        "sort_column": {
          "type": "string",
          "text": "Sorts the transactions based on the allowed sort types"
        },
        "transaction_status": {
          "type": "string",
          "text": "Transaction status wise list view"
        },
        "search_text": {
          "type": "string",
          "text": "Search Transactions by contact name or descriptionz"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all the transaction details involved in an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#get-transactions-list"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__bank_transaction_id___put": {
      "provider_intent": "zohobooks__books__v3__banktransactions__bank_transaction_id___put",
      "provider_alias_intent": "/books/v3/banktransactions/bank_transaction_id",
      "text": "Update a transaction",
      "category": "Bank Transactions",
      "method": "PUT",
      "type": "API",
      "params": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {
        "from_account_id": {
          "type": "string",
          "text": "The account ID from which money will be transferred"
        },
        "to_account_id": {
          "type": "string",
          "text": "ID of the account to which the money gets transferred"
        },
        "transaction_type": {
          "type": "string",
          "text": "Type of the transaction"
        },
        "amount": {
          "type": "number",
          "text": "Amount of the transaction"
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode of payment for the transaction"
        },
        "exchange_rate": {
          "type": "number",
          "text": "The foreign currency exchange rate value"
        },
        "date": {
          "type": "string",
          "text": "Transaction date"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer or vendor"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the transaction"
        },
        "description": {
          "type": "string",
          "text": "A brief description about the transaction"
        },
        "currency_id": {
          "type": "string",
          "text": "The currency ID involved in the transaction"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group applied"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Check if transaction is tax Inclusive",
          "enum": [
            true,
            false
          ]
        },
        "tags": {
          "type": "array",
          "text": "Tags"
        },
        "from_account_tags": {
          "type": "array",
          "text": "From account tags"
        },
        "to_account_tag": {
          "type": "arrayc",
          "text": "To account tag"
        },
        "documents": {
          "type": "array",
          "text": "List of files to be attached to a particular transaction"
        },
        "bank_charges": {
          "type": "number",
          "text": "Bank Charges applied to the transaction"
        },
        "user_id": {
          "type": "number",
          "text": "ID of the User involved in the Transaction"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the Tax Authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the Tax Exemption"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        }
      },
      "path": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Make changes in the applicable fields of a transaction and update it",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/{bank_transaction_id}",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/bank_transaction_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#update-a-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__bank_transaction_id___get": {
      "provider_intent": "zohobooks__books__v3__banktransactions__bank_transaction_id___get",
      "provider_alias_intent": "/books/v3/banktransactions/bank_transaction_id",
      "text": "Get transaction",
      "category": "Bank Transactions",
      "method": "GET",
      "type": "API",
      "params": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Fetch the details of a transaction by specifying the transaction_id",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/{bank_transaction_id}",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/bank_transaction_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#get-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__bank_transaction_id___delete": {
      "provider_intent": "zohobooks__books__v3__banktransactions__bank_transaction_id___delete",
      "provider_alias_intent": "/books/v3/banktransactions/bank_transaction_id",
      "text": "Delete a transaction",
      "category": "Bank Transactions",
      "method": "DELETE",
      "type": "API",
      "params": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bank_transaction_id": {
          "type": "string",
          "text": "Bank Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a transaction from an account by specifying the transaction_id",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/{bank_transaction_id}",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/bank_transaction_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#delete-a-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__match___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__match___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/match",
      "text": "Match a transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Match an uncategorized transaction with an existing transaction in the account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/match",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/match",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#match-a-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__match___get": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__match___get",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/match",
      "text": "Get matching transactions",
      "category": "Bank Transactions",
      "method": "GET",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "ID of the Transaction"
        },
        "transaction_type": {
          "type": "string",
          "text": "Type of the transaction"
        },
        "date_after": {
          "type": "string",
          "text": "Date after which Transactions are to be filtered"
        },
        "date_before": {
          "type": "string",
          "text": "Date before which Transactions are to be filtered"
        },
        "amount_start": {
          "type": "string",
          "text": "Starting amout with which transactions are to be filtered"
        },
        "amount_end": {
          "type": "string",
          "text": "Starting amout with which transactions are to be filtered"
        },
        "contact": {
          "type": "string",
          "text": "Contact person name, involved in the transaction"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the transaction"
        },
        "show_all_transactions": {
          "type": "string",
          "text": "Check if all transactions must be shown"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Provide criteria to search for matching uncategorised transactions",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/match",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/match",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#get-matching-transactions"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__transaction_id__unmatch___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__transaction_id__unmatch___post",
      "provider_alias_intent": "/books/v3/banktransactions/transaction_id/unmatch",
      "text": "Unmatch a matched transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "Mandatory Account id for which transactions are to be listed"
        }
      },
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Unmatch a transaction that was previously matched and make it uncategorized",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/{transaction_id}/unmatch",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/transaction_id/unmatch",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#unmatch-a-matched-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__exclude___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__exclude___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/exclude",
      "text": "Exclude a transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "Mandatory Account id for which transactions are to be listed"
        }
      },
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Exclude a transaction from your bank or credit card account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/exclude",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/exclude",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#exclude-a-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__restore___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__restore___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/restore",
      "text": "Restore a transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "Mandatory Account id for which transactions are to be listed"
        }
      },
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Restore an excluded transaction in your account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/restore",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/restore",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#restore-a"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize",
      "text": "Categorize an uncategorized transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an uncategorized transaction by creating a new transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-an-uncategorized-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__expenses___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__expenses___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize/expenses",
      "text": "Categorize as expense",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an Uncategorized transaction as expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize/expenses",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize/expenses",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__transaction_id__uncategorize___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__transaction_id__uncategorize___post",
      "provider_alias_intent": "/books/v3/banktransactions/transaction_id/uncategorize",
      "text": "Uncategorize a categorized transaction",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Revert a categorized transaction as uncategorized",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/{transaction_id}/uncategorize",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/transaction_id/uncategorize",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#uncategorize-a-categorized-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__vendorpayments___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__vendorpayments___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize/vendorpayments",
      "text": "Categorize a vendor payment",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an uncategorized transaction as Vendor Payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize/vendorpayments",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize/vendorpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-a-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__customerpayments___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__customerpayments___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize/customerpayments",
      "text": "Categorize as customer payment",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an uncategorized transaction as Customer Payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize/customerpayments",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize/customerpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-customer-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__creditnoterefunds___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__creditnoterefunds___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize/creditnoterefunds",
      "text": "Categorize as credit note refunds",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an Uncategorized transaction as a refund from a credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize/creditnoterefunds",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize/creditnoterefunds",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-credit-note-refunds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__vendorcreditrefunds___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__transaction_id__categorize__vendorcreditrefunds___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/transaction_id/categorize/vendorcreditrefunds",
      "text": "Categorize as vendor credit refunds",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorize an uncategorized transaction as a refund from a vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{transaction_id}/categorize/vendorcreditrefunds",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/transaction_id/categorize/vendorcreditrefunds",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-vendor-credit-refunds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__statement_line_id__categorize__paymentrefunds___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__statement_line_id__categorize__paymentrefunds___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/statement_line_id/categorize/paymentrefunds",
      "text": "Categorize as Customer Payment refund",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "statement_line_id": {
          "type": "string",
          "text": "Statement Line Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "statement_line_id": {
          "type": "string",
          "text": "Statement Line Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorizing bank transactions as Payment Refund",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{statement_line_id}/categorize/paymentrefunds",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/statement_line_id/categorize/paymentrefunds",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-customer-payment-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__banktransactions__uncategorized__statement_line_id__categorize__vendorpaymentrefunds___post": {
      "provider_intent": "zohobooks__books__v3__banktransactions__uncategorized__statement_line_id__categorize__vendorpaymentrefunds___post",
      "provider_alias_intent": "/books/v3/banktransactions/uncategorized/statement_line_id/categorize/vendorpaymentrefunds",
      "text": "Categorize as Vendor Payment refund",
      "category": "Bank Transactions",
      "method": "POST",
      "type": "API",
      "params": {
        "statement_line_id": {
          "type": "string",
          "text": "Statement Line Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "statement_line_id": {
          "type": "string",
          "text": "Statement Line Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Categorizing bank transactions as Vendor Payment Refund",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/banktransactions/uncategorized/{statement_line_id}/categorize/vendorpaymentrefunds",
        "alias_endpoint": "/zohobooks/books/v3/banktransactions/uncategorized/statement_line_id/categorize/vendorpaymentrefunds",
        "api_ref": "https://www.zoho.com/books/api/v3/bank-transactions/#categorize-as-vendor-payment-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.banking.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__basecurrencyadjustment___post": {
      "provider_intent": "zohobooks__books__v3__basecurrencyadjustment___post",
      "provider_alias_intent": "/books/v3/basecurrencyadjustment",
      "text": "Create a base currency adjustment",
      "category": "Base Currency Adjustment",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "currency_id": {
          "type": "string",
          "text": "ID of currency for which we need to post adjustment",
          "required": true
        },
        "adjustment_date": {
          "type": "string",
          "text": "Date of adjustment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency",
          "required": true
        },
        "notes": {
          "type": "string",
          "text": "Notes for base currency adjustment",
          "required": true
        },
        "account_ids": {
          "type": "string",
          "text": "ID of the accounts for which base currency adjustments need to be posted",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Creates a base currency adjustment for the given information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/basecurrencyadjustment",
        "alias_endpoint": "/zohobooks/books/v3/basecurrencyadjustment",
        "api_ref": "https://www.zoho.com/books/api/v3/base-currency-adjustment/#create-a-base-currency-adjustment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__basecurrencyadjustment___get": {
      "provider_intent": "zohobooks__books__v3__basecurrencyadjustment___get",
      "provider_alias_intent": "/books/v3/basecurrencyadjustment",
      "text": "List base currency adjustment",
      "category": "Base Currency Adjustment",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_by": {
          "type": "string",
          "text": "Filter base currency adjustment list"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort base currency adjustment list"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search using the Last Modified Time of the Base Currency Adjustment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Lists base currency adjustment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/basecurrencyadjustment",
        "alias_endpoint": "/zohobooks/books/v3/basecurrencyadjustment",
        "api_ref": "https://www.zoho.com/books/api/v3/base-currency-adjustment/#list-base-currency-adjustment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__basecurrencyadjustment__base_currency_adjustment_id___get": {
      "provider_intent": "zohobooks__books__v3__basecurrencyadjustment__base_currency_adjustment_id___get",
      "provider_alias_intent": "/books/v3/basecurrencyadjustment/base_currency_adjustment_id",
      "text": "Get a base currency adjustment",
      "category": "Base Currency Adjustment",
      "method": "GET",
      "type": "API",
      "params": {
        "base_currency_adjustment_id": {
          "type": "string",
          "text": "Base Currency Adjustment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "base_currency_adjustment_id": {
          "type": "string",
          "text": "Base Currency Adjustment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the base currency adjustment details",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/basecurrencyadjustment/{base_currency_adjustment_id}",
        "alias_endpoint": "/zohobooks/books/v3/basecurrencyadjustment/base_currency_adjustment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/base-currency-adjustment/#get-a-base-currency-adjustment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__basecurrencyadjustment__base_currency_adjustment_id___delete": {
      "provider_intent": "zohobooks__books__v3__basecurrencyadjustment__base_currency_adjustment_id___delete",
      "provider_alias_intent": "/books/v3/basecurrencyadjustment/base_currency_adjustment_id",
      "text": "Delete a base currency adjustment",
      "category": "Base Currency Adjustment",
      "method": "DELETE",
      "type": "API",
      "params": {
        "base_currency_adjustment_id": {
          "type": "string",
          "text": "Base Currency Adjustment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "base_currency_adjustment_id": {
          "type": "string",
          "text": "Base Currency Adjustment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deletes the base currency adjustment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/basecurrencyadjustment/{base_currency_adjustment_id}",
        "alias_endpoint": "/zohobooks/books/v3/basecurrencyadjustment/base_currency_adjustment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/base-currency-adjustment/#delete-a-base-currency-adjustment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__basecurrencyadjustment__accounts___get": {
      "provider_intent": "zohobooks__books__v3__basecurrencyadjustment__accounts___get",
      "provider_alias_intent": "/books/v3/basecurrencyadjustment/accounts",
      "text": "List account details for base currency adjustment",
      "category": "Base Currency Adjustment",
      "method": "GET",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "ID of currency for which we need to post adjustment",
          "required": true
        },
        "adjustment_date": {
          "type": "string",
          "text": "Date of adjustment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency",
          "required": true
        },
        "notes": {
          "type": "string",
          "text": "Notes for base currency adjustment",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List of accounts having transaction with effect to the given exchange rate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/basecurrencyadjustment/accounts",
        "alias_endpoint": "/zohobooks/books/v3/basecurrencyadjustment/accounts",
        "api_ref": "https://www.zoho.com/books/api/v3/base-currency-adjustment/#list-account-details-for-base-currency-adjustment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills___post": {
      "provider_intent": "zohobooks__books__v3__bills___post",
      "provider_alias_intent": "/books/v3/bills",
      "text": "Create a bill",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the bill has to be created",
          "required": true
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Check if cutomer should be updated",
          "enum": [
            true,
            false
          ]
        },
        "purchaseorder_ids": {
          "type": "array",
          "text": "Purchaseorder ids"
        },
        "bill_number": {
          "type": "string",
          "text": "The bill number",
          "required": true
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "permit_number": {
          "type": "string",
          "text": "The permit number for the bill"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the bil"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter ID of the price book"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the entity"
        },
        "date": {
          "type": "string",
          "text": "The date the bill was created"
        },
        "due_date": {
          "type": "string",
          "text": "Date bill is due"
        },
        "payment_terms": {
          "type": "number",
          "text": "Number Referring to Payment Terms"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label of the Payment Terms"
        },
        "recurring_bill_id": {
          "type": "string",
          "text": "ID of the Recurring Bill"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "is_item_level_tax_calc": {
          "type": "boolean",
          "text": "Check if Item Level Tax Calculation is present",
          "enum": [
            true,
            false
          ]
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the bill"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a bill"
        },
        "taxes": {
          "type": "array",
          "text": "Taxes"
        },
        "notes": {
          "type": "string",
          "text": "Notes for the Bill"
        },
        "terms": {
          "type": "string",
          "text": "Terms and Conditions for the Bill"
        },
        "approvers": {
          "type": "array",
          "text": "Approvers"
        },
        "attachment": {
          "type": "string",
          "text": "File to attach"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a bill received from your vendor",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills",
        "alias_endpoint": "/zohobooks/books/v3/bills",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#create-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills___get": {
      "provider_intent": "zohobooks__books__v3__bills___get",
      "provider_alias_intent": "/books/v3/bills",
      "text": "List bills",
      "category": "Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "bill_number": {
          "type": "string",
          "text": "Search bills by bill number",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "Search bills by reference_number number"
        },
        "date": {
          "type": "string",
          "text": "Search bills by bill date"
        },
        "status": {
          "type": "string",
          "text": "Search bills by bill status"
        },
        "description": {
          "type": "string",
          "text": "Search bills by description"
        },
        "vendor_name": {
          "type": "string",
          "text": "Search bills by vendor name"
        },
        "total": {
          "type": "string",
          "text": "Search bills by bill total"
        },
        "vendor_id": {
          "type": "string",
          "text": "Search bills by Vendor ID"
        },
        "item_id": {
          "type": "string",
          "text": "Search bills by Item ID"
        },
        "recurring_bill_id": {
          "type": "string",
          "text": "Search bills by Recurring Bill ID"
        },
        "purchaseorder_id": {
          "type": "string",
          "text": "Search bills by Purchase Order ID"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search bills by Last Modified Time"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter bills by any status"
        },
        "search_text": {
          "type": "string",
          "text": "Search bills by bill number or reference number or vendor name"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort bills"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all bills with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills",
        "alias_endpoint": "/zohobooks/books/v3/bills",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#list-bills"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ\n",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id___put": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id___put",
      "provider_alias_intent": "/books/v3/bills/bill_id",
      "text": "Update a bill",
      "category": "Bills",
      "method": "PUT",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the bill has to be created",
          "required": true
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Check if cutomer should be updated",
          "enum": [
            true,
            false
          ]
        },
        "purchaseorder_ids": {
          "type": "array",
          "text": "Purchaseorder ids"
        },
        "bill_number": {
          "type": "string",
          "text": "The bill number",
          "required": true
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "permit_number": {
          "type": "string",
          "text": "The permit number for the bill"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the bil"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter ID of the price book"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the entity"
        },
        "date": {
          "type": "string",
          "text": "The date the bill was created"
        },
        "due_date": {
          "type": "string",
          "text": "Date bill is due"
        },
        "payment_terms": {
          "type": "number",
          "text": "Number Referring to Payment Terms"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label of the Payment Terms"
        },
        "recurring_bill_id": {
          "type": "string",
          "text": "ID of the Recurring Bill"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "is_item_level_tax_calc": {
          "type": "boolean",
          "text": "Check if Item Level Tax Calculation is present",
          "enum": [
            true,
            false
          ]
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the bill"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a bill"
        },
        "taxes": {
          "type": "array",
          "text": "Taxes"
        },
        "notes": {
          "type": "string",
          "text": "Notes for the Bill"
        },
        "terms": {
          "type": "string",
          "text": "Terms and Conditions for the Bill"
        },
        "approvers": {
          "type": "array",
          "text": "Approvers"
        },
        "attachment": {
          "type": "string",
          "text": "File to attach"
        }
      },
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update a bill. To delete a line item just remove it from the line_items list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#update-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id___get": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id___get",
      "provider_alias_intent": "/books/v3/bills/bill_id",
      "text": "Get a bill",
      "category": "Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#get-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id___delete": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id___delete",
      "provider_alias_intent": "/books/v3/bills/bill_id",
      "text": "Delete a bill",
      "category": "Bills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing bill. Bills which have payments applied cannot be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#delete-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__status__void___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/status/void",
      "text": "Void a bill",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a bill status as void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#void-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__status__open___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__status__open___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/status/open",
      "text": "Mark a bill as open",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a void bill as open",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/status/open",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/status/open",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#mark-a-bill-as-open"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__submit___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/submit",
      "text": "Submit a bill for approval",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit a bill for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#submit-a-bill-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__approve___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/approve",
      "text": "Approve a bill",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#approve-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__address__billing___put",
      "provider_alias_intent": "/books/v3/bills/bill_id/address/billing",
      "text": "Update billing address",
      "category": "Bills",
      "method": "PUT",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Address involved in the Bill"
        },
        "city": {
          "type": "string",
          "text": "City in the Address"
        },
        "state": {
          "type": "string",
          "text": "State involved in the Address"
        },
        "zip": {
          "type": "string",
          "text": "ZIP Code involved in the Address"
        },
        "country": {
          "type": "string",
          "text": "Country Involved in the Address"
        },
        "fax": {
          "type": "string",
          "text": "Fax of the Vendor"
        },
        "attention": {
          "type": "string",
          "text": "Attention"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Check if cutomer should be updated",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__payments___get": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__payments___get",
      "provider_alias_intent": "/books/v3/bills/bill_id/payments",
      "text": "List bill payments",
      "category": "Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the list of payments made for a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/payments",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/payments",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#list-bill-payments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__credits___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__credits___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/credits",
      "text": "Apply credits",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {
        "bill_payments": {
          "type": "array",
          "text": "Bill payments"
        },
        "apply_vendor_credits": {
          "type": "array",
          "text": "Apply vendor credits"
        }
      },
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Apply the vendor credits from excess vendor payments to a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/credits",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/credits",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#apply-credits"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__payments__bill_payment_id___delete": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__payments__bill_payment_id___delete",
      "provider_alias_intent": "/books/v3/bills/bill_id/payments/bill_payment_id",
      "text": "Delete a payment",
      "category": "Bills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        },
        "bill_payment_id": {
          "type": "string",
          "text": "Bill Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        },
        "bill_payment_id": {
          "type": "string",
          "text": "Bill Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a payment made to a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/payments/{bill_payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/payments/bill_payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#delete-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__attachment___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/attachment",
      "text": "Add attachment to a bill",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#add-attachment-to-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__attachment___get": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__attachment___get",
      "provider_alias_intent": "/books/v3/bills/bill_id/attachment",
      "text": "Get a bill attachment",
      "category": "Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        },
        "preview": {
          "type": "string",
          "text": "Get the thumbnail of the attachment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the file attached to the bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#get-a-bill-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__attachment___delete": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__attachment___delete",
      "provider_alias_intent": "/books/v3/bills/bill_id/attachment",
      "text": "Delete an attachment",
      "category": "Bills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the file attached to a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#delete-an-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__comments___post",
      "provider_alias_intent": "/books/v3/bills/bill_id/comments",
      "text": "Add comment",
      "category": "Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description of the line item",
          "required": true
        }
      },
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__comments___get",
      "provider_alias_intent": "/books/v3/bills/bill_id/comments",
      "text": "List bill comments & history",
      "category": "Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#list-bill-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__bills__bill_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__bills__bill_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/bills/bill_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Bills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "bill_id": {
          "type": "string",
          "text": "Bill Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a bill comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/bills/{bill_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/bills/bill_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/bills/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts___post": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts___post",
      "provider_alias_intent": "/books/v3/chartofaccounts",
      "text": "Create an account",
      "category": "Chart Of Accounts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "account_name": {
          "type": "string",
          "text": "Name of the account"
        },
        "account_code": {
          "type": "string",
          "text": "Code Associated with the Account"
        },
        "account_type": {
          "type": "string",
          "text": "Type of the account"
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the account currenc"
        },
        "description": {
          "type": "string",
          "text": "Descri ption of the account"
        },
        "show_on_dashboard": {
          "type": "boolean",
          "text": "Show on dashboard",
          "enum": [
            true,
            false
          ]
        },
        "can_show_in_ze": {
          "type": "boolean",
          "text": "Can show in ze",
          "enum": [
            true,
            false
          ]
        },
        "include_in_vat_return": {
          "type": "boolean",
          "text": "Boolean to include an account in VAT returns",
          "enum": [
            true,
            false
          ]
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "parent_account_id": {
          "type": "string",
          "text": "ID of the Parent Account"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Creates an account with the given account type",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#create-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts___get": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts___get",
      "provider_alias_intent": "/books/v3/chartofaccounts",
      "text": "List chart of accounts",
      "category": "Chart Of Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "showbalance": {
          "type": "string",
          "text": "Boolean to get current balance of accounts"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter accounts based on its account type and status"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort accounts"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Last modified time"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all chart of accounts along with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#list-chart-of-accounts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__account_id___put": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__account_id___put",
      "provider_alias_intent": "/books/v3/chartofaccounts/account_id",
      "text": "Update an account",
      "category": "Chart Of Accounts",
      "method": "PUT",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_name": {
          "type": "string",
          "text": "Name of the account"
        },
        "account_code": {
          "type": "string",
          "text": "Code Associated with the Account"
        },
        "account_type": {
          "type": "string",
          "text": "Type of the account"
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the account currenc"
        },
        "description": {
          "type": "string",
          "text": "Descri ption of the account"
        },
        "show_on_dashboard": {
          "type": "boolean",
          "text": "Show on dashboard",
          "enum": [
            true,
            false
          ]
        },
        "can_show_in_ze": {
          "type": "boolean",
          "text": "Can show in ze",
          "enum": [
            true,
            false
          ]
        },
        "include_in_vat_return": {
          "type": "boolean",
          "text": "Boolean to include an account in VAT returns",
          "enum": [
            true,
            false
          ]
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "parent_account_id": {
          "type": "string",
          "text": "ID of the Parent Account"
        }
      },
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the account information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#update-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__account_id___get": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__account_id___get",
      "provider_alias_intent": "/books/v3/chartofaccounts/account_id",
      "text": "Get an account",
      "category": "Chart Of Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Gets the details of an account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#get-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__account_id___delete": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__account_id___delete",
      "provider_alias_intent": "/books/v3/chartofaccounts/account_id",
      "text": "Delete an account",
      "category": "Chart Of Accounts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deletes the given account. Accounts associated in any transaction/products could not be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/{account_id}",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/account_id",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#delete-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__account_id__active___post": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__account_id__active___post",
      "provider_alias_intent": "/books/v3/chartofaccounts/account_id/active",
      "text": "Mark an account as active",
      "category": "Chart Of Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the account status as active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/{account_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/account_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#mark-an-account-as-active"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__account_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__account_id__inactive___post",
      "provider_alias_intent": "/books/v3/chartofaccounts/account_id/inactive",
      "text": "Mark an account as inactive",
      "category": "Chart Of Accounts",
      "method": "POST",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "account_id": {
          "type": "string",
          "text": "Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the account status as inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/{account_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/account_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#mark-an-account-as-inactive"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__transactions___get": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__transactions___get",
      "provider_alias_intent": "/books/v3/chartofaccounts/transactions",
      "text": "List of transactions for an account",
      "category": "Chart Of Accounts",
      "method": "GET",
      "type": "API",
      "params": {
        "account_id": {
          "type": "string",
          "text": "ID of the Account",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Search account transactions with the given date range"
        },
        "amount": {
          "type": "string",
          "text": "Search account transactions with given amount range"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter accounts based on its account type and status"
        },
        "transaction_type": {
          "type": "string",
          "text": "Search transactions based on the given transaction type"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort accounts"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all involved transactions for the given account",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/transactions",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/transactions",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#list-of-transactions-for-an-account"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__chartofaccounts__transactions__transaction_id___delete": {
      "provider_intent": "zohobooks__books__v3__chartofaccounts__transactions__transaction_id___delete",
      "provider_alias_intent": "/books/v3/chartofaccounts/transactions/transaction_id",
      "text": "Delete a transaction",
      "category": "Chart Of Accounts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "transaction_id": {
          "type": "string",
          "text": "Transaction Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deletes the transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/chartofaccounts/transactions/{transaction_id}",
        "alias_endpoint": "/zohobooks/books/v3/chartofaccounts/transactions/transaction_id",
        "api_ref": "https://www.zoho.com/books/api/v3/chart-of-accounts/#delete-a-transaction"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contactpersons___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contactpersons___post",
      "provider_alias_intent": "/books/v3/contacts/contactpersons",
      "text": "Create a contact person",
      "category": "Contact Persons",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contact_id": {
          "type": "string",
          "text": "Contact id of the contact"
        },
        "salutation": {
          "type": "string",
          "text": "Salutation for the contact"
        },
        "first_name": {
          "type": "string",
          "text": "First name of the contact person",
          "required": true
        },
        "last_name": {
          "type": "string",
          "text": "Last name of the contact person"
        },
        "email": {
          "type": "string",
          "text": "Email address of the contact person"
        },
        "phone": {
          "type": "string",
          "text": "Max-length [50]"
        },
        "mobile": {
          "type": "string",
          "text": "Max-length [50]"
        },
        "skype": {
          "type": "string",
          "text": "skype address Max-length [50]"
        },
        "designation": {
          "type": "string",
          "text": "designation of a person Max-length [50]"
        },
        "department": {
          "type": "string",
          "text": "department on which a person belongs Max-length [50]"
        },
        "enable_portal": {
          "type": "boolean",
          "text": "option to enable the portal access",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a contact person for contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/contactpersons",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contactpersons",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#create-a-contact-person"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contact__contactpersons__contact_person_id___put": {
      "provider_intent": "zohobooks__books__v3__contact__contactpersons__contact_person_id___put",
      "provider_alias_intent": "/books/v3/contact/contactpersons/contact_person_id",
      "text": "Update a contact person",
      "category": "Contact Persons",
      "method": "PUT",
      "type": "API",
      "params": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "custom_headers": {},
      "body": {
        "contact_id": {
          "type": "string",
          "text": "Contact id of the contact",
          "required": true
        },
        "salutation": {
          "type": "string",
          "text": "Salutation for the contact"
        },
        "first_name": {
          "type": "string",
          "text": "First name of the contact person",
          "required": true
        },
        "last_name": {
          "type": "string",
          "text": "Last name of the contact person"
        },
        "email": {
          "type": "string",
          "text": "Email address of the contact person"
        },
        "phone": {
          "type": "string",
          "text": "Max-length [50]"
        },
        "mobile": {
          "type": "string",
          "text": "Max-length [50]"
        },
        "skype": {
          "type": "string",
          "text": "skype address Max-length [50]"
        },
        "designation": {
          "type": "string",
          "text": "designation of a person Max-length [50]"
        },
        "department": {
          "type": "string",
          "text": "department on which a person belongs Max-length [50]"
        },
        "enable_portal": {
          "type": "boolean",
          "text": "option to enable the portal access",
          "enum": [
            true,
            false
          ]
        },
        "is_primary_contact": {
          "type": "boolean",
          "text": "To mark contact person as primary for contact",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing contact person",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contact/contactpersons/{contact_person_id}",
        "alias_endpoint": "/zohobooks/books/v3/contact/contactpersons/contact_person_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#update-a-contact-person"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contact__contactpersons__contact_person_id___delete": {
      "provider_intent": "zohobooks__books__v3__contact__contactpersons__contact_person_id___delete",
      "provider_alias_intent": "/books/v3/contact/contactpersons/contact_person_id",
      "text": "Delete a contact person",
      "category": "Contact Persons",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing contact person",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contact/contactpersons/{contact_person_id}",
        "alias_endpoint": "/zohobooks/books/v3/contact/contactpersons/contact_person_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#delete-a-contact-person"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contact__contact_id__contactpersons___get": {
      "provider_intent": "zohobooks__books__v3__contact__contact_id__contactpersons___get",
      "provider_alias_intent": "/books/v3/contact/contact_id/contactpersons",
      "text": "List contact persons",
      "category": "Contact Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all contacts with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contact/{contact_id}/contactpersons",
        "alias_endpoint": "/zohobooks/books/v3/contact/contact_id/contactpersons",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#list-contact-persons"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contact__contact_id__contactpersons__contact_person_id___get": {
      "provider_intent": "zohobooks__books__v3__contact__contact_id__contactpersons__contact_person_id___get",
      "provider_alias_intent": "/books/v3/contact/contact_id/contactpersons/contact_person_id",
      "text": "Get a contact person",
      "category": "Contact Persons",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the contact person details",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contact/{contact_id}/contactpersons/{contact_person_id}",
        "alias_endpoint": "/zohobooks/books/v3/contact/contact_id/contactpersons/contact_person_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#get-a-contact-person"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contact__contactpersons__contact_person_id__primary___post": {
      "provider_intent": "zohobooks__books__v3__contact__contactpersons__contact_person_id__primary___post",
      "provider_alias_intent": "/books/v3/contact/contactpersons/contact_person_id/primary",
      "text": "Mark as primary contact person",
      "category": "Contact Persons",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_person_id": {
          "type": "string",
          "text": "Contact Person Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a contact person as primary for the contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contact/contactpersons/{contact_person_id}/primary",
        "alias_endpoint": "/zohobooks/books/v3/contact/contactpersons/contact_person_id/primary",
        "api_ref": "https://www.zoho.com/books/api/v3/contact-persons/#mark-as-primary-contact-person"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts___post": {
      "provider_intent": "zohobooks__books__v3__contacts___post",
      "provider_alias_intent": "/books/v3/contacts",
      "text": "Create a Contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "contact_name": {
          "type": "string",
          "text": "Display Name of the contact",
          "required": true
        },
        "company_name": {
          "type": "string",
          "text": "Company Name of the contact"
        },
        "website": {
          "type": "string",
          "text": "Website of the contact"
        },
        "language_code": {
          "type": "string",
          "text": "language of a contact"
        },
        "contact_type": {
          "type": "string",
          "text": "Contact type of the contact"
        },
        "customer_sub_type": {
          "type": "string",
          "text": "Type of the customer"
        },
        "credit_limit": {
          "type": "number",
          "text": "Credit limit for a customer"
        },
        "tags": {
          "type": "array",
          "text": "Filter all your reports based on the tag"
        },
        "is_portal_enabled": {
          "type": "boolean",
          "text": "To enable client portal for the contact",
          "enum": [
            true,
            false
          ]
        },
        "currency_id": {
          "type": "string",
          "text": "Currency ID of the customer's currency"
        },
        "payment_terms": {
          "type": "number",
          "text": "Net payment term for the customer"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label for the paymet due details"
        },
        "notes": {
          "type": "string",
          "text": "Commennts about the payment made by the contact"
        },
        "billing_address": {
          "type": "object",
          "text": "Billing address of the contact"
        },
        "shipping_address": {
          "type": "object",
          "text": "Customer's shipping address object"
        },
        "contact_persons": {
          "type": "array",
          "text": "default is Contact persons of a contact"
        },
        "default_templates": {
          "type": "object",
          "text": "default_templates"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields of the contact"
        },
        "opening_balance_amount": {
          "type": "number",
          "text": "Opening balance amount for a contact"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate for the opening balance"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a contact with given information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts",
        "alias_endpoint": "/zohobooks/books/v3/contacts",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#create-a-contact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts___get": {
      "provider_intent": "zohobooks__books__v3__contacts___get",
      "provider_alias_intent": "/books/v3/contacts",
      "text": "List Contacts",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_name": {
          "type": "string",
          "text": "Search contacts by contact name"
        },
        "company_name": {
          "type": "string",
          "text": "Search contacts by company name"
        },
        "first_name": {
          "type": "string",
          "text": "Search contacts by first name of the contact person"
        },
        "last_name": {
          "type": "string",
          "text": "Search contacts by last name of the contact person"
        },
        "address": {
          "type": "string",
          "text": "Search contacts by any of the address fields"
        },
        "email": {
          "type": "string",
          "text": "Search contacts by email of the contact person"
        },
        "phone": {
          "type": "string",
          "text": "Search contacts by phone number of the contact person"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter contacts by status"
        },
        "search_text": {
          "type": "string",
          "text": "Search contacts by contact name or notes"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort contacts"
        },
        "zcrm_contact_id": {
          "type": "string",
          "text": "CRM Contact ID for the contact"
        },
        "zcrm_account_id": {
          "type": "string",
          "text": "CRM Account ID for the contact"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all contacts with pagination.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts",
        "alias_endpoint": "/zohobooks/books/v3/contacts",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#list-contacts"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id___put": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id___put",
      "provider_alias_intent": "/books/v3/contacts/contact_id",
      "text": "Update a Contact",
      "category": "Contacts",
      "method": "PUT",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {
        "contact_name": {
          "type": "string",
          "text": "Display Name of the contact",
          "required": true
        },
        "company_name": {
          "type": "string",
          "text": "Company Name of the contact"
        },
        "payment_terms": {
          "type": "number",
          "text": "Net payment term for the customer"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label for the paymet due details"
        },
        "contact_type": {
          "type": "string",
          "text": "Contact type of the contact"
        },
        "customer_sub_type": {
          "type": "string",
          "text": "Type of the customer"
        },
        "currency_id": {
          "type": "string",
          "text": "Currency ID of the customer's currency"
        },
        "opening_balance_amount": {
          "type": "number",
          "text": "Opening balance amount for a contact"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate for the opening balance"
        },
        "credit_limit": {
          "type": "number",
          "text": "Currency ID of the customer's currency"
        },
        "tags": {
          "type": "array",
          "text": "Filter all your reports based on the tag"
        },
        "website": {
          "type": "string",
          "text": "Website of the contact"
        },
        "owner_id": {
          "type": "string",
          "text": "For Customer Only : If a contact is assigned to any particular user, that user can manage transactions for the contact"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom Fields"
        },
        "billing_address": {
          "type": "object",
          "text": "Billing address of the contact"
        },
        "shipping_address": {
          "type": "object",
          "text": "Customer's shipping address object"
        },
        "contact_persons": {
          "type": "array",
          "text": "Contact Persons"
        },
        "default_templates": {
          "type": "object",
          "text": "Defaul Templates"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#update-a-contact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id___get": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id___get",
      "provider_alias_intent": "/books/v3/contacts/contact_id",
      "text": "Get Contact",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get details of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#get-contact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id___delete": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id___delete",
      "provider_alias_intent": "/books/v3/contacts/contact_id",
      "text": "Delete a Contact",
      "category": "Contacts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#delete-a-contact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__active___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__active___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/active",
      "text": "Mark as Active",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a contact as active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#mark-as-active"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__inactive___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/inactive",
      "text": "Mark as Inactive",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a contact as inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#mark-as-inactive"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__portal__enable___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__portal__enable___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/portal/enable",
      "text": "Enable Portal Access",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Enable portal access for a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/portal/enable",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/portal/enable",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#enable-portal-access"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__paymentreminder__enable___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__paymentreminder__enable___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/paymentreminder/enable",
      "text": "Enable Payment Reminders",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Enable automated payment reminders for a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/paymentreminder/enable",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/paymentreminder/enable",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#enable-payment-reminders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__paymentreminder__disable___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__paymentreminder__disable___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/paymentreminder/disable",
      "text": "Disable Payment Reminders",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Disable automated payment reminders for a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/paymentreminder/disable",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/paymentreminder/disable",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#disable-payment-reminders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__statements__email___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__statements__email___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/statements/email",
      "text": "Email Statement",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be cced"
        },
        "subject": {
          "type": "string",
          "text": "Subject of an email has to be sent",
          "required": true
        },
        "body": {
          "type": "string",
          "text": "Body of an email has to be sent",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "If start_date and end_date are not given, current month's statement will be sent to contact"
        },
        "end_date": {
          "type": "string",
          "text": "End date for the statement"
        },
        "multipart_or_formdata": {
          "type": "string",
          "text": "Files to be attached along with the statement"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email statement to the contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/statements/email",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/statements/email",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#email-statement"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__statements__email___get": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__statements__email___get",
      "provider_alias_intent": "/books/v3/contacts/contact_id/statements/email",
      "text": "Get Statement Mail Content",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "start_date": {
          "type": "string",
          "text": "If start_date and end_date are not given, current month's statement will be sent to contact"
        },
        "end_date": {
          "type": "array",
          "text": "End date for the statement"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the statement mail content",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/statements/email",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/statements/email",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#get-statement-mail-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__email___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__email___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/email",
      "text": "Email Contact",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "Subject of an email has to be sent",
          "required": true
        },
        "body": {
          "type": "string",
          "text": "Body of an email has to be sent",
          "required": true
        },
        "attachments": {
          "type": "file",
          "text": "Files to be attached to the email"
        },
        "send_customer_statement": {
          "type": "string",
          "text": "Send customer statement pdf with email"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Send email to contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#email-contact"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__comments___get",
      "provider_alias_intent": "/books/v3/contacts/contact_id/comments",
      "text": "List Comments",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List recent activities of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#list-comments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__address___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__address___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/address",
      "text": "Add Additional Address",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {
        "attention": {
          "type": "string",
          "text": "Attention"
        },
        "address": {
          "type": "string",
          "text": "Address"
        },
        "street2": {
          "type": "string",
          "text": "Street2"
        },
        "state": {
          "type": "string",
          "text": "State"
        },
        "zip": {
          "type": "string",
          "text": "Send customer statement pdf with email"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        },
        "phone": {
          "type": "string",
          "text": "phone number of the contact person"
        }
      },
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add an additional address for a contact using the arguments below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/address",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/address",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#add-additional-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__address___get": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__address___get",
      "provider_alias_intent": "/books/v3/contacts/contact_id/address",
      "text": "Get Contact Addresses",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get addresses of a contact including its Shipping Address, Billing Address and other additional addresses",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/address",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/address",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#get-contact-addresses"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__address__address_id___put": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__address__address_id___put",
      "provider_alias_intent": "/books/v3/contacts/contact_id/address/address_id",
      "text": "Edit Additional Address",
      "category": "Contacts",
      "method": "PUT",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "address_id": {
          "type": "string",
          "text": "Address Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "address_id": {
          "type": "string",
          "text": "Address Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Edit the additional address of a contact using the arguments below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/address/{address_id}",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/address/address_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#edit-additional-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__address__address_id___delete": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__address__address_id___delete",
      "provider_alias_intent": "/books/v3/contacts/contact_id/address/address_id",
      "text": "Delete Additional Address",
      "category": "Contacts",
      "method": "DELETE",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "address_id": {
          "type": "string",
          "text": "Address Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        },
        "address_id": {
          "type": "string",
          "text": "Address Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the additional address of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/address/{address_id}",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/address/address_id",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#delete-additional-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__refunds___get": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__refunds___get",
      "provider_alias_intent": "/books/v3/contacts/contact_id/refunds",
      "text": "List Refunds",
      "category": "Contacts",
      "method": "GET",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List the refund history of a contact",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#list-refunds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__track1099___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__track1099___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/track1099",
      "text": "Track 1099",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Track a contact for 1099 reporting: (Note: This API is only available when the organization's country is U.S.A)",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/track1099",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/track1099",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#track-1099"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__contacts__contact_id__untrack1099___post": {
      "provider_intent": "zohobooks__books__v3__contacts__contact_id__untrack1099___post",
      "provider_alias_intent": "/books/v3/contacts/contact_id/untrack1099",
      "text": "Untrack 1099",
      "category": "Contacts",
      "method": "POST",
      "type": "API",
      "params": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "contact_id": {
          "type": "string",
          "text": "Contact Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "se this API to stop tracking payments to a vendor for 1099 reporting. (Note: This API is only available when the organization's country is U.S.A)",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/contacts/{contact_id}/untrack1099",
        "alias_endpoint": "/zohobooks/books/v3/contacts/contact_id/untrack1099",
        "api_ref": "https://www.zoho.com/books/api/v3/contacts/#untrack-1099"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes___post",
      "provider_alias_intent": "/books/v3/creditnotes",
      "text": "Create a credit note",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "contact_persons": {
          "type": "array",
          "text": "Contact Persons associated with the credit note"
        },
        "date": {
          "type": "string",
          "text": "The date on which credit note is raised",
          "required": true
        },
        "is_draft": {
          "type": "boolean",
          "text": "Set to true if credit note has to be created in draft status",
          "enum": [
            true,
            false
          ]
        },
        "exchange_rate": {
          "type": "string",
          "text": "Exchange rate for the currency associated with the customer"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a credit note",
          "required": true
        },
        "creditnote_number": {
          "type": "string",
          "text": "Unique number generated (starts with CN) which will be displayed in the interface and credit notes",
          "required": true
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the credit note"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the custome"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "cfdi_reference_type": {
          "type": "string",
          "text": "Choose CFDI Reference Type"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "ignore_auto_number_generation": {
          "type": "boolean",
          "text": "Set to true if you need to provide your own credit note number",
          "enum": [
            true,
            false
          ]
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "custom_fields": {
          "type": "array",
          "text": "Additional fields for the Credit-Notes"
        },
        "notes": {
          "type": "string",
          "text": "A short note for the credit note"
        },
        "terms": {
          "type": "string",
          "text": "Terms & condition to be displayed in the credit note"
        },
        "template_id": {
          "type": "string",
          "text": "Unique ID of the creditnote template"
        },
        "tax_id": {
          "type": "string",
          "text": "Unique to denote the tax associated to the creditnote"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "Unique ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "Unique ID of the tax exemption"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items (products, services, or charges) together"
        },
        "invoice_id": {
          "type": "string",
          "text": "Invoice ID of the required invoice"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Details of an existing creditnote",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#create-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes___get",
      "provider_alias_intent": "/books/v3/creditnotes",
      "text": "List all Credit Notes",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_number": {
          "type": "string",
          "text": "Unique number generated (starts with CN) which will be displayed in the interface and credit notes"
        },
        "date": {
          "type": "string",
          "text": "The date on which credit note is raised"
        },
        "status": {
          "type": "string",
          "text": "Status of the credit note"
        },
        "total": {
          "type": "string",
          "text": "Total credits raised in this credit note"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "customer_name": {
          "type": "string",
          "text": "Name of the customer to whom the credit note is raised"
        },
        "item_name": {
          "type": "string",
          "text": "Search credit notes by item name"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised"
        },
        "item_description": {
          "type": "string",
          "text": "description for the item"
        },
        "item_id": {
          "type": "string",
          "text": "Unique string generated for the item to which a refund is to be made"
        },
        "line_item_id": {
          "type": "string",
          "text": "Search credit notes by credit note line item id"
        },
        "tax_id": {
          "type": "string",
          "text": "Unique to denote the tax associate dto the creditnote"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter credit notes by statuses"
        },
        "search_text": {
          "type": "string",
          "text": "Search credit notes by credit note number or customer name or credit note reference number"
        },
        "sort_column": {
          "type": "boolean",
          "text": "Sort credit notes by following columns customer_name, creditnote_number, balance, total, date and created_time",
          "enum": [
            true,
            false
          ]
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the Credit Notes",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-all-credit-notes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id___put": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id___put",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id",
      "text": "Update a credit note",
      "category": "Credit Notes",
      "method": "PUT",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "date": {
          "type": "string",
          "text": " The date on which credit note is raised",
          "required": true
        },
        "is_draft": {
          "type": "boolean",
          "text": "Set to true if credit note has to be created in draft status",
          "enum": [
            true,
            false
          ]
        },
        "exchange_rate": {
          "type": "string",
          "text": "Exchange rate for the currency associated with the customer"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a credit note",
          "required": true
        },
        "creditnote_number": {
          "type": "string",
          "text": "Unique number generated (starts with CN) which will be displayed in the interface and credit notes",
          "required": true
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the credit note"
        },
        "UAE": {
          "type": "string",
          "text": "supported only for MX"
        },
        "gst_no": {
          "type": "string",
          "text": "digit GST identification number of the customer"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "cfdi_reference_type": {
          "type": "string",
          "text": "Choose CFDI Reference Type"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "custom_fields": {
          "type": "array",
          "text": "Additional fields for the Credit-Notes"
        },
        "notes": {
          "type": "string",
          "text": "A short note for the credit note"
        },
        "terms": {
          "type": "string",
          "text": "Terms & condition to be displayed in the credit note"
        },
        "template_id": {
          "type": "string",
          "text": "Unique ID of the creditnote template"
        },
        "tax_id": {
          "type": "string",
          "text": "Unique to denote the tax associated to the creditnote"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "Unique ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "Unique ID of the tax exemption"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "item_id": {
          "type": "string",
          "text": "Unique string generated for the item to which a refund is to be made"
        },
        "account_id": {
          "type": "string",
          "text": "Unique ID to denote the accoun"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items"
        },
        "description": {
          "type": "string",
          "text": "A small description about the item"
        },
        "unit": {
          "type": "string",
          "text": "Unit of the line item"
        },
        "rate": {
          "type": "number",
          "text": "Rate of the line item"
        },
        "quantity": {
          "type": "number",
          "text": "Quantity of the item included"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Set to true if you need to provide your own credit note number"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Details of an existing creditnote",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#update-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id",
      "text": "Get a credit note",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "print": {
          "type": "string",
          "text": "Export credit note pdf with default print option"
        },
        "accept": {
          "type": "string",
          "text": "You can get credit note details as json/pdf/html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Details of an existing creditnote",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#get-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id___delete": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id___delete",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id",
      "text": "Delete a credit note",
      "category": "Credit Notes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#delete-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__email___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__email___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/email",
      "text": "Email a credit note",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "to_mail_ids": {
          "type": "array",
          "text": "The email IDs to which the credit note is to be mailed",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "The email IDs that have to be copied when the credit note is to be mailed"
        },
        "subject": {
          "type": "string",
          "text": "he subject of the emai"
        },
        "body": {
          "type": "string",
          "text": "The body of the email"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised"
        },
        "attachments": {
          "type": "string",
          "text": "The files to be attached with the email"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email a credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#email-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__email___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__email___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/email",
      "text": "Get email content",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "email_template_id": {
          "type": "string",
          "text": "Get the email content based on a specific email template"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get email content of a credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#get-email-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__status__void___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/status/void",
      "text": "Void a Credit Note",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark the credit note as Void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#void-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__status__draft___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__status__draft___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/status/draft",
      "text": "Convert Credit Note to Draft.",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Convert a voided credit note to Draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/status/draft",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/status/draft",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#convert-credit-note-to-draft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__status__open___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__status__open___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/status/open",
      "text": "Convert to Open",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Convert a credit note in Draft status to Open",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/status/open",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/status/open",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#convert-to-open"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__submit___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/submit",
      "text": "Submit a credit note for approval",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit an estimate for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#submit-a-credit-note-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__approve___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/approve",
      "text": "Approve a credit note",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#approve-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__emailhistory___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__emailhistory___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/emailhistory",
      "text": "Email history",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get email history of a credit code",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/emailhistory",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/emailhistory",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#email-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__address__billing___put",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/address/billing",
      "text": "Update billing address",
      "category": "Credit Notes",
      "method": "PUT",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for an existing credit note alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__address__shipping___put": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__address__shipping___put",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/address/shipping",
      "text": "Update Shipping address",
      "category": "Credit Notes",
      "method": "PUT",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Billing address for the invoice"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s billing address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s billing addres"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s billing address"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the shipping address for an existing credit note alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/address/shipping",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/address/shipping",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#update-shipping-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__templates___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__templates___get",
      "provider_alias_intent": "/books/v3/creditnotes/templates",
      "text": "List credit note template",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all credit note pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/templates",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-credit-note-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/templates/template_id",
      "text": "Update a credit note template",
      "category": "Credit Notes",
      "method": "PUT",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Billing address for the invoice"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s billing address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s billing addres"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s billing address"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#update-a-credit-note-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__invoices___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__invoices___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/invoices",
      "text": "Credit to an invoice",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "invoices": {
          "type": "array",
          "text": "List of invoices for which the credit note has been raised"
        },
        "invoice_id": {
          "type": "string",
          "text": "Invoice ID of the required invoice",
          "required": true
        },
        "amount_applied": {
          "type": "number",
          "text": "The total amount applied form the credit note on an invoice"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Apply credit note to existing invoices",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/invoices",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/invoices",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#credit-to-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__invoices___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__invoices___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/invoices",
      "text": "List invoices credited",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List invoices to which the credit note is applied",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/invoices",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/invoices",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-invoices-credited"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__invoices__creditnote_invoice_id___delete": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__invoices__creditnote_invoice_id___delete",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/invoices/creditnote_invoice_id",
      "text": "Delete invoices credited",
      "category": "Credit Notes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_invoice_id": {
          "type": "string",
          "text": "Creditnote Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_invoice_id": {
          "type": "string",
          "text": "Creditnote Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the credits applied to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/invoices/{creditnote_invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/invoices/creditnote_invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#delete-invoices-credited"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__comments___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/comments",
      "text": "Add a comment",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "A small description about the item"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment to an existing credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#add-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__comments___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/comments",
      "text": "List credit note comments & history",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get history and comments of a credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-credit-note-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/comments/comment_id",
      "text": "Delete a Comment",
      "category": "Credit Notes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a credit note comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__refunds___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__refunds___get",
      "provider_alias_intent": "/books/v3/creditnotes/refunds",
      "text": "List credit note refunds",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort refunds list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all refunds with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/refunds",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-credit-note-refunds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__refunds___post": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__refunds___post",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/refunds",
      "text": "Refund credit note",
      "category": "Credit Notes",
      "method": "POST",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "The date on which credit note is raised"
        },
        "refund_mode": {
          "type": "string",
          "text": "The method of refund"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "amount": {
          "type": "number",
          "text": "Amount paid for the invoice"
        },
        "exchange_rate": {
          "type": "string",
          "text": "Exchange rate for the currency associated with the customer"
        },
        "from_account_id": {
          "type": "string",
          "text": "The account from which credit note is refunded"
        },
        "description": {
          "type": "string",
          "text": "A small description about the item"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Refund credit note amount",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#refund-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__refunds___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__refunds___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/refunds",
      "text": "List refunds of a credit note",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the credit note is raised"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort refunds list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all refunds of an existing credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#list-refunds-of-a-credit-note"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___put": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___put",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
      "text": "Update credit note refund",
      "category": "Credit Notes",
      "method": "PUT",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "The date on which credit note is raised"
        },
        "refund_mode": {
          "type": "string",
          "text": "The method of refund"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "amount": {
          "type": "number",
          "text": "undefined"
        },
        "exchange_rate": {
          "type": "string",
          "text": "Exchange rate for the currency associated with the customer"
        },
        "from_account_id": {
          "type": "string",
          "text": "The account from which credit note is refunded"
        },
        "description": {
          "type": "string",
          "text": "A small description about the item"
        }
      },
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the refunded transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#update-credit-note-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___get": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___get",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
      "text": "Get credit note refund",
      "category": "Credit Notes",
      "method": "GET",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get refund of a particular credit note",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#get-credit-note-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___delete": {
      "provider_intent": "zohobooks__books__v3__creditnotes__creditnote_id__refunds__creditnote_refund_id___delete",
      "provider_alias_intent": "/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
      "text": "Delete credit note refund",
      "category": "Credit Notes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "creditnote_id": {
          "type": "string",
          "text": "Creditnote Id"
        },
        "creditnote_refund_id": {
          "type": "string",
          "text": "Creditnote Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a credit note refund",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/creditnotes/creditnote_id/refunds/creditnote_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/credit-notes/#get-credit-note-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.creditnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies___post": {
      "provider_intent": "zohobooks__books__v3__settings__currencies___post",
      "provider_alias_intent": "/books/v3/settings/currencies",
      "text": "Create a Currency",
      "category": "Currency",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "currency_code": {
          "type": "string",
          "text": "A unique standard code for the currency",
          "required": true
        },
        "currency_symbol": {
          "type": "string",
          "text": "A unique symbol for the currency"
        },
        "price_precision": {
          "type": "number",
          "text": "The precision for the price"
        },
        "currency_format": {
          "type": "string",
          "text": "The format for the currency to be displayed",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a currency for transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#create-a-currency"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies___get": {
      "provider_intent": "zohobooks__books__v3__settings__currencies___get",
      "provider_alias_intent": "/books/v3/settings/currencies",
      "text": "List Currencies",
      "category": "Currency",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_by": {
          "type": "string",
          "text": "Filter currencies excluding base currency"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get list of currencies configured",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#list-currencies"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id___put",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id",
      "text": "Update a Currency",
      "category": "Currency",
      "method": "PUT",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "custom_headers": {},
      "body": {
        "currency_code": {
          "type": "string",
          "text": "A unique standard code for the currency",
          "required": true
        },
        "currency_symbol": {
          "type": "string",
          "text": "A unique symbol for the currency"
        },
        "price_precision": {
          "type": "number",
          "text": "The precision for the price"
        },
        "currency_format": {
          "type": "string",
          "text": "The format for the currency to be displayed",
          "required": true
        }
      },
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#update-a-currency"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id___get",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id",
      "text": "Get a Currency",
      "category": "Currency",
      "method": "GET",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#get-a-currency"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id___delete",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id",
      "text": "Delete a currency",
      "category": "Currency",
      "method": "DELETE",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a currency. Currency that is associated to transactions cannot be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#delete-a-currency"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id__exchangerates___post": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id__exchangerates___post",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id/exchangerates",
      "text": "Create an exchange rate",
      "category": "Currency",
      "method": "POST",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "custom_headers": {},
      "body": {
        "effective_date": {
          "type": "string",
          "text": "Date which the exchange rate is applicable for the currency"
        },
        "rate": {
          "type": "number",
          "text": "Rate of exchange for the currency with respect to base currency"
        }
      },
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create an exchange rate for the specified currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}/exchangerates",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id/exchangerates",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#create-an-exchange-rate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id__exchangerates___get": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id__exchangerates___get",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id/exchangerates",
      "text": "List exchange rates",
      "category": "Currency",
      "method": "GET",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "from_date": {
          "type": "string",
          "text": "Returns the exchange rate details from the given date"
        },
        "is_current_date": {
          "type": "string",
          "text": "To return the exchange rate only if available for current date"
        },
        "sort_column": {
          "type": "string",
          "text": "Sorts the exchange rate according to this column"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List of exchange rates configured for the currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}/exchangerates",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id/exchangerates",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#list-exchange-rates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___put",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
      "text": "Update an exchange rate",
      "category": "Currency",
      "method": "PUT",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "custom_headers": {},
      "body": {
        "effective_date": {
          "type": "string",
          "text": "Date which the exchange rate is applicable for the currency"
        },
        "rate": {
          "type": "number",
          "text": "Rate of exchange for the currency with respect to base currency"
        }
      },
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of exchange rate for a currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#update-an-exchange-rate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___get",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
      "text": "Get an exchange rate",
      "category": "Currency",
      "method": "GET",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of an exchange rate that has been asscoiated to the currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#get-an-exchange-rate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__currencies__currency_id__exchangerates__exchange_rate_id___delete",
      "provider_alias_intent": "/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
      "text": "Delete an exchage rate",
      "category": "Currency",
      "method": "DELETE",
      "type": "API",
      "params": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "currency_id": {
          "type": "string",
          "text": "Currency Id"
        },
        "exchange_rate_id": {
          "type": "string",
          "text": "Exchange Rate Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an exchange rate for the specified currency",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/currencies/currency_id/exchangerates/exchange_rate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/currency/#get-an-exchange-rate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name___post": {
      "provider_intent": "zohobooks__books__v3__module_name___post",
      "provider_alias_intent": "/books/v3/module_name",
      "text": "Create Custom Modules",
      "category": "Custom Modules",
      "method": "POST",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "custom_headers": {},
      "body": {
        "record_name": {
          "type": "string",
          "text": "Name of the record",
          "required": true
        },
        "cf_debt_amount": {
          "type": "number",
          "text": "Value of the custom Field"
        }
      },
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To create a custom module, you can use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}",
        "alias_endpoint": "/zohobooks/books/v3/module_name",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#create-custom-modules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name___put": {
      "provider_intent": "zohobooks__books__v3__module_name___put",
      "provider_alias_intent": "/books/v3/module_name",
      "text": "Bulk Update Custom Module",
      "category": "Custom Modules",
      "method": "PUT",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "custom_headers": {},
      "body": {
        "cf_debt_amount": {
          "type": "number",
          "text": "Value of the custom Field"
        },
        "module_record_id": {
          "type": "string",
          "text": "Reeccord IDs"
        },
        "record_name": {
          "type": "string",
          "text": "Name of the record",
          "required": true
        }
      },
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To update existing custom module reecords in bulk, use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}",
        "alias_endpoint": "/zohobooks/books/v3/module_name",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#bulk-update-custom-module"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name___get": {
      "provider_intent": "zohobooks__books__v3__module_name___get",
      "provider_alias_intent": "/books/v3/module_name",
      "text": "Get Record List of a Custom Module",
      "category": "Custom Modules",
      "method": "GET",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To get the list of records of a custom module, you can use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}",
        "alias_endpoint": "/zohobooks/books/v3/module_name",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#get-record-list-of-a-custom-module"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name___delete": {
      "provider_intent": "zohobooks__books__v3__module_name___delete",
      "provider_alias_intent": "/books/v3/module_name",
      "text": "Delete Custom Modules",
      "category": "Custom Modules",
      "method": "DELETE",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To delete a custom module, you can use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}",
        "alias_endpoint": "/zohobooks/books/v3/module_name",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#delete-custom-modules"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name__module_id___put": {
      "provider_intent": "zohobooks__books__v3__module_name__module_id___put",
      "provider_alias_intent": "/books/v3/module_name/module_id",
      "text": "Update Custom Module",
      "category": "Custom Modules",
      "method": "PUT",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "custom_headers": {},
      "body": {
        "record_name": {
          "type": "string",
          "text": "Name of the record",
          "required": true
        },
        "cf_debt_amount": {
          "type": "number",
          "text": "Value of the custom Field"
        }
      },
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To update an existing custom module, use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}/{module_id}",
        "alias_endpoint": "/zohobooks/books/v3/module_name/module_id",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#update-custom-module"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name__module_id___get": {
      "provider_intent": "zohobooks__books__v3__module_name__module_id___get",
      "provider_alias_intent": "/books/v3/module_name/module_id",
      "text": "Get Individual Record Details",
      "category": "Custom Modules",
      "method": "GET",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "To get the details of an individual organisation, use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}/{module_id}",
        "alias_endpoint": "/zohobooks/books/v3/module_name/module_id",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#get-individual-record-details"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__module_name__module_id___delete": {
      "provider_intent": "zohobooks__books__v3__module_name__module_id___delete",
      "provider_alias_intent": "/books/v3/module_name/module_id",
      "text": "Delete individual records",
      "category": "Custom Modules",
      "method": "DELETE",
      "type": "API",
      "params": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "module_name": {
          "type": "string",
          "text": "Module Name"
        },
        "module_id": {
          "type": "string",
          "text": "Module Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "to delete individual records of a custom module, use the argument below",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{module_name}/{module_id}",
        "alias_endpoint": "/zohobooks/books/v3/module_name/module_id",
        "api_ref": "https://www.zoho.com/books/api/v3/custom-modules/#delete-individual-records"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.custommodules.ALL",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments___post": {
      "provider_intent": "zohobooks__books__v3__customerpayments___post",
      "provider_alias_intent": "/books/v3/customerpayments",
      "text": "Create a payment",
      "category": "Customer Payments",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer involved in the paymen",
          "required": true
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode through which payment is made",
          "required": true
        },
        "amount": {
          "type": "number",
          "text": "Amount paid in the respective payment",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Date on which payment is made",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "description": {
          "type": "string",
          "text": "Description about the payment"
        },
        "invoices": {
          "type": "array",
          "text": "List of invoices associated with the payment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate for the currency used in the invoices and customer's currency"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "bank_charges": {
          "type": "number",
          "text": "Denotes any additional bank charges"
        },
        "custom_fields": {
          "type": "array",
          "text": "Additional fields for the payments"
        },
        "invoice_id": {
          "type": "string",
          "text": "Invoice ID of the required invoice",
          "required": true
        },
        "amount_applied": {
          "type": "number",
          "text": "Amount paid for the invoice",
          "required": true
        },
        "tax_amount_withheld": {
          "type": "number",
          "text": "Amount withheld for tax"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the cash/bank account the payment has to be deposited"
        },
        "contact_persons": {
          "type": "array",
          "text": "IDs of the contact personsthe thank you mail has to be triggered"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a new payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#create-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments___get": {
      "provider_intent": "zohobooks__books__v3__customerpayments___get",
      "provider_alias_intent": "/books/v3/customerpayments",
      "text": "List Customer Payments",
      "category": "Customer Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "customer_name": {
          "type": "string",
          "text": "Search payments by customer name"
        },
        "reference_number": {
          "type": "number",
          "text": "Search payments by reference number"
        },
        "date": {
          "type": "string",
          "text": "Date"
        },
        "amount": {
          "type": "string",
          "text": "Search payments by payment amount"
        },
        "notes": {
          "type": "string",
          "text": "Search payments by customer notes"
        },
        "payment_mode": {
          "type": "string",
          "text": "Search payments by payment mode"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter payments by mode"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort column"
        },
        "search_text": {
          "type": "string",
          "text": "Search payments by reference number or customer name or payment description"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer involved in the payment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the payments made by your customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#list-customer-payments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__payment_id___put": {
      "provider_intent": "zohobooks__books__v3__customerpayments__payment_id___put",
      "provider_alias_intent": "/books/v3/customerpayments/payment_id",
      "text": "Update a payment",
      "category": "Customer Payments",
      "method": "PUT",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer involved in the payment",
          "required": true
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode through which payment is made",
          "required": true
        },
        "amount": {
          "type": "number",
          "text": "Amount paid in the respective payment",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Date on which payment is made"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "description": {
          "type": "string",
          "text": "Description about the payment"
        },
        "invoices": {
          "type": "array",
          "text": "List of invoices associated with the payment",
          "required": true
        },
        "exchange_rate": {
          "type": "numbe",
          "text": "Exchange rate for the currency used in the invoices and customer's currency"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "bank_charges": {
          "type": "number",
          "text": "Denotes any additional bank charges"
        },
        "custom_fields": {
          "type": "array",
          "text": "Additional fields for the payments"
        },
        "invoice_id": {
          "type": "string",
          "text": "Invoice ID of the required invoice",
          "required": true
        },
        "amount_applied": {
          "type": "number",
          "text": "Amount paid for the invoice",
          "required": true
        },
        "tax_amount_withheld": {
          "type": "number",
          "text": "Amount withheld for tax"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the cash/bank account the payment has to be deposited"
        }
      },
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing payment information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#update-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__payment_id___get": {
      "provider_intent": "zohobooks__books__v3__customerpayments__payment_id___get",
      "provider_alias_intent": "/books/v3/customerpayments/payment_id",
      "text": "Retrieve a payment",
      "category": "Customer Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Details of an existing payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#retrieve-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__payment_id___delete": {
      "provider_intent": "zohobooks__books__v3__customerpayments__payment_id___delete",
      "provider_alias_intent": "/books/v3/customerpayments/payment_id",
      "text": "Delete a payment",
      "category": "Customer Payments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#delete-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__customer_payment_id__refunds___post": {
      "provider_intent": "zohobooks__books__v3__customerpayments__customer_payment_id__refunds___post",
      "provider_alias_intent": "/books/v3/customerpayments/customer_payment_id/refunds",
      "text": "Refund an excess customer payment",
      "category": "Customer Payments",
      "method": "POST",
      "type": "API",
      "params": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date on which payment is made",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "The method of refund"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "amount": {
          "type": "number",
          "text": "Amount paid in the respective payment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate for the currency used in the invoices and customer's currency"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "from_account_id": {
          "type": "string",
          "text": "The account from which payment is refunded",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description about the payment"
        }
      },
      "path": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Refund the excess amount paid by the customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{customer_payment_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/customer_payment_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#refund-an-excess-customer-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__customer_payment_id__refunds___get": {
      "provider_intent": "zohobooks__books__v3__customerpayments__customer_payment_id__refunds___get",
      "provider_alias_intent": "/books/v3/customerpayments/customer_payment_id/refunds",
      "text": "List refunds of a customer payment",
      "category": "Customer Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the refunds pertaining to an existing customer payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{customer_payment_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/customer_payment_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#list-refunds-of-a-customer-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id___put": {
      "provider_intent": "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id___put",
      "provider_alias_intent": "/books/v3/customerpayments/customer_payment_id/refunds/refund_id",
      "text": "Update a refund",
      "category": "Customer Payments",
      "method": "PUT",
      "type": "API",
      "params": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date on which payment is made",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "The method of refund"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number generated for the payment"
        },
        "amount": {
          "type": "number",
          "text": "Amount paid in the respective payment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate for the currency used in the invoices and customer's currency"
        },
        "payment_form": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "from_account_id": {
          "type": "string",
          "text": "The account from which payment is refunded",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description about the payment"
        }
      },
      "path": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the refunded transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{customer_payment_id}/refunds/{refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/customer_payment_id/refunds/refund_id",
        "api_ref": "https://zoho.com/books/api/v3/customer-payments/#update-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id_a_refund___get": {
      "provider_intent": "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id_a_refund___get",
      "provider_alias_intent": "/books/v3/customerpayments/customer_payment_id/refunds/refund_id a refund",
      "text": "Details of a refund",
      "category": "Customer Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Obtain details of a particular refund of a customer payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{customer_payment_id}/refunds/{refund_id} a Refund",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/customer_payment_id/refunds/refund_id a refund",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#details-of-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id___delete": {
      "provider_intent": "zohobooks__books__v3__customerpayments__customer_payment_id__refunds__refund_id___delete",
      "provider_alias_intent": "/books/v3/customerpayments/customer_payment_id/refunds/refund_id",
      "text": "Delete a Refund",
      "category": "Customer Payments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "customer_payment_id": {
          "type": "string",
          "text": "Customer Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete refund pertaining to an existing customer payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/customerpayments/{customer_payment_id}/refunds/{refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/customerpayments/customer_payment_id/refunds/refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/customer-payments/#details-of-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.customerpayments.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates___post": {
      "provider_intent": "zohobooks__books__v3__estimates___post",
      "provider_alias_intent": "/books/v3/estimates",
      "text": "Create an Estimate",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "Search estimates by customer id.",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "The id of the customer"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array if contact person(S) for whom estimate has to be sent"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the estimate"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "estimate_number": {
          "type": "string",
          "text": "Search estimates by estimate number"
        },
        "reference_number": {
          "type": "string",
          "text": "Search estimates by reference number"
        },
        "data": {
          "type": "string",
          "text": "Search estimates by estimate date"
        },
        "expiry_date": {
          "type": "string",
          "text": "The date of expiration of the estimates"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "discount": {
          "type": "number",
          "text": "Discount applied to the invoice"
        },
        "is_discount_before_tax": {
          "type": "number",
          "text": "Used to specify how the discount has to applied"
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "is_inclusive_tax": {
          "type": "number",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax"
        },
        "custom_body": {
          "type": "string",
          "text": "Custom Body"
        },
        "custom_subject": {
          "type": "string",
          "text": "Custom Subject"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the sales person"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an estimate"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of an estimate"
        },
        "notes": {
          "type": "string",
          "text": "The notes added below expressing gratitude or for conveying some information"
        },
        "terms": {
          "type": "string",
          "text": "Terms"
        },
        "shipping_charge": {
          "type": "string",
          "text": "Shipping charges applied to the invoice"
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the invoice"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group applied to the estimate"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "vat_treatment": {
          "type": "string",
          "text": "(Optional) VAT treatment for the estimates"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the Estimate"
        },
        "item_id": {
          "type": "string",
          "text": "ID of the item"
        },
        "line_item_id": {
          "type": "string",
          "text": "ID of the line item"
        },
        "name": {
          "type": "string",
          "text": "The name of the line item"
        },
        "description": {
          "type": "string",
          "text": "The description of the line items"
        },
        "rate": {
          "type": "number",
          "text": "Rate of the line item"
        },
        "unit": {
          "type": "string",
          "text": "Unit of the line item e.g. kgs, Nos"
        },
        "quantity": {
          "type": "number",
          "text": "The quantity of line item"
        },
        "project_id": {
          "type": "string",
          "text": "ID of the project"
        },
        "send": {
          "type": "string",
          "text": "Send the estimate to the contact person(s) associated with the estimate"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto estimate number generation for this estimate"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create an estimate for your customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates",
        "alias_endpoint": "/zohobooks/books/v3/estimates",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#create-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates___get": {
      "provider_intent": "zohobooks__books__v3__estimates___get",
      "provider_alias_intent": "/books/v3/estimates",
      "text": "List estimates",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_number": {
          "type": "string",
          "text": "Search estimates by estimate number"
        },
        "reference_number": {
          "type": "string",
          "text": "Search estimates by reference number"
        },
        "customer_name": {
          "type": "string",
          "text": "Search estimates by customer name"
        },
        "total": {
          "type": "string",
          "text": "Search estimates by estimate total"
        },
        "customer_id": {
          "type": "string",
          "text": "Search estimates by customer id."
        },
        "item_id": {
          "type": "string",
          "text": "ID of the item"
        },
        "item_description": {
          "type": "string",
          "text": "Search estimates by item description"
        },
        "custom_field": {
          "type": "string",
          "text": "Search estimates by custom field"
        },
        "expiry_date": {
          "type": "string",
          "text": "The date of expiration of the estimates"
        },
        "data": {
          "type": "string",
          "text": "Search estimates by estimate date"
        },
        "status": {
          "type": "string",
          "text": "Search estimates by status"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter estimates by status"
        },
        "search_text": {
          "type": "string",
          "text": "Search estimates by estimate number or reference or customer name"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort estimates"
        },
        "zcrm_potential_id": {
          "type": "string",
          "text": "Potential ID of a Deal in CRM"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all estimates with pagination.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates",
        "alias_endpoint": "/zohobooks/books/v3/estimates",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#list-estimates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id___put": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id___put",
      "provider_alias_intent": "/books/v3/estimates/estimate_id",
      "text": "Update an Estimate",
      "category": "Estimates",
      "method": "PUT",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#update-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id___get": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id___get",
      "provider_alias_intent": "/books/v3/estimates/estimate_id",
      "text": "Get an estimate",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "accept": {
          "type": "string",
          "text": "Get the details of a particular estimate in formats such as json/ pdf/ html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3v",
        "auth": [],
        "description": "Get the details of an estimate.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#get-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id___delete": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id___delete",
      "provider_alias_intent": "/books/v3/estimates/estimate_id",
      "text": "Delete an Estimate",
      "category": "Estimates",
      "method": "DELETE",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#delete-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__status__sent___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__status__sent___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/status/sent",
      "text": "Mark an estimate as sent",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft estimate as sent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/status/sent",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/status/sent",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#mark-an-estimate-as-sent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__status__accepted___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__status__accepted___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/status/accepted",
      "text": "Mark an estimate as accepted",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a sent estimate as accepted if the customer has accepted it",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/status/accepted",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/status/accepted",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#mark-an-estimate-as-accepted"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__status__declined___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__status__declined___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/status/declined",
      "text": "Mark an estimate as declined",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a sent estimate as declined if the customer has rejected it",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/status/declined",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/status/declined",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#mark-an-estimate-as-declined"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__submit___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/submit",
      "text": "Submit an estimate for approval",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit an estimate for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#submit-an-estimate-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__approve___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/approve",
      "text": "Approve an estimate.",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve an estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#approve-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__email___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__email___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/email",
      "text": "Email an estimate",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email addressf",
          "enum": [
            true,
            false
          ]
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be ccedf"
        },
        "subject": {
          "type": "string",
          "text": "Subject of an email has to be sent"
        },
        "body": {
          "type": "string",
          "text": "Boolean to trigger the email from the organization's email addressf"
        },
        "attachments": {
          "type": "string",
          "text": "Files to be attached to the email"
        }
      },
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email an estimate to the customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#email-an-estimate"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__email___get": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__email___get",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/email",
      "text": "Get estimate email content",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "email_template_id": {
          "type": "string",
          "text": "Get the email content based on a specific email template",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the email content of an estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#get-estimate-email-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__email___post": {
      "provider_intent": "zohobooks__books__v3__estimates__email___post",
      "provider_alias_intent": "/books/v3/estimates/email",
      "text": "Email multiple estimates",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "estimate_ids": {
          "type": "string",
          "text": "Comma separated estimate ids which are to be emailed",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Send estimates to your customers by email",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/email",
        "alias_endpoint": "/zohobooks/books/v3/estimates/email",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#email-multiple-estimates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__pdf___get": {
      "provider_intent": "zohobooks__books__v3__estimates__pdf___get",
      "provider_alias_intent": "/books/v3/estimates/pdf",
      "text": "Bulk export estimates",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_ids": {
          "type": "string",
          "text": "Comma separated estimate ids which are to be emailed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Maximum of 25 estimates can be exported in a single pdf",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/pdf",
        "alias_endpoint": "/zohobooks/books/v3/estimates/pdf",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#bulk-export-estimates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__print___get": {
      "provider_intent": "zohobooks__books__v3__estimates__print___get",
      "provider_alias_intent": "/books/v3/estimates/print",
      "text": "Bulk print estimates",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_ids": {
          "type": "string",
          "text": "Comma separated estimate ids which are to be emailed",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Export estimates as pdf and print them",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/print",
        "alias_endpoint": "/zohobooks/books/v3/estimates/print",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#bulk-print-estimates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__address__billing___put",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/address/billing",
      "text": "Update billing address",
      "category": "Estimates",
      "method": "PUT",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Billing address for the estimate"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s billing address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s billing address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s billing address"
        },
        "body": {
          "type": "string",
          "text": "Boolean to trigger the email from the organization's email addressf"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this estimate alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__address__shipping___put": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__address__shipping___put",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/address/shipping",
      "text": "Update shipping address",
      "category": "Estimates",
      "method": "PUT",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Billing address for the estimate"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s billing address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s billing address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s billing address"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the shipping address for an existing estimate alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/address/shipping",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/address/shipping",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#update-shipping-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__templates___get": {
      "provider_intent": "zohobooks__books__v3__estimates__templates___get",
      "provider_alias_intent": "/books/v3/estimates/templates",
      "text": "List estimate template",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all estimate pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/templates",
        "alias_endpoint": "/zohobooks/books/v3/estimates/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#list-estimate-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/templates/template_id",
      "text": "Update estimate template",
      "category": "Estimates",
      "method": "PUT",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#update-estimate-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__comments___post",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/comments",
      "text": "Add Comments",
      "category": "Estimates",
      "method": "POST",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description of the line items"
        },
        "show_comment_to_clients": {
          "type": "boolean",
          "text": "Boolean to show the comments to contacts in portal",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for an estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#add-comments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__comments___get",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/comments",
      "text": "List estimate comments & history",
      "category": "Estimates",
      "method": "GET",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of an estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#list-estimate-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__comments__comment_id___put": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__comments__comment_id___put",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/comments/comment_id",
      "text": "Update comment",
      "category": "Estimates",
      "method": "PUT",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description of the line items"
        },
        "show_comment_to_clients": {
          "type": "boolean",
          "text": "Boolean to show the comments to contacts in portal",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing comment of an estimate",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__estimates__estimate_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__estimates__estimate_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/estimates/estimate_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Estimates",
      "method": "DELETE",
      "type": "API",
      "params": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "estimate_id": {
          "type": "string",
          "text": "Estimate Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an estimate comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/estimates/{estimate_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/estimates/estimate_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/estimates/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.estimates.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses___post": {
      "provider_intent": "zohobooks__books__v3__expenses___post",
      "provider_alias_intent": "/books/v3/expenses",
      "text": "Create an Expense",
      "category": "Expenses",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "ID of the expense account",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Date of the expense",
          "required": true
        },
        "amount": {
          "type": "number",
          "text": "Amount of the Expense",
          "required": true
        },
        "tax_id": {
          "type": "string",
          "text": "Tax id"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "hsn_or_sac": {
          "type": "string",
          "text": "Add HSN/SAC code for your goods/services"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "reverse_charge_tax_id": {
          "type": "string",
          "text": "ID of the reverse charge tax"
        },
        "line_items": {
          "type": "array",
          "text": "Line items"
        },
        "taxes": {
          "type": "array",
          "text": "Taxes"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Is inclusive tax",
          "enum": [
            true,
            false
          ]
        },
        "is_billable": {
          "type": "boolean",
          "text": "Is billable",
          "enum": [
            true,
            false
          ]
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number of the expense"
        },
        "description": {
          "type": "string",
          "text": "Description of the expense"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the expense account"
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate"
        },
        "project_id": {
          "type": "string",
          "text": "ID of the project associated with the customer"
        },
        "mileage_type": {
          "type": "string",
          "text": "Mileage type"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "product_type": {
          "type": "string",
          "text": "Type of the expense"
        },
        "acquisition_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is an EU"
        },
        "reverse_charge_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is a non UK"
        },
        "start_reading": {
          "type": "number",
          "text": "Start reading of odometer when creating a mileage expense"
        },
        "end_reading": {
          "type": "number",
          "text": "End reading of odometer when creating a mileage expense"
        },
        "distance": {
          "type": "string",
          "text": "Distance travelled for a particular mileage expense"
        },
        "mileage_unit": {
          "type": "string",
          "text": "Unit of the distance travelled"
        },
        "mileage_rate": {
          "type": "number",
          "text": "Mileage rate for a particular mileage expense"
        },
        "employee_id": {
          "type": "string",
          "text": "ID of the employee who has submitted this mileage expense"
        },
        "vehicle_type": {
          "type": "string",
          "text": "Vehicle type for a particular mileage expense"
        },
        "can_reclaim_vat_on_mileage": {
          "type": "string",
          "text": "To specify if tax can be reclaimed for this mileage expense"
        },
        "fuel_type": {
          "type": "string",
          "text": "Fuel type for a particular mileage expense"
        },
        "engine_capacity_range": {
          "type": "string",
          "text": "Engine capacity range for a particular mileage expense"
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "Search expenses by paid through account id",
          "required": true
        },
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the expense is made"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an expense"
        },
        "receipt": {
          "type": "string",
          "text": "Expense receipt file to attach"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create billable or non-billable expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses",
        "alias_endpoint": "/zohobooks/books/v3/expenses",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#create-an-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses___get": {
      "provider_intent": "zohobooks__books__v3__expenses___get",
      "provider_alias_intent": "/books/v3/expenses",
      "text": "List Expenses",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "description": {
          "type": "string",
          "text": "Search expenses by description"
        },
        "reference_number": {
          "type": "string",
          "text": "Search expenses by reference number"
        },
        "date": {
          "type": "string",
          "text": "Search expenses by expense date"
        },
        "status": {
          "type": "string",
          "text": "Search expenses by expense status"
        },
        "amount": {
          "type": "string",
          "text": "Search expenses by amount"
        },
        "account_name": {
          "type": "string",
          "text": "Search expenses by expense account name"
        },
        "customer_name": {
          "type": "string",
          "text": "Search expenses by customer name"
        },
        "vendor_name": {
          "type": "string",
          "text": "Search expenses by vendor name"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the expense account"
        },
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the expense is made"
        },
        "recurring_expense_id": {
          "type": "string",
          "text": "Search expenses by recurring expense id"
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "Search expenses by paid through account id"
        },
        "search_text": {
          "type": "string",
          "text": "Search expenses by account name or description"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort expenses"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter expenses by expense status"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the Expenses with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses",
        "alias_endpoint": "/zohobooks/books/v3/expenses",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#list-expenses"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id___put": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id___put",
      "provider_alias_intent": "/books/v3/expenses/expense_id",
      "text": "Update an Expense",
      "category": "Expenses",
      "method": "PUT",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "ID of the expense account",
          "required": true
        },
        "date": {
          "type": "string",
          "text": "Date of the expense",
          "required": true
        },
        "amount": {
          "type": "number",
          "text": "Amount of the Expense",
          "required": true
        },
        "tax_id": {
          "type": "string",
          "text": "Tax id"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered"
        },
        "hsn_or_sac": {
          "type": "string",
          "text": "Add HSN/SAC code for your goods/services"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "reverse_charge_tax_id": {
          "type": "string",
          "text": "ID of the reverse charge tax"
        },
        "line_items": {
          "type": "array",
          "text": "Line items"
        },
        "taxes": {
          "type": "array",
          "text": "Taxes"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Is inclusive tax",
          "enum": [
            true,
            false
          ]
        },
        "is_billable": {
          "type": "boolean",
          "text": "Is billable",
          "enum": [
            true,
            false
          ]
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number of the expense"
        },
        "description": {
          "type": "string",
          "text": "Description of the expense"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the expense account"
        },
        "currency_id": {
          "type": "string",
          "text": "currency id"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate"
        },
        "project_id": {
          "type": "string",
          "text": "ID of the project associated with the customer"
        },
        "mileage_type": {
          "type": "string",
          "text": "Mileage type"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "product_type": {
          "type": "string",
          "text": "Type of the expense"
        },
        "acquisition_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is an EU"
        },
        "reverse_charge_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is a non UK"
        },
        "start_reading": {
          "type": "number",
          "text": "Start reading of odometer when creating a mileage expense"
        },
        "distance": {
          "type": "string",
          "text": "Distance travelled for a particular mileage expense"
        },
        "mileage_unit": {
          "type": "string",
          "text": "Unit of the distance travelled"
        },
        "mileage_rate": {
          "type": "number",
          "text": "Mileage rate for a particular mileage expense"
        },
        "employee_id": {
          "type": "string",
          "text": "ID of the employee who has submitted this mileage expense"
        },
        "vehicle_type": {
          "type": "string",
          "text": "Vehicle type for a particular mileage expense"
        },
        "can_reclaim_vat_on_mileage": {
          "type": "string",
          "text": "To specify if tax can be reclaimed for this mileage expense"
        },
        "fuel_type": {
          "type": "string",
          "text": "Fuel type for a particular mileage expense"
        },
        "engine_capacity_range": {
          "type": "string",
          "text": "Engine capacity range for a particular mileage expense"
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "Search expenses by paid through account id",
          "required": true
        },
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the expense is made"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an expense"
        },
        "receipt": {
          "type": "string",
          "text": "Expense receipt file to attach"
        },
        "delete_receipt": {
          "type": "string",
          "text": "Delete receipt"
        }
      },
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing Expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#update-an-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id___get": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id___get",
      "provider_alias_intent": "/books/v3/expenses/expense_id",
      "text": "Get an Expense",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of the Expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#get-an-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id___delete": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id___delete",
      "provider_alias_intent": "/books/v3/expenses/expense_id",
      "text": "Delete an Expense",
      "category": "Expenses",
      "method": "DELETE",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#delete-an-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id__comments___get",
      "provider_alias_intent": "/books/v3/expenses/expense_id/comments",
      "text": "List expense History & Comments",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get history and comments of expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#list-expense-history-and-comments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__employees___post": {
      "provider_intent": "zohobooks__books__v3__employees___post",
      "provider_alias_intent": "/books/v3/employees",
      "text": "Create an employee",
      "category": "Expenses",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name",
          "required": true
        },
        "email": {
          "type": "string",
          "text": "Email",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create an employee for an expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/employees",
        "alias_endpoint": "/zohobooks/books/v3/employees",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#create-an-employee"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__employees___get": {
      "provider_intent": "zohobooks__books__v3__employees___get",
      "provider_alias_intent": "/books/v3/employees",
      "text": "List employees",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List employees with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/employees",
        "alias_endpoint": "/zohobooks/books/v3/employees",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#list-employees"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__employees__employee_id___get": {
      "provider_intent": "zohobooks__books__v3__employees__employee_id___get",
      "provider_alias_intent": "/books/v3/employees/employee_id",
      "text": "Get an employee",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of the employee",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/employees/{employee_id}",
        "alias_endpoint": "/zohobooks/books/v3/employees/employee_id",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#get-an-employe"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__employee__employee_id___delete": {
      "provider_intent": "zohobooks__books__v3__employee__employee_id___delete",
      "provider_alias_intent": "/books/v3/employee/employee_id",
      "text": "Delete an employee",
      "category": "Expenses",
      "method": "DELETE",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing employee",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/employee/{employee_id}",
        "alias_endpoint": "/zohobooks/books/v3/employee/employee_id",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#delete-an-employee"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id__receipt___post": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id__receipt___post",
      "provider_alias_intent": "/books/v3/expenses/expense_id/receipt",
      "text": "Add receipt to an expense",
      "category": "Expenses",
      "method": "POST",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {
        "receipt": {
          "type": "string",
          "text": "Expense receipt file to attach"
        }
      },
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a receipt to an expens",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}/receipt",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id/receipt",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#add-receipt-to-an-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id__receipt___get": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id__receipt___get",
      "provider_alias_intent": "/books/v3/expenses/expense_id/receipt",
      "text": "Get an expense receipt",
      "category": "Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        },
        "preview": {
          "type": "string",
          "text": "Get the thumbnail of the receip"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the receipt attached to the expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}/receipt",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id/receipt",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#get-an-expense-receipt"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__expenses__expense_id__receipt___delete": {
      "provider_intent": "zohobooks__books__v3__expenses__expense_id__receipt___delete",
      "provider_alias_intent": "/books/v3/expenses/expense_id/receipt",
      "text": "Delete a receipt",
      "category": "Expenses",
      "method": "DELETE",
      "type": "API",
      "params": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expense_id": {
          "type": "string",
          "text": "Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the receipt attached to the expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/expenses/{expense_id}/receipt",
        "alias_endpoint": "/zohobooks/books/v3/expenses/expense_id/receipt",
        "api_ref": "https://www.zoho.com/books/api/v3/expenses/#delete-a-receipt"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__organizations___get": {
      "provider_intent": "zohobooks__books__v3__organizations___get",
      "provider_alias_intent": "/books/v3/organizations",
      "text": "Organization ID",
      "category": "Introduction",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "In Zoho Books, your business is termed as an organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/organizations",
        "alias_endpoint": "/zohobooks/books/v3/organizations",
        "api_ref": "https://www.zoho.com/books/api/v3/introduction/#organization-id"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "wip": 0,
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices___post": {
      "provider_intent": "zohobooks__books__v3__invoices___post",
      "provider_alias_intent": "/books/v3/invoices",
      "text": "Create an invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "ID of the customer the invoice has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "The currency id of the currency"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom invoice has to be sent"
        },
        "invoice_number": {
          "type": "string",
          "text": "Search invoices by invoice number"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "reference_number": {
          "type": "string",
          "text": "The reference number of the invoice"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the invoice"
        },
        "date": {
          "type": "string",
          "text": "Search invoices by invoice date"
        },
        "payment_terms": {
          "type": "number",
          "text": "Payment terms in days e.g. 15, 30, 60"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Used to override the default payment terms label"
        },
        "due_date": {
          "type": "string",
          "text": "Search invoices by due date"
        },
        "discount": {
          "type": "number",
          "text": "Discount applied to the invoice"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Used to specify how the discount has to applied",
          "enum": [
            true,
            false
          ]
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusivr of tax",
          "enum": [
            true,
            false
          ]
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "recurring_invoice_id": {
          "type": "string",
          "text": "ID of the recurring invoice from which the invoice is created"
        },
        "invoiced_estimate_id": {
          "type": "string",
          "text": "ID of the invoice from which the invoice is created"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the salesperson"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an invoice"
        },
        "line_items": {
          "type": "array",
          "text": "Line Items",
          "required": true
        },
        "payment_options": {
          "type": "object",
          "text": "Payment options for the invoice, online payment gateways and bank accounts"
        },
        "allow_partial_payments": {
          "type": "boolean",
          "text": "Boolean to check if partial payments are allowed for the contact",
          "enum": [
            true,
            false
          ]
        },
        "custom_body": {
          "type": "string",
          "text": "Custom Body"
        },
        "custom_subject": {
          "type": "string",
          "text": "Custom subject"
        },
        "notes": {
          "type": "string",
          "text": "The notes added below expressing gratitude or for conveying some information"
        },
        "terms": {
          "type": "string",
          "text": "The terms added below expressing gratitude or for conveying some information"
        },
        "shipping_charge": {
          "type": "string",
          "text": "Shipping charges applied to the invoice"
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the invoice"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        },
        "reason": {
          "type": "string",
          "text": "Reason"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax"
        },
        "expense_id": {
          "type": "string",
          "text": "Expense id"
        },
        "salesorder_item_id": {
          "type": "string",
          "text": "ID of the sales order line item which is invoices"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items (products, services, or charges) together"
        },
        "time_entry_ids": {
          "type": "string",
          "text": "IDs of the time entries associated with the project"
        },
        "send": {
          "type": "string",
          "text": "Send the invoice to the contact person(s) associated with the invoice"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto invoice number generation for this invoice"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create an invoice for your customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices",
        "alias_endpoint": "/zohobooks/books/v3/invoices",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#create-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices___get": {
      "provider_intent": "zohobooks__books__v3__invoices___get",
      "provider_alias_intent": "/books/v3/invoices",
      "text": "List invoices",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_number": {
          "type": "string",
          "text": "Search invoices by invoice number"
        },
        "item_name": {
          "type": "string",
          "text": "Search invoices by item name"
        },
        "item_id": {
          "type": "string",
          "text": "Search invoices by item id"
        },
        "item_description": {
          "type": "string",
          "text": "Search invoices by item description"
        },
        "reference_number": {
          "type": "string",
          "text": "The reference number of the invoice"
        },
        "customer_name": {
          "type": "string",
          "text": "The name of the customer"
        },
        "recurring_invoice_id": {
          "type": "string",
          "text": "ID of the recurring invoice from which the invoice is created"
        },
        "email": {
          "type": "string",
          "text": "Search contacts by email id"
        },
        "total": {
          "type": "string",
          "text": "The total amount to be paid"
        },
        "balance": {
          "type": "string",
          "text": "The unpaid amount"
        },
        "custom_field": {
          "type": "string",
          "text": "Search invoices by custom fields"
        },
        "date": {
          "type": "string",
          "text": "Search invoices by invoice date"
        },
        "due_date": {
          "type": "string",
          "text": "Search invoices by due date"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Last modified time"
        },
        "status": {
          "type": "string",
          "text": "Search invoices by invoice status"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer the invoice has to be created"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter invoices by any status or payment expected date"
        },
        "search_text": {
          "type": "string",
          "text": "Search invoices by invoice number or purchase order or customer name"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort invoices"
        },
        "Sort invoices": {
          "type": "string",
          "text": "Potential ID of a Deal in CRM"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all invoices with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices",
        "alias_endpoint": "/zohobooks/books/v3/invoices",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#list-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id",
      "text": "Update an invoice",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "ID of the customer the invoice has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "The currency id of the currency"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom invoice has to be sent"
        },
        "invoice_number": {
          "type": "string",
          "text": "Search invoices by invoice number"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoice"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "cfdi_reference_type": {
          "type": "string",
          "text": "Choose CFDI Reference Type"
        },
        "reference_invoice_id": {
          "type": "string",
          "text": "Associate the reference invoice"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "reference_number": {
          "type": "string",
          "text": "The reference number of the invoice"
        },
        "ltemplate_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the invoice"
        },
        "date": {
          "type": "string",
          "text": "Search invoices by invoice date"
        },
        "payment_terms": {
          "type": "number",
          "text": "payment terms in days e.g. 15, 30, 60"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Used to override the default payment terms label"
        },
        "due_date": {
          "type": "string",
          "text": "Search invoices by due date"
        },
        "discount": {
          "type": "number",
          "text": "Discount applied to the invoice"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Used to specify how the discount has to applied",
          "enum": [
            true,
            false
          ]
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusivr of tax",
          "enum": [
            true,
            false
          ]
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "recurring_invoice_id": {
          "type": "string",
          "text": "ID of the recurring invoice from which the invoice is created"
        },
        "invoiced_estimate_id": {
          "type": "string",
          "text": "ID of the invoice from which the invoice is created"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the salesperson"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an invoice"
        },
        "line_items": {
          "type": "array",
          "text": "line_items",
          "required": true
        },
        "payment_options": {
          "type": "object",
          "text": "Payment options for the invoice, online payment gateways and bank accounts"
        },
        "allow_partial_payments": {
          "type": "boolean",
          "text": "Boolean to check if partial payments are allowed for the contact",
          "enum": [
            true,
            false
          ]
        },
        "custom_body": {
          "type": "string",
          "text": "Custom body"
        },
        "custom_subject": {
          "type": "string",
          "text": "Custom subject"
        },
        "notes": {
          "type": "string",
          "text": "The notes added below expressing gratitude or for conveying some information"
        },
        "terms": {
          "type": "string",
          "text": "The terms added below expressing gratitude or for conveying some information"
        },
        "shipping_charge": {
          "type": "string",
          "text": "Shipping charges applied to the invoice"
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the invoice"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        },
        "reason": {
          "type": "string",
          "text": "reason"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax"
        },
        "expense_id": {
          "type": "string",
          "text": "Expense id"
        },
        "salesorder_item_id": {
          "type": "string",
          "text": "ID of the sales order line item which is invoices"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items (products, services, or charges) together"
        },
        "line_item_id": {
          "type": "string",
          "text": "The line item id"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto invoice number generation for this invoice"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing invoice. To delete a line item just remove it from the line_items list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id",
      "text": "Get an invoice",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "accept": {
          "type": "string",
          "text": "Get the details of a particular invoice in formats such as json/ pdf/ html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#get-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id___delete",
      "provider_alias_intent": "/books/v3/invoices/invoice_id",
      "text": "Delete an invoice",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__status__sent___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__status__sent___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/status/sent",
      "text": "Mark an invoice as sent",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft invoice as sent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/status/sent",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/status/sent",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#mark-an-invoice-as-sent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__status__void___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/status/void",
      "text": "Void an invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an invoice status as void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#void-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__status__draft___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__status__draft___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/status/draft",
      "text": "Mark as draft",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a voided invoice as draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/status/draft",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/status/draft",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#mark-as-draft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__email___post": {
      "provider_intent": "zohobooks__books__v3__invoices__email___post",
      "provider_alias_intent": "/books/v3/invoices/email",
      "text": "Email invoices",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_ids": {
          "type": "string",
          "text": "Comma separated invoice ids which are to be emailed.",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {
        "contacts": {
          "type": "array",
          "text": "Contacts for whom email or snail mail has to be sent"
        },
        "contact_id": {
          "type": "string",
          "text": "ID of the contact",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Send invoices to your customers by email",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/email",
        "alias_endpoint": "/zohobooks/books/v3/invoices/email",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#email-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__submit___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/submit",
      "text": "Submit an invoice for approval",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit an invoice for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#submit-an-invoice-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__approve___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/approve",
      "text": "Approve an invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#approve-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__email___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__email___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/email",
      "text": "Email an invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients.",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be cced"
        },
        "subject": {
          "type": "string",
          "text": "The subject of the mail"
        },
        "body": {
          "type": "string",
          "text": "The body of the mail"
        },
        "send_customer_statement": {
          "type": "string",
          "text": "Array of email address of the recipients to be cced"
        },
        "send_attachment": {
          "type": "string",
          "text": "Send the invoice attachment a with the email"
        },
        "attachments": {
          "type": "string",
          "text": "Files to be attached to the email"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email an invoice to the customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#email-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__email___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__email___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/email",
      "text": "Get invoice email content",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "email_template_id": {
          "type": "string",
          "text": "Get the email content based on a specific email template"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the email content of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#get-invoice-email-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__paymentreminder___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__paymentreminder___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/paymentreminder",
      "text": "Remind Customer",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients"
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be cced",
          "required": true
        },
        "subject": {
          "type": "string",
          "text": "The subject of the mail"
        },
        "body": {
          "type": "string",
          "text": "The body of the mail"
        },
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "send_customer_statement": {
          "type": "string",
          "text": "Send customer statement pdf a with email"
        },
        "attachment": {
          "type": "string",
          "text": "Files to be attached to the email"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Remind your customer about an unpaid invoice by email",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/paymentreminder",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/paymentreminder",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#remind-customer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__paymentreminder___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__paymentreminder___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/paymentreminder",
      "text": "Get payment reminder mail content",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the mail content of the payment reminder",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/paymentreminder",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/paymentreminder",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#get-payment-reminder-mail-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__paymentreminder___post": {
      "provider_intent": "zohobooks__books__v3__invoices__paymentreminder___post",
      "provider_alias_intent": "/books/v3/invoices/paymentreminder",
      "text": "Bulk invoice reminder",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "invoice_ids": {
          "type": "string",
          "text": "Array of invoice ids for which the reminder has to be sent",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Remind your customer about an unpaid invoices by email",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/paymentreminder",
        "alias_endpoint": "/zohobooks/books/v3/invoices/paymentreminder",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#bulk-invoice-reminder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__pdf___get": {
      "provider_intent": "zohobooks__books__v3__invoices__pdf___get",
      "provider_alias_intent": "/books/v3/invoices/pdf",
      "text": "Bulk export Invoices",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_ids": {
          "type": "string",
          "text": "Comma separated invoice ids which are to be export as pdf",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Maximum of 25 invoices can be exported in a single pdf",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/pdf",
        "alias_endpoint": "/zohobooks/books/v3/invoices/pdf",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#bulk-export-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__print___get": {
      "provider_intent": "zohobooks__books__v3__invoices__print___get",
      "provider_alias_intent": "/books/v3/invoices/print",
      "text": "Bulk print invoices",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_ids": {
          "type": "string",
          "text": "Export invoices as pdf and print them",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Export invoices as pdf and print them. Maximum of 25 invoices can be printed",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/print",
        "alias_endpoint": "/zohobooks/books/v3/invoices/print",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#bulk-print-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__paymentreminder__disable___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__paymentreminder__disable___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/paymentreminder/disable",
      "text": "Disable payment reminder",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Disable automated payment reminders for an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/paymentreminder/disable",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/paymentreminder/disable",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#disable-payment-reminder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__paymentreminder__enable___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__paymentreminder__enable___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/paymentreminder/enable",
      "text": "Enable payment reminder",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Enable automated payment reminders for an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/paymentreminder/enable",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/paymentreminder/enable",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#enable-payment-reminder"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__writeoff___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__writeoff___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/writeoff",
      "text": "Write off invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Write off the invoice balance amount of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/writeoff",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/writeoff",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#write-off-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__writeoff__cancel___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__writeoff__cancel___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/writeoff/cancel",
      "text": "Cancel write off",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Cancel the write off amount of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/writeoff/cancel",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/writeoff/cancel",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#cancel-write-off"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__address__billing___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/address/billing",
      "text": "Update billing address",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Billing address for the invoice"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s billing address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s billing address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s billing address"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s billing address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this invoice alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__address__shipping___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__address__shipping___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/address/shipping",
      "text": "Update shipping address",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Shipping address for the invoice"
        },
        "street2": {
          "type": "string",
          "text": "Street2"
        },
        "city": {
          "type": "string",
          "text": "City of the customer’s Shipping address"
        },
        "state": {
          "type": "string",
          "text": "State of the customer’s Shipping address"
        },
        "zip": {
          "type": "string",
          "text": "Zip code of the customer’s Shipping address"
        },
        "country": {
          "type": "string",
          "text": "Country of the customer’s Shipping address"
        },
        "fax": {
          "type": "string",
          "text": "Customer's fax number"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the shipping address for this invoice alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/address/shipping",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/address/shipping",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-shipping-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__templates___get": {
      "provider_intent": "zohobooks__books__v3__invoices__templates___get",
      "provider_alias_intent": "/books/v3/invoices/templates",
      "text": "List invoice templates",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all invoice pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/templates",
        "alias_endpoint": "/zohobooks/books/v3/invoices/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#list-invoice-templates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/templates/template_id",
      "text": "Update invoice template",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-invoice-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__payments___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__payments___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/payments",
      "text": "List invoice payments",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the list of payments made for an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/payments",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/payments",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#list-invoice-payments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__creditsapplied___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__creditsapplied___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/creditsapplied",
      "text": "List credits applied",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List credits applied",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/creditsapplied",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/creditsapplied",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#list-credits-applied"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__credits___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__credits___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/credits",
      "text": "Apply credits",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "invoice_payments": {
          "type": "array",
          "text": "Invoice payments",
          "required": true
        },
        "apply_creditnotes": {
          "type": "array",
          "text": "Apply creditnotes",
          "required": true
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Apply the customer credits either from credit notes or excess customer payments to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/credits",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/credits",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#apply-credits"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__payments__invoice_payment_id___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__payments__invoice_payment_id___delete",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/payments/invoice_payment_id",
      "text": "Delete a payment",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "invoice_payment_id": {
          "type": "string",
          "text": "Invoice Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "invoice_payment_id": {
          "type": "string",
          "text": "Invoice Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a payment made to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/payments/{invoice_payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/payments/invoice_payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-a-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__creditsapplied__creditnotes_invoice_id___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__creditsapplied__creditnotes_invoice_id___delete",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/creditsapplied/creditnotes_invoice_id",
      "text": "Delete applied credit",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "creditnotes_invoice_id": {
          "type": "string",
          "text": "Creditnotes Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "creditnotes_invoice_id": {
          "type": "string",
          "text": "Creditnotes Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a particular credit applied to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/creditsapplied/{creditnotes_invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/creditsapplied/creditnotes_invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-applied-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__attachment___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/attachment",
      "text": "Add attachment to an invoice",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "can_send_in_mail": {
          "type": "array",
          "text": "True to send the attachment with the invoice when emailed"
        },
        "attachment": {
          "type": "array",
          "text": "The file to be attached"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#add-attachment-to-an-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__attachment___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__attachment___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/attachment",
      "text": "Update attachment preference",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "can_send_in_mail": {
          "type": "string",
          "text": "Boolean to send the attachment with the invoice when emailed",
          "required": true
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Set whether you want to send the attached file while emailing the invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-attachment-preference"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__attachment___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__attachment___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/attachment",
      "text": "Get an invoice attachment",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        },
        "preview": {
          "type": "string",
          "text": "Get the thumbnail of the attachment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the file attached to the invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#get-an-invoice-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__attachment___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__attachment___delete",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/attachment",
      "text": "Delete an attachment",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the file attached to the invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-an-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__expenses__expense_id__receipt___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__expenses__expense_id__receipt___delete",
      "provider_alias_intent": "/books/v3/invoices/expenses/expense_id/receipt",
      "text": "Delete the expense receipt",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the expense receipts attached to an invoice which is raised from an expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/expenses/{expense_id}/receipt",
        "alias_endpoint": "/zohobooks/books/v3/invoices/expenses/expense_id/receipt",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-the-expense-receipt"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__comments___post",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/comments",
      "text": "Add comment",
      "category": "Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description"
        },
        "payment_expected_date": {
          "type": "string",
          "text": "Payment expected date"
        },
        "show_comment_to_clients": {
          "type": "string",
          "text": "Boolean to check if the comment to be shown to the clients"
        }
      },
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__comments___get",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/comments",
      "text": "List invoice comments & history",
      "category": "Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "invoice_id": {
          "type": "string",
          "text": "Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#list-invoice-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__comments__comment_id___put": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__comments__comment_id___put",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/comments/comment_id",
      "text": "Update comment",
      "category": "Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The comment on a invoice"
        },
        "show_comment_to_clients": {
          "type": "string",
          "text": "Boolean to check if the comment to be shown to the clients"
        }
      },
      "path": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing comment of an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__invoices__invoice_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__invoices__invoice_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/invoices/invoice_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "expenses_id": {
          "type": "string",
          "text": "Expenses Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an invoice comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/invoices/{invoice_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/invoices/invoice_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/invoices/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items___post": {
      "provider_intent": "zohobooks__books__v3__items___post",
      "provider_alias_intent": "/books/v3/items",
      "text": "Create an Item",
      "category": "Items",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the item",
          "required": true
        },
        "rate": {
          "type": "number",
          "text": "Price of the item",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description for the item"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax to be associated to the item"
        },
        "purchase_tax_rule_id": {
          "type": "string",
          "text": "Id of the purchase tax rule"
        },
        "sales_tax_rule_id": {
          "type": "string",
          "text": "Id of the sales tax rule"
        },
        "tax_percentage": {
          "type": "string",
          "text": "Percent of the tax"
        },
        "sku": {
          "type": "string",
          "text": "SKU value of itemshould be unique throughout the product"
        },
        "product_type": {
          "type": "string",
          "text": "Specify the type of an item"
        },
        "hsn_or_sac": {
          "type": "string",
          "text": "HSN Code"
        },
        "sat_item_key_code": {
          "type": "string",
          "text": "Add SAT Item Key Code for your goods/services"
        },
        "unitkey_code": {
          "type": "string",
          "text": "Add Unit Key Code for your goods/services"
        },
        "is_taxable": {
          "type": "boolean",
          "text": "Boolean to track the taxability of the item",
          "enum": [
            true,
            false
          ]
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the account to which the item has to be associated with"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "item_type": {
          "type": "string",
          "text": "Type of the item"
        },
        "purchase_description": {
          "type": "string",
          "text": "Purchase description for the item"
        },
        "purchase_rate": {
          "type": "string",
          "text": "Purchase price of the item"
        },
        "purchase_account_id": {
          "type": "string",
          "text": "ID of the COGS account to which the item has to be associated with"
        },
        "inventory_account_id": {
          "type": "string",
          "text": "ID of the stock account to which the item has to be associated with"
        },
        "vendor_id": {
          "type": "string",
          "text": "Preferred vendor ID"
        },
        "reorder_level": {
          "type": "string",
          "text": "Reorder level of the item"
        },
        "initial_stock": {
          "type": "string",
          "text": "Opening stock of the item"
        },
        "initial_stock_rate": {
          "type": "string",
          "text": "Unit price of the opening stock"
        },
        "item_tax_preferences": {
          "type": "array",
          "text": "Item tax preferences"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an item"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a new item",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items",
        "alias_endpoint": "/zohobooks/books/v3/items",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#create-an-item"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items___get": {
      "provider_intent": "zohobooks__books__v3__items___get",
      "provider_alias_intent": "/books/v3/items",
      "text": "List items",
      "category": "Items",
      "method": "GET",
      "type": "API",
      "params": {
        "name": {
          "type": "string",
          "text": "Search items by name"
        },
        "description": {
          "type": "string",
          "text": "Search items by description"
        },
        "rate": {
          "type": "string",
          "text": "Search items by rate"
        },
        "tax_id": {
          "type": "string",
          "text": "Search items by tax id"
        },
        "tax_name": {
          "type": "string",
          "text": "Tax name"
        },
        "is_taxable": {
          "type": "string",
          "text": "Boolean to track the taxability of the item"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the account to which the item has to be associated with"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter items by status"
        },
        "search_text": {
          "type": "string",
          "text": "Search items by name or description"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort item"
        },
        "sat_item_key_code": {
          "type": "string",
          "text": "SAT Item key code"
        },
        "unitkey_code": {
          "type": "string",
          "text": "SAT Unit code"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the list of all active items with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items",
        "alias_endpoint": "/zohobooks/books/v3/items",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#list-items"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items__item_id___put": {
      "provider_intent": "zohobooks__books__v3__items__item_id___put",
      "provider_alias_intent": "/books/v3/items/item_id",
      "text": "Update an item",
      "category": "Items",
      "method": "PUT",
      "type": "API",
      "params": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "Name of the item",
          "required": true
        },
        "rate": {
          "type": "number",
          "text": "Price of the item",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description for the item"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax to be associated to the item"
        },
        "purchase_tax_rule_id": {
          "type": "string",
          "text": "Id of the purchase tax rule"
        },
        "sales_tax_rule_id": {
          "type": "string",
          "text": "Id of the sales tax rule"
        },
        "tax_percentage": {
          "type": "string",
          "text": "Percent of the tax"
        },
        "sku": {
          "type": "string",
          "text": "SKU value of itemshould be unique throughout the product"
        },
        "product_type": {
          "type": "string",
          "text": "Specify the type of an item"
        },
        "hsn_or_sac": {
          "type": "string",
          "text": "HSN Code"
        },
        "sat_item_key_code": {
          "type": "string",
          "text": "Add SAT Item Key Code for your goods/services"
        },
        "unitkey_code": {
          "type": "string",
          "text": "Add Unit Key Code for your goods/services"
        },
        "is_taxable": {
          "type": "boolean",
          "text": "Boolean to track the taxability of the item",
          "enum": [
            true,
            false
          ]
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the account to which the item has to be associated with"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group Items"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "item_type": {
          "type": "string",
          "text": "Type of the item"
        },
        "purchase_description": {
          "type": "string",
          "text": "Purchase description for the item"
        },
        "purchase_rate": {
          "type": "string",
          "text": "Purchase price of the item"
        },
        "purchase_account_id": {
          "type": "string",
          "text": "ID of the COGS account to which the item has to be associated with"
        },
        "inventory_account_id": {
          "type": "string",
          "text": "ID of the stock account to which the item has to be associated with"
        },
        "vendor_id": {
          "type": "string",
          "text": "Preferred vendor ID"
        },
        "reorder_level": {
          "type": "string",
          "text": "Reorder level of the item"
        },
        "initial_stock": {
          "type": "string",
          "text": "Opening stock of the item"
        },
        "initial_stock_rate": {
          "type": "string",
          "text": "Unit price of the opening stock"
        },
        "item_tax_preferences": {
          "type": "array",
          "text": "Item tax preferences"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for an item"
        }
      },
      "path": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of an item",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items/{item_id}",
        "alias_endpoint": "/zohobooks/books/v3/items/item_id",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#update-an-item"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items__item_id___get": {
      "provider_intent": "zohobooks__books__v3__items__item_id___get",
      "provider_alias_intent": "/books/v3/items/item_id",
      "text": "Get an item",
      "category": "Items",
      "method": "GET",
      "type": "API",
      "params": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Details of an existing item",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items/{item_id}",
        "alias_endpoint": "/zohobooks/books/v3/items/item_id",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#get-an-item"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items__item_id___delete": {
      "provider_intent": "zohobooks__books__v3__items__item_id___delete",
      "provider_alias_intent": "/books/v3/items/item_id",
      "text": "Delete an item",
      "category": "Items",
      "method": "DELETE",
      "type": "API",
      "params": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the item created.items that are part of transaction cannot be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items/{item_id}",
        "alias_endpoint": "/zohobooks/books/v3/items/item_id",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#delete-an-item"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items__item_id__active___post": {
      "provider_intent": "zohobooks__books__v3__items__item_id__active___post",
      "provider_alias_intent": "/books/v3/items/item_id/active",
      "text": "Mark as active",
      "category": "Items",
      "method": "POST",
      "type": "API",
      "params": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an inactive item as active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items/{item_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/items/item_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#mark-as-active"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__items__item_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__items__item_id__inactive___post",
      "provider_alias_intent": "/books/v3/items/item_id/inactive",
      "text": "Mark as inactive",
      "category": "Items",
      "method": "POST",
      "type": "API",
      "params": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "item_id": {
          "type": "string",
          "text": "Item Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an active item as inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/items/{item_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/items/item_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/items/#get-an-item"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals___post": {
      "provider_intent": "zohobooks__books__v3__journals___post",
      "provider_alias_intent": "/books/v3/journals",
      "text": "Create a journal",
      "category": "Journals",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "journal_date": {
          "type": "string",
          "text": "Date on which the journal to be recorded",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the journa"
        },
        "notes": {
          "type": "string",
          "text": "Notes for the journal"
        },
        "journal_type": {
          "type": "string",
          "text": "Type of the Journal"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the journals"
        },
        "include_in_vat_return": {
          "type": "boolean",
          "text": "Check if Journal should be included in VAT Return",
          "enum": [
            true,
            false
          ]
        },
        "product_type": {
          "type": "string",
          "text": "Type of the journal"
        },
        "is_bas_adjustment": {
          "type": "boolean",
          "text": "heck if Journal is created for BAS Adjustment",
          "enum": [
            true,
            false
          ]
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency Associated with the Journal"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange Rate between the Currencies"
        },
        "line_items": {
          "type": "array",
          "text": "undefined"
        },
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of the Tax Exemption"
        },
        "tax_exemption_type": {
          "type": "string",
          "text": "Type of the Tax Exemption"
        },
        "status": {
          "type": "string",
          "text": "Search Journal by journal status"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custome fields"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a journal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals",
        "alias_endpoint": "/zohobooks/books/v3/journals",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#create-a-journal"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals___get": {
      "provider_intent": "zohobooks__books__v3__journals___get",
      "provider_alias_intent": "/books/v3/journals",
      "text": "Get journal list",
      "category": "Journals",
      "method": "GET",
      "type": "API",
      "params": {
        "entry_number": {
          "type": "string",
          "text": "Search journals by journal entry number"
        },
        "reference_number": {
          "type": "string",
          "text": "Search journals by journal reference numbe"
        },
        "date": {
          "type": "string",
          "text": "Search journals by journal date"
        },
        "notes": {
          "type": "string",
          "text": "Search journals by journal notes"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search the journals using Last Modified Time"
        },
        "total": {
          "type": "string",
          "text": "Search journals by journal total"
        },
        "customer_id": {
          "type": "string",
          "text": "Search Journals using Customer ID"
        },
        "vendor_id": {
          "type": "string",
          "text": "Search the journals using Vendor ID"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter journals by journal date"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort journal list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get journal list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals",
        "alias_endpoint": "/zohobooks/books/v3/journals",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#get-journal-list"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__journal_id___put": {
      "provider_intent": "zohobooks__books__v3__journals__journal_id___put",
      "provider_alias_intent": "/books/v3/journals/journal_id",
      "text": "Update a journal",
      "category": "Journals",
      "method": "PUT",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {
        "journal_date": {
          "type": "string",
          "text": "Date on which the journal to be recorded",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the journa"
        },
        "notes": {
          "type": "string",
          "text": "Notes for the journal"
        },
        "journal_type": {
          "type": "string",
          "text": "Type of the Journal"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the journals"
        },
        "include_in_vat_return": {
          "type": "boolean",
          "text": "Check if Journal should be included in VAT Return",
          "enum": [
            true,
            false
          ]
        },
        "product_type": {
          "type": "string",
          "text": "Type of the journal"
        },
        "is_bas_adjustment": {
          "type": "boolean",
          "text": "heck if Journal is created for BAS Adjustment",
          "enum": [
            true,
            false
          ]
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency Associated with the Journal"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange Rate between the Currencies"
        },
        "line_items": {
          "type": "array",
          "text": "undefined"
        },
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of the Tax Exemption"
        },
        "tax_exemption_type": {
          "type": "string",
          "text": "Type of the Tax Exemption"
        },
        "status": {
          "type": "string",
          "text": "Search Journal by journal status"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custome fields"
        }
      },
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the journal with given information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{journal_id}",
        "alias_endpoint": "/zohobooks/books/v3/journals/journal_id",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#update-a-journal"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__journal_id___get": {
      "provider_intent": "zohobooks__books__v3__journals__journal_id___get",
      "provider_alias_intent": "/books/v3/journals/journal_id",
      "text": "Get journal",
      "category": "Journals",
      "method": "GET",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of the journa",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{journal_id}",
        "alias_endpoint": "/zohobooks/books/v3/journals/journal_id",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#get-journal"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__journal_id___delete": {
      "provider_intent": "zohobooks__books__v3__journals__journal_id___delete",
      "provider_alias_intent": "/books/v3/journals/journal_id",
      "text": "Delete a journal",
      "category": "Journals",
      "method": "DELETE",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deletes the given journal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{journal_id}",
        "alias_endpoint": "/zohobooks/books/v3/journals/journal_id",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#delete-a-journal"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__journal_id__status__publish___post": {
      "provider_intent": "zohobooks__books__v3__journals__journal_id__status__publish___post",
      "provider_alias_intent": "/books/v3/journals/journal_id/status/publish",
      "text": "Mark a journal as published",
      "category": "Journals",
      "method": "POST",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft journal as published",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{journal_id}/status/publish",
        "alias_endpoint": "/zohobooks/books/v3/journals/journal_id/status/publish",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#mark-a-journal-as-published"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__journal_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__journals__journal_id__attachment___post",
      "provider_alias_intent": "/books/v3/journals/journal_id/attachment",
      "text": "Add attachment to a journal",
      "category": "Journals",
      "method": "POST",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {
        "attachment": {
          "type": "string",
          "text": "The file that is to be added as an Attachment in the Journal"
        },
        "doc": {
          "type": "string",
          "text": "Document that is to be attached"
        },
        "totalFiles": {
          "type": "string",
          "text": "Total number of files"
        },
        "document_ids": {
          "type": "string",
          "text": "ID's of the document"
        }
      },
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to a journal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{journal_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/journals/journal_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#add-attachment-to-a-journal"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__jounral_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__journals__jounral_id__comments___post",
      "provider_alias_intent": "/books/v3/journals/jounral_id/comments",
      "text": "Add comment",
      "category": "Journals",
      "method": "POST",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description of a comment"
        }
      },
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for a journal",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{jounral_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/journals/jounral_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__journals__jounral_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__journals__jounral_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/journals/jounral_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Journals",
      "method": "DELETE",
      "type": "API",
      "params": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "journal_id": {
          "type": "string",
          "text": "Journal Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a jounral comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/journals/{jounral_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/journals/jounral_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/journals/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.accountants.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__openingbalances___post": {
      "provider_intent": "zohobooks__books__v3__settings__openingbalances___post",
      "provider_alias_intent": "/books/v3/settings/openingbalances",
      "text": "Create opening balance",
      "category": "Opening Balance",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date on which the opening balance needs to be recorded",
          "required": true
        },
        "accounts": {
          "type": "array",
          "text": "Account"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Creates opening balance with the given information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/openingbalances",
        "alias_endpoint": "/zohobooks/books/v3/settings/openingbalances",
        "api_ref": "https://www.zoho.com/books/api/v3/opening-balance/#create-opening-balance"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__openingbalances___put": {
      "provider_intent": "zohobooks__books__v3__settings__openingbalances___put",
      "provider_alias_intent": "/books/v3/settings/openingbalances",
      "text": "Update opening balance",
      "category": "Opening Balance",
      "method": "PUT",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date on which the opening balance needs to be recorded"
        },
        "accounts": {
          "type": "array",
          "text": "Account"
        },
        "opening_balance_id": {
          "type": "string",
          "text": "ID of opening balance",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the existing opening balance information",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/openingbalances",
        "alias_endpoint": "/zohobooks/books/v3/settings/openingbalances",
        "api_ref": "https://www.zoho.com/books/api/v3/opening-balance/#update-opening-balance"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__openingbalances___get": {
      "provider_intent": "zohobooks__books__v3__settings__openingbalances___get",
      "provider_alias_intent": "/books/v3/settings/openingbalances",
      "text": "Get opening balance",
      "category": "Opening Balance",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get opening balance",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/openingbalances",
        "alias_endpoint": "/zohobooks/books/v3/settings/openingbalances",
        "api_ref": "https://www.zoho.com/books/api/v3/opening-balance/#get-opening-balance"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__openingbalances___delete": {
      "provider_intent": "zohobooks__books__v3__settings__openingbalances___delete",
      "provider_alias_intent": "/books/v3/settings/openingbalances",
      "text": "Delete opening balance",
      "category": "Opening Balance",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the entered opening balance",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/openingbalances",
        "alias_endpoint": "/zohobooks/books/v3/settings/openingbalances",
        "api_ref": "https://www.zoho.com/books/api/v3/opening-balance/#get-opening-balance"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects___post": {
      "provider_intent": "zohobooks__books__v3__projects___post",
      "provider_alias_intent": "/books/v3/projects",
      "text": "Create a project",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "project_name": {
          "type": "string",
          "text": "Name of the project",
          "required": true
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "description": {
          "type": "string",
          "text": "Project description"
        },
        "billing_type": {
          "type": "string",
          "text": "The way you bill your customer",
          "required": true
        },
        "rate": {
          "type": "string",
          "text": "Hourly rate for a task"
        },
        "budget_type": {
          "type": "string",
          "text": "The way you budget"
        },
        "budget_hours": {
          "type": "string",
          "text": "Task budget hours"
        },
        "budget_amount": {
          "type": "string",
          "text": "Give value, if you are estimating total project revenue budget"
        },
        "cost_budget_amount": {
          "type": "number",
          "text": "Budgeted Cost to complete this project"
        },
        "user_id": {
          "type": "string",
          "text": "ID of the user to be added to the project",
          "required": true
        },
        "tasks": {
          "type": "array",
          "text": "Tasks"
        },
        "users": {
          "type": "array",
          "text": "User"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects",
        "alias_endpoint": "/zohobooks/books/v3/projects",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#create-a-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects___get": {
      "provider_intent": "zohobooks__books__v3__projects___get",
      "provider_alias_intent": "/books/v3/projects",
      "text": "List projects",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_by": {
          "type": "string",
          "text": "Filter projects by any status"
        },
        "customer_id": {
          "type": "string",
          "text": "Search projects by customer id"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort projects"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all projects with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects",
        "alias_endpoint": "/zohobooks/books/v3/projects",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#list-projects"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id___put": {
      "provider_intent": "zohobooks__books__v3__projects__project_id___put",
      "provider_alias_intent": "/books/v3/projects/project_id",
      "text": "Update project",
      "category": "Projects",
      "method": "PUT",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "project_name": {
          "type": "string",
          "text": "Name of the project",
          "required": true
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "description": {
          "type": "string",
          "text": "Project description"
        },
        "billing_type": {
          "type": "string",
          "text": "The way you bill your customer",
          "required": true
        },
        "rate": {
          "type": "string",
          "text": "Hourly rate for a task"
        },
        "budget_type": {
          "type": "string",
          "text": "The way you budget"
        },
        "budget_hours": {
          "type": "string",
          "text": "Task budget hours"
        },
        "budget_amount": {
          "type": "string",
          "text": "Give value, if you are estimating total project revenue budget"
        },
        "cost_budget_amount": {
          "type": "number",
          "text": "Budgeted Cost to complete this project"
        },
        "user_id": {
          "type": "string",
          "text": "ID of the user to be added to the project",
          "required": true
        },
        "tasks": {
          "type": "array",
          "text": "Tasks"
        },
        "users": {
          "type": "array",
          "text": "User"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update details of a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#update-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.projects.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id___get",
      "provider_alias_intent": "/books/v3/projects/project_id",
      "text": "Get a project",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#get-a-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id___delete": {
      "provider_intent": "zohobooks__books__v3__projects__project_id___delete",
      "provider_alias_intent": "/books/v3/projects/project_id",
      "text": "Delete project",
      "category": "Projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deleting a existing project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#delete-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__active___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__active___post",
      "provider_alias_intent": "/books/v3/projects/project_id/active",
      "text": "Activate project",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark project as active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#activate-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__inactive___post",
      "provider_alias_intent": "/books/v3/projects/project_id/inactive",
      "text": "Inactivate a project",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Marking a project as inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#inactivate-a-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__clone___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__clone___post",
      "provider_alias_intent": "/books/v3/projects/project_id/clone",
      "text": "Clone project",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "project_name": {
          "type": "string",
          "text": "Name of the project",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Project description"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Cloning a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/clone",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/clone",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#clone-project"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users___post",
      "provider_alias_intent": "/books/v3/projects/project_id/users",
      "text": "Assign users",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "users": {
          "type": "array",
          "text": "User"
        },
        "cost_rate": {
          "type": "double",
          "text": "Cost rate",
          "required": true
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Assign a users to a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#assign-users"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users___get",
      "provider_alias_intent": "/books/v3/projects/project_id/users",
      "text": "List Users",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get list of users associated with a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#list-users"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users__invite___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users__invite___post",
      "provider_alias_intent": "/books/v3/projects/project_id/users/invite",
      "text": "Invite user",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "user_name": {
          "type": "string",
          "text": "Name of the user",
          "required": true
        },
        "email": {
          "type": "string",
          "text": "Email of the user",
          "required": true
        },
        "user_role": {
          "type": "string",
          "text": "Role to be assigned"
        },
        "rate": {
          "type": "string",
          "text": "Hourly rate for a tas"
        },
        "budget_hours": {
          "type": "string",
          "text": "Task budget hours"
        },
        "cost_rate": {
          "type": "number",
          "text": "Cost rate"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Invite and user to the project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users/invite",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users/invite",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#invite-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users__user_id___put": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users__user_id___put",
      "provider_alias_intent": "/books/v3/projects/project_id/users/user_id",
      "text": "Update user",
      "category": "Projects",
      "method": "PUT",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {
        "user_name": {
          "type": "string",
          "text": "Name of the user"
        },
        "user_role": {
          "type": "string",
          "text": "Role to be assigned"
        },
        "rate": {
          "type": "string",
          "text": "Hourly rate for a tas"
        },
        "budget_hours": {
          "type": "string",
          "text": "Task budget hours"
        },
        "cost_rate": {
          "type": "number",
          "text": "Cost rate"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update details of a user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#update-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users__user_id___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users__user_id___get",
      "provider_alias_intent": "/books/v3/projects/project_id/users/user_id",
      "text": "Get a User",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get details of a user in project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#get-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__users__user_id___delete": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__users__user_id___delete",
      "provider_alias_intent": "/books/v3/projects/project_id/users/user_id",
      "text": "Delete user",
      "category": "Projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Remove user from a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#delete-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__comments___post",
      "provider_alias_intent": "/books/v3/projects/project_id/comments",
      "text": "Post comment",
      "category": "Projects",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Project description",
          "required": true
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Post comment to a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#post-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__comments___get",
      "provider_alias_intent": "/books/v3/projects/project_id/comments",
      "text": "List comments",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get comments for a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#list-comments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/projects/project_id/comments/comment_id",
      "text": "Delete comment",
      "category": "Projects",
      "method": "DELETE",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deleting a comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#delete-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__invoices___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__invoices___get",
      "provider_alias_intent": "/books/v3/projects/project_id/invoices",
      "text": "List invoices",
      "category": "Projects",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort invoices raised",
          "required": true
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Lists invoices created for this project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/invoices",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/invoices",
        "api_ref": "https://www.zoho.com/books/api/v3/projects/#list-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders___post",
      "provider_alias_intent": "/books/v3/purchaseorders",
      "text": "Create a purchase order",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "attachment": {
          "type": "string",
          "text": "Allowed Extensions: gif, png, jpeg, jpg, bmp, pdf, xls, xlsx, doc and docx."
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto purchase order number generation for this purchase order number"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the purchase order has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom purchase order has to be sent"
        },
        "purchaseorder_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the purchase order"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter pricebook ID"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number of purchase order"
        },
        "billing_address_id": {
          "type": "number",
          "text": "ID of the Billing Address"
        },
        "crm_owner_id": {
          "type": "string",
          "text": "ID of the CRM Owner"
        },
        "crm_custom_reference_id": {
          "type": "number",
          "text": "ID of CRM Custom Reference"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the purchase order"
        },
        "date": {
          "type": "string",
          "text": "The date the purchase order is created"
        },
        "delivery_date": {
          "type": "string",
          "text": "Date of delivery of the purchase order"
        },
        "due_date": {
          "type": "string",
          "text": "Delivery date of purchase order"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "discount": {
          "type": "string",
          "text": "Discount to be applied on Purchase Orde"
        },
        "discount_account_id": {
          "type": "string",
          "text": "Account ID for the discount amount"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Discount applied before or after applying tax",
          "enum": [
            true,
            false
          ]
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Delivery note for vendo"
        },
        "notes_default": {
          "type": "string",
          "text": "Default notes for purchase order"
        },
        "terms": {
          "type": "string",
          "text": "Terms for the purchase order"
        },
        "terms_default": {
          "type": "string",
          "text": "Default terms for Purchase Orders"
        },
        "ship_via": {
          "type": "string",
          "text": "Shipment Preference"
        },
        "delivery_org_address_id": {
          "type": "string",
          "text": "ID of the Delivery Address"
        },
        "delivery_customer_id": {
          "type": "string",
          "text": "string"
        },
        "attention": {
          "type": "string",
          "text": "Delivery contact person"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the purchase order"
        },
        "is_update_customer": {
          "type": "string",
          "text": "Check if customer should be updated"
        },
        "salesorder_id": {
          "type": "number",
          "text": "ID of the Sales Order"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of purchase order",
          "required": true
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for purchase order"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a purchase order for your vendor",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#create-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders___get",
      "provider_alias_intent": "/books/v3/purchaseorders",
      "text": "List purchase orders",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {
        "purchaseorder_number": {
          "type": "string",
          "text": "Search purchase order by purchase order number. Variants: purchaseorder_number.startswith and purchaseorder_number.contains"
        },
        "reference_number": {
          "type": "string",
          "text": "Search purchase order by reference number. Variants: reference_number.startswith and reference_number.contains"
        },
        "date": {
          "type": "string",
          "text": "The date the purchase order is created."
        },
        "status": {
          "type": "string",
          "text": "Search purchase order by purchase order status. Allowed Values: draft, open, billed and cancelled"
        },
        "item_description": {
          "type": "string",
          "text": "Search purchase order by purchase order item description. Variants: item_description.startswith and item_description.contains"
        },
        "vendor_name": {
          "type": "string",
          "text": "Search purchase order by vendor name. Variants: vendor_name.startswith and vendor_name.contains"
        },
        "total": {
          "type": "string",
          "text": "Search purchase order by purchase order total. Variants: total.start, total.end, total.less_than, total.less_equals, total.greater_than and total.greater_equals"
        },
        "vendor_id": {
          "type": "string",
          "text": "Search purchase order by vendor id."
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search purchase order by last modified time."
        },
        "item_id": {
          "type": "string",
          "text": "Search purchase order by item id."
        },
        "filter_by": {
          "type": "string",
          "text": "Filter purchase order by any status. Allowed Values: Status.All, Status.Draft, Status.Open, Status.Billed and Status.Cancelled."
        },
        "search_text": {
          "type": "string",
          "text": "Search purchase order by purchase order number or reference number or vendor name."
        },
        "sort_column": {
          "type": "string",
          "text": "Sort purchase orders. Allowed Values: vendor_name, purchaseorder_number, date, delivery_date, total and created_time."
        },
        "custom_field": {
          "type": "string",
          "text": "Search purchase order by purchase order’s custom field. Variants: custom_field_startswith, custom_field_contains"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all purchase orders",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#list-purchase-orders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchase_order_id___put": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchase_order_id___put",
      "provider_alias_intent": "/books/v3/purchaseorders/purchase_order_id",
      "text": "Update a purchase order",
      "category": "Purchase Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "attachment": {
          "type": "string",
          "text": "Allowed Extensions :  gif, png, jpeg, jpg, bmp, pdf, xls, xlsx, doc and docx."
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto purchase order number generation for this purchase order number"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the purchase order has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom purchase order has to be sent"
        },
        "purchaseorder_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the purchase order"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter pricebook ID"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number of purchase order"
        },
        "billing_address_id": {
          "type": "number",
          "text": "ID of the Billing Address"
        },
        "crm_owner_id": {
          "type": "string",
          "text": "ID of the CRM Owner"
        },
        "crm_custom_reference_id": {
          "type": "number",
          "text": "ID of CRM Custom Reference"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the purchase order"
        },
        "date": {
          "type": "string",
          "text": "The date the purchase order is created"
        },
        "delivery_date": {
          "type": "string",
          "text": "Date of delivery of the purchase order"
        },
        "due_date": {
          "type": "string",
          "text": "Delivery date of purchase order"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "discount": {
          "type": "string",
          "text": "Discount to be applied on Purchase Orde"
        },
        "discount_account_id": {
          "type": "string",
          "text": "Account ID for the discount amount"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Discount applied before or after applying tax",
          "enum": [
            true,
            false
          ]
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Delivery note for vendo"
        },
        "notes_default": {
          "type": "string",
          "text": "Default notes for purchase order"
        },
        "terms": {
          "type": "string",
          "text": "Terms for the purchase order"
        },
        "terms_default": {
          "type": "string",
          "text": "Default terms for Purchase Orders"
        },
        "ship_via": {
          "type": "string",
          "text": "Shipment Preference"
        },
        "delivery_org_address_id": {
          "type": "string",
          "text": "ID of the Delivery Address"
        },
        "delivery_customer_id": {
          "type": "string",
          "text": "ID of the Customer associated with the Purchase Order"
        },
        "attention": {
          "type": "string",
          "text": "Delivery contact person"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the purchase order"
        },
        "is_update_customer": {
          "type": "string",
          "text": "Check if customer should be updated"
        },
        "salesorder_id": {
          "type": "number",
          "text": "ID of the Sales Order"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of purchase order",
          "required": true
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for purchase order"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchase_order_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchase_order_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#update-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchase_order_id___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchase_order_id___get",
      "provider_alias_intent": "/books/v3/purchaseorders/purchase_order_id",
      "text": "Get a purchase order",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "accept": {
          "type": "string",
          "text": "Get the details of a particular purchase order in formats such as json/ pdf/ html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchase_order_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchase_order_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#get-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchase_order_id___delete": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchase_order_id___delete",
      "provider_alias_intent": "/books/v3/purchaseorders/purchase_order_id",
      "text": "Delete purchase order",
      "category": "Purchase Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchase_order_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchase_order_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#delete-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__open___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__open___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/status/open",
      "text": "Mark a purchase order as open",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft purchase order as open",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/status/open",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/status/open",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#mark-a-purchase-order-as-open"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__billed___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__billed___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/status/billed",
      "text": "Mark as billed",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a purchase order as billed",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/status/billed",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/status/billed",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#mark-as-billed"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__cancelled___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__status__cancelled___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/status/cancelled",
      "text": "Cancel a purchase order",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a purchase order as cancelled",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/status/cancelled",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/status/cancelled",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#cancel-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__submit___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/submit",
      "text": "Submit a purchase order for approval",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit a purchase order for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#submit-a-purchase-order-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__approve___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/approve",
      "text": "Approve a purchase order",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#approve-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__email___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__email___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/email",
      "text": "Email a purchase order",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "attachments": {
          "type": "file",
          "text": "The files to be attached with the email."
        },
        "send_attachment": {
          "type": "file",
          "text": "Send the purchase order attachment a with the email."
        },
        "file_name": {
          "type": "string",
          "text": "Name of the file."
        }
      },
      "custom_headers": {},
      "body": {
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "from_address_id": {
          "type": "number",
          "text": "ID of From Address of the Email Address"
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be cced"
        },
        "bcc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be BCC ed"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the mail"
        },
        "body": {
          "type": "string",
          "text": "Body of the mail",
          "required": true
        },
        "mail_documents": {
          "type": "array",
          "text": "All Mail Documents"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email a purchase order to the vendor. Input json string is not mandatory",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#email-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__email___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__email___get",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/email",
      "text": "Get purchase order email content",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "email_template_id": {
          "type": "string",
          "text": "Get the email content based on a specific email template"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the email content of a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#get-purchase-order-email-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__address__billing___put",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/address/billing",
      "text": "Update billing address",
      "category": "Purchase Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Address associated with the Purchase Order"
        },
        "city": {
          "type": "string",
          "text": "City involved in the Address"
        },
        "state": {
          "type": "string",
          "text": "State Involved in the Address"
        },
        "zip": {
          "type": "string",
          "text": "ZIP Code of the Address"
        },
        "country": {
          "type": "string",
          "text": "Country involved in the Address"
        },
        "fax": {
          "type": "string",
          "text": "Fax Number"
        },
        "attention": {
          "type": "string",
          "text": "Delivery contact person"
        },
        "is_update_customer": {
          "type": "string",
          "text": "Check if customer should be updated"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this purchase order alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__templates___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__templates___get",
      "provider_alias_intent": "/books/v3/purchaseorders/templates",
      "text": "List purchase order templates",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all purchase order pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/templates",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#list-purchase-order-templates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/templates/template_id",
      "text": "Update purchase order template",
      "category": "Purchase Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#update-purchase-order-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/attachment",
      "text": "Add attachment to a purchase order",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {
        "attachment": {
          "type": "string",
          "text": "Allowed Extensions"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#add-attachment-to-a-purchase-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___put": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___put",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/attachment",
      "text": "Update attachment preference",
      "category": "Purchase Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {
        "can_send_in_mail": {
          "type": "string",
          "text": "Boolean to send the attachment with the purchase order when emailed",
          "required": true
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Set whether you want to send the attached file while emailing the purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#update-attachment-preference"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___get",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/attachment",
      "text": "Get a purchase order attachment",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "preview": {
          "type": "string",
          "text": "Get the thumbnail of the attachment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the file attached to the purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#get-a-purchase-order-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___delete": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__attachment___delete",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/attachment",
      "text": "Delete an attachment",
      "category": "Purchase Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the file attached to the purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#delete-an-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments___post",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/comments",
      "text": "Add comment",
      "category": "Purchase Order",
      "method": "POST",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description"
        },
        "expected_delivery_date": {
          "type": "string",
          "text": "Date the goods is expected to arrive"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments___get",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/comments",
      "text": "List purchase order comments & history",
      "category": "Purchase Order",
      "method": "GET",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#list-purchase-order-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments__comment_id___put": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments__comment_id___put",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/comments/comment_id",
      "text": "Update comment",
      "category": "Purchase Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description"
        },
        "expected_delivery_date": {
          "type": "string",
          "text": "Date the goods is expected to arrive"
        }
      },
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing comment of a purchase order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__purchaseorders__purchaseorder_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/purchaseorders/purchaseorder_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Purchase Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "purchase_order_id": {
          "type": "string",
          "text": "Purchase Order Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a purchase order comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/purchaseorders/{purchaseorder_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/purchaseorders/purchaseorder_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/purchase-order/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.purchaseorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills___post": {
      "provider_intent": "zohobooks__books__v3__recurringbills___post",
      "provider_alias_intent": "/books/v3/recurringbills",
      "text": "Create a recurring bill",
      "category": "Recurring Bills",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the bill has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency"
        },
        "recurrence_name": {
          "type": "string",
          "text": "Name of the Recurring Bill",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "Start date of the recurring bill",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "Date on which recurring bill has to expire"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "vat_reg_no": {
          "type": "string",
          "text": "Var reg no"
        },
        "is_abn_quoted": {
          "type": "string",
          "text": "Is abn quoted"
        },
        "abn": {
          "type": "string",
          "text": "Abn"
        },
        "is_reverse_charge_applied": {
          "type": "boolean",
          "text": "Applicable for transactions where you pay reverse charge",
          "enum": [
            true,
            false
          ]
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter ID of the price book"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a recurrence bill"
        },
        "is_tds_applied": {
          "type": "boolean",
          "text": "Check if TDS is applied",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Notes for the Bill"
        },
        "terms": {
          "type": "string",
          "text": "Terms and Conditions for the Bill"
        },
        "ayment_terms": {
          "type": "number",
          "text": "Number Referring to Payment Terms"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label of the Payment Terms"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom"
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the recurrence"
        },
        "discount_account_id": {
          "type": "string",
          "text": "ID of the account associated with the discount account"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "To specify discount applied in before /after tax",
          "enum": [
            true,
            false
          ]
        },
        "repeat_every": {
          "type": "string",
          "text": "Description for repeat_every",
          "required": true
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "Description for recurrence_frequency",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a recurring bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#create-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills___get": {
      "provider_intent": "zohobooks__books__v3__recurringbills___get",
      "provider_alias_intent": "/books/v3/recurringbills",
      "text": "List recurring bills",
      "category": "Recurring Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring bill id"
        },
        "vendor_id": {
          "type": "string",
          "text": "Search recurring bills by Vendor ID"
        },
        "vendor_name": {
          "type": "string",
          "text": "Search recurring bills by vendor name. Variants: vendor_name_startswith and vendor_name_contains"
        },
        "status": {
          "type": "string",
          "text": "Search recurring bills by recurring bill status. Allowed Values: active, stopped, expired"
        },
        "recurrence_name": {
          "type": "string",
          "text": "Search recurring bills by recurrence number. Variants: recurrence_name_startswith and recurrence_name_contains"
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency"
        },
        "currency_code": {
          "type": "string",
          "text": "Code of the Currency"
        },
        "currency_symbol": {
          "type": "string",
          "text": "Symbol of the Currency"
        },
        "start_date": {
          "type": "string",
          "text": "Search recurring bills by recurring bill start date"
        },
        "end_date": {
          "type": "string",
          "text": "Date on which recurring bill has to expire. Can be left as empty to run forever. Format [yyyy-mm-dd]."
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered. Supported codes for UAE emirates are : Abu Dhabi - AB, Ajman - AJ, Dubai - DU, Fujairah - FU, Ras al-Khaimah - RA, Sharjah - SH, Umm al-Quwain - UM. Supported codes for the GCC countries are : United Arab Emirates - AE, Saudi Arabia - SA, Bahrain - BH, Kuwait - KW, Oman - OM, Qatar - QA."
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer."
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill.Choose whether the vendor falls under: vat_registered,vat_not_registered,gcc_vat_not_registered,gcc_vat_registered,non_gcc. dz_vat_registered and dz_vat_not_registered are supported only for UAE."
        },
        "vat_treatment": {
          "type": "string",
          "text": "(Optional) VAT treatment for the bill. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk. If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the UK then his VAT treatment is overseas(For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu)."
        },
        "vat_reg_no": {
          "type": "string",
          "text": "For UK Edition: VAT Registration number of a contact with length should be between 2 and 12 characters. For Avalara: If you are doing sales in the European Union (EU) then provide VAT Registration Number of your customers here. This is used to calculate VAT for B2B sales, from Avalara."
        },
        "is_abn_quoted": {
          "type": "string",
          "text": "Is abn quoted."
        },
        "abn": {
          "type": "string",
          "text": "Abn."
        },
        "is_reverse_charge_applied": {
          "type": "string",
          "text": "Applicable for transactions where you pay reverse charge."
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter ID of the price book"
        },
        "pricebook_name": {
          "type": "string",
          "text": "Name of the price book"
        },
        "is_inclusive_tax": {
          "type": "string",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax"
        },
        "is_tds_applied": {
          "type": "string",
          "text": "Check if TDS is applied."
        },
        "notes": {
          "type": "string",
          "text": "Notes for the Bill"
        },
        "terms": {
          "type": "string",
          "text": "Terms and Conditions for the Bill"
        },
        "payment_terms": {
          "type": "string",
          "text": "Number Referring to Payment Terms"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label the Payment Terms"
        },
        "acquisition_vat_total": {
          "type": "string",
          "text": "Total of the VAT Acquistion."
        },
        "reverse_charge_vat_total": {
          "type": "string",
          "text": "Total of the Reverse Charge."
        },
        "created_time": {
          "type": "string",
          "text": "Created time of the bill"
        },
        "created_by_id": {
          "type": "string",
          "text": "Name of User who created the Bill"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Last Modified Time of the Bill"
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the recurrence"
        },
        "discount_account_id": {
          "type": "string",
          "text": "ID of the account associated with the discount account"
        },
        "is_discount_before_tax": {
          "type": "string",
          "text": "To specify discount applied in before /after tax"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all recurring bills with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#list-recurring-bills"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills__recurring_bill_id___put": {
      "provider_intent": "zohobooks__books__v3__recurringbills__recurring_bill_id___put",
      "provider_alias_intent": "/books/v3/recurringbills/recurring_bill_id",
      "text": "Update a recurring bill",
      "category": "Recurring Bills",
      "method": "PUT",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the bill has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency"
        },
        "recurrence_name": {
          "type": "string",
          "text": "Name of the Recurring Bill",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "Start date of the recurring bill",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "Date on which recurring bill has to expire"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the bill"
        },
        "vat_reg_no": {
          "type": "string",
          "text": "Var reg no"
        },
        "is_abn_quoted": {
          "type": "string",
          "text": "Is abn quoted"
        },
        "abn": {
          "type": "string",
          "text": "Abn"
        },
        "is_reverse_charge_applied": {
          "type": "boolean",
          "text": "Applicable for transactions where you pay reverse charge",
          "enum": [
            true,
            false
          ]
        },
        "pricebook_id": {
          "type": "string",
          "text": "Enter ID of the price book"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a recurrence bill"
        },
        "is_tds_applied": {
          "type": "boolean",
          "text": "Check if TDS is applied",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Notes for the Bill"
        },
        "terms": {
          "type": "string",
          "text": "Terms and Conditions for the Bill"
        },
        "ayment_terms": {
          "type": "number",
          "text": "Number Referring to Payment Terms"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Label of the Payment Terms"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom"
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the recurrence"
        },
        "discount_account_id": {
          "type": "string",
          "text": "ID of the account associated with the discount account"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "To specify discount applied in before /after tax",
          "enum": [
            true,
            false
          ]
        },
        "repeat_every": {
          "type": "string",
          "text": "Description for repeat_every",
          "required": true
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "Description for recurrence_frequency",
          "required": true
        }
      },
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update a recurring bill. To delete a line item just remove it from the line_items list",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills/{recurring_bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills/recurring_bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#update-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_bills__recurring_bill_id___get": {
      "provider_intent": "zohobooks__books__v3__recurring_bills__recurring_bill_id___get",
      "provider_alias_intent": "/books/v3/recurring_bills/recurring_bill_id",
      "text": "Get a recurring bill",
      "category": "Recurring Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a recurring bill.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurring_bills/{recurring_bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_bills/recurring_bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#get-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_bills__recurring_bill_id___delete": {
      "provider_intent": "zohobooks__books__v3__recurring_bills__recurring_bill_id___delete",
      "provider_alias_intent": "/books/v3/recurring_bills/recurring_bill_id",
      "text": "Delete a recurring bill",
      "category": "Recurring Bills",
      "method": "DELETE",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing recurring bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurring_bills/{recurring_bill_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_bills/recurring_bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#delete-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills__recurring_bill_id__status__stop___post": {
      "provider_intent": "zohobooks__books__v3__recurringbills__recurring_bill_id__status__stop___post",
      "provider_alias_intent": "/books/v3/recurringbills/recurring_bill_id/status/stop",
      "text": "Stop a recurring bill",
      "category": "Recurring Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Stop an active recurring bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills/{recurring_bill_id}/status/stop",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills/recurring_bill_id/status/stop",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#stop-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills__recurring_bill_id__status__resume___post": {
      "provider_intent": "zohobooks__books__v3__recurringbills__recurring_bill_id__status__resume___post",
      "provider_alias_intent": "/books/v3/recurringbills/recurring_bill_id/status/resume",
      "text": "Resume a recurring Bill",
      "category": "Recurring Bills",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Resume a stopped recurring bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills/{recurring_bill_id}/status/resume",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills/recurring_bill_id/status/resume",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#resume-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringbills__recurring_bill_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__recurringbills__recurring_bill_id__comments___get",
      "provider_alias_intent": "/books/v3/recurringbills/recurring_bill_id/comments",
      "text": "List recurring bill history",
      "category": "Recurring Bills",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_bill_id": {
          "type": "string",
          "text": "Recurring Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get history and comments of a recurring bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringbills/{recurring_bill_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/recurringbills/recurring_bill_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-bills/#get-a-recurring-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.bills.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses___post": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses___post",
      "provider_alias_intent": "/books/v3/recurringexpenses",
      "text": "Create a recurring expense",
      "category": "Recurring Expenses",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "Accound Id",
          "required": true
        },
        "recurrence_name": {
          "type": "string",
          "text": "Name of the Recurring Expense",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "Start date of the recurring expense",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "Date on which recurring expense has to expire"
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "Recurrence Frequency",
          "required": true
        },
        "repeat_every": {
          "type": "string",
          "text": "Repeat Every",
          "required": true
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "reverse_charge_tax_id": {
          "type": "string",
          "text": "Enter reverse charge tax ID"
        },
        "line_items": {
          "type": "array",
          "text": "Line items"
        },
        "amount": {
          "type": "number",
          "text": "Recurring Expense amount",
          "required": true
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the recurring expense"
        },
        "product_type": {
          "type": "string",
          "text": "Type of the expense"
        },
        "acquisition_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is an EU"
        },
        "reverse_charge_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is a non UK"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax id"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Is inclusive tax",
          "enum": [
            true,
            false
          ]
        },
        "is_billable": {
          "type": "boolean",
          "text": "Is billable",
          "enum": [
            true,
            false
          ]
        },
        "customer_id": {
          "type": "string",
          "text": "Search expenses by customer id"
        },
        "project_id": {
          "type": "string",
          "text": "Project id"
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a recurring-expense"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#create-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses___get": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses___get",
      "provider_alias_intent": "/books/v3/recurringexpenses",
      "text": "List recurring expenses",
      "category": "Recurring Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "recurrence_name": {
          "type": "string",
          "text": "Search recurring expenses by recurring expense name"
        },
        "last_created_date": {
          "type": "string",
          "text": "Search recurring expenses by date on when last expense was generated"
        },
        "next_expense_date": {
          "type": "string",
          "text": "Search recurring expenses by date on which next expense will be generated"
        },
        "status": {
          "type": "string",
          "text": "Search expenses by expense status"
        },
        "account_id": {
          "type": "string",
          "text": "Account id"
        },
        "account_name": {
          "type": "string",
          "text": "Search expenses by expense account name"
        },
        "amount": {
          "type": "string",
          "text": "Search expenses by amount"
        },
        "customer_name": {
          "type": "string",
          "text": "Search expenses by customer name"
        },
        "customer_id": {
          "type": "string",
          "text": "Search expenses by customer id"
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "Search expenses by paid through account id"
        },
        "ilter_by": {
          "type": "string",
          "text": "Filter expenses by expense status"
        },
        "search_text": {
          "type": "string",
          "text": "Search expenses by account name or description"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort expenses"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the Expenses with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#list-recurring-expenses"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id___put": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id___put",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id",
      "text": "Update a recurring expense",
      "category": "Recurring Expenses",
      "method": "PUT",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {
        "account_id": {
          "type": "string",
          "text": "Account idtrue"
        },
        "recurrence_name": {
          "type": "string",
          "text": "Name of the Recurring Expense",
          "required": true
        },
        "start_date": {
          "type": "string",
          "text": "Start date of the recurring expense",
          "required": true
        },
        "end_date": {
          "type": "string",
          "text": "Date on which recurring expense has to expire"
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "Recurrence frequency"
        },
        "repeat_every": {
          "type": "string",
          "text": "Repeat every",
          "required": true
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered to have occurred for VAT purposes"
        },
        "reverse_charge_tax_id": {
          "type": "string",
          "text": "Enter reverse charge tax ID"
        },
        "line_items": {
          "type": "array",
          "text": "Line items"
        },
        "amount": {
          "type": "number",
          "text": "Recurring Expense amount",
          "required": true
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the expense"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the recurring expense"
        },
        "product_type": {
          "type": "string",
          "text": "Type of the expense"
        },
        "acquisition_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is an EU"
        },
        "reverse_charge_vat_id": {
          "type": "string",
          "text": "This is the ID of the tax applied in case this is a non UK"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax id"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Is inclusive tax",
          "enum": [
            true,
            false
          ]
        },
        "is_billable": {
          "type": "boolean",
          "text": "Is billable",
          "enum": [
            true,
            false
          ]
        },
        "customer_id": {
          "type": "string",
          "text": "Search expenses by customer id"
        },
        "project_id": {
          "type": "string",
          "text": "Project id"
        },
        "currency_id": {
          "type": "string",
          "text": "Currency id"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a recurring-expense"
        }
      },
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update a recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#update-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id___get": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id___get",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id",
      "text": "Get a recurring expense",
      "category": "Recurring Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of the recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#get-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id___delete": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id___delete",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id",
      "text": "Delete a recurring expense",
      "category": "Recurring Expenses",
      "method": "DELETE",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deleting an existing recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#get-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id__status__stop___post": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id__status__stop___post",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id/status/stop",
      "text": "Stop a recurring expense",
      "category": "Recurring Expenses",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Stop an active recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}/status/stop",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id/status/stop",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#get-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id__status__resume___post": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id__status__resume___post",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id/status/resume",
      "text": "Resume a recurring Expense",
      "category": "Recurring Expenses",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Resume a stopped recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}/status/resume",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id/status/resume",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#resume-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id__expenses___get": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id__expenses___get",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id/expenses",
      "text": "List child expenses created",
      "category": "Recurring Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort expenses"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List child expenses created from recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}/expenses",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id/expenses",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#resume-a-recurring-expense"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringexpenses__recurring_expense_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__recurringexpenses__recurring_expense_id__comments___get",
      "provider_alias_intent": "/books/v3/recurringexpenses/recurring_expense_id/comments",
      "text": "List recurring expense history",
      "category": "Recurring Expenses",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_expense_id": {
          "type": "string",
          "text": "Recurring Expense Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get history and comments of a recurring expense",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringexpenses/{recurring_expense_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/recurringexpenses/recurring_expense_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-expenses/#list-recurring-expense-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.expenses.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringinvoices___post": {
      "provider_intent": "zohobooks__books__v3__recurringinvoices___post",
      "provider_alias_intent": "/books/v3/recurringinvoices",
      "text": "Create a Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "recurrence_name": {
          "type": "string",
          "text": "Unique name for the recurring profile given by the user"
        },
        "reference_number": {
          "type": "string",
          "text": "The Order number of the Recurring Invoice"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the recurring invoice is raised"
        },
        "currency_id": {
          "type": "string",
          "text": "The currenct id of the currency"
        },
        "contact_persons": {
          "type": "array",
          "text": "Contact Persons associated with the recurring invoice"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "tax_treatment": {
          "type": "string",
          "text": "Choose whether the vat treatment for the contact falls under"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "allow_partial_payments": {
          "type": "boolean",
          "text": "Choose false for PPU-Single Payments and true for PPD-Installment Payments",
          "enum": [
            true,
            false
          ]
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "start_date": {
          "type": "string",
          "text": "The date on which the recurring invoice start"
        },
        "end_date": {
          "type": "string",
          "text": "The date on which the recurring invoice expires"
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "The frequency of time interval at which the invoice is to be generated",
          "required": true
        },
        "repeat_every": {
          "type": "number",
          "text": "The period between every recurrency frequency"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of an invoice"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group associated to the recurring invoice"
        },
        "shipping_address": {
          "type": "object",
          "text": "Shipping address"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "email": {
          "type": "string",
          "text": "Email address of the customer"
        },
        "billing_address": {
          "type": "object",
          "text": "billing_address"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "template_id": {
          "type": "string",
          "text": "Unique ID of the recurring invoice template"
        },
        "payment_terms": {
          "type": "number",
          "text": "Payment terms in days"
        },
        "payment_terms_label": {
          "type": "string",
          "text": "Used to overridethe default payment terms label"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "Unique ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "Unique ID of the tax exemption"
        },
        "exchange_rate": {
          "type": "string",
          "text": "Exchange rate for the currency associated with the customer"
        },
        "payment_options": {
          "type": "object",
          "text": "Payment optionss"
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the invoice"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Used to specify how the discount has to applied",
          "enum": [
            true,
            false
          ]
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "item_id": {
          "type": "string",
          "text": "Unique string generated for the item for which invoice is to be sent"
        },
        "name": {
          "type": "string",
          "text": "The name of the line item"
        },
        "description": {
          "type": "string",
          "text": "A small description about the item"
        },
        "rate": {
          "type": "number",
          "text": "Rate of the line item"
        },
        "quantity": {
          "type": "number",
          "text": "Quantity of the item included"
        },
        "unit": {
          "type": "string",
          "text": "Unit of the line item"
        },
        "avatax_tax_code": {
          "type": "string",
          "text": "A tax code is a unique label used to group items together"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the sales person"
        },
        "shipping_charge": {
          "type": "number",
          "text": "Shipping charges applied to the invoice"
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustments made to the invoice"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Customize the adjustment description"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Creating a new recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringinvoices",
        "alias_endpoint": "/zohobooks/books/v3/recurringinvoices",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#create-a-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurringinvoices___get": {
      "provider_intent": "zohobooks__books__v3__recurringinvoices___get",
      "provider_alias_intent": "/books/v3/recurringinvoices",
      "text": "List all Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "recurrence_name": {
          "type": "string",
          "text": "Unique name for the recurring profile given by the user"
        },
        "item_name": {
          "type": "string",
          "text": "Search recurring invoices by item name"
        },
        "item_description": {
          "type": "string",
          "text": "Search recurring invoices by item description"
        },
        "customer_name": {
          "type": "string",
          "text": "Name of the customer to whom the recurring invoice is raised"
        },
        "line_item_id": {
          "type": "array",
          "text": "The line item id"
        },
        "item_id": {
          "type": "string",
          "text": "Unique string generated for the item for which invoice is to be sent"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group associated to the recurring invoice"
        },
        "notes": {
          "type": "string",
          "text": "A short note for the recurring invoice"
        },
        "start_date": {
          "type": "string",
          "text": "The date on which the recurring invoice starts"
        },
        "end_date": {
          "type": "string",
          "text": "Customer ID of the customer for whom the recurring invoice is raised"
        },
        "status": {
          "type": "string",
          "text": "Status of the recurring invoice"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter Recurring invoices by any status or payment expected date"
        },
        "search_text": {
          "type": "string",
          "text": "Search invoices by invoice number or purchase order or customer name"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort column"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List the details of all recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/recurringinvoices",
        "alias_endpoint": "/zohobooks/books/v3/recurringinvoices",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#list-all-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id___put": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id___put",
      "provider_alias_intent": "/books/v3/recurring_invoice_id",
      "text": "Update Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "recurrence_name": {
          "type": "string",
          "text": "Unique name for the recurring profile given by the user"
        },
        "reference_number": {
          "type": "string",
          "text": "The Order number of the Recurring Invoice"
        },
        "customer_id": {
          "type": "string",
          "text": "Customer ID of the customer for whom the recurring invoice is raised"
        },
        "contact_persons": {
          "type": "string",
          "text": "Contact Persons associated with the recurring invoice"
        },
        "start_date": {
          "type": "string",
          "text": "The date on which the recurring invoice starts"
        },
        "end_date": {
          "type": "string",
          "text": "The date on which the recurring invoice expires"
        },
        "recurrence_frequency": {
          "type": "string",
          "text": "The frequency of time interval at which the invoice is to be generated",
          "required": true
        },
        "repeat_every": {
          "type": "number",
          "text": "The period between every recurrency frequency"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the invoices"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "Choose whether the vat treatment for the contact falls under"
        },
        "cfdi_usage": {
          "type": "string",
          "text": "Choose CFDI Usage"
        },
        "allow_partial_payments": {
          "type": "boolean",
          "text": "Choose false for PPU-Single Payments and true for PPD-Installment Payments",
          "enum": [
            true,
            false
          ]
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of an invoice"
        },
        "email": {
          "type": "string",
          "text": "Email address of the customer"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "tax_id": {
          "type": "string",
          "text": "ID of the tax or tax group associated to the recurring invoice"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "Unique ID of the tax authority"
        },
        "payment_options": {
          "type": "object",
          "text": "Payment options"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "Unique ID of the tax exemption"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        }
      },
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#update-recurring-invoice-templatee"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id___get": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id___get",
      "provider_alias_intent": "/books/v3/recurring_invoice_id",
      "text": "Get a Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3v",
        "auth": [],
        "description": "Get the details of a recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#get-a-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id___delete": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id___delete",
      "provider_alias_intent": "/books/v3/recurring_invoice_id",
      "text": "Delete a Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#delete-a-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id__status__stop___post": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id__status__stop___post",
      "provider_alias_intent": "/books/v3/recurring_invoice_id/status/stop",
      "text": "Stop a Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Unique ID of the recurring invoice generated by the server"
        }
      },
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Stop an active recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}/status/stop",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id/status/stop",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#stop-a-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id__status__resume___post": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id__status__resume___post",
      "provider_alias_intent": "/books/v3/recurring_invoice_id/status/resume",
      "text": "Resume a Recurring Invoice",
      "category": "Recurring Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Unique ID of the recurring invoice generated by the server"
        }
      },
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Resume a stopped recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}/status/resume",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id/status/resume",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#resume-a-recurring-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/recurring_invoice_id/templates/template_id",
      "text": "Update Recurring Invoice template",
      "category": "Recurring Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Unique ID of the recurring invoice generated by the server"
        },
        "template_id": {
          "type": "string",
          "text": "Unique ID of the recurring invoice template"
        }
      },
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#update-recurring-invoice-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__recurring_invoice_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__recurring_invoice_id__comments___get",
      "provider_alias_intent": "/books/v3/recurring_invoice_id/comments",
      "text": "List Recurring Invoice History",
      "category": "Recurring Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "recurring_invoice_id": {
          "type": "string",
          "text": "Recurring Invoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of a recurring invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/{recurring_invoice_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/recurring_invoice_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/recurring-invoices/#list-recurring-invoice-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices___post",
      "provider_alias_intent": "/books/v3/retainerinvoices",
      "text": "Create a retainerinvoice",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "ID of the customer the retainer invoice has to be created",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "The reference number of the retainer invoice"
        },
        "date": {
          "type": "string",
          "text": "The date of creation of the retainer invoice"
        },
        "contact_persons": {
          "type": "array",
          "text": "Contact persons"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a reatiner invoice"
        },
        "notes": {
          "type": "string",
          "text": "The notes added below expressing gratitude or for conveying some information"
        },
        "terms": {
          "type": "string",
          "text": "The terms added below expressing gratitude or for conveying some information"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of an invoice",
          "required": true
        },
        "payment_options": {
          "type": "object",
          "text": "Payment options for the retainer invoic"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template associated with the retainer invoice"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto invoice number generation for this invoice"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a retainer invoice for your customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#create-a-retainerinvoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices___get",
      "provider_alias_intent": "/books/v3/retainerinvoices",
      "text": "List a retainer invoices",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort retainer invoices"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter invoices by any status or payment expected date"
        },
        "sort_order": {
          "type": "string",
          "text": "The order for sorting"
        },
        "page": {
          "type": "string",
          "text": "Number of pages"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all retainer invoices with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#list-a-retainer-invoices"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___put": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___put",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id",
      "text": "update a retainerinvoice",
      "category": "Retainer Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        },
        "customer_id": {
          "type": "string",
          "text": "ID of the customer the retainer invoice has to be created",
          "required": true
        },
        "reference_number": {
          "type": "string",
          "text": "The reference number of the retainer invoice"
        },
        "date": {
          "type": "string",
          "text": "The date of creation of the retainer invoice"
        },
        "contact_persons": {
          "type": "array",
          "text": "Contact persons"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a reatiner invoice"
        },
        "notes": {
          "type": "string",
          "text": "The notes added below expressing gratitude or for conveying some information"
        },
        "terms": {
          "type": "string",
          "text": "The terms added below expressing gratitude or for conveying some information"
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a retainer invoice",
          "required": true
        },
        "payment_options": {
          "type": "string",
          "text": "ID of the pdf template associated with the retainer invoice"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "project_id": {
          "type": "string",
          "text": "ID of the project"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#update-a-retainerinvoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___get",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id",
      "text": "Get a retainer invoice",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#get-a-retainer-invoice-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___delete": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id___delete",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id",
      "text": "Delete a retainer invoice",
      "category": "Retainer Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#delete-a-retainer-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__status__sent___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__status__sent___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/status/sent",
      "text": "Mark a retainer invoice as sent",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft retainer invoice as sent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/status/sent",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/status/sent",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#mark-a-retainer-invoice-as-sent"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/templates/template_id",
      "text": "Update retainer invoice template",
      "category": "Retainer Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#update-retainer-invoice-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__status__void___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/status/void",
      "text": "Void a retainer invoice",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an invoice status as void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#void-a-retainer-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__status__draft___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__status__draft___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/reatinerinvoice_id/status/draft",
      "text": "Mark as draft",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a voided retainer invoice as draft",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{reatinerinvoice_id}/status/draft",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/reatinerinvoice_id/status/draft",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#mark-as-draft"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__submit___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/reatinerinvoice_id/submit",
      "text": "Submit a retainer invoice for approval",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit a retainer invoice for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{reatinerinvoice_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/reatinerinvoice_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#submit-a-retainer-invoice-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__reatinerinvoice_id__approve___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/reatinerinvoice_id/approve",
      "text": "Approve a retainer invoice.",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{reatinerinvoice_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/reatinerinvoice_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#submit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__email___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__email___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/email",
      "text": "Email a retainer invoice",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be cced"
        },
        "subject": {
          "type": "string",
          "text": "The subject of the mail"
        },
        "body": {
          "type": "string",
          "text": "The body of the mail"
        },
        "send_customer_statement": {
          "type": "string",
          "text": "Send customer statement pdf a with email"
        },
        "send_attachment": {
          "type": "string",
          "text": "Send the retainer invoice attachment a with the email"
        },
        "attachments": {
          "type": "string",
          "text": "Files to be attached to the email"
        }
      },
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email a retainer invoice to the customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#email-a-retainer-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__email___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__email___get",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/email",
      "text": "Get retainer invoice email content",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the email content of a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#get-retaine"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__address__billing___put",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/address/billing",
      "text": "Update billing address",
      "category": "Retainer Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "address of the customer"
        },
        "city": {
          "type": "string",
          "text": "city of the customer"
        },
        "state": {
          "type": "string",
          "text": "state of the customer"
        },
        "zip": {
          "type": "string",
          "text": "zip of the customer"
        },
        "country": {
          "type": "string",
          "text": "country of the customer"
        },
        "fax": {
          "type": "string",
          "text": "fax of the customer"
        }
      },
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this retainer invoice alone.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__templates___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__templates___get",
      "provider_alias_intent": "/books/v3/retainerinvoices/templates",
      "text": "List retainer invoice templates",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all retainer invoice pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/templates",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#list-retainer-invoice-templates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__attachment___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/attachment",
      "text": "Add attachment to a retainer invoice",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "can_send_in_mail": {
          "type": "boolean",
          "text": "Can send in mail",
          "enum": [
            true,
            false
          ]
        },
        "attachment": {
          "type": "number",
          "text": "The file to be attached"
        }
      },
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to an invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#add-attachment-to-a-retainer-invoice"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__attachment___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__attachment___get",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/attachment",
      "text": "Get a retainer invoice attachment",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the file attached to the retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#get-a-retainer-invoice-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__documents__document_id___delete": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__documents__document_id___delete",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/documents/document_id",
      "text": "Delete an attachment",
      "category": "Retainer Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the file attached to the retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/documents/{document_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/documents/document_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#delete-an-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments___post",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/comments",
      "text": "Add comment",
      "category": "Retainer Invoices",
      "method": "POST",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The description of the line items"
        },
        "payment_expected_date": {
          "type": "string",
          "text": "Payment expected date"
        },
        "show_comment_to_clients": {
          "type": "boolean",
          "text": "Boolean to check if the comment to be shown to the clients",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments___get",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/comments",
      "text": "List retainer invoice comments & history",
      "category": "Retainer Invoices",
      "method": "GET",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3v",
        "auth": [],
        "description": "Get the complete history and comments of a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#list-retainer-invoice-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments__comment_id___put": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments__comment_id___put",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/comments/comment_id",
      "text": "Update comment",
      "category": "Retainer Invoices",
      "method": "PUT",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "The comment on a retainer invoice"
        },
        "show_comment_to_clients": {
          "type": "boolean",
          "text": "Boolean to check if the comment to be shown to the clients",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing comment of a retainer invoice",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__retainerinvoices__retainerinvoice_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/retainerinvoices/retainerinvoice_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Retainer Invoices",
      "method": "DELETE",
      "type": "API",
      "params": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "retainerinvoice_id": {
          "type": "string",
          "text": "Retainerinvoice Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a retainer invoice comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/retainerinvoices/{retainerinvoice_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/retainerinvoices/retainerinvoice_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/retainer-invoices/#delete-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.invoices.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders___post": {
      "provider_intent": "zohobooks__books__v3__salesorders___post",
      "provider_alias_intent": "/books/v3/salesorders",
      "text": "Create a sales order",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "ID of the customer to whom the sales order has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency in Sales Order"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom sales order has to be sent"
        },
        "date": {
          "type": "string",
          "text": "The date, the sales order is created"
        },
        "shipment_date": {
          "type": "string",
          "text": "Shipping date of sales order"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a sales order"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "merchant_id": {
          "type": "string",
          "text": "ID of the merchant"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a sales order"
        },
        "notes": {
          "type": "string",
          "text": "Notes for this Sales Order"
        },
        "terms": {
          "type": "string",
          "text": "Terms"
        },
        "billing_address_id": {
          "type": "string",
          "text": "ID of the Billing Address"
        },
        "shipping_address_id": {
          "type": "string",
          "text": "ID of the Shipping Address"
        },
        "crm_owner_id": {
          "type": "string",
          "text": "Crm Owner ID"
        },
        "crm_custom_reference_id": {
          "type": "string",
          "text": "Crm Custom Reference ID"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the sales order"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the sales order"
        },
        "salesorder_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the Sales Order"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Boolean to update billing address of customer",
          "enum": [
            true,
            false
          ]
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the sales order"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the sales person"
        },
        "notes_default": {
          "type": "string",
          "text": "Default Notes for the Sales Order"
        },
        "terms_default": {
          "type": "string",
          "text": "Default Terms of the Sales Order"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax ID for the Sales Order"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption applied"
        },
        "tax_authority_name": {
          "type": "string",
          "text": "Tax Authority's name"
        },
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of Tax Exemption that is applied"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "shipping_charge": {
          "type": "number",
          "text": "Shipping Charge"
        },
        "adjustment": {
          "type": "number",
          "text": "Adjustment"
        },
        "delivery_method": {
          "type": "string",
          "text": "Delivery Method"
        },
        "estimate_id": {
          "type": "string",
          "text": "ID of the estimate associated with the Sales Order"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Used to specify how the discount has to applied",
          "enum": [
            true,
            false
          ]
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Adjustment Descriptio"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Pricebook ID"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "zcrm_potential_id": {
          "type": "string",
          "text": "Zcrm Potential ID"
        },
        "zcrm_potential_name": {
          "type": "string",
          "text": "Zcrm Potential Name"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto sales order number generation for this sales order"
        },
        "can_send_in_mail": {
          "type": "string",
          "text": "Can the file be sent in mail"
        },
        "totalFiles": {
          "type": "string",
          "text": "Total number of files"
        },
        "doc": {
          "type": "string",
          "text": "Document that is to be attached"
        }
      },
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a sales order for your customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders",
        "alias_endpoint": "/zohobooks/books/v3/salesorders",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#create-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders___get": {
      "provider_intent": "zohobooks__books__v3__salesorders___get",
      "provider_alias_intent": "/books/v3/salesorders",
      "text": "List sales orders",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {
        "sort_column": {
          "type": "string",
          "text": "Sort sales orders"
        },
        "search_text": {
          "type": "string",
          "text": "Search sales order by sales order number or reference number or customer name"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter sales order by status"
        },
        "salesorder_number": {
          "type": "string",
          "text": "Search Sales Order by Sales Order Number"
        },
        "item_name": {
          "type": "string",
          "text": "Search sales order by item name"
        },
        "item_id": {
          "type": "string",
          "text": "Search Sales Order Based on Item ID"
        },
        "item_description": {
          "type": "string",
          "text": "Search sales order by item description"
        },
        "reference_number": {
          "type": "string",
          "text": "Search sales order by reference number"
        },
        "customer_name": {
          "type": "string",
          "text": "Search sales order by customer name"
        },
        "total": {
          "type": "string",
          "text": "Search sales order by sales order total"
        },
        "date": {
          "type": "string",
          "text": "Search sales order by sales order date"
        },
        "shipment_date": {
          "type": "string",
          "text": "Search sales order by sales order shipment date"
        },
        "status": {
          "type": "string",
          "text": "Search sales order by sales order status"
        },
        "customer_id": {
          "type": "string",
          "text": "Search Sales Order based on customer_id"
        },
        "salesperson_id": {
          "type": "string",
          "text": "ID of the salesperson"
        },
        "salesorder_ids": {
          "type": "string",
          "text": "ID's of the salesorder [Comma seperated values]"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Last Modified time of the Sales Order"
        },
        "accept": {
          "type": "string",
          "text": "Get the details of a particular sales order in formats such as json/ pdf/ html"
        },
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "customview_id": {
          "type": "string",
          "text": "ID of the customview"
        },
        "zcrm_potential_id": {
          "type": "string",
          "text": "Potential ID of a Deal in CRM"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all sales orders",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders",
        "alias_endpoint": "/zohobooks/books/v3/salesorders",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#list-sales-orders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id",
      "text": "Update a sales order",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "customer_id": {
          "type": "string",
          "text": "ID of the customer to whom the sales order has to be created",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency in Sales Order"
        },
        "contact_persons": {
          "type": "array",
          "text": "Array of contact person(s) for whom sales order has to be sent"
        },
        "date": {
          "type": "string",
          "text": "The date, the sales order is created"
        },
        "shipment_date": {
          "type": "string",
          "text": "Shipping date of sales order"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields for a sales order"
        },
        "place_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "salesperson_id": {
          "type": "string",
          "text": "ID of the salesperson"
        },
        "merchant_id": {
          "type": "string",
          "text": "ID of the merchant"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the customer"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a sales order"
        },
        "notes": {
          "type": "string",
          "text": "Notes for this Sales Order"
        },
        "terms": {
          "type": "string",
          "text": "Terms"
        },
        "billing_address_id": {
          "type": "string",
          "text": "ID of the Billing Address"
        },
        "shipping_address_id": {
          "type": "string",
          "text": "ID of the Shipping Address"
        },
        "crm_owner_id": {
          "type": "string",
          "text": "Crm Owner ID"
        },
        "crm_custom_reference_id": {
          "type": "string",
          "text": "Crm Custom Reference ID"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the sales order"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the sales order"
        },
        "salesorder_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the Sales Order"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Boolean to update billing address of customer",
          "enum": [
            true,
            false
          ]
        },
        "discount": {
          "type": "string",
          "text": "Discount applied to the sales order"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "salesperson_name": {
          "type": "string",
          "text": "Name of the sales person"
        },
        "notes_default": {
          "type": "string",
          "text": "notes_default"
        },
        "terms_default": {
          "type": "string",
          "text": "Default Terms of the Sales Order"
        },
        "tax_id": {
          "type": "string",
          "text": "Tax ID for the Sales Order"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "tax_exemption_id": {
          "type": "string",
          "text": "ID of the tax exemption applied"
        },
        "tax_authority_name": {
          "type": "string",
          "text": "Tax Authority's name"
        },
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of Tax Exemption that is applied"
        },
        "avatax_exempt_no": {
          "type": "string",
          "text": "Exemption certificate number of the customer"
        },
        "avatax_use_code": {
          "type": "string",
          "text": "Used to group like customers for exemption purposes"
        },
        "shipping_charge": {
          "type": "double",
          "text": "Shipping Charge"
        },
        "adjustment": {
          "type": "double",
          "text": "Adjustment"
        },
        "delivery_method": {
          "type": "string",
          "text": "Delivery Method"
        },
        "is_discount_before_tax": {
          "type": "boolean",
          "text": "Used to specify how the discount has to applied",
          "enum": [
            true,
            false
          ]
        },
        "discount_type": {
          "type": "string",
          "text": "How the discount is specified"
        },
        "adjustment_description": {
          "type": "string",
          "text": "Adjustment Description"
        },
        "pricebook_id": {
          "type": "string",
          "text": "Pricebook ID"
        },
        "template_id": {
          "type": "string",
          "text": "ID of the pdf template"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "zcrm_potential_id": {
          "type": "string",
          "text": "Zcrm Potential ID"
        },
        "zcrm_potential_name": {
          "type": "string",
          "text": "Zcrm Potential Name"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto sales order number generation for this sales order"
        },
        "can_send_in_mail": {
          "type": "string",
          "text": "Can the file be sent in mail"
        },
        "totalFiles": {
          "type": "string",
          "text": "totalFiles"
        },
        "doc": {
          "type": "string",
          "text": "Document that is to be attached"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id___get",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id",
      "text": "Get a sales order",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "print": {
          "type": "string",
          "text": "Print the exported pdf"
        },
        "accept": {
          "type": "string",
          "text": "Get the details of a particular sales order in formats such as json/ pdf/ html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#get-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id___delete": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id___delete",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id",
      "text": "Delete a sales order",
      "category": "Sales Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing sales orde",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#delete-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__status__open___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__status__open___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/status/open",
      "text": "Mark a sales order as open",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a draft sales order as open",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/status/open",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/status/open",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#mark-a-sales-order-as-open"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__status__void___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/status/void",
      "text": "Mark a sales order as void",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "reason": {
          "type": "string",
          "text": "Reason to convert sales order as void"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark a sales order as void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#mark-a-sales-order-as-void"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__substatus__status_code___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__substatus__status_code___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/substatus/status_code",
      "text": "Update a sales order sub status",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "status_code": {
          "type": "string",
          "text": "Status Code"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "status_code": {
          "type": "string",
          "text": "Status Code"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update a sales order sub status",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/substatus/{status_code}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/substatus/status_code",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-a-sales-order-sub-status"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__email___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__email___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/email",
      "text": "Email a sales order",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "from_address_id": {
          "type": "string",
          "text": "From Address of the Email Address",
          "required": true
        },
        "send_from_org_email_id": {
          "type": "boolean",
          "text": "Boolean to trigger the email from the organization's email address",
          "enum": [
            true,
            false
          ]
        },
        "to_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients",
          "required": true
        },
        "cc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be CC ed"
        },
        "bcc_mail_ids": {
          "type": "array",
          "text": "Array of email address of the recipients to be BCC ed"
        },
        "subject": {
          "type": "string",
          "text": "Subject of the mail",
          "required": true
        },
        "document": {
          "type": "number",
          "text": "Documents of the Sales Order"
        },
        "invoice_id": {
          "type": "string",
          "text": "ID of the invoice"
        },
        "body": {
          "type": "string",
          "text": "Body of the mail",
          "required": true
        },
        "salesorder_id": {
          "type": "string",
          "text": "ID of the Sales Order"
        },
        "attachments": {
          "type": "string",
          "text": "Attachments of the Sales Order"
        },
        "send_attachment": {
          "type": "string",
          "text": "Send the sales order attachment a with the email"
        },
        "file_name": {
          "type": "boolean",
          "text": "Name of the file",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Email a sales order to the customer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#email-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__email___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__email___get",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/email",
      "text": "Get sales order email content",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "email_template_id": {
          "type": "string",
          "text": "Get the email content based on a specific email template"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the email content of a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/email",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/email",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#get-sales-order-email-content"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__submit___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__submit___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/submit",
      "text": "Submit a sales order for approval",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit a sales order for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#submit-a-sales-order-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__approve___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__approve___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/approve",
      "text": "Approve a sales order.",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#approve-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__pdf___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__pdf___get",
      "provider_alias_intent": "/books/v3/salesorders/pdf",
      "text": "Bulk export sales orders",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Maximum of 25 sales orders can be exported in a single pdf",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/pdf",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/pdf",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#bulk-export-sales-orders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__print___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__print___get",
      "provider_alias_intent": "/books/v3/salesorders/print",
      "text": "Bulk print sales orders",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Export sales orders as pdf and print them",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/print",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/print",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#bulk-print-sales-orders"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__address__billing___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__address__billing___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/address/billing",
      "text": "Update billing address",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Address"
        },
        "city": {
          "type": "string",
          "text": "City of the address"
        },
        "state": {
          "type": "string",
          "text": "State of the Address"
        },
        "zip": {
          "type": "string",
          "text": "ZIP Code of the Address"
        },
        "country": {
          "type": "string",
          "text": "country of the Address"
        },
        "fax": {
          "type": "string",
          "text": "Fax number"
        },
        "attention": {
          "type": "string",
          "text": "Attention"
        },
        "is_one_off_address": {
          "type": "boolean",
          "text": "Is one off address",
          "enum": [
            true,
            false
          ]
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Boolean to update billing address of customer",
          "enum": [
            true,
            false
          ]
        },
        "is_verified": {
          "type": "boolean",
          "text": "Check if the Address is verified",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the billing address for this sales order alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/address/billing",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/address/billing",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-billing-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__address__shipping___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__address__shipping___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/address/shipping",
      "text": "Update shipping address",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "address": {
          "type": "string",
          "text": "Address"
        },
        "city": {
          "type": "string",
          "text": "City of the address"
        },
        "state": {
          "type": "string",
          "text": "State of the Address"
        },
        "zip": {
          "type": "string",
          "text": "ZIP Code of the Address"
        },
        "country": {
          "type": "string",
          "text": "country of the Address"
        },
        "fax": {
          "type": "string",
          "text": "Fax number"
        },
        "attention": {
          "type": "string",
          "text": "Attention"
        },
        "is_one_off_address": {
          "type": "boolean",
          "text": "Is one off address",
          "enum": [
            true,
            false
          ]
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Boolean to update billing address of customer",
          "enum": [
            true,
            false
          ]
        },
        "is_verified": {
          "type": "boolean",
          "text": "Check if the Address is verified",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Updates the shipping address for this sales order alone",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/address/shipping",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/address/shipping",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-shipping-address"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__templates___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__templates___get",
      "provider_alias_intent": "/books/v3/salesorders/templates",
      "text": "List sales order templates",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get all sales order pdf templates",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/templates",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/templates",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#list-sales-order-templates"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__templates__template_id___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__templates__template_id___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/templates/template_id",
      "text": "Update sales order template",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "template_id": {
          "type": "string",
          "text": "Template Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the pdf template associated with the sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/templates/{template_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/templates/template_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-sales-order-template"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__attachment___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__attachment___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/attachment",
      "text": "Add attachment to a sales order",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "attachment": {
          "type": "string",
          "text": "The file that is to be added as an Attachment in the Sales Order"
        },
        "can_send_in_mail": {
          "type": "string",
          "text": "Can the file be sent in mail"
        },
        "doc": {
          "type": "string",
          "text": "Document that is to be attached"
        },
        "totalFiles": {
          "type": "string",
          "text": "Total number of files"
        },
        "document_ids": {
          "type": "string",
          "text": "ID's of the document"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Attach a file to a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#add-attachment-to-a-sales-order"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__attachment___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__attachment___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/attachment",
      "text": "Update attachment preference",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "can_send_in_mail": {
          "type": "string",
          "text": "Can the file be sent in mail",
          "required": true
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Set whether you want to send the attached file while emailing the sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-attachment-preference"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__attachment___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__attachment___get",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/attachment",
      "text": "Get a sales order attachment",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "preview": {
          "type": "string",
          "text": "Check if preview of the Sales Order is required"
        },
        "inline": {
          "type": "string",
          "text": "Check if inline response is required"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Returns the file attached to the sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#get-a-sales-order-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__attachment___delete": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__attachment___delete",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/attachment",
      "text": "Delete an attachment",
      "category": "Sales Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the file attached to the sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/attachment",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/attachment",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#delete-an-attachment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__comments___post": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__comments___post",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/comments",
      "text": "Add comment",
      "category": "Sales Order",
      "method": "POST",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description of the line item"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment for a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#add-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__comments___get": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__comments___get",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/comments",
      "text": "List sales order comments & history",
      "category": "Sales Order",
      "method": "GET",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the complete history and comments of sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#list-sales-order-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__comments__comment_id___put": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__comments__comment_id___put",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/comments/comment_id",
      "text": "Update comment",
      "category": "Sales Order",
      "method": "PUT",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description of the line item"
        }
      },
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update existing comment of a sales order",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__salesorders__salesorder_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3__salesorders__salesorder_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3/salesorders/salesorder_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Sales Order",
      "method": "DELETE",
      "type": "API",
      "params": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "salesorder_id": {
          "type": "string",
          "text": "Salesorder Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a sales order comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/salesorders/{salesorder_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3/salesorders/salesorder_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/sales-order/#update-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.salesorders.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__tasks___post": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__tasks___post",
      "provider_alias_intent": "/books/v3/projects/project_id/tasks",
      "text": "Add a task",
      "category": "Tasks",
      "method": "POST",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {
        "task_name": {
          "type": "string",
          "text": "The name of the task",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "The description of the project"
        },
        "rate": {
          "type": "number",
          "text": "Hourly rate for a task"
        },
        "budget_hours": {
          "type": "number",
          "text": "Task budget hours"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "The task has been added",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/tasks",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/tasks",
        "api_ref": "https://www.zoho.com/books/api/v3/tasks/#add-a-task"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__tasks___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__tasks___get",
      "provider_alias_intent": "/books/v3/projects/project_id/tasks",
      "text": "List tasks",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get list of tasks added to a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/tasks",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/tasks",
        "api_ref": "https://www.zoho.com/books/api/v3/tasks/#list-tasks"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__tasks__task_id___put": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__tasks__task_id___put",
      "provider_alias_intent": "/books/v3/projects/project_id/tasks/task_id",
      "text": "Update a task",
      "category": "Tasks",
      "method": "PUT",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "custom_headers": {},
      "body": {
        "task_name": {
          "type": "string",
          "text": "The name of the task",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "The description of the project"
        },
        "rate": {
          "type": "number",
          "text": "Hourly rate for a task"
        },
        "budget_hours": {
          "type": "number",
          "text": "Task budget hours"
        }
      },
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/tasks/{task_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/tasks/task_id",
        "api_ref": "https://www.zoho.com/books/api/v3/tasks/#update-a-task"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__tasks__task_id___get": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__tasks__task_id___get",
      "provider_alias_intent": "/books/v3/projects/project_id/tasks/task_id",
      "text": "Get a task",
      "category": "Tasks",
      "method": "GET",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a task",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/tasks/{task_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/tasks/task_id",
        "api_ref": "https://www.zoho.com/books/api/v3/tasks/#get-a-task"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__project_id__tasks__task_id___delete": {
      "provider_intent": "zohobooks__books__v3__projects__project_id__tasks__task_id___delete",
      "provider_alias_intent": "/books/v3/projects/project_id/tasks/task_id",
      "text": "Delete a task added to a project",
      "category": "Tasks",
      "method": "DELETE",
      "type": "API",
      "params": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "project_id": {
          "type": "string",
          "text": "Project Id"
        },
        "task_id": {
          "type": "string",
          "text": "Task Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a task added to a project",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/{project_id}/tasks/{task_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/project_id/tasks/task_id",
        "api_ref": "https://www.zoho.com/books/api/v3/tasks/#delete-task"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxes___post": {
      "provider_intent": "zohobooks__books__v3__settings__taxes___post",
      "provider_alias_intent": "/books/v3/settings/taxes",
      "text": "Create a tax",
      "category": "Taxes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tax_name": {
          "type": "string",
          "text": "Name of the Tax"
        },
        "tax_percentage": {
          "type": "number",
          "text": "Number of Percentage Taxable"
        },
        "tax_type": {
          "type": "string",
          "text": "Type to determine whether it is a simple or compound tax"
        },
        "tax_factor": {
          "type": "string",
          "text": "Type of Tax Factor"
        },
        "tax_specific_type": {
          "type": "string",
          "text": "Type of Tax For Indian Edition"
        },
        "tax_authority_name": {
          "type": "string",
          "text": "Name of the Tax Authority"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authorit"
        },
        "country_code": {
          "type": "string",
          "text": "Two letter country code for the EU country to which the tax belongs"
        },
        "purchase_tax_expense_account_id": {
          "type": "number",
          "text": "Account ID in which Purchase Tax will be Computed"
        },
        "is_value_added": {
          "type": "boolean",
          "text": "Check if Tax is Value Added",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_invoice": {
          "type": "boolean",
          "text": "Check if recurring invoice should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_expense": {
          "type": "boolean",
          "text": "Check if recurring expenses should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_draft_invoice": {
          "type": "boolean",
          "text": "Check if Draft Invoices should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_bills": {
          "type": "boolean",
          "text": "Check if Recurring Bills should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_draft_so": {
          "type": "boolean",
          "text": "Check if Draft Sales Orders should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_subscription": {
          "type": "boolean",
          "text": "Check if Subscriptions should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_project": {
          "type": "boolean",
          "text": "Check if Projects should be updated",
          "enum": [
            true,
            false
          ]
        },
        "is_editable": {
          "type": "boolean",
          "text": "Check if tax is editable",
          "enum": [
            true,
            false
          ]
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a tax which can be associated with an item",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxes",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxes",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#create-a-tax"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxes___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxes___get",
      "provider_alias_intent": "/books/v3/settings/taxes",
      "text": "List taxes",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List of simple and compound taxes with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxes",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxes",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#list-taxes"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxes__tax_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__taxes__tax_id___put",
      "provider_alias_intent": "/books/v3/settings/taxes/tax_id",
      "text": "Update a tax",
      "category": "Taxes",
      "method": "PUT",
      "type": "API",
      "params": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "custom_headers": {},
      "body": {
        "tax_id": {
          "type": "string",
          "text": "ID of the Tax"
        },
        "tax_name": {
          "type": "string",
          "text": "Name of the Tax"
        },
        "tax_percentage": {
          "type": "number",
          "text": "Number of Percentage Taxable"
        },
        "tax_type": {
          "type": "string",
          "text": "Type to determine whether it is a simple or compound tax"
        },
        "tax_factor": {
          "type": "string",
          "text": "Type of Tax Factor"
        },
        "tax_specific_type": {
          "type": "string",
          "text": "Type of Tax For Indian Edition"
        },
        "tax_authority_name": {
          "type": "string",
          "text": "Name of the Tax Authority"
        },
        "tax_authority_id": {
          "type": "string",
          "text": "ID of the tax authority"
        },
        "country_code": {
          "type": "string",
          "text": "Two letter country code for the EU country to which the tax belongs"
        },
        "purchase_tax_expense_account_id": {
          "type": "number",
          "text": "Account ID in which Purchase Tax will be Computed"
        },
        "is_value_added": {
          "type": "boolean",
          "text": "Check if Tax is Value Added",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_invoice": {
          "type": "boolean",
          "text": "Check if recurring invoice should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_expense": {
          "type": "boolean",
          "text": "Check if recurring expenses should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_draft_invoice": {
          "type": "boolean",
          "text": "Check if Draft Invoices should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_recurring_bills": {
          "type": "boolean",
          "text": "Check if Recurring Bills should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_draft_so": {
          "type": "boolean",
          "text": "Check if Draft Sales Orders should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_subscription": {
          "type": "boolean",
          "text": "Check if Subscriptions should be updated",
          "enum": [
            true,
            false
          ]
        },
        "update_project": {
          "type": "boolean",
          "text": "Check if Projects should be updated",
          "enum": [
            true,
            false
          ]
        },
        "is_editable": {
          "type": "boolean",
          "text": "Check if tax is editable",
          "enum": [
            true,
            false
          ]
        },
        "tds_payable_account_id": {
          "type": "string",
          "text": " Input Tax ID"
        }
      },
      "path": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a simple or compound tax",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxes/{tax_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxes/tax_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#update-a-tax"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxes__tax_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxes__tax_id___get",
      "provider_alias_intent": "/books/v3/settings/taxes/tax_id",
      "text": "Get a tax",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a simple or compound tax",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxes/{tax_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxes/tax_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#get-a-tax"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxes__tax_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__taxes__tax_id___delete",
      "provider_alias_intent": "/books/v3/settings/taxes/tax_id",
      "text": "Delete a tax",
      "category": "Taxes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_id": {
          "type": "string",
          "text": "Tax Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a simple or compound tax",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxes/{tax_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxes/tax_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#delete-a-tax"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxgroups__tax_group_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__taxgroups__tax_group_id___put",
      "provider_alias_intent": "/books/v3/settings/taxgroups/tax_group_id",
      "text": "Update a tax group",
      "category": "Taxes",
      "method": "PUT",
      "type": "API",
      "params": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "custom_headers": {},
      "body": {
        "tax_group_name": {
          "type": "string",
          "text": "Name of the tax group to be created"
        },
        "taxes": {
          "type": "string",
          "text": "Comma Seperated list of tax IDs that are to beassociated to the tax group"
        }
      },
      "path": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of the tax group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxgroups/{tax_group_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxgroups/tax_group_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#update-a-tax-group"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxgroups__tax_group_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxgroups__tax_group_id___get",
      "provider_alias_intent": "/books/v3/settings/taxgroups/tax_group_id",
      "text": "Get a tax group",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a tax group",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxgroups/{tax_group_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxgroups/tax_group_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#get-a-tax-group"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxgroups__tax_group_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__taxgroups__tax_group_id___delete",
      "provider_alias_intent": "/books/v3/settings/taxgroups/tax_group_id",
      "text": "Delete a tax group",
      "category": "Taxes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_group_id": {
          "type": "string",
          "text": "Tax Group Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a tax group. Tax group that is associated to transactions cannot be deleted",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxgroups/{tax_group_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxgroups/tax_group_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#delete-a-tax-group"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxgroups___post": {
      "provider_intent": "zohobooks__books__v3__settings__taxgroups___post",
      "provider_alias_intent": "/books/v3/settings/taxgroups",
      "text": "Create a tax group",
      "category": "Taxes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tax_group_name": {
          "type": "string",
          "text": "Name of the tax group to be created"
        },
        "taxes": {
          "type": "string",
          "text": "Comma Seperated list of tax IDs that are to beassociated to the tax group"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a tax group associating multiple taxes",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxgroups",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxgroups",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#create-a-tax-group"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxauthorities___post": {
      "provider_intent": "zohobooks__books__v3__settings__taxauthorities___post",
      "provider_alias_intent": "/books/v3/settings/taxauthorities",
      "text": "Create a tax authority [US and CA Edition only]",
      "category": "Taxes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tax_authority_name": {
          "type": "string",
          "text": "Name of the Tax Authority",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "registration_number": {
          "type": "string",
          "text": "Registration Number of the Tax Authority"
        },
        "registration_number_label": {
          "type": "string",
          "text": "Registration number"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a tax authority",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxauthorities",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxauthorities",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#create-a-tax-authority-us-and-ca-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxauthorities___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxauthorities___get",
      "provider_alias_intent": "/books/v3/settings/taxauthorities",
      "text": "List tax authorities [US Edition only]",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List of tax authorities",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxauthorities",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxauthorities",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#list-tax-authorities-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___put",
      "provider_alias_intent": "/books/v3/settings/taxauthorities/tax_authority_id",
      "text": "Update a tax authority [US and CA Edition only]",
      "category": "Taxes",
      "method": "PUT",
      "type": "API",
      "params": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "custom_headers": {},
      "body": {
        "tax_authority_name": {
          "type": "string",
          "text": "Name of the Tax Authority",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "registration_number": {
          "type": "string",
          "text": "Registration Number of the Tax Authority"
        },
        "registration_number_label": {
          "type": "string",
          "text": "Registration number"
        }
      },
      "path": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a tax authority",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxauthorities/{tax_authority_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxauthorities/tax_authority_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#update-a-tax-authority-us-and-ca-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___get",
      "provider_alias_intent": "/books/v3/settings/taxauthorities/tax_authority_id",
      "text": "Get a tax authority [US and CA Edition only]",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a tax authority",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxauthorities/{tax_authority_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxauthorities/tax_authority_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#get-a-tax-authority-us-and-ca-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__taxauthorities__tax_authority_id___delete",
      "provider_alias_intent": "/books/v3/settings/taxauthorities/tax_authority_id",
      "text": "Delete a tax authority [US and CA Edition only]",
      "category": "Taxes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_authority_id": {
          "type": "string",
          "text": "Tax Authority Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a tax authority",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxauthorities/{tax_authority_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxauthorities/tax_authority_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#delete-a-tax-authority-us-and-ca-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxexemptions___post": {
      "provider_intent": "zohobooks__books__v3__settings__taxexemptions___post",
      "provider_alias_intent": "/books/v3/settings/taxexemptions",
      "text": "Create a tax exemption [US Edition only]",
      "category": "Taxes",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of the Tax Exemptiony",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "type": {
          "type": "string",
          "text": "ype of the tax exemption",
          "required": true
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a tax exemption",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxexemptions",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxexemptions",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#create-a-tax-exemption-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxexemptions___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxexemptions___get",
      "provider_alias_intent": "/books/v3/settings/taxexemptions",
      "text": "List tax exemptions [US Edition only]",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List of tax exemptions",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxexemptions",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxexemptions",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#list-tax-exemptions-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___put": {
      "provider_intent": "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___put",
      "provider_alias_intent": "/books/v3/settings/taxexemptions/tax_exemption_id",
      "text": "Update a tax exemption [US Edition only]",
      "category": "Taxes",
      "method": "PUT",
      "type": "API",
      "params": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "custom_headers": {},
      "body": {
        "tax_exemption_code": {
          "type": "string",
          "text": "Code of the Tax Exemptiony",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description"
        },
        "type": {
          "type": "string",
          "text": "ype of the tax exemption",
          "required": true
        }
      },
      "path": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a tax exemption",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxexemptions/{tax_exemption_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxexemptions/tax_exemption_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#update-a-tax-exemption-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___get": {
      "provider_intent": "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___get",
      "provider_alias_intent": "/books/v3/settings/taxexemptions/tax_exemption_id",
      "text": "Get a tax exemption [US Edition only]",
      "category": "Taxes",
      "method": "GET",
      "type": "API",
      "params": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a tax exemption",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxexemptions/{tax_exemption_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxexemptions/tax_exemption_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#get-a-tax-exemption-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___delete": {
      "provider_intent": "zohobooks__books__v3__settings__taxexemptions__tax_exemption_id___delete",
      "provider_alias_intent": "/books/v3/settings/taxexemptions/tax_exemption_id",
      "text": "Delete a tax exemption [US Edition only]",
      "category": "Taxes",
      "method": "DELETE",
      "type": "API",
      "params": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "tax_exemption_id": {
          "type": "string",
          "text": "Tax Exemption Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a tax exemption",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/settings/taxexemptions/{tax_exemption_id}",
        "alias_endpoint": "/zohobooks/books/v3/settings/taxexemptions/tax_exemption_id",
        "api_ref": "https://www.zoho.com/books/api/v3/taxes/#get-a-tax-exemption-us-edition-only"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries___post": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries___post",
      "provider_alias_intent": "/books/v3/projects/timeentries",
      "text": "Log time entries",
      "category": "Time Entries",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "project_id": {
          "type": "string",
          "text": "ID of the project",
          "required": true
        },
        "task_id": {
          "type": "string",
          "text": "ID of the task",
          "required": true
        },
        "user_id": {
          "type": "string",
          "text": "ID of the user",
          "required": true
        },
        "log_date": {
          "type": "string",
          "text": "Date on which the user spent on the task",
          "required": true
        },
        "log_time": {
          "type": "string",
          "text": "Time the user spent on this task"
        },
        "begin_time": {
          "type": "string",
          "text": "Time the user started working on this task"
        },
        "end_time": {
          "type": "string",
          "text": "Time the user stopped working on this task"
        },
        "is_billable": {
          "type": "boolean",
          "text": "Whether it is billable or no",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Description of the work done"
        },
        "start_timer": {
          "type": "string",
          "text": "Start timer"
        },
        "cost_rate": {
          "type": "number",
          "text": "Hourly cost rate"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Logging time entries",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#log-time-entries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": " ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries___get": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries___get",
      "provider_alias_intent": "/books/v3/projects/timeentries",
      "text": "List time entries",
      "category": "Time Entries",
      "method": "GET",
      "type": "API",
      "params": {
        "from_date": {
          "type": "string",
          "text": "Date from which the time entries logged to be fetched"
        },
        "to_date": {
          "type": "string",
          "text": "Date up to which the time entries logged to be fetched"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter time entries by date and status"
        },
        "project_id": {
          "type": "string",
          "text": "Search time entries by project_id"
        },
        "user_id": {
          "type": "string",
          "text": "Search time entries by user_id"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort time entries"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all time entries with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#list-time-entries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries___delete": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries___delete",
      "provider_alias_intent": "/books/v3/projects/timeentries",
      "text": "Delete time entries",
      "category": "Time Entries",
      "method": "DELETE",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deleting time entries",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#delete-time-entries"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__time_entry_id___put": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__time_entry_id___put",
      "provider_alias_intent": "/books/v3/projects/timeentries/time_entry_id",
      "text": "Update time entry",
      "category": "Time Entries",
      "method": "PUT",
      "type": "API",
      "params": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "custom_headers": {},
      "body": {
        "project_id": {
          "type": "string",
          "text": "ID of the project",
          "required": true
        },
        "task_id": {
          "type": "string",
          "text": "ID of the task",
          "required": true
        },
        "user_id": {
          "type": "string",
          "text": "ID of the user",
          "required": true
        },
        "log_date": {
          "type": "string",
          "text": "Date on which the user spent on the task",
          "required": true
        },
        "log_time": {
          "type": "string",
          "text": "Time the user spent on this task"
        },
        "begin_time": {
          "type": "string",
          "text": "Time the user started working on this task"
        },
        "end_time": {
          "type": "string",
          "text": "Time the user stopped working on this task"
        },
        "is_billable": {
          "type": "boolean",
          "text": "Whether it is billable or not",
          "enum": [
            true,
            false
          ]
        },
        "notes": {
          "type": "string",
          "text": "Description of the work done"
        },
        "start_timer": {
          "type": "string",
          "text": "Start timer"
        },
        "cost_rate": {
          "type": "number",
          "text": "Hourly cost rate"
        }
      },
      "path": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update logged time entry",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/{time_entry_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/time_entry_id",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#update-time-entry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__time_entry_id___get": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__time_entry_id___get",
      "provider_alias_intent": "/books/v3/projects/timeentries/time_entry_id",
      "text": "Get a time entry",
      "category": "Time Entries",
      "method": "GET",
      "type": "API",
      "params": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get details of a time entry",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/{time_entry_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/time_entry_id",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#get-a-time-entry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__time_entry_id___delete": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__time_entry_id___delete",
      "provider_alias_intent": "/books/v3/projects/timeentries/time_entry_id",
      "text": "Delete time entry",
      "category": "Time Entries",
      "method": "DELETE",
      "type": "API",
      "params": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Deleting a logged time entry",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/{time_entry_id}",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/time_entry_id",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#delete-time-entry"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__time_entry_id__timer__start___post": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__time_entry_id__timer__start___post",
      "provider_alias_intent": "/books/v3/projects/timeentries/time_entry_id/timer/start",
      "text": "Start timer",
      "category": "Time Entries",
      "method": "POST",
      "type": "API",
      "params": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "time_entry_id": {
          "type": "string",
          "text": "Time Entry Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Start tracking time spent",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/{time_entry_id}/timer/start",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/time_entry_id/timer/start",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#start-timer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__timer__stop___post": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__timer__stop___post",
      "provider_alias_intent": "/books/v3/projects/timeentries/timer/stop",
      "text": "Stop timer",
      "category": "Time Entries",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Stop tracking time, say taking a break or leaving",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/timer/stop",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/timer/stop",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#stop-timer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__projects__timeentries__runningtimer__me___get": {
      "provider_intent": "zohobooks__books__v3__projects__timeentries__runningtimer__me___get",
      "provider_alias_intent": "/books/v3/projects/timeentries/runningtimer/me",
      "text": "Get timer",
      "category": "Time Entries",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get current running timer",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/projects/timeentries/runningtimer/me",
        "alias_endpoint": "/zohobooks/books/v3/projects/timeentries/runningtimer/me",
        "api_ref": "https://www.zoho.com/books/api/v3/time-entries/#get-timer"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.projects.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users___post": {
      "provider_intent": "zohobooks__books__v3__users___post",
      "provider_alias_intent": "/books/v3/users",
      "text": "Create a user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "name of the user",
          "required": true
        },
        "email": {
          "type": "string",
          "text": "email address of the user",
          "required": true
        },
        "role_id": {
          "type": "string",
          "text": "Role id"
        },
        "cost_rate": {
          "type": "number",
          "text": "Hourly cost rate"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a user for your organization.",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users",
        "alias_endpoint": "/zohobooks/books/v3/users",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#overview"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users___get": {
      "provider_intent": "zohobooks__books__v3__users___get",
      "provider_alias_intent": "/books/v3/users",
      "text": "List Users",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "filter_by": {
          "type": "string",
          "text": "Allowed Values"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort users"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "endpoint": {
          "type": "string",
          "replace_key": "{endpoint}"
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the list of all users in the organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users",
        "alias_endpoint": "/zohobooks/books/v3/users",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#list-users"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id___put": {
      "provider_intent": "zohobooks__books__v3__users__user_id___put",
      "provider_alias_intent": "/books/v3/users/user_id",
      "text": "Update a user",
      "category": "Users",
      "method": "PUT",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {
        "name": {
          "type": "string",
          "text": "name of the user",
          "required": true
        },
        "email": {
          "type": "string",
          "text": "email address of the user",
          "required": true
        },
        "role_id": {
          "type": "string",
          "text": "Role id"
        },
        "cost_rate": {
          "type": "number",
          "text": "Hourly cost rate"
        }
      },
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the details of a user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#update-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id___get": {
      "provider_intent": "zohobooks__books__v3__users__user_id___get",
      "provider_alias_intent": "/books/v3/users/user_id",
      "text": "Get a user",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#get-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id___delete": {
      "provider_intent": "zohobooks__books__v3__users__user_id___delete",
      "provider_alias_intent": "/books/v3/users/user_id",
      "text": "Delete a user",
      "category": "Users",
      "method": "DELETE",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a user associated to the organization",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#delete-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__me___get": {
      "provider_intent": "zohobooks__books__v3__users__me___get",
      "provider_alias_intent": "/books/v3/users/me",
      "text": "Get current user",
      "category": "Users",
      "method": "GET",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of the current user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/me",
        "alias_endpoint": "/zohobooks/books/v3/users/me",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#delete-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id__invite___post": {
      "provider_intent": "zohobooks__books__v3__users__user_id__invite___post",
      "provider_alias_intent": "/books/v3/users/user_id/invite",
      "text": "Invite a user",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Send invitation email to a user",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}/invite",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id/invite",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#delete-a-user"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id__active___post": {
      "provider_intent": "zohobooks__books__v3__users__user_id__active___post",
      "provider_alias_intent": "/books/v3/users/user_id/active",
      "text": "Mark user as active",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an inactive user as active",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}/active",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id/active",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#mark-user-as-active"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__users__user_id__inactive___post": {
      "provider_intent": "zohobooks__books__v3__users__user_id__inactive___post",
      "provider_alias_intent": "/books/v3/users/user_id/inactive",
      "text": "Mark user as inactive",
      "category": "Users",
      "method": "POST",
      "type": "API",
      "params": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "user_id": {
          "type": "string",
          "text": "User Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an active user as inactive",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/users/{user_id}/inactive",
        "alias_endpoint": "/zohobooks/books/v3/users/user_id/inactive",
        "api_ref": "https://www.zoho.com/books/api/v3/users/#mark-user-as-inactive"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.settings.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits",
      "text": "Create a vendor credit",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the vendor credit associated",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency Involved in the Vendor Credit"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the vendor credits"
        },
        "vendor_credit_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the vendor credit"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered"
        },
        "pricebook_id": {
          "type": "string",
          "text": "ID of the pricebook"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the refund recorded"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Check if customer should be updated",
          "enum": [
            true,
            false
          ]
        },
        "date": {
          "type": "string",
          "text": "The date the vendor credit is created"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a vendor credit"
        },
        "notes": {
          "type": "string",
          "text": " Notes for the Vendor Credit"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto number generation for this vendor credit only"
        },
        "bill_id": {
          "type": "string",
          "text": "Bill Associated with the Vendor Credit"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a vendor credit for a vendor",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#create-a-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits",
      "text": "List vendor credits",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_number": {
          "type": "string",
          "text": "Search vendor credits by vendor credit number"
        },
        "date": {
          "type": "string",
          "text": "General Format: yyyy-mm-dd"
        },
        "status": {
          "type": "string",
          "text": "Search vendor credits by vendor credit status"
        },
        "total": {
          "type": "string",
          "text": "Search vendor credits by total amount"
        },
        "reference_number": {
          "type": "string",
          "text": "Search vendor credits by vendor credit reference number"
        },
        "customer_name": {
          "type": "string",
          "text": "Search vendor credits by vendor name"
        },
        "item_name": {
          "type": "string",
          "text": "Search vendor credits by item name"
        },
        "item_description": {
          "type": "string",
          "text": "Search vendor credits by vendor credit item description"
        },
        "notes": {
          "type": "string",
          "text": "Search vendor credits by vendor credit notes"
        },
        "custom_field": {
          "type": "string",
          "text": "Search vendor credits by custom field"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search vendor credits by vendor credit last modfified time"
        },
        "customer_id": {
          "type": "string",
          "text": "Search vendor credits by vendor credit customer ID"
        },
        "line_item_id": {
          "type": "string",
          "text": "Search vendor credits by vendor credit line item ID"
        },
        "item_id": {
          "type": "string",
          "text": "Search vendor credits by vendor credit item ID"
        },
        "tax_id": {
          "type": "string",
          "text": "Search vendor credits by vendor credit tax ID"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter vendor credits by statuses"
        },
        "search_text": {
          "type": "string",
          "text": "Search vendor credits by vendor credit numbe"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort vendor credits"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List vendor credits with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#list-vendor-credits"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___put": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___put",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id",
      "text": "Update vendor credit",
      "category": "Vendor Credits",
      "method": "PUT",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor the vendor credit associated",
          "required": true
        },
        "currency_id": {
          "type": "string",
          "text": "ID of the Currency Involved in the Vendor Credit"
        },
        "vat_treatment": {
          "type": "string",
          "text": "VAT treatment for the vendor credits"
        },
        "vendor_credit_number": {
          "type": "string",
          "text": "Mandatory if auto number generation is disabled"
        },
        "gst_treatment": {
          "type": "string",
          "text": "Choose whether the contact is GST registered/unregistered/consumer/overseas"
        },
        "tax_treatment": {
          "type": "string",
          "text": "VAT treatment for the vendor credit"
        },
        "gst_no": {
          "type": "string",
          "text": "15 digit GST identification number of the vendor"
        },
        "source_of_supply": {
          "type": "string",
          "text": "Place from where the goods/services are supplied"
        },
        "destination_of_supply": {
          "type": "string",
          "text": "Place where the goods/services are supplied to"
        },
        "place_of_supply": {
          "type": "string",
          "text": "The place of supply is where a transaction is considered"
        },
        "pricebook_id": {
          "type": "string",
          "text": "ID of the pricebook"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the refund recorded"
        },
        "is_update_customer": {
          "type": "boolean",
          "text": "Check if customer should be updated",
          "enum": [
            true,
            false
          ]
        },
        "date": {
          "type": "string",
          "text": "The date the vendor credit is created"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "is_inclusive_tax": {
          "type": "boolean",
          "text": "Used to specify whether the line item rates are inclusive or exclusive of tax",
          "enum": [
            true,
            false
          ]
        },
        "line_items": {
          "type": "array",
          "text": "Line items of a vendor credit"
        },
        "notes": {
          "type": "string",
          "text": " Notes for the Vendor Credit"
        },
        "documents": {
          "type": "array",
          "text": "Documents"
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        },
        "ignore_auto_number_generation": {
          "type": "string",
          "text": "Ignore auto number generation for this vendor credit only"
        },
        "bill_id": {
          "type": "string",
          "text": "Bill Associated with the Vendor Credit"
        }
      },
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#update-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id",
      "text": "Get vendor credit",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "print": {
          "type": "string",
          "text": "Export vendor credit pdf with default print option"
        },
        "accept": {
          "type": "string",
          "text": "You can get vendor credit details as json/pdf/html"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get details of a vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#get-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___delete": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id___delete",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id",
      "text": "Delete vendor credit",
      "category": "Vendor Credits",
      "method": "DELETE",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#delete-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__status__open___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__status__open___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/status/open",
      "text": "Convert to open",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Change an existing vendor credit status to open",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/status/open",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/status/open",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#convert-to-open"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__status__void___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__status__void___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/status/void",
      "text": "Void vendor credit",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Mark an existing vendor credit as void",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/status/void",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/status/void",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#void-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__submit___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__submit___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/submit",
      "text": "Submit a Vendor credit for approval",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Submit a Vendor credit for approval",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/submit",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/submit",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#submit-a-vendor-credit-for-approval"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__approve___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__approve___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/approve",
      "text": "Approve a Vendor credit",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Approve a Vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/approve",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/approve",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#approve-a-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__bills___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__bills___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/bills",
      "text": "Apply credits to a bill",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {
        "bills": {
          "type": "array",
          "text": "mount applied from vendor credits to specified bills",
          "required": true
        }
      },
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Apply vendor credit to existing bills",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/bills",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/bills",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#apply-credits-to-a-bill"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__bills___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__bills___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/bills",
      "text": "List bills credited",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List bills credited",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/bills",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/bills",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#list-bills-credited"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__billvendor_credit_bill_id___delete": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__billvendor_credit_bill_id___delete",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/billvendor_credit_bill_id",
      "text": "Delete bills credited",
      "category": "Vendor Credits",
      "method": "DELETE",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_bill_id": {
          "type": "string",
          "text": "Vendor Credit Bill Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_bill_id": {
          "type": "string",
          "text": "Vendor Credit Bill Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete the credits applied to a bill",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/bill{vendor_credit_bill_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/billvendor_credit_bill_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#delete-bills-credited"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/refunds",
      "text": "Refund a vendor credit",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date of Vendor Credit Refund",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "Mode of Refund"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the refund recorded"
        },
        "amount": {
          "type": "number",
          "text": "Amount",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the account, the line item is associated with",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the line item"
        }
      },
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Refund vendor credit amount",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#refund-a-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/refunds",
      "text": "List refunds of a vendor credit",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all refunds of an existing vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#list-refunds-of-a-vendor-credit"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___put": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___put",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
      "text": "Update vendor credit refund",
      "category": "Vendor Credits",
      "method": "PUT",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date of Vendor Credit Refund",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "Mode of Refund"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the refund recorded"
        },
        "amount": {
          "type": "number",
          "text": "Amount",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "account_id": {
          "type": "string",
          "text": "ID of the account, the line item is associated with",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the line item"
        }
      },
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the refunded transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/refunds/{vendor_credit_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#update-vendor-credit-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
      "text": "Get vendor credit refund",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get refund of a particular vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/refunds/{vendor_credit_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#get-vendor-credit-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___delete": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__refunds__vendor_credit_refund_id___delete",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
      "text": "Delete vendor credit refund",
      "category": "Vendor Credits",
      "method": "DELETE",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "vendor_credit_refund_id": {
          "type": "string",
          "text": "Vendor Credit Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a vendor credit refund",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/refunds/{vendor_credit_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/refunds/vendor_credit_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#delete-vendor-credit-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__refunds___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__refunds___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/refunds",
      "text": "List vendor credit refunds",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "customer_id": {
          "type": "string",
          "text": "Search vendor credits by vendor credit customer ID"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search vendor credits by vendor credit last modfified time"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort vendor credits"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all refunds with pagination",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/refunds",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#list-vendor-credit-refunds"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments___post": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments___post",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/comments",
      "text": "Add a comment",
      "category": "Vendor Credits",
      "method": "POST",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {
        "description": {
          "type": "string",
          "text": "Description of the Comment",
          "required": true
        }
      },
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Add a comment to an existing vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#add-a-comment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments___get": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments___get",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/comments",
      "text": "List vendor credit comments & history",
      "category": "Vendor Credits",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get history and comments of a vendor credit",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/comments",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/comments",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#list-vendor-credit-comments-and-history"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments__comment_id___delete": {
      "provider_intent": "zohobooks__books__v3ddd__vendorcredits__vendor_credit_id__comments__comment_id___delete",
      "provider_alias_intent": "/books/v3ddd/vendorcredits/vendor_credit_id/comments/comment_id",
      "text": "Delete a comment",
      "category": "Vendor Credits",
      "method": "DELETE",
      "type": "API",
      "params": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "vendor_credit_id": {
          "type": "string",
          "text": "Vendor Credit Id"
        },
        "comment_id": {
          "type": "string",
          "text": "Comment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete a vendor credit comment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3ddd/vendorcredits/{vendor_credit_id}/comments/{comment_id}",
        "alias_endpoint": "/zohobooks/books/v3ddd/vendorcredits/vendor_credit_id/comments/comment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-credits/#delete-vendor-credit-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.debitnotes.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments___post": {
      "provider_intent": "zohobooks__books__v3__vendorpayments___post",
      "provider_alias_intent": "/books/v3/vendorpayments",
      "text": "Create a vendor payment",
      "category": "Vendor Payments",
      "method": "POST",
      "type": "API",
      "params": {},
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor associated with the Vendor Payment"
        },
        "bills": {
          "type": "array",
          "text": "Individual bill payment details as array"
        },
        "date": {
          "type": "string",
          "text": "Date the payment is made"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "amount": {
          "type": "number",
          "text": "Total Amount of Vendor Payment",
          "required": true
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "ID of the cash/ bank account from which the payment is made"
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "description": {
          "type": "string",
          "text": "Description for the Vendor Payment recorded"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the Vendor Payment recorded"
        },
        "check_details": {
          "type": "array",
          "text": "Check details"
        },
        "is_paid_via_print_check": {
          "type": "boolean",
          "text": "Check if the Bill Payment is paid Via Print Check Option",
          "enum": [
            true,
            false
          ]
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        }
      },
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Create a payment made to your vendor and you can also apply them to bills either partially or fully",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#overview"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments___get": {
      "provider_intent": "zohobooks__books__v3__vendorpayments___get",
      "provider_alias_intent": "/books/v3/vendorpayments",
      "text": "List vendor payments",
      "category": "Vendor Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "vendor_name": {
          "type": "string",
          "text": "Search payments by vendor name"
        },
        "reference_number": {
          "type": "string",
          "text": "Search payments by reference number"
        },
        "payment_number": {
          "type": "string",
          "text": "Search with Payment Number"
        },
        "date": {
          "type": "string",
          "text": "Date the payment is made"
        },
        "amount": {
          "type": "string",
          "text": "Payment amount made to the vendor"
        },
        "payment_mode": {
          "type": "string",
          "text": "Search payments by payment mode"
        },
        "notes": {
          "type": "string",
          "text": "Search with Payment Notes"
        },
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor"
        },
        "last_modified_time": {
          "type": "string",
          "text": "Search with the Last Modified Time of the Vendor Payment"
        },
        "bill_id": {
          "type": "string",
          "text": "Search payments by Bill ID"
        },
        "description": {
          "type": "string",
          "text": "Search payments by description"
        },
        "filter_by": {
          "type": "string",
          "text": "Filter payments by mode"
        },
        "search_text": {
          "type": "string",
          "text": "Search payments by reference number or vendor name or payment description"
        },
        "sort_column": {
          "type": "string",
          "text": "Sort the payment list"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {},
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the payments made to your vendor",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#list-vendor-payments"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id___put": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id___put",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id",
      "text": "Update a vendor payment",
      "category": "Vendor Payments",
      "method": "PUT",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "vendor_id": {
          "type": "string",
          "text": "ID of the vendor associated with the Vendor Payment"
        },
        "bills": {
          "type": "array",
          "text": "Individual bill payment details as array"
        },
        "date": {
          "type": "string",
          "text": "Date the payment is made"
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "amount": {
          "type": "number",
          "text": "Total Amount of Vendor Payment",
          "required": true
        },
        "paid_through_account_id": {
          "type": "string",
          "text": "ID of the cash/ bank account from which the payment is made"
        },
        "payment_mode": {
          "type": "string",
          "text": "Mode of Vendor Payment"
        },
        "description": {
          "type": "string",
          "text": "Description for the Vendor Payment recorded"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference number for the Vendor Payment recorded"
        },
        "check_details": {
          "type": "array",
          "text": "Check details"
        },
        "is_paid_via_print_check": {
          "type": "boolean",
          "text": "Check if the Bill Payment is paid Via Print Check Option",
          "enum": [
            true,
            false
          ]
        },
        "custom_fields": {
          "type": "array",
          "text": "Custom fields"
        }
      },
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update an existing vendor payment. You can also modify the amount applied to the bills",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#update-a-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id___get": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id___get",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id",
      "text": "Get a vendor payment",
      "category": "Vendor Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "fetchTaxInfo": {
          "type": "string",
          "text": "Check if tax information should be fetched"
        },
        "fetchstatementlineinfo": {
          "type": "string",
          "text": "Check is Statement Line Information for Vendor Payment be fetched"
        },
        "print": {
          "type": "string",
          "text": "Check if Vendor Payment must be printed"
        },
        "is_bill_payment_id": {
          "type": "string",
          "text": "Check if the ID is Bill Payment or Vendor Payment"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Get the details of a vendor payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#get-a-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id___delete": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id___delete",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id",
      "text": "Delete a vendor payment",
      "category": "Vendor Payments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete an existing vendor payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#delete-a-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id__refunds___post": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id__refunds___post",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id/refunds",
      "text": "Refund an excess vendor payment",
      "category": "Vendor Payments",
      "method": "POST",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date of the Vendor Payment Refund",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "Mode in which refund is made"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the Payment Refund"
        },
        "amount": {
          "type": "number",
          "text": "Total Amount of Vendor Payment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "to_account_id": {
          "type": "string",
          "text": "The account to which payment is refunded",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the Payment Refund"
        }
      },
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Refund the excess amount paid to the vendor",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#refund-an-excess-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id__refunds___get": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id__refunds___get",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id/refunds",
      "text": "List refunds of a vendor payment",
      "category": "Vendor Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "List all the refunds pertaining to an existing vendor payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}/refunds",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id/refunds",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#list-refunds-of-a-vendor-payment"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___put": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___put",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
      "text": "Update a refund",
      "category": "Vendor Payments",
      "method": "PUT",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "custom_headers": {},
      "body": {
        "date": {
          "type": "string",
          "text": "Date of the Vendor Payment Refund",
          "required": true
        },
        "refund_mode": {
          "type": "string",
          "text": "Mode in which refund is made"
        },
        "reference_number": {
          "type": "string",
          "text": "Reference Number of the Payment Refund"
        },
        "amount": {
          "type": "number",
          "text": "Total Amount of Vendor Payment",
          "required": true
        },
        "exchange_rate": {
          "type": "number",
          "text": "Exchange rate of the currency"
        },
        "to_account_id": {
          "type": "string",
          "text": "The account to which payment is refunded",
          "required": true
        },
        "description": {
          "type": "string",
          "text": "Description of the Payment Refund"
        }
      },
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Update the refunded transaction",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}/refunds/{vendorpayment_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#update-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.UPDATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___get": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___get",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
      "text": "Details of a refund",
      "category": "Vendor Payments",
      "method": "GET",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Obtain details of a particular refund of a vendor payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}/refunds/{vendorpayment_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#details-of-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.READ",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___delete": {
      "provider_intent": "zohobooks__books__v3__vendorpayments__payment_id__refunds__vendorpayment_refund_id___delete",
      "provider_alias_intent": "/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
      "text": "Delete a refund",
      "category": "Vendor Payments",
      "method": "DELETE",
      "type": "API",
      "params": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "payment_id": {
          "type": "string",
          "text": "Payment Id"
        },
        "vendorpayment_refund_id": {
          "type": "string",
          "text": "Vendorpayment Refund Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Delete refund pertaining to an existing vendor payment",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/vendorpayments/{payment_id}/refunds/{vendorpayment_refund_id}",
        "alias_endpoint": "/zohobooks/books/v3/vendorpayments/payment_id/refunds/vendorpayment_refund_id",
        "api_ref": "https://www.zoho.com/books/api/v3/vendor-payments/#delete-a-refund"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.vendorpayments.DELETE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__crm__account__crm_account_id__import___post": {
      "provider_intent": "zohobooks__books__v3__crm__account__crm_account_id__import___post",
      "provider_alias_intent": "/books/v3/crm/account/crm_account_id/import",
      "text": "Import a customer using the CRM account ID",
      "category": "ZOHO CRM Integration",
      "method": "POST",
      "type": "API",
      "params": {
        "crm_account_id": {
          "type": "string",
          "text": "CRM Account Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "crm_account_id": {
          "type": "string",
          "text": "CRM Account Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Zoho Books must be integrated with Zoho CRM using Accounts and Contacts sync or using Accounts only sync to import a customer from CRM with its CRM account ID",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/crm/account/{crm_account_id}/import",
        "alias_endpoint": "/zohobooks/books/v3/crm/account/crm_account_id/import",
        "api_ref": "https://www.zoho.com/books/api/v3/integration/#import-a-customer-using-the-crm-account-id"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__crm__contact__crm_contact_id__import___post": {
      "provider_intent": "zohobooks__books__v3__crm__contact__crm_contact_id__import___post",
      "provider_alias_intent": "/books/v3/crm/contact/crm_contact_id/import",
      "text": "Import a customer using CRM contact ID",
      "category": "ZOHO CRM Integration",
      "method": "POST",
      "type": "API",
      "params": {
        "crm_contactt_id": {
          "type": "string",
          "text": "CRM Contact Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "crm_contactt_id": {
          "type": "string",
          "text": "CRM Contact Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Zoho Books must be integrated with Zoho CRM using Contacts only sync to import a customer from CRM with its CRM contact ID",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/crm/contact/{crm_contact_id}/import",
        "alias_endpoint": "/zohobooks/books/v3/crm/contact/crm_contact_id/import",
        "api_ref": "https://www.zoho.com/books/api/v3/integration/#import-a-customer-using-crm-contact-id"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    },
    "zohobooks__books__v3__crm__vendor__crm_vendor_id__import___post": {
      "provider_intent": "zohobooks__books__v3__crm__vendor__crm_vendor_id__import___post",
      "provider_alias_intent": "/books/v3/crm/vendor/crm_vendor_id/import",
      "text": "Import a vendor using the CRM vendor ID",
      "category": "ZOHO CRM Integration",
      "method": "POST",
      "type": "API",
      "params": {
        "crm_vendo_id": {
          "type": "string",
          "text": "CRM Vendo Id"
        }
      },
      "custom_headers": {},
      "body": {},
      "path": {
        "crm_vendo_id": {
          "type": "string",
          "text": "CRM Vendo Id"
        }
      },
      "domain_params": {
        "{": {
          "type": ""
        }
      },
      "meta": {
        "version": "v3",
        "auth": [],
        "description": "Zoho Books must be integrated with Zoho CRM using Vendor only sync to import a vendor from CRM with its CRM vendor ID",
        "rate_limit": [],
        "api_endpoint": "{endpoint}/books/v3/crm/vendor/{crm_vendor_id}/import",
        "alias_endpoint": "/zohobooks/books/v3/crm/vendor/crm_vendor_id/import",
        "api_ref": "https://www.zoho.com/books/api/v3/integration/#import-a-vendor-using-the-crm-vendor-id"
      },
      "auth": {
        "header": {
          "headerName": "Authorization",
          "headerValue": "Zoho-oauthtoken",
          "authKey": "accessToken"
        }
      },
      "response_type": "",
      "wip": 0,
      "Scope": "ZohoBooks.contacts.CREATE",
      "pinned": 0,
      "featured": 0,
      "payload_type": ""
    }
  }
}